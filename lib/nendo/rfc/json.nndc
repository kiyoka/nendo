#
#    This file is nendo's compiled library file. 
#    generated  "nendo -c src" command. 
# 

trampCall( 
  begin
    embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 37 ); 
      delayCall( '_require',  'require',
          begin
            if @global_lisp_binding.has_key?('_require') then
              trampCall(@_require)
            else raise NameError.new( "Error: undefined variable _require", "_require" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:37"] + __e.backtrace ) ; raise __e
          end        ,
      [
          "json"
      ]
                   )
  end
 )
#--------------------

trampCall( 
  begin
    embedBacktraceInfo( "", 1 ); 
      delayCall( '_load',  'load',
          begin
            if @global_lisp_binding.has_key?('_load') then
              trampCall(@_load)
            else raise NameError.new( "Error: undefined variable _load", "_load" ) end
            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
          end        ,
      [
          "util/list"
      ]
                   )
  end
 )
#--------------------

trampCall( 
  begin
      def self.__PAMARKjson_COMARKhash_MIMARKtable_MIMARK_GTMARKalist_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKjson_COMARKhash_MIMARKtable_MIMARK_GTMARKalist', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKjson_COMARKhash_MIMARKtable_MIMARK_GTMARKalist'] = self.method( :__PAMARKjson_COMARKhash_MIMARKtable_MIMARK_GTMARKalist_METHOD )
    @__PAMARKjson_COMARKhash_MIMARKtable_MIMARK_GTMARKalist = 
    trampCall(
          Proc.new { |_obj| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 43 ); 
                    _null_QUMARK(
                        begin
                            trampCall(_obj)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:58"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin
                      begin
                          trampCall(_obj)
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:58"] + __e.backtrace ) ; raise __e
                      end
                  end
              else
                  if ( 
                    begin
                      embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 45 ); 
                        trampCall( self._vector_QUMARK_METHOD(  'vector?',
                            begin
                              if @global_lisp_binding.has_key?('_vector_QUMARK') then
                                trampCall(@_vector_QUMARK)
                              else raise NameError.new( "Error: undefined variable _vector_QUMARK", "_vector_QUMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:45"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_obj)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:58"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     ))
                    end
                   ) then
                      begin
                          begin
                            embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 46 ); 
                              delayCall( '_list_MIMARK_GTMARKvector',  'list->vector',
                                  begin
                                    if @global_lisp_binding.has_key?('_list_MIMARK_GTMARKvector') then
                                      trampCall(@_list_MIMARK_GTMARKvector)
                                    else raise NameError.new( "Error: undefined variable _list_MIMARK_GTMARKvector", "_list_MIMARK_GTMARKvector" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:46"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 52 ); 
                                        trampCall( self._map_METHOD(  'map',
                                            begin
                                              if @global_lisp_binding.has_key?('_map') then
                                                trampCall(@_map)
                                              else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:52"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              Proc.new { |_x| 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 55 ); 
                                                      trampCall( self.__PAMARKjson_COMARKhash_MIMARKtable_MIMARK_GTMARKalist_METHOD(  '%json:hash-table->alist',
                                                          begin
                                                            if @global_lisp_binding.has_key?('__PAMARKjson_COMARKhash_MIMARKtable_MIMARK_GTMARKalist') then
                                                              trampCall(@__PAMARKjson_COMARKhash_MIMARKtable_MIMARK_GTMARKalist)
                                                            else raise NameError.new( "Error: undefined variable __PAMARKjson_COMARKhash_MIMARKtable_MIMARK_GTMARKalist", "__PAMARKjson_COMARKhash_MIMARKtable_MIMARK_GTMARKalist" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:55"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_x)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:49"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                              }                                            ,
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 50 ); 
                                                  trampCall( self._vector_MIMARK_GTMARKlist_METHOD(  'vector->list',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_vector_MIMARK_GTMARKlist') then
                                                          trampCall(@_vector_MIMARK_GTMARKlist)
                                                        else raise NameError.new( "Error: undefined variable _vector_MIMARK_GTMARKlist", "_vector_MIMARK_GTMARKlist" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:50"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                        begin
                                                            trampCall(_obj)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:58"] + __e.backtrace ) ; raise __e
                                                        end
                                                  ]
                                                               ))
                                              end
                                        ]
                                                     ))
                                    end
                              ]
                                           )
                          end
                      end
                  else
                      if ( 
                        begin
                          embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 51 ); 
                            trampCall( self._hash_MIMARKtable_QUMARK_METHOD(  'hash-table?',
                                begin
                                  if @global_lisp_binding.has_key?('_hash_MIMARKtable_QUMARK') then
                                    trampCall(@_hash_MIMARKtable_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _hash_MIMARKtable_QUMARK", "_hash_MIMARKtable_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:51"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_obj)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:58"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         ))
                        end
                       ) then
                          begin
                              begin
                                embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 52 ); 
                                  delayCall( '_map',  'map',
                                      begin
                                        if @global_lisp_binding.has_key?('_map') then
                                          trampCall(@_map)
                                        else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:52"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        Proc.new { |_entry| 
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 54 ); 
                                                _cons(
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 54 ); 
                                                        _car(
                                                            begin
                                                                trampCall(_entry)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:55"] + __e.backtrace ) ; raise __e
                                                            end
                                                        )
                                                    end                                                  ,
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 55 ); 
                                                        trampCall( self.__PAMARKjson_COMARKhash_MIMARKtable_MIMARK_GTMARKalist_METHOD(  '%json:hash-table->alist',
                                                            begin
                                                              if @global_lisp_binding.has_key?('__PAMARKjson_COMARKhash_MIMARKtable_MIMARK_GTMARKalist') then
                                                                trampCall(@__PAMARKjson_COMARKhash_MIMARKtable_MIMARK_GTMARKalist)
                                                              else raise NameError.new( "Error: undefined variable __PAMARKjson_COMARKhash_MIMARKtable_MIMARK_GTMARKalist", "__PAMARKjson_COMARKhash_MIMARKtable_MIMARK_GTMARKalist" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:55"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                        [
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 55 ); 
                                                                  _cdr(
                                                                      begin
                                                                          trampCall(_entry)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:55"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                  )
                                                              end
                                                        ]
                                                                     ))
                                                    end
                                                )
                                            end
                                        }                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 56 ); 
                                            trampCall( self._hash_MIMARKtable_MIMARK_GTMARKalist_METHOD(  'hash-table->alist',
                                                begin
                                                  if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARK_GTMARKalist') then
                                                    trampCall(@_hash_MIMARKtable_MIMARK_GTMARKalist)
                                                  else raise NameError.new( "Error: undefined variable _hash_MIMARKtable_MIMARK_GTMARKalist", "_hash_MIMARKtable_MIMARK_GTMARKalist" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:56"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_obj)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:58"] + __e.backtrace ) ; raise __e
                                                  end
                                            ]
                                                         ))
                                        end
                                  ]
                                               )
                              end
                          end
                      else
                          if ( 
                          true
                           ) then
                              begin
                                  begin
                                      trampCall(_obj)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:58"] + __e.backtrace ) ; raise __e
                                  end
                              end
                          else
                              Cell.new()
                          end
                      end
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self.__PAMARKjson_COMARKalist_MIMARK_GTMARKhash_MIMARKtable_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKjson_COMARKalist_MIMARK_GTMARKhash_MIMARKtable', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKjson_COMARKalist_MIMARK_GTMARKhash_MIMARKtable'] = self.method( :__PAMARKjson_COMARKalist_MIMARK_GTMARKhash_MIMARKtable_METHOD )
    @__PAMARKjson_COMARKalist_MIMARK_GTMARKhash_MIMARKtable = 
    trampCall(
          Proc.new { |_obj| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 62 ); 
                    _null_QUMARK(
                        begin
                            trampCall(_obj)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:78"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin
                      begin
                        embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 63 ); 
                          delayCall( '_make_MIMARKhash_MIMARKtable',  'make-hash-table',
                              begin
                                if @global_lisp_binding.has_key?('_make_MIMARKhash_MIMARKtable') then
                                  trampCall(@_make_MIMARKhash_MIMARKtable)
                                else raise NameError.new( "Error: undefined variable _make_MIMARKhash_MIMARKtable", "_make_MIMARKhash_MIMARKtable" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:63"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                          ]
                                       )
                      end
                  end
              else
                  if ( 
                    begin
                      embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 64 ); 
                        trampCall( self._vector_QUMARK_METHOD(  'vector?',
                            begin
                              if @global_lisp_binding.has_key?('_vector_QUMARK') then
                                trampCall(@_vector_QUMARK)
                              else raise NameError.new( "Error: undefined variable _vector_QUMARK", "_vector_QUMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:64"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_obj)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:78"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     ))
                    end
                   ) then
                      begin
                          begin
                            embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 65 ); 
                              delayCall( '_list_MIMARK_GTMARKvector',  'list->vector',
                                  begin
                                    if @global_lisp_binding.has_key?('_list_MIMARK_GTMARKvector') then
                                      trampCall(@_list_MIMARK_GTMARKvector)
                                    else raise NameError.new( "Error: undefined variable _list_MIMARK_GTMARKvector", "_list_MIMARK_GTMARKvector" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:65"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 72 ); 
                                        trampCall( self._map_METHOD(  'map',
                                            begin
                                              if @global_lisp_binding.has_key?('_map') then
                                                trampCall(@_map)
                                              else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:72"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              Proc.new { |_x| 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 75 ); 
                                                      trampCall( self.__PAMARKjson_COMARKalist_MIMARK_GTMARKhash_MIMARKtable_METHOD(  '%json:alist->hash-table',
                                                          begin
                                                            if @global_lisp_binding.has_key?('__PAMARKjson_COMARKalist_MIMARK_GTMARKhash_MIMARKtable') then
                                                              trampCall(@__PAMARKjson_COMARKalist_MIMARK_GTMARKhash_MIMARKtable)
                                                            else raise NameError.new( "Error: undefined variable __PAMARKjson_COMARKalist_MIMARK_GTMARKhash_MIMARKtable", "__PAMARKjson_COMARKalist_MIMARK_GTMARKhash_MIMARKtable" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:75"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_x)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:68"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                              }                                            ,
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 69 ); 
                                                  trampCall( self._vector_MIMARK_GTMARKlist_METHOD(  'vector->list',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_vector_MIMARK_GTMARKlist') then
                                                          trampCall(@_vector_MIMARK_GTMARKlist)
                                                        else raise NameError.new( "Error: undefined variable _vector_MIMARK_GTMARKlist", "_vector_MIMARK_GTMARKlist" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:69"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                        begin
                                                            trampCall(_obj)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:78"] + __e.backtrace ) ; raise __e
                                                        end
                                                  ]
                                                               ))
                                              end
                                        ]
                                                     ))
                                    end
                              ]
                                           )
                          end
                      end
                  else
                      if ( 
                        begin
                          embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 70 ); 
                            _pair_QUMARK(
                                begin
                                    trampCall(_obj)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:78"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                       ) then
                          begin
                              begin
                                embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 71 ); 
                                  delayCall( '_alist_MIMARK_GTMARKhash_MIMARKtable',  'alist->hash-table',
                                      begin
                                        if @global_lisp_binding.has_key?('_alist_MIMARK_GTMARKhash_MIMARKtable') then
                                          trampCall(@_alist_MIMARK_GTMARKhash_MIMARKtable)
                                        else raise NameError.new( "Error: undefined variable _alist_MIMARK_GTMARKhash_MIMARKtable", "_alist_MIMARK_GTMARKhash_MIMARKtable" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:71"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 72 ); 
                                            trampCall( self._map_METHOD(  'map',
                                                begin
                                                  if @global_lisp_binding.has_key?('_map') then
                                                    trampCall(@_map)
                                                  else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:72"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  Proc.new { |_entry| 
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 74 ); 
                                                          _cons(
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 74 ); 
                                                                  _car(
                                                                      begin
                                                                          trampCall(_entry)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:75"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                  )
                                                              end                                                            ,
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 75 ); 
                                                                  trampCall( self.__PAMARKjson_COMARKalist_MIMARK_GTMARKhash_MIMARKtable_METHOD(  '%json:alist->hash-table',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('__PAMARKjson_COMARKalist_MIMARK_GTMARKhash_MIMARKtable') then
                                                                          trampCall(@__PAMARKjson_COMARKalist_MIMARK_GTMARKhash_MIMARKtable)
                                                                        else raise NameError.new( "Error: undefined variable __PAMARKjson_COMARKalist_MIMARK_GTMARKhash_MIMARKtable", "__PAMARKjson_COMARKalist_MIMARK_GTMARKhash_MIMARKtable" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:75"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                  [
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 75 ); 
                                                                            _cdr(
                                                                                begin
                                                                                    trampCall(_entry)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:75"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                            )
                                                                        end
                                                                  ]
                                                                               ))
                                                              end
                                                          )
                                                      end
                                                  }                                                ,
                                                  begin
                                                      trampCall(_obj)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:78"] + __e.backtrace ) ; raise __e
                                                  end
                                            ]
                                                         ))
                                        end
                                  ]
                                               )
                              end
                          end
                      else
                          if ( 
                          true
                           ) then
                              begin
                                  begin
                                      trampCall(_obj)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:78"] + __e.backtrace ) ; raise __e
                                  end
                              end
                          else
                              Cell.new()
                          end
                      end
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self._parse_MIMARKjson_MIMARKstring_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_parse_MIMARKjson_MIMARKstring', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_parse_MIMARKjson_MIMARKstring'] = self.method( :_parse_MIMARKjson_MIMARKstring_METHOD )
    @_parse_MIMARKjson_MIMARKstring = 
    trampCall(
          Proc.new { |_str| 
              begin
                embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 85 ); 
                  delayCall( '__PAMARKjson_COMARKhash_MIMARKtable_MIMARK_GTMARKalist',  '%json:hash-table->alist',
                      begin
                        if @global_lisp_binding.has_key?('__PAMARKjson_COMARKhash_MIMARKtable_MIMARK_GTMARKalist') then
                          trampCall(@__PAMARKjson_COMARKhash_MIMARKtable_MIMARK_GTMARKalist)
                        else raise NameError.new( "Error: undefined variable __PAMARKjson_COMARKhash_MIMARKtable_MIMARK_GTMARKalist", "__PAMARKjson_COMARKhash_MIMARKtable_MIMARK_GTMARKalist" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:85"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                            trampCall(JSON).parse(
                                  begin
                                      trampCall(_str)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:86"] + __e.backtrace ) ; raise __e
                                  end
                              )
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:86"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self._parse_MIMARKjson_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_parse_MIMARKjson', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_parse_MIMARKjson'] = self.method( :_parse_MIMARKjson_METHOD )
    @_parse_MIMARKjson = 
    trampCall(
          Proc.new { |*__rest__| _io = __rest__[0] ;  
              begin
                ___lambda = lambda { |__| 
                    begin
                      ___lambda = lambda { |_str| 
                          begin
                            embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 91 ); 
                              delayCall( '_parse_MIMARKjson_MIMARKstring',  'parse-json-string',
                                  begin
                                    if @global_lisp_binding.has_key?('_parse_MIMARKjson_MIMARKstring') then
                                      trampCall(@_parse_MIMARKjson_MIMARKstring)
                                    else raise NameError.new( "Error: undefined variable _parse_MIMARKjson_MIMARKstring", "_parse_MIMARKjson_MIMARKstring" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:91"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_str)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:91"] + __e.backtrace ) ; raise __e
                                    end
                              ]
                                           )
                          end
                      } ; ___lambda.call(
                            begin
                                trampCall(__).read(
                                  )
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:90"] + __e.backtrace ) ; raise __e
                            end
                                 )
                    end
                } ; ___lambda.call(
                      begin
                        ___lambda = lambda { |___gensym__6d159efe5170a605fc9e84dcf91a427e3f7e5718_90188| 
                            if ( 
                              begin
                                embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 62 ); 
                                  _null_QUMARK(
                                      begin
                                          trampCall(___gensym__6d159efe5170a605fc9e84dcf91a427e3f7e5718_90188)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                             ) then
                                begin
                                    trampCall(STDIN)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:89"] + __e.backtrace ) ; raise __e
                                end
                            else
                                begin
                                  embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 74 ); 
                                    delayCall( '_car',  'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:74"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(___gensym__6d159efe5170a605fc9e84dcf91a427e3f7e5718_90188)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 )
                                end
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_io)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:89"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self._construct_MIMARKjson_MIMARKstring_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_construct_MIMARKjson_MIMARKstring', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_construct_MIMARKjson_MIMARKstring'] = self.method( :_construct_MIMARKjson_MIMARKstring_METHOD )
    @_construct_MIMARKjson_MIMARKstring = 
    trampCall(
          Proc.new { |_obj| 
              begin
                  trampCall(JSON).dump(
                        begin
                          embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 98 ); 
                            trampCall( self.__PAMARKjson_COMARKalist_MIMARK_GTMARKhash_MIMARKtable_METHOD(  '%json:alist->hash-table',
                                begin
                                  if @global_lisp_binding.has_key?('__PAMARKjson_COMARKalist_MIMARK_GTMARKhash_MIMARKtable') then
                                    trampCall(@__PAMARKjson_COMARKalist_MIMARK_GTMARKhash_MIMARKtable)
                                  else raise NameError.new( "Error: undefined variable __PAMARKjson_COMARKalist_MIMARK_GTMARKhash_MIMARKtable", "__PAMARKjson_COMARKalist_MIMARK_GTMARKhash_MIMARKtable" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:98"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_obj)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:98"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         ))
                        end
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:97"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self._construct_MIMARKjson_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_construct_MIMARKjson', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_construct_MIMARKjson'] = self.method( :_construct_MIMARKjson_METHOD )
    @_construct_MIMARKjson = 
    trampCall(
          Proc.new { |_obj,*__rest__| _io = __rest__[0] ;  
              begin
                ___lambda = lambda { |__| 
                    begin
                        trampCall(__).print(
                              begin
                                embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 103 ); 
                                  trampCall( self._construct_MIMARKjson_MIMARKstring_METHOD(  'construct-json-string',
                                      begin
                                        if @global_lisp_binding.has_key?('_construct_MIMARKjson_MIMARKstring') then
                                          trampCall(@_construct_MIMARKjson_MIMARKstring)
                                        else raise NameError.new( "Error: undefined variable _construct_MIMARKjson_MIMARKstring", "_construct_MIMARKjson_MIMARKstring" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:103"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_obj)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:103"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               ))
                              end
                          )
                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:102"] + __e.backtrace ) ; raise __e
                    end
                } ; ___lambda.call(
                      begin
                        ___lambda = lambda { |___gensym__6d159efe5170a605fc9e84dcf91a427e3f7e5718_90189| 
                            if ( 
                              begin
                                embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 62 ); 
                                  _null_QUMARK(
                                      begin
                                          trampCall(___gensym__6d159efe5170a605fc9e84dcf91a427e3f7e5718_90189)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                             ) then
                                begin
                                    trampCall(STDOUT)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:101"] + __e.backtrace ) ; raise __e
                                end
                            else
                                begin
                                  embedBacktraceInfo( "./lib/nendo/rfc/json.nnd", 74 ); 
                                    delayCall( '_car',  'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:74"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(___gensym__6d159efe5170a605fc9e84dcf91a427e3f7e5718_90189)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 )
                                end
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_io)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/rfc/json.nnd:101"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )


# -------------------------------------------------------
# [EOF]
# -------------------------------------------------------
