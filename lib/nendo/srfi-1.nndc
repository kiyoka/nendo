#
#    This file is nendo's compiled library file. 
#    generated  "nendo -c src" command. 
# 

trampCall( 
  begin #execFunc
      def self._xcons_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_xcons', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_xcons'] = self.method( :_xcons_METHOD )
    @_xcons = 
    trampCall(
          Proc.new { |_d,_a| 
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 18 );
                  delayCall( '_cons',  'cons',
                      begin
                        if @global_lisp_binding.has_key?('_cons') then
                          trampCall(@_cons)
                        else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:18"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                            trampCall(_a)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:18"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_d)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:18"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._make_MIMARKlist_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_make_MIMARKlist', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_make_MIMARKlist'] = self.method( :_make_MIMARKlist_METHOD )
    @_make_MIMARKlist = 
    trampCall(
          Proc.new { |_len,*__rest__| _maybe_MIMARKelt = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |_elt| 
                    begin #makeLetrec
                      ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30266| 
                          ___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30266                           = 
                            Proc.new { |_i,_ans| 
                                if ( 
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 36 );
                                      ( 
                                        begin
                                            trampCall(_i)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:36"] + __e.backtrace ) ; raise __e
                                        end                                      <=
                                      0
                                       ) 
                                  end
                                 ) then
                                      begin
                                          trampCall(_ans)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:36"] + __e.backtrace ) ; raise __e
                                      end
                                else
                                      begin
                                        embedBacktraceInfo( "", 1 );
                                          delayCall( '___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30266',  '__gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30266',
                                              begin
                                                  trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30266)
                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 34 );
                                                    ( 
                                                      begin
                                                          trampCall(_i)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:34"] + __e.backtrace ) ; raise __e
                                                      end                                                    -
                                                    1
                                                     ) 
                                                end                                              ,
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 35 );
                                                    _cons(
                                                        begin
                                                            trampCall(_elt)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:35"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        begin
                                                            trampCall(_ans)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:35"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end
                                          ]
                                                       )
                                      end
                                end
                            }
                          begin
                            embedBacktraceInfo( "", 1 );
                              delayCall( '___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30266',  '__gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30266',
                                  begin
                                      trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30266)
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_len)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:34"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                  Cell.new()
                              ]
                                           )
                          end
                      } ; ___lambda.call(
                      nil
                                 )
                    end
                } ; ___lambda.call(
                      if ( 
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 30 );
                            _null_QUMARK(
                                begin
                                    trampCall(_maybe_MIMARKelt)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:30"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                       ) then
                          false
                      else
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 31 );
                                _null_QUMARK(
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 31 );
                                        _cdr(
                                            begin
                                                trampCall(_maybe_MIMARKelt)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:31"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    end
                                )
                            end
                           ) then
                                begin
                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 31 );
                                    delayCall( '_car',  'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable car", "car" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:31"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(_maybe_MIMARKelt)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:31"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 )
                                end
                          else
                              if ( 
                              true
                               ) then
                                    begin raise RuntimeError, 
                                      "Too many arguments to MAKE-LIST" ' ' + 
                                      _write_MIMARKto_MIMARKstring(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 33 );
                                            _cons(
                                                begin
                                                    trampCall(_len)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:33"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                begin
                                                    trampCall(_maybe_MIMARKelt)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:33"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                      )
                                    rescue => __e 
                                      __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:32"] + __e.backtrace )
                                      raise __e
                                    end 
                              else
                                  Cell.new()
                              end
                          end
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._list_MIMARKtabulate_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_list_MIMARKtabulate', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_list_MIMARKtabulate'] = self.method( :_list_MIMARKtabulate_METHOD )
    @_list_MIMARKtabulate = 
    trampCall(
          Proc.new { |_len,_proc| 
              begin #makeLetrec
                ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30267| 
                    ___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30267                     = 
                      Proc.new { |_i,_ans| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 49 );
                                ( 
                                  begin
                                      trampCall(_i)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:49"] + __e.backtrace ) ; raise __e
                                  end                                <
                                0
                                 ) 
                            end
                           ) then
                                begin
                                    trampCall(_ans)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:49"] + __e.backtrace ) ; raise __e
                                end
                          else
                                begin
                                  embedBacktraceInfo( "", 1 );
                                    delayCall( '___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30267',  '__gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30267',
                                        begin
                                            trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30267)
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 47 );
                                              ( 
                                                begin
                                                    trampCall(_i)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:47"] + __e.backtrace ) ; raise __e
                                                end                                              -
                                              1
                                               ) 
                                          end                                        ,
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 48 );
                                              _cons(
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 48 );
                                                      trampCall( callProcedure(  '_proc',  'proc',
                                                          begin
                                                              trampCall(_proc)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:48"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_i)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:48"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   ))
                                                  end                                                ,
                                                  begin
                                                      trampCall(_ans)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:48"] + __e.backtrace ) ; raise __e
                                                  end
                                              )
                                          end
                                    ]
                                                 )
                                end
                          end
                      }
                    begin
                      embedBacktraceInfo( "", 1 );
                        delayCall( '___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30267',  '__gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30267',
                            begin
                                trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30267)
                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 47 );
                                  ( 
                                    begin
                                        trampCall(_len)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:47"] + __e.backtrace ) ; raise __e
                                    end                                  -
                                  1
                                   ) 
                              end                            ,
                            Cell.new()
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cons_ASMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cons_ASMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cons_ASMARK'] = self.method( :_cons_ASMARK_METHOD )
    @_cons_ASMARK = 
    trampCall(
          Proc.new { |_first,*__rest__| _rest = __rest__[0] ;  
              begin #makeLetrec
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_x,_rest| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 58 );
                                _pair_QUMARK(
                                    begin
                                        trampCall(_rest)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:58"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                           ) then
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 59 );
                                  delayCall( '_cons',  'cons',
                                      begin
                                        if @global_lisp_binding.has_key?('_cons') then
                                          trampCall(@_cons)
                                        else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:59"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_x)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:59"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 59 );
                                            trampCall( callProcedure(  '_recur',  'recur',
                                                begin
                                                    trampCall(_recur)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:59"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 59 );
                                                      _car(
                                                          begin
                                                              trampCall(_rest)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:59"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 59 );
                                                      _cdr(
                                                          begin
                                                              trampCall(_rest)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:59"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                            ]
                                                         ))
                                        end
                                  ]
                                               )
                              end
                          else
                              begin
                                  trampCall(_x)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:60"] + __e.backtrace ) ; raise __e
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 57 );
                        delayCall( '_recur',  'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:57"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_first)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:57"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                  trampCall(_rest)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:57"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._list_MIMARKcopy_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_list_MIMARKcopy', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_list_MIMARKcopy'] = self.method( :_list_MIMARKcopy_METHOD )
    @_list_MIMARKcopy = 
    trampCall(
          Proc.new { |_lis| 
              begin #makeLetrec
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lis| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 66 );
                                _pair_QUMARK(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:66"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                           ) then
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 67 );
                                  delayCall( '_cons',  'cons',
                                      begin
                                        if @global_lisp_binding.has_key?('_cons') then
                                          trampCall(@_cons)
                                        else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:67"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 67 );
                                            _car(
                                                begin
                                                    trampCall(_lis)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:67"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 67 );
                                            trampCall( callProcedure(  '_recur',  'recur',
                                                begin
                                                    trampCall(_recur)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:67"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 67 );
                                                      _cdr(
                                                          begin
                                                              trampCall(_lis)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:67"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                            ]
                                                         ))
                                        end
                                  ]
                                               )
                              end
                          else
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:68"] + __e.backtrace ) ; raise __e
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 65 );
                        delayCall( '_recur',  'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:65"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:65"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._iota_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_iota', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_iota'] = self.method( :_iota_METHOD )
    @_iota = 
    trampCall(
          Proc.new { |_count,*__rest__| _args = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 73 );
                    ( 
                      begin
                          trampCall(_count)
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:73"] + __e.backtrace ) ; raise __e
                      end                    <
                    0
                     ) 
                end
               ) then
                  begin raise RuntimeError, 
                    "Negative step count" ' ' + 
                    _write_MIMARKto_MIMARKstring(
                      begin
                        if @global_lisp_binding.has_key?('_iota') then
                          trampCall(@_iota)
                        else raise NameError.new( "Error: undefined variable iota", "iota" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:73"] + __e.backtrace ) ; raise __e
                      end
                    )
                  rescue => __e 
                    __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:73"] + __e.backtrace )
                    raise __e
                  end 
              end
              begin #makeLet
                ___lambda = lambda { |_start,_step| 
                    begin #makeLet
                      ___lambda = lambda { |_last_MIMARKval| 
                          begin #makeLetrec
                            ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30268| 
                                ___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30268                                 = 
                                  Proc.new { |_count,_val,_ans| 
                                      if ( 
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 82 );
                                            ( 
                                              begin
                                                  trampCall(_count)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:82"] + __e.backtrace ) ; raise __e
                                              end                                            <=
                                            0
                                             ) 
                                        end
                                       ) then
                                            begin
                                                trampCall(_ans)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:82"] + __e.backtrace ) ; raise __e
                                            end
                                      else
                                            begin
                                              embedBacktraceInfo( "", 1 );
                                                delayCall( '___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30268',  '__gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30268',
                                                    begin
                                                        trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30268)
                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 79 );
                                                          ( 
                                                            begin
                                                                trampCall(_count)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:79"] + __e.backtrace ) ; raise __e
                                                            end                                                          -
                                                          1
                                                           ) 
                                                      end                                                    ,
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 80 );
                                                          ( 
                                                            begin
                                                                trampCall(_val)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:80"] + __e.backtrace ) ; raise __e
                                                            end                                                          -
                                                            begin
                                                                trampCall(_step)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:80"] + __e.backtrace ) ; raise __e
                                                            end
                                                           ) 
                                                      end                                                    ,
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 81 );
                                                          _cons(
                                                              begin
                                                                  trampCall(_val)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:81"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              begin
                                                                  trampCall(_ans)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:81"] + __e.backtrace ) ; raise __e
                                                              end
                                                          )
                                                      end
                                                ]
                                                             )
                                            end
                                      end
                                  }
                                begin
                                  embedBacktraceInfo( "", 1 );
                                    delayCall( '___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30268',  '__gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30268',
                                        begin
                                            trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30268)
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(_count)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:79"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          begin
                                              trampCall(_last_MIMARKval)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:80"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                        Cell.new()
                                    ]
                                                 )
                                end
                            } ; ___lambda.call(
                            nil
                                       )
                          end
                      } ; ___lambda.call(
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 78 );
                                ( 
                                  begin
                                      trampCall(_start)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:78"] + __e.backtrace ) ; raise __e
                                  end                                +
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 78 );
                                      ( 
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 78 );
                                            ( 
                                              begin
                                                  trampCall(_count)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:78"] + __e.backtrace ) ; raise __e
                                              end                                            -
                                            1
                                             ) 
                                        end                                      *
                                        begin
                                            trampCall(_step)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:78"] + __e.backtrace ) ; raise __e
                                        end
                                       ) 
                                  end
                                 ) 
                            end
                                 )
                    end
                } ; ___lambda.call(
                      if ( 
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 74 );
                            _pair_QUMARK(
                                begin
                                    trampCall(_args)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:74"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                       ) then
                          begin
                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 74 );
                              delayCall( '_car',  'car',
                                  begin
                                    if @global_lisp_binding.has_key?('_car') then
                                      trampCall(@_car)
                                    else raise NameError.new( "Error: undefined variable car", "car" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:74"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_args)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:74"] + __e.backtrace ) ; raise __e
                                    end
                              ]
                                           )
                          end
                      else
                        0
                      end                    ,
                      if ( 
                        if ( 
                          begin
                            embedBacktraceInfo( "", 1 );
                              _not(
                                  begin
                                    embedBacktraceInfo( "", 1 );
                                      _eq_QUMARK(
                                        false                                        ,
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 75 );
                                              _pair_QUMARK(
                                                  begin
                                                      trampCall(_args)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:75"] + __e.backtrace ) ; raise __e
                                                  end
                                              )
                                          end
                                      )
                                  end
                              )
                          end
                         ) then
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 75 );
                                _pair_QUMARK(
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 75 );
                                        _cdr(
                                            begin
                                                trampCall(_args)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:75"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    end
                                )
                            end
                        else
                          false
                        end
                       ) then
                          begin
                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 75 );
                              delayCall( '_cadr',  'cadr',
                                  begin
                                    if @global_lisp_binding.has_key?('_cadr') then
                                      trampCall(@_cadr)
                                    else raise NameError.new( "Error: undefined variable cadr", "cadr" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:75"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_args)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:75"] + __e.backtrace ) ; raise __e
                                    end
                              ]
                                           )
                          end
                      else
                        1
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._circular_MIMARKlist_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_circular_MIMARKlist', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_circular_MIMARKlist'] = self.method( :_circular_MIMARKlist_METHOD )
    @_circular_MIMARKlist = 
    trampCall(
          Proc.new { |_val1,*__rest__| _vals = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |_ans| 
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 133 );
                        _set_MIMARKcdr_EXMARK(
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 133 );
                                trampCall( self._last_MIMARKpair_METHOD(  'last-pair',
                                    begin
                                      if @global_lisp_binding.has_key?('_last_MIMARKpair') then
                                        trampCall(@_last_MIMARKpair)
                                      else raise NameError.new( "Error: undefined variable last-pair", "last-pair" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:133"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_ans)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:133"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end                          ,
                            begin
                                trampCall(_ans)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:133"] + __e.backtrace ) ; raise __e
                            end
                        )
                    end
                    begin
                        trampCall(_ans)
                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:134"] + __e.backtrace ) ; raise __e
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 132 );
                          _cons(
                              begin
                                  trampCall(_val1)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:132"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                  trampCall(_vals)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:132"] + __e.backtrace ) ; raise __e
                              end
                          )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._proper_MIMARKlist_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_proper_MIMARKlist_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_proper_MIMARKlist_QUMARK'] = self.method( :_proper_MIMARKlist_QUMARK_METHOD )
    @_proper_MIMARKlist_QUMARK = 
    trampCall(
          Proc.new { |_x| 
              begin #makeLetrec
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_x,_lag| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 143 );
                                _pair_QUMARK(
                                    begin
                                        trampCall(_x)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:143"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                           ) then
                              begin #makeLet
                                ___lambda = lambda { |_x| 
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 145 );
                                          _pair_QUMARK(
                                              begin
                                                  trampCall(_x)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:145"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                     ) then
                                        begin #makeLet
                                          ___lambda = lambda { |_x,_lag| 
                                              if ( 
                                                begin
                                                  embedBacktraceInfo( "", 1 );
                                                    _not(
                                                        begin
                                                          embedBacktraceInfo( "", 1 );
                                                            _eq_QUMARK(
                                                              false                                                              ,
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 148 );
                                                                    _not(
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 148 );
                                                                            _eq_QUMARK(
                                                                                begin
                                                                                    trampCall(_x)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:148"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                begin
                                                                                    trampCall(_lag)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:148"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                            )
                                                                        end
                                                                    )
                                                                end
                                                            )
                                                        end
                                                    )
                                                end
                                               ) then
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 148 );
                                                      delayCall( '_lp',  'lp',
                                                          begin
                                                              trampCall(_lp)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:148"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_x)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:148"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            begin
                                                                trampCall(_lag)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:148"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   )
                                                  end
                                              else
                                                false
                                              end
                                          } ; ___lambda.call(
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 146 );
                                                    _cdr(
                                                        begin
                                                            trampCall(_x)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:146"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end                                              ,
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 147 );
                                                    _cdr(
                                                        begin
                                                            trampCall(_lag)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:147"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end
                                                     )
                                        end
                                    else
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 149 );
                                            delayCall( '_null_QUMARK',  'null?',
                                                begin
                                                  if @global_lisp_binding.has_key?('_null_QUMARK') then
                                                    trampCall(@_null_QUMARK)
                                                  else raise NameError.new( "Error: undefined variable null?", "null?" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:149"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_x)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:149"] + __e.backtrace ) ; raise __e
                                                  end
                                            ]
                                                         )
                                        end
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 144 );
                                          _cdr(
                                              begin
                                                  trampCall(_x)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:144"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                           )
                              end
                          else
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 150 );
                                  delayCall( '_null_QUMARK',  'null?',
                                      begin
                                        if @global_lisp_binding.has_key?('_null_QUMARK') then
                                          trampCall(@_null_QUMARK)
                                        else raise NameError.new( "Error: undefined variable null?", "null?" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:150"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_x)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:150"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 142 );
                        delayCall( '_lp',  'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:142"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_x)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:142"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                  trampCall(_x)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:142"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._dotted_MIMARKlist_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_dotted_MIMARKlist_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_dotted_MIMARKlist_QUMARK'] = self.method( :_dotted_MIMARKlist_QUMARK_METHOD )
    @_dotted_MIMARKlist_QUMARK = 
    trampCall(
          Proc.new { |_x| 
              begin #makeLetrec
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_x,_lag| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 161 );
                                _pair_QUMARK(
                                    begin
                                        trampCall(_x)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:161"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                           ) then
                              begin #makeLet
                                ___lambda = lambda { |_x| 
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 163 );
                                          _pair_QUMARK(
                                              begin
                                                  trampCall(_x)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:163"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                     ) then
                                        begin #makeLet
                                          ___lambda = lambda { |_x,_lag| 
                                              if ( 
                                                begin
                                                  embedBacktraceInfo( "", 1 );
                                                    _not(
                                                        begin
                                                          embedBacktraceInfo( "", 1 );
                                                            _eq_QUMARK(
                                                              false                                                              ,
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 166 );
                                                                    _not(
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 166 );
                                                                            _eq_QUMARK(
                                                                                begin
                                                                                    trampCall(_x)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:166"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                begin
                                                                                    trampCall(_lag)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:166"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                            )
                                                                        end
                                                                    )
                                                                end
                                                            )
                                                        end
                                                    )
                                                end
                                               ) then
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 166 );
                                                      delayCall( '_lp',  'lp',
                                                          begin
                                                              trampCall(_lp)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:166"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_x)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:166"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            begin
                                                                trampCall(_lag)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:166"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   )
                                                  end
                                              else
                                                false
                                              end
                                          } ; ___lambda.call(
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 164 );
                                                    _cdr(
                                                        begin
                                                            trampCall(_x)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:164"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end                                              ,
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 165 );
                                                    _cdr(
                                                        begin
                                                            trampCall(_lag)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:165"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end
                                                     )
                                        end
                                    else
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 167 );
                                            delayCall( '_not',  'not',
                                                begin
                                                  if @global_lisp_binding.has_key?('_not') then
                                                    trampCall(@_not)
                                                  else raise NameError.new( "Error: undefined variable not", "not" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:167"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 167 );
                                                      _null_QUMARK(
                                                          begin
                                                              trampCall(_x)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:167"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                            ]
                                                         )
                                        end
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 162 );
                                          _cdr(
                                              begin
                                                  trampCall(_x)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:162"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                           )
                              end
                          else
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 168 );
                                  delayCall( '_not',  'not',
                                      begin
                                        if @global_lisp_binding.has_key?('_not') then
                                          trampCall(@_not)
                                        else raise NameError.new( "Error: undefined variable not", "not" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:168"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 168 );
                                            _null_QUMARK(
                                                begin
                                                    trampCall(_x)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:168"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                  ]
                                               )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 160 );
                        delayCall( '_lp',  'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:160"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_x)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:160"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                  trampCall(_x)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:160"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._circular_MIMARKlist_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_circular_MIMARKlist_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_circular_MIMARKlist_QUMARK'] = self.method( :_circular_MIMARKlist_QUMARK_METHOD )
    @_circular_MIMARKlist_QUMARK = 
    trampCall(
          Proc.new { |_x| 
              begin #makeLetrec
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_x,_lag| 
                          if ( 
                            begin
                              embedBacktraceInfo( "", 1 );
                                _not(
                                    begin
                                      embedBacktraceInfo( "", 1 );
                                        _eq_QUMARK(
                                          false                                          ,
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 172 );
                                                _pair_QUMARK(
                                                    begin
                                                        trampCall(_x)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:172"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                        )
                                    end
                                )
                            end
                           ) then
                              begin #makeLet
                                ___lambda = lambda { |_x| 
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "", 1 );
                                          _not(
                                              begin
                                                embedBacktraceInfo( "", 1 );
                                                  _eq_QUMARK(
                                                    false                                                    ,
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 174 );
                                                          _pair_QUMARK(
                                                              begin
                                                                  trampCall(_x)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:174"] + __e.backtrace ) ; raise __e
                                                              end
                                                          )
                                                      end
                                                  )
                                              end
                                          )
                                      end
                                     ) then
                                        begin #makeLet
                                          ___lambda = lambda { |_x,_lag| 
                                              begin #makeLet
                                                ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30269| 
                                                    if ( 
                                                      begin
                                                          trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30269)
                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                      end
                                                     ) then
                                                        begin
                                                            trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30269)
                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                        end
                                                    else
                                                        begin #makeLet
                                                          ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30270| 
                                                              if ( 
                                                                begin
                                                                    trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30270)
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end
                                                               ) then
                                                                  begin
                                                                      trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30270)
                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              else
                                                                false
                                                              end
                                                          } ; ___lambda.call(
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 177 );
                                                                    trampCall( callProcedure(  '_lp',  'lp',
                                                                        begin
                                                                            trampCall(_lp)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:177"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                    [
                                                                          begin
                                                                              trampCall(_x)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:177"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          begin
                                                                              trampCall(_lag)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:177"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                    ]
                                                                                 ))
                                                                end
                                                                     )
                                                        end
                                                    end
                                                } ; ___lambda.call(
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 177 );
                                                          _eq_QUMARK(
                                                              begin
                                                                  trampCall(_x)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:177"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              begin
                                                                  trampCall(_lag)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:177"] + __e.backtrace ) ; raise __e
                                                              end
                                                          )
                                                      end
                                                           )
                                              end
                                          } ; ___lambda.call(
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 175 );
                                                    _cdr(
                                                        begin
                                                            trampCall(_x)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:175"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end                                              ,
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 176 );
                                                    _cdr(
                                                        begin
                                                            trampCall(_lag)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:176"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end
                                                     )
                                        end
                                    else
                                      false
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 173 );
                                          _cdr(
                                              begin
                                                  trampCall(_x)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:173"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                           )
                              end
                          else
                            false
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 171 );
                        delayCall( '_lp',  'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:171"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_x)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:171"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                  trampCall(_x)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:171"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._list_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_list_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_list_QUMARK'] = self.method( :_list_QUMARK_METHOD )
    @_list_QUMARK = 
    trampCall(
          Proc.new { |_x| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 180 );
                    trampCall( self._circular_MIMARKlist_QUMARK_METHOD(  'circular-list?',
                        begin
                          if @global_lisp_binding.has_key?('_circular_MIMARKlist_QUMARK') then
                            trampCall(@_circular_MIMARKlist_QUMARK)
                          else raise NameError.new( "Error: undefined variable circular-list?", "circular-list?" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:180"] + __e.backtrace ) ; raise __e
                        end                      ,
                    [
                          begin
                              trampCall(_x)
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:180"] + __e.backtrace ) ; raise __e
                          end
                    ]
                                 ))
                end
               ) then
                false
              else
                  begin
                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 182 );
                      delayCall( '_proper_MIMARKlist_QUMARK',  'proper-list?',
                          begin
                            if @global_lisp_binding.has_key?('_proper_MIMARKlist_QUMARK') then
                              trampCall(@_proper_MIMARKlist_QUMARK)
                            else raise NameError.new( "Error: undefined variable proper-list?", "proper-list?" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:182"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                                trampCall(_x)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:182"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._not_MIMARKpair_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_not_MIMARKpair_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_not_MIMARKpair_QUMARK'] = self.method( :_not_MIMARKpair_QUMARK_METHOD )
    @_not_MIMARKpair_QUMARK = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 184 );
                  delayCall( '_not',  'not',
                      begin
                        if @global_lisp_binding.has_key?('_not') then
                          trampCall(@_not)
                        else raise NameError.new( "Error: undefined variable not", "not" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:184"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 184 );
                            _pair_QUMARK(
                                begin
                                    trampCall(_x)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:184"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._null_MIMARKlist_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_null_MIMARKlist_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_null_MIMARKlist_QUMARK'] = self.method( :_null_MIMARKlist_QUMARK_METHOD )
    @_null_MIMARKlist_QUMARK = 
    trampCall(
          Proc.new { |_l| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 190 );
                    _pair_QUMARK(
                        begin
                            trampCall(_l)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:190"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  false
              else
                  if ( 
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 191 );
                        _null_QUMARK(
                            begin
                                trampCall(_l)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:191"] + __e.backtrace ) ; raise __e
                            end
                        )
                    end
                   ) then
                      true
                  else
                      if ( 
                      true
                       ) then
                            begin raise RuntimeError, 
                              "null-list?: argument out of domain" ' ' + 
                              _write_MIMARKto_MIMARKstring(
                                begin
                                    trampCall(_l)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:192"] + __e.backtrace ) ; raise __e
                                end
                              )
                            rescue => __e 
                              __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:192"] + __e.backtrace )
                              raise __e
                            end 
                      else
                          Cell.new()
                      end
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._list_EQMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_list_EQMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_list_EQMARK'] = self.method( :_list_EQMARK_METHOD )
    @_list_EQMARK = 
    trampCall(
          Proc.new { |__EQMARK,*__rest__| _lists = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30274| 
                    if ( 
                      begin
                          trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30274)
                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                      end
                     ) then
                        begin
                            trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30274)
                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                        end
                    else
                        begin #makeLet
                          ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30275| 
                              if ( 
                                begin
                                    trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30275)
                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                end
                               ) then
                                  begin
                                      trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30275)
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                false
                              end
                          } ; ___lambda.call(
                                begin #makeLetrec
                                  ___lambda = lambda { |_lp1| 
                                      _lp1                                       = 
                                        Proc.new { |_list_MIMARKa,_others| 
                                            begin #makeLet
                                              ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30276| 
                                                  if ( 
                                                    begin
                                                        trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30276)
                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                    end
                                                   ) then
                                                      begin
                                                          trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30276)
                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                      end
                                                  else
                                                      begin #makeLet
                                                        ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30277| 
                                                            if ( 
                                                              begin
                                                                  trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30277)
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end
                                                             ) then
                                                                begin
                                                                    trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30277)
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end
                                                            else
                                                              false
                                                            end
                                                        } ; ___lambda.call(
                                                              begin #makeLet
                                                                ___lambda = lambda { |_list_MIMARKb,_others| 
                                                                    if ( 
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 202 );
                                                                          _eq_QUMARK(
                                                                              begin
                                                                                  trampCall(_list_MIMARKa)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:202"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              begin
                                                                                  trampCall(_list_MIMARKb)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:202"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          )
                                                                      end
                                                                     ) then
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 203 );
                                                                            delayCall( '_lp1',  'lp1',
                                                                                begin
                                                                                    trampCall(_lp1)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:203"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  begin
                                                                                      trampCall(_list_MIMARKb)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:203"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  begin
                                                                                      trampCall(_others)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:203"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                            ]
                                                                                         )
                                                                        end
                                                                    else
                                                                        begin #makeLetrec
                                                                          ___lambda = lambda { |_lp2| 
                                                                              _lp2                                                                               = 
                                                                                Proc.new { |_list_MIMARKa,_list_MIMARKc| 
                                                                                    if ( 
                                                                                      begin
                                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 205 );
                                                                                          trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                                                                  trampCall(@_null_MIMARKlist_QUMARK)
                                                                                                else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:205"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                          [
                                                                                                begin
                                                                                                    trampCall(_list_MIMARKa)
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:205"] + __e.backtrace ) ; raise __e
                                                                                                end
                                                                                          ]
                                                                                                       ))
                                                                                      end
                                                                                     ) then
                                                                                        if ( 
                                                                                          begin
                                                                                            embedBacktraceInfo( "", 1 );
                                                                                              _not(
                                                                                                  begin
                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                      _eq_QUMARK(
                                                                                                        false                                                                                                        ,
                                                                                                          begin
                                                                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 206 );
                                                                                                              trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                                                                                                  begin
                                                                                                                    if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                                                                                      trampCall(@_null_MIMARKlist_QUMARK)
                                                                                                                    else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:206"] + __e.backtrace ) ; raise __e
                                                                                                                  end                                                                                                                ,
                                                                                                              [
                                                                                                                    begin
                                                                                                                        trampCall(_list_MIMARKc)
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:206"] + __e.backtrace ) ; raise __e
                                                                                                                    end
                                                                                                              ]
                                                                                                                           ))
                                                                                                          end
                                                                                                      )
                                                                                                  end
                                                                                              )
                                                                                          end
                                                                                         ) then
                                                                                            begin
                                                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 207 );
                                                                                                delayCall( '_lp1',  'lp1',
                                                                                                    begin
                                                                                                        trampCall(_lp1)
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:207"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                [
                                                                                                      begin
                                                                                                          trampCall(_list_MIMARKb)
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:207"] + __e.backtrace ) ; raise __e
                                                                                                      end                                                                                                    ,
                                                                                                      begin
                                                                                                          trampCall(_others)
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:207"] + __e.backtrace ) ; raise __e
                                                                                                      end
                                                                                                ]
                                                                                                             )
                                                                                            end
                                                                                        else
                                                                                          false
                                                                                        end
                                                                                    else
                                                                                        if ( 
                                                                                          begin
                                                                                            embedBacktraceInfo( "", 1 );
                                                                                              _not(
                                                                                                  begin
                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                      _eq_QUMARK(
                                                                                                        false                                                                                                        ,
                                                                                                          begin
                                                                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 208 );
                                                                                                              _not(
                                                                                                                  begin
                                                                                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 208 );
                                                                                                                      trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                                                                                                          begin
                                                                                                                            if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                                                                                              trampCall(@_null_MIMARKlist_QUMARK)
                                                                                                                            else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:208"] + __e.backtrace ) ; raise __e
                                                                                                                          end                                                                                                                        ,
                                                                                                                      [
                                                                                                                            begin
                                                                                                                                trampCall(_list_MIMARKc)
                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:208"] + __e.backtrace ) ; raise __e
                                                                                                                            end
                                                                                                                      ]
                                                                                                                                   ))
                                                                                                                  end
                                                                                                              )
                                                                                                          end
                                                                                                      )
                                                                                                  end
                                                                                              )
                                                                                          end
                                                                                         ) then
                                                                                            if ( 
                                                                                              begin
                                                                                                embedBacktraceInfo( "", 1 );
                                                                                                  _not(
                                                                                                      begin
                                                                                                        embedBacktraceInfo( "", 1 );
                                                                                                          _eq_QUMARK(
                                                                                                            false                                                                                                            ,
                                                                                                              begin
                                                                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 209 );
                                                                                                                  trampCall( callProcedure(  '__EQMARK',  '=',
                                                                                                                      begin
                                                                                                                          trampCall(__EQMARK)
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:209"] + __e.backtrace ) ; raise __e
                                                                                                                      end                                                                                                                    ,
                                                                                                                  [
                                                                                                                        begin
                                                                                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 209 );
                                                                                                                            _car(
                                                                                                                                begin
                                                                                                                                    trampCall(_list_MIMARKa)
                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:209"] + __e.backtrace ) ; raise __e
                                                                                                                                end
                                                                                                                            )
                                                                                                                        end                                                                                                                      ,
                                                                                                                        begin
                                                                                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 209 );
                                                                                                                            _car(
                                                                                                                                begin
                                                                                                                                    trampCall(_list_MIMARKc)
                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:209"] + __e.backtrace ) ; raise __e
                                                                                                                                end
                                                                                                                            )
                                                                                                                        end
                                                                                                                  ]
                                                                                                                               ))
                                                                                                              end
                                                                                                          )
                                                                                                      end
                                                                                                  )
                                                                                              end
                                                                                             ) then
                                                                                                begin
                                                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 210 );
                                                                                                    delayCall( '_lp2',  'lp2',
                                                                                                        begin
                                                                                                            trampCall(_lp2)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:210"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                    [
                                                                                                          begin
                                                                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 210 );
                                                                                                              _cdr(
                                                                                                                  begin
                                                                                                                      trampCall(_list_MIMARKa)
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:210"] + __e.backtrace ) ; raise __e
                                                                                                                  end
                                                                                                              )
                                                                                                          end                                                                                                        ,
                                                                                                          begin
                                                                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 210 );
                                                                                                              _cdr(
                                                                                                                  begin
                                                                                                                      trampCall(_list_MIMARKc)
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:210"] + __e.backtrace ) ; raise __e
                                                                                                                  end
                                                                                                              )
                                                                                                          end
                                                                                                    ]
                                                                                                                 )
                                                                                                end
                                                                                            else
                                                                                              false
                                                                                            end
                                                                                        else
                                                                                          false
                                                                                        end
                                                                                    end
                                                                                }
                                                                              begin
                                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 204 );
                                                                                  delayCall( '_lp2',  'lp2',
                                                                                      begin
                                                                                          trampCall(_lp2)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:204"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                  [
                                                                                        begin
                                                                                            trampCall(_list_MIMARKa)
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:204"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        begin
                                                                                            trampCall(_list_MIMARKb)
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:204"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                  ]
                                                                                               )
                                                                              end
                                                                          } ; ___lambda.call(
                                                                          nil
                                                                                     )
                                                                        end
                                                                    end
                                                                } ; ___lambda.call(
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 200 );
                                                                          _car(
                                                                              begin
                                                                                  trampCall(_others)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:200"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          )
                                                                      end                                                                    ,
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 201 );
                                                                          _cdr(
                                                                              begin
                                                                                  trampCall(_others)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:201"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          )
                                                                      end
                                                                           )
                                                              end
                                                                   )
                                                      end
                                                  end
                                              } ; ___lambda.call(
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 199 );
                                                        _null_QUMARK(
                                                            begin
                                                                trampCall(_others)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:199"] + __e.backtrace ) ; raise __e
                                                            end
                                                        )
                                                    end
                                                         )
                                            end
                                        }
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 197 );
                                          delayCall( '_lp1',  'lp1',
                                              begin
                                                  trampCall(_lp1)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:197"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 197 );
                                                    _car(
                                                        begin
                                                            trampCall(_lists)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:197"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end                                              ,
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 198 );
                                                    _cdr(
                                                        begin
                                                            trampCall(_lists)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:198"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end
                                          ]
                                                       )
                                      end
                                  } ; ___lambda.call(
                                  nil
                                             )
                                end
                                     )
                        end
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 195 );
                          _null_QUMARK(
                              begin
                                  trampCall(_lists)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:195"] + __e.backtrace ) ; raise __e
                              end
                          )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._length_PLMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_length_PLMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_length_PLMARK'] = self.method( :_length_PLMARK_METHOD )
    @_length_PLMARK = 
    trampCall(
          Proc.new { |_x| 
              begin #makeLetrec
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_x,_lag,_len| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 223 );
                                _pair_QUMARK(
                                    begin
                                        trampCall(_x)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:223"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                           ) then
                              begin #makeLet
                                ___lambda = lambda { |_x,_len| 
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 226 );
                                          _pair_QUMARK(
                                              begin
                                                  trampCall(_x)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:226"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                     ) then
                                        begin #makeLet
                                          ___lambda = lambda { |_x,_lag,_len| 
                                              if ( 
                                                begin
                                                  embedBacktraceInfo( "", 1 );
                                                    _not(
                                                        begin
                                                          embedBacktraceInfo( "", 1 );
                                                            _eq_QUMARK(
                                                              false                                                              ,
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 230 );
                                                                    _not(
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 230 );
                                                                            _eq_QUMARK(
                                                                                begin
                                                                                    trampCall(_x)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:230"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                begin
                                                                                    trampCall(_lag)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:230"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                            )
                                                                        end
                                                                    )
                                                                end
                                                            )
                                                        end
                                                    )
                                                end
                                               ) then
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 230 );
                                                      delayCall( '_lp',  'lp',
                                                          begin
                                                              trampCall(_lp)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:230"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_x)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:230"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            begin
                                                                trampCall(_lag)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:230"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            begin
                                                                trampCall(_len)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:230"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   )
                                                  end
                                              else
                                                false
                                              end
                                          } ; ___lambda.call(
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 227 );
                                                    _cdr(
                                                        begin
                                                            trampCall(_x)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:227"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end                                              ,
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 228 );
                                                    _cdr(
                                                        begin
                                                            trampCall(_lag)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:228"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end                                              ,
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 229 );
                                                    ( 
                                                      begin
                                                          trampCall(_len)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:229"] + __e.backtrace ) ; raise __e
                                                      end                                                    +
                                                    1
                                                     ) 
                                                end
                                                     )
                                        end
                                    else
                                        begin
                                            trampCall(_len)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:231"] + __e.backtrace ) ; raise __e
                                        end
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 224 );
                                          _cdr(
                                              begin
                                                  trampCall(_x)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:224"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end                                    ,
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 225 );
                                          ( 
                                            begin
                                                trampCall(_len)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:225"] + __e.backtrace ) ; raise __e
                                            end                                          +
                                          1
                                           ) 
                                      end
                                           )
                              end
                          else
                              begin
                                  trampCall(_len)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:232"] + __e.backtrace ) ; raise __e
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 222 );
                        delayCall( '_lp',  'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:222"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_x)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:222"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                  trampCall(_x)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:222"] + __e.backtrace ) ; raise __e
                              end                            ,
                            0
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._zip_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_zip', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_zip'] = self.method( :_zip_METHOD )
    @_zip = 
    trampCall(
          Proc.new { |_list1,*__rest__| _more_MIMARKlists = __rest__[0] ;  
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 234 );
                  delayCall( '_apply',  'apply',
                      begin
                        if @global_lisp_binding.has_key?('_apply') then
                          trampCall(@_apply)
                        else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:234"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          if @global_lisp_binding.has_key?('_map') then
                            trampCall(@_map)
                          else raise NameError.new( "Error: undefined variable map", "map" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:234"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                          if @global_lisp_binding.has_key?('_list') then
                            trampCall(@_list)
                          else raise NameError.new( "Error: undefined variable list", "list" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:234"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_list1)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:234"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_more_MIMARKlists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:234"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._first_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_first', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_first'] = self.method( :_first_METHOD )
    @_first = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('_car') then
              trampCall(@_car)
            else raise NameError.new( "Error: undefined variable car", "car" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:273"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._second_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_second', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_second'] = self.method( :_second_METHOD )
    @_second = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('_cadr') then
              trampCall(@_cadr)
            else raise NameError.new( "Error: undefined variable cadr", "cadr" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:274"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._third_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_third', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_third'] = self.method( :_third_METHOD )
    @_third = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('_caddr') then
              trampCall(@_caddr)
            else raise NameError.new( "Error: undefined variable caddr", "caddr" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:275"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._fourth_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_fourth', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_fourth'] = self.method( :_fourth_METHOD )
    @_fourth = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('_cadddr') then
              trampCall(@_cadddr)
            else raise NameError.new( "Error: undefined variable cadddr", "cadddr" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:276"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._fifth_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_fifth', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_fifth'] = self.method( :_fifth_METHOD )
    @_fifth = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 277 );
                  delayCall( '_car',  'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          trampCall(@_car)
                        else raise NameError.new( "Error: undefined variable car", "car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:277"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 277 );
                            trampCall( self._cddddr_METHOD(  'cddddr',
                                begin
                                  if @global_lisp_binding.has_key?('_cddddr') then
                                    trampCall(@_cddddr)
                                  else raise NameError.new( "Error: undefined variable cddddr", "cddddr" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:277"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_x)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:277"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         ))
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._sixth_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_sixth', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_sixth'] = self.method( :_sixth_METHOD )
    @_sixth = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 278 );
                  delayCall( '_cadr',  'cadr',
                      begin
                        if @global_lisp_binding.has_key?('_cadr') then
                          trampCall(@_cadr)
                        else raise NameError.new( "Error: undefined variable cadr", "cadr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:278"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 278 );
                            trampCall( self._cddddr_METHOD(  'cddddr',
                                begin
                                  if @global_lisp_binding.has_key?('_cddddr') then
                                    trampCall(@_cddddr)
                                  else raise NameError.new( "Error: undefined variable cddddr", "cddddr" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:278"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_x)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:278"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         ))
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._seventh_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_seventh', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_seventh'] = self.method( :_seventh_METHOD )
    @_seventh = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 279 );
                  delayCall( '_caddr',  'caddr',
                      begin
                        if @global_lisp_binding.has_key?('_caddr') then
                          trampCall(@_caddr)
                        else raise NameError.new( "Error: undefined variable caddr", "caddr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:279"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 279 );
                            trampCall( self._cddddr_METHOD(  'cddddr',
                                begin
                                  if @global_lisp_binding.has_key?('_cddddr') then
                                    trampCall(@_cddddr)
                                  else raise NameError.new( "Error: undefined variable cddddr", "cddddr" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:279"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_x)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:279"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         ))
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._eighth_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_eighth', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_eighth'] = self.method( :_eighth_METHOD )
    @_eighth = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 280 );
                  delayCall( '_cadddr',  'cadddr',
                      begin
                        if @global_lisp_binding.has_key?('_cadddr') then
                          trampCall(@_cadddr)
                        else raise NameError.new( "Error: undefined variable cadddr", "cadddr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:280"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 280 );
                            trampCall( self._cddddr_METHOD(  'cddddr',
                                begin
                                  if @global_lisp_binding.has_key?('_cddddr') then
                                    trampCall(@_cddddr)
                                  else raise NameError.new( "Error: undefined variable cddddr", "cddddr" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:280"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_x)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:280"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         ))
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._ninth_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_ninth', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_ninth'] = self.method( :_ninth_METHOD )
    @_ninth = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 281 );
                  delayCall( '_car',  'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          trampCall(@_car)
                        else raise NameError.new( "Error: undefined variable car", "car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:281"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 281 );
                            trampCall( self._cddddr_METHOD(  'cddddr',
                                begin
                                  if @global_lisp_binding.has_key?('_cddddr') then
                                    trampCall(@_cddddr)
                                  else raise NameError.new( "Error: undefined variable cddddr", "cddddr" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:281"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 281 );
                                      trampCall( self._cddddr_METHOD(  'cddddr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cddddr') then
                                              trampCall(@_cddddr)
                                            else raise NameError.new( "Error: undefined variable cddddr", "cddddr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:281"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_x)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:281"] + __e.backtrace ) ; raise __e
                                            end
                                      ]
                                                   ))
                                  end
                            ]
                                         ))
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._tenth_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_tenth', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_tenth'] = self.method( :_tenth_METHOD )
    @_tenth = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 282 );
                  delayCall( '_cadr',  'cadr',
                      begin
                        if @global_lisp_binding.has_key?('_cadr') then
                          trampCall(@_cadr)
                        else raise NameError.new( "Error: undefined variable cadr", "cadr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:282"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 282 );
                            trampCall( self._cddddr_METHOD(  'cddddr',
                                begin
                                  if @global_lisp_binding.has_key?('_cddddr') then
                                    trampCall(@_cddddr)
                                  else raise NameError.new( "Error: undefined variable cddddr", "cddddr" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:282"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 282 );
                                      trampCall( self._cddddr_METHOD(  'cddddr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cddddr') then
                                              trampCall(@_cddddr)
                                            else raise NameError.new( "Error: undefined variable cddddr", "cddddr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:282"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_x)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:282"] + __e.backtrace ) ; raise __e
                                            end
                                      ]
                                                   ))
                                  end
                            ]
                                         ))
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._car_PLMARKcdr_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_car_PLMARKcdr', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_car_PLMARKcdr'] = self.method( :_car_PLMARKcdr_METHOD )
    @_car_PLMARKcdr = 
    trampCall(
          Proc.new { |_pair| 
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 284 );
                  delayCall( '_values',  'values',
                      begin
                        if @global_lisp_binding.has_key?('_values') then
                          trampCall(@_values)
                        else raise NameError.new( "Error: undefined variable values", "values" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:284"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 284 );
                            _car(
                                begin
                                    trampCall(_pair)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:284"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end                      ,
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 284 );
                            _cdr(
                                begin
                                    trampCall(_pair)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:284"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._take_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_take', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_take'] = self.method( :_take_METHOD )
    @_take = 
    trampCall(
          Proc.new { |_lis,_k| 
              begin #makeLetrec
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lis,_k| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 291 );
                                trampCall( self._zero_QUMARK_METHOD(  'zero?',
                                    begin
                                      if @global_lisp_binding.has_key?('_zero_QUMARK') then
                                        trampCall(@_zero_QUMARK)
                                      else raise NameError.new( "Error: undefined variable zero?", "zero?" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:291"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_k)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:291"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                           ) then
                            Cell.new()
                          else
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 292 );
                                  delayCall( '_cons',  'cons',
                                      begin
                                        if @global_lisp_binding.has_key?('_cons') then
                                          trampCall(@_cons)
                                        else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:292"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 292 );
                                            _car(
                                                begin
                                                    trampCall(_lis)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:292"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 293 );
                                            trampCall( callProcedure(  '_recur',  'recur',
                                                begin
                                                    trampCall(_recur)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:293"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 293 );
                                                      _cdr(
                                                          begin
                                                              trampCall(_lis)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:293"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 293 );
                                                      ( 
                                                        begin
                                                            trampCall(_k)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:293"] + __e.backtrace ) ; raise __e
                                                        end                                                      -
                                                      1
                                                       ) 
                                                  end
                                            ]
                                                         ))
                                        end
                                  ]
                                               )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 290 );
                        delayCall( '_recur',  'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:290"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:290"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                  trampCall(_k)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:290"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._drop_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_drop', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_drop'] = self.method( :_drop_METHOD )
    @_drop = 
    trampCall(
          Proc.new { |_lis,_k| 
              begin #makeLetrec
                ___lambda = lambda { |_iter| 
                    _iter                     = 
                      Proc.new { |_lis,_k| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 298 );
                                trampCall( self._zero_QUMARK_METHOD(  'zero?',
                                    begin
                                      if @global_lisp_binding.has_key?('_zero_QUMARK') then
                                        trampCall(@_zero_QUMARK)
                                      else raise NameError.new( "Error: undefined variable zero?", "zero?" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:298"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_k)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:298"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                           ) then
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:298"] + __e.backtrace ) ; raise __e
                              end
                          else
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 298 );
                                  delayCall( '_iter',  'iter',
                                      begin
                                          trampCall(_iter)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:298"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 298 );
                                            _cdr(
                                                begin
                                                    trampCall(_lis)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:298"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 298 );
                                            ( 
                                              begin
                                                  trampCall(_k)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:298"] + __e.backtrace ) ; raise __e
                                              end                                            -
                                            1
                                             ) 
                                        end
                                  ]
                                               )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 297 );
                        delayCall( '_iter',  'iter',
                            begin
                                trampCall(_iter)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:297"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:297"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                  trampCall(_k)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:297"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._take_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_take_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_take_EXMARK'] = self.method( :_take_EXMARK_METHOD )
    @_take_EXMARK = 
    trampCall(
          Proc.new { |_lis,_k| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 302 );
                    trampCall( self._zero_QUMARK_METHOD(  'zero?',
                        begin
                          if @global_lisp_binding.has_key?('_zero_QUMARK') then
                            trampCall(@_zero_QUMARK)
                          else raise NameError.new( "Error: undefined variable zero?", "zero?" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:302"] + __e.backtrace ) ; raise __e
                        end                      ,
                    [
                          begin
                              trampCall(_k)
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:302"] + __e.backtrace ) ; raise __e
                          end
                    ]
                                 ))
                end
               ) then
                Cell.new()
              else
                  begin  #makeBegin
                      begin
                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 303 );
                          _set_MIMARKcdr_EXMARK(
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 303 );
                                  trampCall( self._drop_METHOD(  'drop',
                                      begin
                                        if @global_lisp_binding.has_key?('_drop') then
                                          trampCall(@_drop)
                                        else raise NameError.new( "Error: undefined variable drop", "drop" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:303"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:303"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 303 );
                                            ( 
                                              begin
                                                  trampCall(_k)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:303"] + __e.backtrace ) ; raise __e
                                              end                                            -
                                            1
                                             ) 
                                        end
                                  ]
                                               ))
                              end                            ,
                            Cell.new()
                          )
                      end
                      begin
                          trampCall(_lis)
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:304"] + __e.backtrace ) ; raise __e
                      end
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._take_MIMARKright_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_take_MIMARKright', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_take_MIMARKright'] = self.method( :_take_MIMARKright_METHOD )
    @_take_MIMARKright = 
    trampCall(
          Proc.new { |_lis,_k| 
              begin #makeLetrec
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_lag,_lead| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 313 );
                                _pair_QUMARK(
                                    begin
                                        trampCall(_lead)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:313"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                           ) then
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 314 );
                                  delayCall( '_lp',  'lp',
                                      begin
                                          trampCall(_lp)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:314"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 314 );
                                            _cdr(
                                                begin
                                                    trampCall(_lag)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:314"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 314 );
                                            _cdr(
                                                begin
                                                    trampCall(_lead)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:314"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                  ]
                                               )
                              end
                          else
                              begin
                                  trampCall(_lag)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:315"] + __e.backtrace ) ; raise __e
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 312 );
                        delayCall( '_lp',  'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:312"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:312"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 312 );
                                  trampCall( self._drop_METHOD(  'drop',
                                      begin
                                        if @global_lisp_binding.has_key?('_drop') then
                                          trampCall(@_drop)
                                        else raise NameError.new( "Error: undefined variable drop", "drop" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:312"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:312"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_k)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:312"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               ))
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._drop_MIMARKright_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_drop_MIMARKright', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_drop_MIMARKright'] = self.method( :_drop_MIMARKright_METHOD )
    @_drop_MIMARKright = 
    trampCall(
          Proc.new { |_lis,_k| 
              begin #makeLetrec
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lag,_lead| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 320 );
                                _pair_QUMARK(
                                    begin
                                        trampCall(_lead)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:320"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                           ) then
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 321 );
                                  delayCall( '_cons',  'cons',
                                      begin
                                        if @global_lisp_binding.has_key?('_cons') then
                                          trampCall(@_cons)
                                        else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:321"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 321 );
                                            _car(
                                                begin
                                                    trampCall(_lag)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:321"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 321 );
                                            trampCall( callProcedure(  '_recur',  'recur',
                                                begin
                                                    trampCall(_recur)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:321"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 321 );
                                                      _cdr(
                                                          begin
                                                              trampCall(_lag)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:321"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 321 );
                                                      _cdr(
                                                          begin
                                                              trampCall(_lead)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:321"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                            ]
                                                         ))
                                        end
                                  ]
                                               )
                              end
                          else
                            Cell.new()
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 319 );
                        delayCall( '_recur',  'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:319"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:319"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 319 );
                                  trampCall( self._drop_METHOD(  'drop',
                                      begin
                                        if @global_lisp_binding.has_key?('_drop') then
                                          trampCall(@_drop)
                                        else raise NameError.new( "Error: undefined variable drop", "drop" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:319"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:319"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_k)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:319"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               ))
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._drop_MIMARKright_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_drop_MIMARKright_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_drop_MIMARKright_EXMARK'] = self.method( :_drop_MIMARKright_EXMARK_METHOD )
    @_drop_MIMARKright_EXMARK = 
    trampCall(
          Proc.new { |_lis,_k| 
              begin #makeLet
                ___lambda = lambda { |_lead| 
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 329 );
                          _pair_QUMARK(
                              begin
                                  trampCall(_lead)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:329"] + __e.backtrace ) ; raise __e
                              end
                          )
                      end
                     ) then
                        begin #makeLetrec
                          ___lambda = lambda { |_lp| 
                              _lp                               = 
                                Proc.new { |_lag,_lead| 
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 332 );
                                          _pair_QUMARK(
                                              begin
                                                  trampCall(_lead)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:332"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                     ) then
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 333 );
                                            delayCall( '_lp',  'lp',
                                                begin
                                                    trampCall(_lp)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:333"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 333 );
                                                      _cdr(
                                                          begin
                                                              trampCall(_lag)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:333"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 333 );
                                                      _cdr(
                                                          begin
                                                              trampCall(_lead)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:333"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                            ]
                                                         )
                                        end
                                    else
                                        begin  #makeBegin
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 334 );
                                                _set_MIMARKcdr_EXMARK(
                                                    begin
                                                        trampCall(_lag)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:334"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                  Cell.new()
                                                )
                                            end
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:335"] + __e.backtrace ) ; raise __e
                                            end
                                        end
                                    end
                                }
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 331 );
                                  delayCall( '_lp',  'lp',
                                      begin
                                          trampCall(_lp)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:331"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:331"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 331 );
                                            _cdr(
                                                begin
                                                    trampCall(_lead)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:331"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                  ]
                                               )
                              end
                          } ; ___lambda.call(
                          nil
                                     )
                        end
                    else
                      Cell.new()
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 328 );
                          trampCall( self._drop_METHOD(  'drop',
                              begin
                                if @global_lisp_binding.has_key?('_drop') then
                                  trampCall(@_drop)
                                else raise NameError.new( "Error: undefined variable drop", "drop" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:328"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                begin
                                    trampCall(_lis)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:328"] + __e.backtrace ) ; raise __e
                                end                              ,
                                begin
                                    trampCall(_k)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:328"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       ))
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._split_MIMARKat_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_split_MIMARKat', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_split_MIMARKat'] = self.method( :_split_MIMARKat_METHOD )
    @_split_MIMARKat = 
    trampCall(
          Proc.new { |_x,_k| 
              begin #makeLetrec
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lis,_k| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 386 );
                                trampCall( self._zero_QUMARK_METHOD(  'zero?',
                                    begin
                                      if @global_lisp_binding.has_key?('_zero_QUMARK') then
                                        trampCall(@_zero_QUMARK)
                                      else raise NameError.new( "Error: undefined variable zero?", "zero?" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:386"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_k)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:386"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                           ) then
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 386 );
                                  delayCall( '_values',  'values',
                                      begin
                                        if @global_lisp_binding.has_key?('_values') then
                                          trampCall(@_values)
                                        else raise NameError.new( "Error: undefined variable values", "values" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:386"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                      Cell.new()                                      ,
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:386"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               )
                              end
                          else
                              begin
                                embedBacktraceInfo( "", 1 );
                                  delayCall( '_call_MIMARKwith_MIMARKvalues',  'call-with-values',
                                      begin
                                        if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                          trampCall(@_call_MIMARKwith_MIMARKvalues)
                                        else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        Proc.new { || 
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 387 );
                                                trampCall( callProcedure(  '_recur',  'recur',
                                                    begin
                                                        trampCall(_recur)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:387"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 387 );
                                                          _cdr(
                                                              begin
                                                                  trampCall(_lis)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:387"] + __e.backtrace ) ; raise __e
                                                              end
                                                          )
                                                      end                                                    ,
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 387 );
                                                          ( 
                                                            begin
                                                                trampCall(_k)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:387"] + __e.backtrace ) ; raise __e
                                                            end                                                          -
                                                          1
                                                           ) 
                                                      end
                                                ]
                                                             ))
                                            end
                                        }                                      ,
                                        Proc.new { |_prefix,_suffix| 
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 388 );
                                                trampCall( self._values_METHOD(  'values',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_values') then
                                                        trampCall(@_values)
                                                      else raise NameError.new( "Error: undefined variable values", "values" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:388"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 388 );
                                                          _cons(
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 388 );
                                                                  _car(
                                                                      begin
                                                                          trampCall(_lis)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:388"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                  )
                                                              end                                                            ,
                                                              begin
                                                                  trampCall(_prefix)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:388"] + __e.backtrace ) ; raise __e
                                                              end
                                                          )
                                                      end                                                    ,
                                                      begin
                                                          trampCall(_suffix)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:388"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end
                                        }
                                  ]
                                               )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 385 );
                        delayCall( '_recur',  'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:385"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_x)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:385"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                  trampCall(_k)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:385"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._split_MIMARKat_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_split_MIMARKat_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_split_MIMARKat_EXMARK'] = self.method( :_split_MIMARKat_EXMARK_METHOD )
    @_split_MIMARKat_EXMARK = 
    trampCall(
          Proc.new { |_x,_k| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 392 );
                    trampCall( self._zero_QUMARK_METHOD(  'zero?',
                        begin
                          if @global_lisp_binding.has_key?('_zero_QUMARK') then
                            trampCall(@_zero_QUMARK)
                          else raise NameError.new( "Error: undefined variable zero?", "zero?" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:392"] + __e.backtrace ) ; raise __e
                        end                      ,
                    [
                          begin
                              trampCall(_k)
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:392"] + __e.backtrace ) ; raise __e
                          end
                    ]
                                 ))
                end
               ) then
                  begin
                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 392 );
                      delayCall( '_values',  'values',
                          begin
                            if @global_lisp_binding.has_key?('_values') then
                              trampCall(@_values)
                            else raise NameError.new( "Error: undefined variable values", "values" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:392"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                          Cell.new()                          ,
                            begin
                                trampCall(_x)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:392"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   )
                  end
              else
                  begin #makeLet
                    ___lambda = lambda { |_prev| 
                        begin #makeLet
                          ___lambda = lambda { |_suffix| 
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 395 );
                                  _set_MIMARKcdr_EXMARK(
                                      begin
                                          trampCall(_prev)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:395"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                    Cell.new()
                                  )
                              end
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 396 );
                                  delayCall( '_values',  'values',
                                      begin
                                        if @global_lisp_binding.has_key?('_values') then
                                          trampCall(@_values)
                                        else raise NameError.new( "Error: undefined variable values", "values" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:396"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_x)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:396"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_suffix)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:396"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               )
                              end
                          } ; ___lambda.call(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 394 );
                                    _cdr(
                                        begin
                                            trampCall(_prev)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:394"] + __e.backtrace ) ; raise __e
                                        end
                                    )
                                end
                                     )
                        end
                    } ; ___lambda.call(
                          begin
                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 393 );
                              trampCall( self._drop_METHOD(  'drop',
                                  begin
                                    if @global_lisp_binding.has_key?('_drop') then
                                      trampCall(@_drop)
                                    else raise NameError.new( "Error: undefined variable drop", "drop" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:393"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_x)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:393"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 393 );
                                        ( 
                                          begin
                                              trampCall(_k)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:393"] + __e.backtrace ) ; raise __e
                                          end                                        -
                                        1
                                         ) 
                                    end
                              ]
                                           ))
                          end
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._last_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_last', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_last'] = self.method( :_last_METHOD )
    @_last = 
    trampCall(
          Proc.new { |_lis| 
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 399 );
                  delayCall( '_car',  'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          trampCall(@_car)
                        else raise NameError.new( "Error: undefined variable car", "car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:399"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 399 );
                            trampCall( self._last_MIMARKpair_METHOD(  'last-pair',
                                begin
                                  if @global_lisp_binding.has_key?('_last_MIMARKpair') then
                                    trampCall(@_last_MIMARKpair)
                                  else raise NameError.new( "Error: undefined variable last-pair", "last-pair" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:399"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_lis)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:399"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         ))
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._last_MIMARKpair_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_last_MIMARKpair', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_last_MIMARKpair'] = self.method( :_last_MIMARKpair_METHOD )
    @_last_MIMARKpair = 
    trampCall(
          Proc.new { |_lis| 
              begin #makeLetrec
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_lis| 
                          begin #makeLet
                            ___lambda = lambda { |_tail| 
                                if ( 
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 405 );
                                      _pair_QUMARK(
                                          begin
                                              trampCall(_tail)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                                 ) then
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 405 );
                                        delayCall( '_lp',  'lp',
                                            begin
                                                trampCall(_lp)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_tail)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     )
                                    end
                                else
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                    end
                                end
                            } ; ___lambda.call(
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 404 );
                                      _cdr(
                                          begin
                                              trampCall(_lis)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:404"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                                       )
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 403 );
                        delayCall( '_lp',  'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:403"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:403"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._unzip1_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_unzip1', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_unzip1'] = self.method( :_unzip1_METHOD )
    @_unzip1 = 
    trampCall(
          Proc.new { |_lis| 
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 411 );
                  delayCall( '_map',  'map',
                      begin
                        if @global_lisp_binding.has_key?('_map') then
                          trampCall(@_map)
                        else raise NameError.new( "Error: undefined variable map", "map" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:411"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          if @global_lisp_binding.has_key?('_car') then
                            trampCall(@_car)
                          else raise NameError.new( "Error: undefined variable car", "car" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:411"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_lis)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:411"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._unzip2_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_unzip2', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_unzip2'] = self.method( :_unzip2_METHOD )
    @_unzip2 = 
    trampCall(
          Proc.new { |_lis| 
              begin #makeLetrec
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lis| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 415 );
                                trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                        trampCall(@_null_MIMARKlist_QUMARK)
                                      else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:415"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:415"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                           ) then
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 415 );
                                  delayCall( '_values',  'values',
                                      begin
                                        if @global_lisp_binding.has_key?('_values') then
                                          trampCall(@_values)
                                        else raise NameError.new( "Error: undefined variable values", "values" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:415"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:415"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:415"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               )
                              end
                          else
                              begin #makeLet
                                ___lambda = lambda { |_elt| 
                                    begin
                                      embedBacktraceInfo( "", 1 );
                                        delayCall( '_call_MIMARKwith_MIMARKvalues',  'call-with-values',
                                            begin
                                              if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                trampCall(@_call_MIMARKwith_MIMARKvalues)
                                              else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              Proc.new { || 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 417 );
                                                      trampCall( callProcedure(  '_recur',  'recur',
                                                          begin
                                                              trampCall(_recur)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:417"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 417 );
                                                                _cdr(
                                                                    begin
                                                                        trampCall(_lis)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:417"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                              }                                            ,
                                              Proc.new { |_a,_b| 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 418 );
                                                      trampCall( self._values_METHOD(  'values',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_values') then
                                                              trampCall(@_values)
                                                            else raise NameError.new( "Error: undefined variable values", "values" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:418"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 418 );
                                                                _cons(
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 418 );
                                                                        _car(
                                                                            begin
                                                                                trampCall(_elt)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:418"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                        )
                                                                    end                                                                  ,
                                                                    begin
                                                                        trampCall(_a)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:418"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 419 );
                                                                _cons(
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 419 );
                                                                        trampCall( self._cadr_METHOD(  'cadr',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_cadr') then
                                                                                trampCall(@_cadr)
                                                                              else raise NameError.new( "Error: undefined variable cadr", "cadr" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:419"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                  trampCall(_elt)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:419"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end                                                                  ,
                                                                    begin
                                                                        trampCall(_b)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:419"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                              }
                                        ]
                                                     )
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 416 );
                                          _car(
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:416"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                           )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 414 );
                        delayCall( '_recur',  'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:414"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:414"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._unzip3_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_unzip3', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_unzip3'] = self.method( :_unzip3_METHOD )
    @_unzip3 = 
    trampCall(
          Proc.new { |_lis| 
              begin #makeLetrec
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lis| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 423 );
                                trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                        trampCall(@_null_MIMARKlist_QUMARK)
                                      else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:423"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:423"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                           ) then
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 423 );
                                  delayCall( '_values',  'values',
                                      begin
                                        if @global_lisp_binding.has_key?('_values') then
                                          trampCall(@_values)
                                        else raise NameError.new( "Error: undefined variable values", "values" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:423"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:423"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:423"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:423"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               )
                              end
                          else
                              begin #makeLet
                                ___lambda = lambda { |_elt| 
                                    begin
                                      embedBacktraceInfo( "", 1 );
                                        delayCall( '_call_MIMARKwith_MIMARKvalues',  'call-with-values',
                                            begin
                                              if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                trampCall(@_call_MIMARKwith_MIMARKvalues)
                                              else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              Proc.new { || 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 425 );
                                                      trampCall( callProcedure(  '_recur',  'recur',
                                                          begin
                                                              trampCall(_recur)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:425"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 425 );
                                                                _cdr(
                                                                    begin
                                                                        trampCall(_lis)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:425"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                              }                                            ,
                                              Proc.new { |_a,_b,_c| 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 426 );
                                                      trampCall( self._values_METHOD(  'values',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_values') then
                                                              trampCall(@_values)
                                                            else raise NameError.new( "Error: undefined variable values", "values" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:426"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 426 );
                                                                _cons(
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 426 );
                                                                        _car(
                                                                            begin
                                                                                trampCall(_elt)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:426"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                        )
                                                                    end                                                                  ,
                                                                    begin
                                                                        trampCall(_a)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:426"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 427 );
                                                                _cons(
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 427 );
                                                                        trampCall( self._cadr_METHOD(  'cadr',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_cadr') then
                                                                                trampCall(@_cadr)
                                                                              else raise NameError.new( "Error: undefined variable cadr", "cadr" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:427"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                  trampCall(_elt)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:427"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end                                                                  ,
                                                                    begin
                                                                        trampCall(_b)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:427"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 428 );
                                                                _cons(
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 428 );
                                                                        trampCall( self._caddr_METHOD(  'caddr',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_caddr') then
                                                                                trampCall(@_caddr)
                                                                              else raise NameError.new( "Error: undefined variable caddr", "caddr" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:428"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                  trampCall(_elt)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:428"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end                                                                  ,
                                                                    begin
                                                                        trampCall(_c)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:428"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                              }
                                        ]
                                                     )
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 424 );
                                          _car(
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:424"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                           )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 422 );
                        delayCall( '_recur',  'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:422"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:422"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._unzip4_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_unzip4', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_unzip4'] = self.method( :_unzip4_METHOD )
    @_unzip4 = 
    trampCall(
          Proc.new { |_lis| 
              begin #makeLetrec
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lis| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 432 );
                                trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                        trampCall(@_null_MIMARKlist_QUMARK)
                                      else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:432"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:432"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                           ) then
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 432 );
                                  delayCall( '_values',  'values',
                                      begin
                                        if @global_lisp_binding.has_key?('_values') then
                                          trampCall(@_values)
                                        else raise NameError.new( "Error: undefined variable values", "values" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:432"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:432"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:432"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:432"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:432"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               )
                              end
                          else
                              begin #makeLet
                                ___lambda = lambda { |_elt| 
                                    begin
                                      embedBacktraceInfo( "", 1 );
                                        delayCall( '_call_MIMARKwith_MIMARKvalues',  'call-with-values',
                                            begin
                                              if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                trampCall(@_call_MIMARKwith_MIMARKvalues)
                                              else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              Proc.new { || 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 434 );
                                                      trampCall( callProcedure(  '_recur',  'recur',
                                                          begin
                                                              trampCall(_recur)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:434"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 434 );
                                                                _cdr(
                                                                    begin
                                                                        trampCall(_lis)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:434"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                              }                                            ,
                                              Proc.new { |_a,_b,_c,_d| 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 435 );
                                                      trampCall( self._values_METHOD(  'values',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_values') then
                                                              trampCall(@_values)
                                                            else raise NameError.new( "Error: undefined variable values", "values" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:435"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 435 );
                                                                _cons(
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 435 );
                                                                        _car(
                                                                            begin
                                                                                trampCall(_elt)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:435"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                        )
                                                                    end                                                                  ,
                                                                    begin
                                                                        trampCall(_a)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:435"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 436 );
                                                                _cons(
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 436 );
                                                                        trampCall( self._cadr_METHOD(  'cadr',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_cadr') then
                                                                                trampCall(@_cadr)
                                                                              else raise NameError.new( "Error: undefined variable cadr", "cadr" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:436"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                  trampCall(_elt)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:436"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end                                                                  ,
                                                                    begin
                                                                        trampCall(_b)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:436"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 437 );
                                                                _cons(
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 437 );
                                                                        trampCall( self._caddr_METHOD(  'caddr',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_caddr') then
                                                                                trampCall(@_caddr)
                                                                              else raise NameError.new( "Error: undefined variable caddr", "caddr" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:437"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                  trampCall(_elt)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:437"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end                                                                  ,
                                                                    begin
                                                                        trampCall(_c)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:437"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 438 );
                                                                _cons(
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 438 );
                                                                        trampCall( self._cadddr_METHOD(  'cadddr',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_cadddr') then
                                                                                trampCall(@_cadddr)
                                                                              else raise NameError.new( "Error: undefined variable cadddr", "cadddr" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:438"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                  trampCall(_elt)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:438"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end                                                                  ,
                                                                    begin
                                                                        trampCall(_d)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:438"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                              }
                                        ]
                                                     )
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 433 );
                                          _car(
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:433"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                           )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 431 );
                        delayCall( '_recur',  'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:431"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:431"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._unzip5_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_unzip5', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_unzip5'] = self.method( :_unzip5_METHOD )
    @_unzip5 = 
    trampCall(
          Proc.new { |_lis| 
              begin #makeLetrec
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lis| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 442 );
                                trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                        trampCall(@_null_MIMARKlist_QUMARK)
                                      else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:442"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:442"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                           ) then
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 442 );
                                  delayCall( '_values',  'values',
                                      begin
                                        if @global_lisp_binding.has_key?('_values') then
                                          trampCall(@_values)
                                        else raise NameError.new( "Error: undefined variable values", "values" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:442"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:442"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:442"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:442"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:442"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:442"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               )
                              end
                          else
                              begin #makeLet
                                ___lambda = lambda { |_elt| 
                                    begin
                                      embedBacktraceInfo( "", 1 );
                                        delayCall( '_call_MIMARKwith_MIMARKvalues',  'call-with-values',
                                            begin
                                              if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                trampCall(@_call_MIMARKwith_MIMARKvalues)
                                              else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              Proc.new { || 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 444 );
                                                      trampCall( callProcedure(  '_recur',  'recur',
                                                          begin
                                                              trampCall(_recur)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:444"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 444 );
                                                                _cdr(
                                                                    begin
                                                                        trampCall(_lis)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:444"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                              }                                            ,
                                              Proc.new { |_a,_b,_c,_d,_e| 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 445 );
                                                      trampCall( self._values_METHOD(  'values',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_values') then
                                                              trampCall(@_values)
                                                            else raise NameError.new( "Error: undefined variable values", "values" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:445"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 445 );
                                                                _cons(
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 445 );
                                                                        _car(
                                                                            begin
                                                                                trampCall(_elt)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:445"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                        )
                                                                    end                                                                  ,
                                                                    begin
                                                                        trampCall(_a)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:445"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 446 );
                                                                _cons(
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 446 );
                                                                        trampCall( self._cadr_METHOD(  'cadr',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_cadr') then
                                                                                trampCall(@_cadr)
                                                                              else raise NameError.new( "Error: undefined variable cadr", "cadr" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:446"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                  trampCall(_elt)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:446"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end                                                                  ,
                                                                    begin
                                                                        trampCall(_b)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:446"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 447 );
                                                                _cons(
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 447 );
                                                                        trampCall( self._caddr_METHOD(  'caddr',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_caddr') then
                                                                                trampCall(@_caddr)
                                                                              else raise NameError.new( "Error: undefined variable caddr", "caddr" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:447"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                  trampCall(_elt)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:447"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end                                                                  ,
                                                                    begin
                                                                        trampCall(_c)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:447"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 448 );
                                                                _cons(
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 448 );
                                                                        trampCall( self._cadddr_METHOD(  'cadddr',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_cadddr') then
                                                                                trampCall(@_cadddr)
                                                                              else raise NameError.new( "Error: undefined variable cadddr", "cadddr" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:448"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                  trampCall(_elt)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:448"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end                                                                  ,
                                                                    begin
                                                                        trampCall(_d)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:448"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 449 );
                                                                _cons(
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 449 );
                                                                        _car(
                                                                            begin
                                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 449 );
                                                                                trampCall( self._cddddr_METHOD(  'cddddr',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_cddddr') then
                                                                                        trampCall(@_cddddr)
                                                                                      else raise NameError.new( "Error: undefined variable cddddr", "cddddr" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:449"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                [
                                                                                      begin
                                                                                          trampCall(_elt)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:449"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                ]
                                                                                             ))
                                                                            end
                                                                        )
                                                                    end                                                                  ,
                                                                    begin
                                                                        trampCall(_e)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:449"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                              }
                                        ]
                                                     )
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 443 );
                                          _car(
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:443"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                           )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 441 );
                        delayCall( '_recur',  'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:441"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:441"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._append_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_append_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_append_EXMARK'] = self.method( :_append_EXMARK_METHOD )
    @_append_EXMARK = 
    trampCall(
          Proc.new { |*__rest__| _lists = __rest__[0] ;  
              begin #makeLetrec
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_lists,_prev| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 458 );
                                _not(
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 458 );
                                        _pair_QUMARK(
                                            begin
                                                trampCall(_lists)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:458"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    end
                                )
                            end
                           ) then
                              begin
                                  trampCall(_prev)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:458"] + __e.backtrace ) ; raise __e
                              end
                          else
                              begin #makeLet
                                ___lambda = lambda { |_first,_rest| 
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 461 );
                                          _not(
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 461 );
                                                  _pair_QUMARK(
                                                      begin
                                                          trampCall(_first)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:461"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end
                                          )
                                      end
                                     ) then
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 461 );
                                            delayCall( '_lp',  'lp',
                                                begin
                                                    trampCall(_lp)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:461"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_rest)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:461"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  begin
                                                      trampCall(_first)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:461"] + __e.backtrace ) ; raise __e
                                                  end
                                            ]
                                                         )
                                        end
                                    else
                                        begin #makeLetrec
                                          ___lambda = lambda { |_lp2| 
                                              _lp2                                               = 
                                                Proc.new { |_tail_MIMARKcons,_rest| 
                                                    if ( 
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 466 );
                                                          _pair_QUMARK(
                                                              begin
                                                                  trampCall(_rest)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:466"] + __e.backtrace ) ; raise __e
                                                              end
                                                          )
                                                      end
                                                     ) then
                                                        begin #makeLet
                                                          ___lambda = lambda { |_next,_rest| 
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 469 );
                                                                  _set_MIMARKcdr_EXMARK(
                                                                      begin
                                                                          trampCall(_tail_MIMARKcons)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:469"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      begin
                                                                          trampCall(_next)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:469"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                  )
                                                              end
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 470 );
                                                                  delayCall( '_lp2',  'lp2',
                                                                      begin
                                                                          trampCall(_lp2)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:470"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                  [
                                                                        if ( 
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 470 );
                                                                              _pair_QUMARK(
                                                                                  begin
                                                                                      trampCall(_next)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:470"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                              )
                                                                          end
                                                                         ) then
                                                                            begin
                                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 470 );
                                                                                trampCall( self._last_MIMARKpair_METHOD(  'last-pair',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_last_MIMARKpair') then
                                                                                        trampCall(@_last_MIMARKpair)
                                                                                      else raise NameError.new( "Error: undefined variable last-pair", "last-pair" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:470"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                [
                                                                                      begin
                                                                                          trampCall(_next)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:470"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                ]
                                                                                             ))
                                                                            end
                                                                        else
                                                                            begin
                                                                                trampCall(_tail_MIMARKcons)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:470"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                        end                                                                      ,
                                                                        begin
                                                                            trampCall(_rest)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:471"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                  ]
                                                                               )
                                                              end
                                                          } ; ___lambda.call(
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 467 );
                                                                    _car(
                                                                        begin
                                                                            trampCall(_rest)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:467"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    )
                                                                end                                                              ,
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 468 );
                                                                    _cdr(
                                                                        begin
                                                                            trampCall(_rest)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:468"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    )
                                                                end
                                                                     )
                                                        end
                                                    else
                                                        begin
                                                            trampCall(_first)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:472"] + __e.backtrace ) ; raise __e
                                                        end
                                                    end
                                                }
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 464 );
                                                  delayCall( '_lp2',  'lp2',
                                                      begin
                                                          trampCall(_lp2)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:464"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 464 );
                                                            trampCall( self._last_MIMARKpair_METHOD(  'last-pair',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_last_MIMARKpair') then
                                                                    trampCall(@_last_MIMARKpair)
                                                                  else raise NameError.new( "Error: undefined variable last-pair", "last-pair" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:464"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  begin
                                                                      trampCall(_first)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:464"] + __e.backtrace ) ; raise __e
                                                                  end
                                                            ]
                                                                         ))
                                                        end                                                      ,
                                                        begin
                                                            trampCall(_rest)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:465"] + __e.backtrace ) ; raise __e
                                                        end
                                                  ]
                                                               )
                                              end
                                          } ; ___lambda.call(
                                          nil
                                                     )
                                        end
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 459 );
                                          _car(
                                              begin
                                                  trampCall(_lists)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:459"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end                                    ,
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 460 );
                                          _cdr(
                                              begin
                                                  trampCall(_lists)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:460"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                           )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 457 );
                        delayCall( '_lp',  'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:457"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lists)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:457"] + __e.backtrace ) ; raise __e
                              end                            ,
                            Cell.new()
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._append_MIMARKreverse_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_append_MIMARKreverse', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_append_MIMARKreverse'] = self.method( :_append_MIMARKreverse_METHOD )
    @_append_MIMARKreverse = 
    trampCall(
          Proc.new { |_rev_MIMARKhead,_tail| 
              begin #makeLetrec
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_rev_MIMARKhead,_tail| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 495 );
                                trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                        trampCall(@_null_MIMARKlist_QUMARK)
                                      else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:495"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_rev_MIMARKhead)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:495"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                           ) then
                              begin
                                  trampCall(_tail)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:495"] + __e.backtrace ) ; raise __e
                              end
                          else
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 496 );
                                  delayCall( '_lp',  'lp',
                                      begin
                                          trampCall(_lp)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:496"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 496 );
                                            _cdr(
                                                begin
                                                    trampCall(_rev_MIMARKhead)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:496"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 496 );
                                            _cons(
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 496 );
                                                    _car(
                                                        begin
                                                            trampCall(_rev_MIMARKhead)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:496"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end                                              ,
                                                begin
                                                    trampCall(_tail)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:496"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                  ]
                                               )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 494 );
                        delayCall( '_lp',  'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:494"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_rev_MIMARKhead)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:494"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                  trampCall(_tail)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:494"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._append_MIMARKreverse_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_append_MIMARKreverse_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_append_MIMARKreverse_EXMARK'] = self.method( :_append_MIMARKreverse_EXMARK_METHOD )
    @_append_MIMARKreverse_EXMARK = 
    trampCall(
          Proc.new { |_rev_MIMARKhead,_tail| 
              begin #makeLetrec
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_rev_MIMARKhead,_tail| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 500 );
                                trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                        trampCall(@_null_MIMARKlist_QUMARK)
                                      else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:500"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_rev_MIMARKhead)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:500"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                           ) then
                              begin
                                  trampCall(_tail)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:500"] + __e.backtrace ) ; raise __e
                              end
                          else
                              begin #makeLet
                                ___lambda = lambda { |_next_MIMARKrev| 
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 502 );
                                        _set_MIMARKcdr_EXMARK(
                                            begin
                                                trampCall(_rev_MIMARKhead)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:502"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            begin
                                                trampCall(_tail)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:502"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    end
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 503 );
                                        delayCall( '_lp',  'lp',
                                            begin
                                                trampCall(_lp)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:503"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_next_MIMARKrev)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:503"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              begin
                                                  trampCall(_rev_MIMARKhead)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:503"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     )
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 501 );
                                          _cdr(
                                              begin
                                                  trampCall(_rev_MIMARKhead)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:501"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                           )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 499 );
                        delayCall( '_lp',  'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:499"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_rev_MIMARKhead)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:499"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                  trampCall(_tail)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:499"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._concatenate_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_concatenate', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_concatenate'] = self.method( :_concatenate_METHOD )
    @_concatenate = 
    trampCall(
          Proc.new { |_lists| 
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 506 );
                  delayCall( '_reduce_MIMARKright',  'reduce-right',
                      begin
                        if @global_lisp_binding.has_key?('_reduce_MIMARKright') then
                          trampCall(@_reduce_MIMARKright)
                        else raise NameError.new( "Error: undefined variable reduce-right", "reduce-right" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:506"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          if @global_lisp_binding.has_key?('_append') then
                            trampCall(@_append)
                          else raise NameError.new( "Error: undefined variable append", "append" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:506"] + __e.backtrace ) ; raise __e
                        end                      ,
                      Cell.new()                      ,
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:506"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._concatenate_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_concatenate_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_concatenate_EXMARK'] = self.method( :_concatenate_EXMARK_METHOD )
    @_concatenate_EXMARK = 
    trampCall(
          Proc.new { |_lists| 
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 507 );
                  delayCall( '_reduce_MIMARKright',  'reduce-right',
                      begin
                        if @global_lisp_binding.has_key?('_reduce_MIMARKright') then
                          trampCall(@_reduce_MIMARKright)
                        else raise NameError.new( "Error: undefined variable reduce-right", "reduce-right" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:507"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          if @global_lisp_binding.has_key?('_append_EXMARK') then
                            trampCall(@_append_EXMARK)
                          else raise NameError.new( "Error: undefined variable append!", "append!" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:507"] + __e.backtrace ) ; raise __e
                        end                      ,
                      Cell.new()                      ,
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:507"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARKcdrs_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKcdrs', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKcdrs'] = self.method( :__PAMARKcdrs_METHOD )
    @__PAMARKcdrs = 
    trampCall(
          Proc.new { |_lists| 
              begin #makeLet
                ___lambda = lambda { |_abort| 
                    if ( 
                      begin
                          trampCall(_abort)
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:534"] + __e.backtrace ) ; raise __e
                      end
                     ) then
                      Cell.new()
                    else
                        begin #makeLetrec
                          ___lambda = lambda { |_recur| 
                              _recur                               = 
                                Proc.new { |_lists| 
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 537 );
                                          _pair_QUMARK(
                                              begin
                                                  trampCall(_lists)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:537"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                     ) then
                                        begin #makeLet
                                          ___lambda = lambda { |_lis| 
                                              if ( 
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 539 );
                                                    trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                            trampCall(@_null_MIMARKlist_QUMARK)
                                                          else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:539"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                              trampCall(_lis)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:539"] + __e.backtrace ) ; raise __e
                                                          end
                                                    ]
                                                                 ))
                                                end
                                               ) then
                                                Cell.new()
                                              else
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 541 );
                                                      delayCall( '_cons',  'cons',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cons') then
                                                              trampCall(@_cons)
                                                            else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:541"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 541 );
                                                                _cdr(
                                                                    begin
                                                                        trampCall(_lis)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:541"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 541 );
                                                                trampCall( callProcedure(  '_recur',  'recur',
                                                                    begin
                                                                        trampCall(_recur)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:541"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 541 );
                                                                          _cdr(
                                                                              begin
                                                                                  trampCall(_lists)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:541"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          )
                                                                      end
                                                                ]
                                                                             ))
                                                            end
                                                      ]
                                                                   )
                                                  end
                                              end
                                          } ; ___lambda.call(
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 538 );
                                                    _car(
                                                        begin
                                                            trampCall(_lists)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:538"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end
                                                     )
                                        end
                                    else
                                      Cell.new()
                                    end
                                }
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 536 );
                                  delayCall( '_recur',  'recur',
                                      begin
                                          trampCall(_recur)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:536"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_lists)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:536"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               )
                              end
                          } ; ___lambda.call(
                          nil
                                     )
                        end
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 530 );
                          trampCall( self._find_METHOD(  'find',
                              begin
                                if @global_lisp_binding.has_key?('_find') then
                                  trampCall(@_find)
                                else raise NameError.new( "Error: undefined variable find", "find" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:530"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                Proc.new { |_lis| 
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 532 );
                                        trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                            begin
                                              if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                trampCall(@_null_MIMARKlist_QUMARK)
                                              else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:532"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:532"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     ))
                                    end
                                }                              ,
                                begin
                                    trampCall(_lists)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:533"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       ))
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARKcars_PLMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKcars_PLMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKcars_PLMARK'] = self.method( :__PAMARKcars_PLMARK_METHOD )
    @__PAMARKcars_PLMARK = 
    trampCall(
          Proc.new { |_lists,_last_MIMARKelt| 
              begin #makeLetrec
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lists| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 546 );
                                _pair_QUMARK(
                                    begin
                                        trampCall(_lists)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:546"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                           ) then
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 546 );
                                  delayCall( '_cons',  'cons',
                                      begin
                                        if @global_lisp_binding.has_key?('_cons') then
                                          trampCall(@_cons)
                                        else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:546"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 546 );
                                            trampCall( self._caar_METHOD(  'caar',
                                                begin
                                                  if @global_lisp_binding.has_key?('_caar') then
                                                    trampCall(@_caar)
                                                  else raise NameError.new( "Error: undefined variable caar", "caar" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:546"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_lists)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:546"] + __e.backtrace ) ; raise __e
                                                  end
                                            ]
                                                         ))
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 546 );
                                            trampCall( callProcedure(  '_recur',  'recur',
                                                begin
                                                    trampCall(_recur)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:546"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 546 );
                                                      _cdr(
                                                          begin
                                                              trampCall(_lists)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:546"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                            ]
                                                         ))
                                        end
                                  ]
                                               )
                              end
                          else
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 546 );
                                  delayCall( '_list',  'list',
                                      begin
                                        if @global_lisp_binding.has_key?('_list') then
                                          trampCall(@_list)
                                        else raise NameError.new( "Error: undefined variable list", "list" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:546"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_last_MIMARKelt)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:546"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 545 );
                        delayCall( '_recur',  'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:545"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lists)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:545"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARKcars_PLMARKcdrs_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKcars_PLMARKcdrs', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKcars_PLMARKcdrs'] = self.method( :__PAMARKcars_PLMARKcdrs_METHOD )
    @__PAMARKcars_PLMARKcdrs = 
    trampCall(
          Proc.new { |_lists| 
              begin #makeLet
                ___lambda = lambda { |_abort| 
                    if ( 
                      begin
                          trampCall(_abort)
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:557"] + __e.backtrace ) ; raise __e
                      end
                     ) then
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 558 );
                            delayCall( '_values',  'values',
                                begin
                                  if @global_lisp_binding.has_key?('_values') then
                                    trampCall(@_values)
                                  else raise NameError.new( "Error: undefined variable values", "values" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:558"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                Cell.new()                                ,
                                Cell.new()
                            ]
                                         )
                        end
                    else
                        begin #makeLetrec
                          ___lambda = lambda { |_recur| 
                              _recur                               = 
                                Proc.new { |_lists| 
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 560 );
                                          _pair_QUMARK(
                                              begin
                                                  trampCall(_lists)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:560"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                     ) then
                                        begin
                                          embedBacktraceInfo( "", 1 );
                                            delayCall( '_call_MIMARKwith_MIMARKvalues',  'call-with-values',
                                                begin
                                                  if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                    trampCall(@_call_MIMARKwith_MIMARKvalues)
                                                  else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  Proc.new { || 
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 561 );
                                                          trampCall( self._car_PLMARKcdr_METHOD(  'car+cdr',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_car_PLMARKcdr') then
                                                                  trampCall(@_car_PLMARKcdr)
                                                                else raise NameError.new( "Error: undefined variable car+cdr", "car+cdr" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:561"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                          [
                                                                begin
                                                                    trampCall(_lists)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:561"] + __e.backtrace ) ; raise __e
                                                                end
                                                          ]
                                                                       ))
                                                      end
                                                  }                                                ,
                                                  Proc.new { |_list,_other_MIMARKlists| 
                                                      if ( 
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 562 );
                                                            trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                                    trampCall(@_null_MIMARKlist_QUMARK)
                                                                  else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:562"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  begin
                                                                      trampCall(_list)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:562"] + __e.backtrace ) ; raise __e
                                                                  end
                                                            ]
                                                                         ))
                                                        end
                                                       ) then
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 563 );
                                                              trampCall( self._values_METHOD(  'values',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_values') then
                                                                      trampCall(@_values)
                                                                    else raise NameError.new( "Error: undefined variable values", "values" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:563"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                  Cell.new()                                                                  ,
                                                                  Cell.new()
                                                              ]
                                                                           ))
                                                          end
                                                      else
                                                          begin
                                                            embedBacktraceInfo( "", 1 );
                                                              trampCall( self._call_MIMARKwith_MIMARKvalues_METHOD(  'call-with-values',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                                      trampCall(@_call_MIMARKwith_MIMARKvalues)
                                                                    else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                    Proc.new { || 
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 564 );
                                                                            trampCall( self._car_PLMARKcdr_METHOD(  'car+cdr',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_car_PLMARKcdr') then
                                                                                    trampCall(@_car_PLMARKcdr)
                                                                                  else raise NameError.new( "Error: undefined variable car+cdr", "car+cdr" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:564"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  begin
                                                                                      trampCall(_list)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:564"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                            ]
                                                                                         ))
                                                                        end
                                                                    }                                                                  ,
                                                                    Proc.new { |_a,_d| 
                                                                        begin
                                                                          embedBacktraceInfo( "", 1 );
                                                                            trampCall( self._call_MIMARKwith_MIMARKvalues_METHOD(  'call-with-values',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                                                    trampCall(@_call_MIMARKwith_MIMARKvalues)
                                                                                  else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  Proc.new { || 
                                                                                      begin
                                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 565 );
                                                                                          trampCall( callProcedure(  '_recur',  'recur',
                                                                                              begin
                                                                                                  trampCall(_recur)
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:565"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                          [
                                                                                                begin
                                                                                                    trampCall(_other_MIMARKlists)
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:565"] + __e.backtrace ) ; raise __e
                                                                                                end
                                                                                          ]
                                                                                                       ))
                                                                                      end
                                                                                  }                                                                                ,
                                                                                  Proc.new { |_cars,_cdrs| 
                                                                                      begin
                                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 566 );
                                                                                          trampCall( self._values_METHOD(  'values',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_values') then
                                                                                                  trampCall(@_values)
                                                                                                else raise NameError.new( "Error: undefined variable values", "values" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:566"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                          [
                                                                                                begin
                                                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 566 );
                                                                                                    _cons(
                                                                                                        begin
                                                                                                            trampCall(_a)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:566"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                        begin
                                                                                                            trampCall(_cars)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:566"] + __e.backtrace ) ; raise __e
                                                                                                        end
                                                                                                    )
                                                                                                end                                                                                              ,
                                                                                                begin
                                                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 566 );
                                                                                                    _cons(
                                                                                                        begin
                                                                                                            trampCall(_d)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:566"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                        begin
                                                                                                            trampCall(_cdrs)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:566"] + __e.backtrace ) ; raise __e
                                                                                                        end
                                                                                                    )
                                                                                                end
                                                                                          ]
                                                                                                       ))
                                                                                      end
                                                                                  }
                                                                            ]
                                                                                         ))
                                                                        end
                                                                    }
                                                              ]
                                                                           ))
                                                          end
                                                      end
                                                  }
                                            ]
                                                         )
                                        end
                                    else
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 567 );
                                            delayCall( '_values',  'values',
                                                begin
                                                  if @global_lisp_binding.has_key?('_values') then
                                                    trampCall(@_values)
                                                  else raise NameError.new( "Error: undefined variable values", "values" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:567"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                Cell.new()                                                ,
                                                Cell.new()
                                            ]
                                                         )
                                        end
                                    end
                                }
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 559 );
                                  delayCall( '_recur',  'recur',
                                      begin
                                          trampCall(_recur)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:559"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_lists)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:559"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               )
                              end
                          } ; ___lambda.call(
                          nil
                                     )
                        end
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 553 );
                          trampCall( self._find_METHOD(  'find',
                              begin
                                if @global_lisp_binding.has_key?('_find') then
                                  trampCall(@_find)
                                else raise NameError.new( "Error: undefined variable find", "find" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:553"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                Proc.new { |_lis| 
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 555 );
                                        trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                            begin
                                              if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                trampCall(@_null_MIMARKlist_QUMARK)
                                              else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:555"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:555"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     ))
                                    end
                                }                              ,
                                begin
                                    trampCall(_lists)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:556"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       ))
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARKcars_PLMARKcdrs_PLMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKcars_PLMARKcdrs_PLMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKcars_PLMARKcdrs_PLMARK'] = self.method( :__PAMARKcars_PLMARKcdrs_PLMARK_METHOD )
    @__PAMARKcars_PLMARKcdrs_PLMARK = 
    trampCall(
          Proc.new { |_lists,_cars_MIMARKfinal| 
              begin #makeLet
                ___lambda = lambda { |_abort| 
                    if ( 
                      begin
                          trampCall(_abort)
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:576"] + __e.backtrace ) ; raise __e
                      end
                     ) then
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 577 );
                            delayCall( '_values',  'values',
                                begin
                                  if @global_lisp_binding.has_key?('_values') then
                                    trampCall(@_values)
                                  else raise NameError.new( "Error: undefined variable values", "values" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:577"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                Cell.new()                                ,
                                Cell.new()
                            ]
                                         )
                        end
                    else
                        begin #makeLetrec
                          ___lambda = lambda { |_recur| 
                              _recur                               = 
                                Proc.new { |_lists| 
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 579 );
                                          _pair_QUMARK(
                                              begin
                                                  trampCall(_lists)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:579"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                     ) then
                                        begin
                                          embedBacktraceInfo( "", 1 );
                                            delayCall( '_call_MIMARKwith_MIMARKvalues',  'call-with-values',
                                                begin
                                                  if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                    trampCall(@_call_MIMARKwith_MIMARKvalues)
                                                  else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  Proc.new { || 
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 580 );
                                                          trampCall( self._car_PLMARKcdr_METHOD(  'car+cdr',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_car_PLMARKcdr') then
                                                                  trampCall(@_car_PLMARKcdr)
                                                                else raise NameError.new( "Error: undefined variable car+cdr", "car+cdr" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:580"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                          [
                                                                begin
                                                                    trampCall(_lists)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:580"] + __e.backtrace ) ; raise __e
                                                                end
                                                          ]
                                                                       ))
                                                      end
                                                  }                                                ,
                                                  Proc.new { |_list,_other_MIMARKlists| 
                                                      if ( 
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 581 );
                                                            trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                                    trampCall(@_null_MIMARKlist_QUMARK)
                                                                  else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:581"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  begin
                                                                      trampCall(_list)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:581"] + __e.backtrace ) ; raise __e
                                                                  end
                                                            ]
                                                                         ))
                                                        end
                                                       ) then
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 582 );
                                                              trampCall( self._values_METHOD(  'values',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_values') then
                                                                      trampCall(@_values)
                                                                    else raise NameError.new( "Error: undefined variable values", "values" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:582"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                  Cell.new()                                                                  ,
                                                                  Cell.new()
                                                              ]
                                                                           ))
                                                          end
                                                      else
                                                          begin
                                                            embedBacktraceInfo( "", 1 );
                                                              trampCall( self._call_MIMARKwith_MIMARKvalues_METHOD(  'call-with-values',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                                      trampCall(@_call_MIMARKwith_MIMARKvalues)
                                                                    else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                    Proc.new { || 
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 583 );
                                                                            trampCall( self._car_PLMARKcdr_METHOD(  'car+cdr',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_car_PLMARKcdr') then
                                                                                    trampCall(@_car_PLMARKcdr)
                                                                                  else raise NameError.new( "Error: undefined variable car+cdr", "car+cdr" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:583"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  begin
                                                                                      trampCall(_list)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:583"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                            ]
                                                                                         ))
                                                                        end
                                                                    }                                                                  ,
                                                                    Proc.new { |_a,_d| 
                                                                        begin
                                                                          embedBacktraceInfo( "", 1 );
                                                                            trampCall( self._call_MIMARKwith_MIMARKvalues_METHOD(  'call-with-values',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                                                    trampCall(@_call_MIMARKwith_MIMARKvalues)
                                                                                  else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  Proc.new { || 
                                                                                      begin
                                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 584 );
                                                                                          trampCall( callProcedure(  '_recur',  'recur',
                                                                                              begin
                                                                                                  trampCall(_recur)
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:584"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                          [
                                                                                                begin
                                                                                                    trampCall(_other_MIMARKlists)
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:584"] + __e.backtrace ) ; raise __e
                                                                                                end
                                                                                          ]
                                                                                                       ))
                                                                                      end
                                                                                  }                                                                                ,
                                                                                  Proc.new { |_cars,_cdrs| 
                                                                                      begin
                                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 585 );
                                                                                          trampCall( self._values_METHOD(  'values',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_values') then
                                                                                                  trampCall(@_values)
                                                                                                else raise NameError.new( "Error: undefined variable values", "values" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:585"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                          [
                                                                                                begin
                                                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 585 );
                                                                                                    _cons(
                                                                                                        begin
                                                                                                            trampCall(_a)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:585"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                        begin
                                                                                                            trampCall(_cars)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:585"] + __e.backtrace ) ; raise __e
                                                                                                        end
                                                                                                    )
                                                                                                end                                                                                              ,
                                                                                                begin
                                                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 585 );
                                                                                                    _cons(
                                                                                                        begin
                                                                                                            trampCall(_d)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:585"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                        begin
                                                                                                            trampCall(_cdrs)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:585"] + __e.backtrace ) ; raise __e
                                                                                                        end
                                                                                                    )
                                                                                                end
                                                                                          ]
                                                                                                       ))
                                                                                      end
                                                                                  }
                                                                            ]
                                                                                         ))
                                                                        end
                                                                    }
                                                              ]
                                                                           ))
                                                          end
                                                      end
                                                  }
                                            ]
                                                         )
                                        end
                                    else
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 586 );
                                            delayCall( '_values',  'values',
                                                begin
                                                  if @global_lisp_binding.has_key?('_values') then
                                                    trampCall(@_values)
                                                  else raise NameError.new( "Error: undefined variable values", "values" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:586"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 586 );
                                                      trampCall( self._list_METHOD(  'list',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_list') then
                                                              trampCall(@_list)
                                                            else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:586"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_cars_MIMARKfinal)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:586"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   ))
                                                  end                                                ,
                                                Cell.new()
                                            ]
                                                         )
                                        end
                                    end
                                }
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 578 );
                                  delayCall( '_recur',  'recur',
                                      begin
                                          trampCall(_recur)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:578"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_lists)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:578"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               )
                              end
                          } ; ___lambda.call(
                          nil
                                     )
                        end
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 572 );
                          trampCall( self._find_METHOD(  'find',
                              begin
                                if @global_lisp_binding.has_key?('_find') then
                                  trampCall(@_find)
                                else raise NameError.new( "Error: undefined variable find", "find" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:572"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                Proc.new { |_lis| 
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 574 );
                                        trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                            begin
                                              if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                trampCall(@_null_MIMARKlist_QUMARK)
                                              else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:574"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:574"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     ))
                                    end
                                }                              ,
                                begin
                                    trampCall(_lists)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:575"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       ))
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARKcars_PLMARKcdrs_SLMARKno_MIMARKtest_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKcars_PLMARKcdrs_SLMARKno_MIMARKtest', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKcars_PLMARKcdrs_SLMARKno_MIMARKtest'] = self.method( :__PAMARKcars_PLMARKcdrs_SLMARKno_MIMARKtest_METHOD )
    @__PAMARKcars_PLMARKcdrs_SLMARKno_MIMARKtest = 
    trampCall(
          Proc.new { |_lists| 
              begin #makeLetrec
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lists| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 592 );
                                _pair_QUMARK(
                                    begin
                                        trampCall(_lists)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:592"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                           ) then
                              begin
                                embedBacktraceInfo( "", 1 );
                                  delayCall( '_call_MIMARKwith_MIMARKvalues',  'call-with-values',
                                      begin
                                        if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                          trampCall(@_call_MIMARKwith_MIMARKvalues)
                                        else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        Proc.new { || 
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 593 );
                                                trampCall( self._car_PLMARKcdr_METHOD(  'car+cdr',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_car_PLMARKcdr') then
                                                        trampCall(@_car_PLMARKcdr)
                                                      else raise NameError.new( "Error: undefined variable car+cdr", "car+cdr" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:593"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_lists)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:593"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end
                                        }                                      ,
                                        Proc.new { |_list,_other_MIMARKlists| 
                                            begin
                                              embedBacktraceInfo( "", 1 );
                                                trampCall( self._call_MIMARKwith_MIMARKvalues_METHOD(  'call-with-values',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                        trampCall(@_call_MIMARKwith_MIMARKvalues)
                                                      else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      Proc.new { || 
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 594 );
                                                              trampCall( self._car_PLMARKcdr_METHOD(  'car+cdr',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_car_PLMARKcdr') then
                                                                      trampCall(@_car_PLMARKcdr)
                                                                    else raise NameError.new( "Error: undefined variable car+cdr", "car+cdr" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:594"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                    begin
                                                                        trampCall(_list)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:594"] + __e.backtrace ) ; raise __e
                                                                    end
                                                              ]
                                                                           ))
                                                          end
                                                      }                                                    ,
                                                      Proc.new { |_a,_d| 
                                                          begin
                                                            embedBacktraceInfo( "", 1 );
                                                              trampCall( self._call_MIMARKwith_MIMARKvalues_METHOD(  'call-with-values',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                                      trampCall(@_call_MIMARKwith_MIMARKvalues)
                                                                    else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                    Proc.new { || 
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 595 );
                                                                            trampCall( callProcedure(  '_recur',  'recur',
                                                                                begin
                                                                                    trampCall(_recur)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:595"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  begin
                                                                                      trampCall(_other_MIMARKlists)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:595"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                            ]
                                                                                         ))
                                                                        end
                                                                    }                                                                  ,
                                                                    Proc.new { |_cars,_cdrs| 
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 596 );
                                                                            trampCall( self._values_METHOD(  'values',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_values') then
                                                                                    trampCall(@_values)
                                                                                  else raise NameError.new( "Error: undefined variable values", "values" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:596"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  begin
                                                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 596 );
                                                                                      _cons(
                                                                                          begin
                                                                                              trampCall(_a)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:596"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          begin
                                                                                              trampCall(_cars)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:596"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                      )
                                                                                  end                                                                                ,
                                                                                  begin
                                                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 596 );
                                                                                      _cons(
                                                                                          begin
                                                                                              trampCall(_d)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:596"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          begin
                                                                                              trampCall(_cdrs)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:596"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                      )
                                                                                  end
                                                                            ]
                                                                                         ))
                                                                        end
                                                                    }
                                                              ]
                                                                           ))
                                                          end
                                                      }
                                                ]
                                                             ))
                                            end
                                        }
                                  ]
                                               )
                              end
                          else
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 597 );
                                  delayCall( '_values',  'values',
                                      begin
                                        if @global_lisp_binding.has_key?('_values') then
                                          trampCall(@_values)
                                        else raise NameError.new( "Error: undefined variable values", "values" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:597"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                      Cell.new()                                      ,
                                      Cell.new()
                                  ]
                                               )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 591 );
                        delayCall( '_recur',  'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:591"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lists)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:591"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._count_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_count', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_count'] = self.method( :_count_METHOD )
    @_count = 
    trampCall(
          Proc.new { |_pred,_list1,*__rest__| _lists = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 604 );
                    _pair_QUMARK(
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:604"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin #makeLetrec
                    ___lambda = lambda { |_lp| 
                        _lp                         = 
                          Proc.new { |_list1,_lists,_i| 
                              if ( 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 608 );
                                    trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                        begin
                                          if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                            trampCall(@_null_MIMARKlist_QUMARK)
                                          else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:608"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(_list1)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:608"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 ))
                                end
                               ) then
                                  begin
                                      trampCall(_i)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:608"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  begin
                                    embedBacktraceInfo( "", 1 );
                                      delayCall( '_call_MIMARKwith_MIMARKvalues',  'call-with-values',
                                          begin
                                            if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                              trampCall(@_call_MIMARKwith_MIMARKvalues)
                                            else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            Proc.new { || 
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 609 );
                                                    trampCall( self.__PAMARKcars_PLMARKcdrs_METHOD(  '%cars+cdrs',
                                                        begin
                                                          if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs') then
                                                            trampCall(@__PAMARKcars_PLMARKcdrs)
                                                          else raise NameError.new( "Error: undefined variable %cars+cdrs", "%cars+cdrs" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:609"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                              trampCall(_lists)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:609"] + __e.backtrace ) ; raise __e
                                                          end
                                                    ]
                                                                 ))
                                                end
                                            }                                          ,
                                            Proc.new { |_as,_ds| 
                                                if ( 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 610 );
                                                      _null_QUMARK(
                                                          begin
                                                              trampCall(_as)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:610"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                                 ) then
                                                    begin
                                                        trampCall(_i)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:610"] + __e.backtrace ) ; raise __e
                                                    end
                                                else
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 611 );
                                                        trampCall( callProcedure(  '_lp',  'lp',
                                                            begin
                                                                trampCall(_lp)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:611"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                        [
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 611 );
                                                                  _cdr(
                                                                      begin
                                                                          trampCall(_list1)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:611"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                  )
                                                              end                                                            ,
                                                              begin
                                                                  trampCall(_ds)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:611"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              if ( 
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 612 );
                                                                    trampCall( self._apply_METHOD(  'apply',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_apply') then
                                                                            trampCall(@_apply)
                                                                          else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:612"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                    [
                                                                          begin
                                                                              trampCall(_pred)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:612"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 612 );
                                                                              _car(
                                                                                  begin
                                                                                      trampCall(_list1)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:612"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                              )
                                                                          end                                                                        ,
                                                                          begin
                                                                              trampCall(_as)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:612"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                    ]
                                                                                 ))
                                                                end
                                                               ) then
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 612 );
                                                                      ( 
                                                                        begin
                                                                            trampCall(_i)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:612"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      +
                                                                      1
                                                                       ) 
                                                                  end
                                                              else
                                                                  begin
                                                                      trampCall(_i)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:612"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              end
                                                        ]
                                                                     ))
                                                    end
                                                end
                                            }
                                      ]
                                                   )
                                  end
                              end
                          }
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 607 );
                            delayCall( '_lp',  'lp',
                                begin
                                    trampCall(_lp)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:607"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_list1)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:607"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  begin
                                      trampCall(_lists)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:607"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                0
                            ]
                                         )
                        end
                    } ; ___lambda.call(
                    nil
                               )
                  end
              else
                  begin #makeLetrec
                    ___lambda = lambda { |_lp| 
                        _lp                         = 
                          Proc.new { |_lis,_i| 
                              if ( 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 616 );
                                    trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                        begin
                                          if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                            trampCall(@_null_MIMARKlist_QUMARK)
                                          else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:616"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(_lis)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:616"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 ))
                                end
                               ) then
                                  begin
                                      trampCall(_i)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:616"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 617 );
                                      delayCall( '_lp',  'lp',
                                          begin
                                              trampCall(_lp)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:617"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 617 );
                                                _cdr(
                                                    begin
                                                        trampCall(_lis)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:617"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end                                          ,
                                            if ( 
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 617 );
                                                  trampCall( callProcedure(  '_pred',  'pred',
                                                      begin
                                                          trampCall(_pred)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:617"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 617 );
                                                            _car(
                                                                begin
                                                                    trampCall(_lis)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:617"] + __e.backtrace ) ; raise __e
                                                                end
                                                            )
                                                        end
                                                  ]
                                                               ))
                                              end
                                             ) then
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 617 );
                                                    ( 
                                                      begin
                                                          trampCall(_i)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:617"] + __e.backtrace ) ; raise __e
                                                      end                                                    +
                                                    1
                                                     ) 
                                                end
                                            else
                                                begin
                                                    trampCall(_i)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:617"] + __e.backtrace ) ; raise __e
                                                end
                                            end
                                      ]
                                                   )
                                  end
                              end
                          }
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 615 );
                            delayCall( '_lp',  'lp',
                                begin
                                    trampCall(_lp)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:615"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_list1)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:615"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                0
                            ]
                                         )
                        end
                    } ; ___lambda.call(
                    nil
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._unfold_MIMARKright_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_unfold_MIMARKright', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_unfold_MIMARKright'] = self.method( :_unfold_MIMARKright_METHOD )
    @_unfold_MIMARKright = 
    trampCall(
          Proc.new { |_p,_f,_g,_seed,*__rest__| _maybe_MIMARKtail = __rest__[0] ;  
              begin #makeLetrec
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_seed,_ans| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 628 );
                                trampCall( callProcedure(  '_p',  'p',
                                    begin
                                        trampCall(_p)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:628"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_seed)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:628"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                           ) then
                              begin
                                  trampCall(_ans)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:628"] + __e.backtrace ) ; raise __e
                              end
                          else
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 629 );
                                  delayCall( '_lp',  'lp',
                                      begin
                                          trampCall(_lp)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:629"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 629 );
                                            trampCall( callProcedure(  '_g',  'g',
                                                begin
                                                    trampCall(_g)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:629"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_seed)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:629"] + __e.backtrace ) ; raise __e
                                                  end
                                            ]
                                                         ))
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 630 );
                                            _cons(
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 630 );
                                                    trampCall( callProcedure(  '_f',  'f',
                                                        begin
                                                            trampCall(_f)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:630"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                              trampCall(_seed)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:630"] + __e.backtrace ) ; raise __e
                                                          end
                                                    ]
                                                                 ))
                                                end                                              ,
                                                begin
                                                    trampCall(_ans)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:630"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                  ]
                                               )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 627 );
                        delayCall( '_lp',  'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:627"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_seed)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:627"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin #makeLet
                                ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30278| 
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "", 1 );
                                          _null_QUMARK(
                                              begin
                                                  trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30278)
                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                     ) then
                                      Cell.new()
                                    else
                                        begin
                                          embedBacktraceInfo( "", 1 );
                                            _car(
                                                begin
                                                    trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30278)
                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    end
                                } ; ___lambda.call(
                                      begin
                                          trampCall(_maybe_MIMARKtail)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:627"] + __e.backtrace ) ; raise __e
                                      end
                                           )
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._unfold_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_unfold', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_unfold'] = self.method( :_unfold_METHOD )
    @_unfold = 
    trampCall(
          Proc.new { |_p,_f,_g,_seed,*__rest__| _maybe_MIMARKtail_MIMARKgen = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 637 );
                    _pair_QUMARK(
                        begin
                            trampCall(_maybe_MIMARKtail_MIMARKgen)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:637"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin #makeLet
                    ___lambda = lambda { |_tail_MIMARKgen| 
                        if ( 
                          begin
                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 640 );
                              _pair_QUMARK(
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 640 );
                                      _cdr(
                                          begin
                                              trampCall(_maybe_MIMARKtail_MIMARKgen)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:640"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                              )
                          end
                         ) then
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 641 );
                                delayCall( '_apply',  'apply',
                                    begin
                                      if @global_lisp_binding.has_key?('_apply') then
                                        trampCall(@_apply)
                                      else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:641"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                        if @global_lisp_binding.has_key?('_error') then
                                          trampCall(@_error)
                                        else raise NameError.new( "Error: undefined variable error", "error" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:641"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                    "Too many arguments"                                    ,
                                      begin
                                        if @global_lisp_binding.has_key?('_unfold') then
                                          trampCall(@_unfold)
                                        else raise NameError.new( "Error: undefined variable unfold", "unfold" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:641"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      begin
                                          trampCall(_p)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:641"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      begin
                                          trampCall(_f)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:641"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      begin
                                          trampCall(_g)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:641"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      begin
                                          trampCall(_seed)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:641"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      begin
                                          trampCall(_maybe_MIMARKtail_MIMARKgen)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:641"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             )
                            end
                        else
                            begin #makeLetrec
                              ___lambda = lambda { |_recur| 
                                  _recur                                   = 
                                    Proc.new { |_seed| 
                                        if ( 
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 644 );
                                              trampCall( callProcedure(  '_p',  'p',
                                                  begin
                                                      trampCall(_p)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:644"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(_seed)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:644"] + __e.backtrace ) ; raise __e
                                                    end
                                              ]
                                                           ))
                                          end
                                         ) then
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 644 );
                                                delayCall( '_tail_MIMARKgen',  'tail-gen',
                                                    begin
                                                        trampCall(_tail_MIMARKgen)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:644"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_seed)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:644"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             )
                                            end
                                        else
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 645 );
                                                delayCall( '_cons',  'cons',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cons') then
                                                        trampCall(@_cons)
                                                      else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:645"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 645 );
                                                          trampCall( callProcedure(  '_f',  'f',
                                                              begin
                                                                  trampCall(_f)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:645"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                          [
                                                                begin
                                                                    trampCall(_seed)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:645"] + __e.backtrace ) ; raise __e
                                                                end
                                                          ]
                                                                       ))
                                                      end                                                    ,
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 645 );
                                                          trampCall( callProcedure(  '_recur',  'recur',
                                                              begin
                                                                  trampCall(_recur)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:645"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                          [
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 645 );
                                                                    trampCall( callProcedure(  '_g',  'g',
                                                                        begin
                                                                            trampCall(_g)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:645"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                    [
                                                                          begin
                                                                              trampCall(_seed)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:645"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                    ]
                                                                                 ))
                                                                end
                                                          ]
                                                                       ))
                                                      end
                                                ]
                                                             )
                                            end
                                        end
                                    }
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 643 );
                                      delayCall( '_recur',  'recur',
                                          begin
                                              trampCall(_recur)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:643"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_seed)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:643"] + __e.backtrace ) ; raise __e
                                            end
                                      ]
                                                   )
                                  end
                              } ; ___lambda.call(
                              nil
                                         )
                            end
                        end
                    } ; ___lambda.call(
                          begin
                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 639 );
                              _car(
                                  begin
                                      trampCall(_maybe_MIMARKtail_MIMARKgen)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:639"] + __e.backtrace ) ; raise __e
                                  end
                              )
                          end
                               )
                  end
              else
                  begin #makeLetrec
                    ___lambda = lambda { |_recur| 
                        _recur                         = 
                          Proc.new { |_seed| 
                              if ( 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 648 );
                                    trampCall( callProcedure(  '_p',  'p',
                                        begin
                                            trampCall(_p)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:648"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(_seed)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:648"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 ))
                                end
                               ) then
                                Cell.new()
                              else
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 649 );
                                      delayCall( '_cons',  'cons',
                                          begin
                                            if @global_lisp_binding.has_key?('_cons') then
                                              trampCall(@_cons)
                                            else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:649"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 649 );
                                                trampCall( callProcedure(  '_f',  'f',
                                                    begin
                                                        trampCall(_f)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:649"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_seed)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:649"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end                                          ,
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 649 );
                                                trampCall( callProcedure(  '_recur',  'recur',
                                                    begin
                                                        trampCall(_recur)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:649"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 649 );
                                                          trampCall( callProcedure(  '_g',  'g',
                                                              begin
                                                                  trampCall(_g)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:649"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                          [
                                                                begin
                                                                    trampCall(_seed)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:649"] + __e.backtrace ) ; raise __e
                                                                end
                                                          ]
                                                                       ))
                                                      end
                                                ]
                                                             ))
                                            end
                                      ]
                                                   )
                                  end
                              end
                          }
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 647 );
                            delayCall( '_recur',  'recur',
                                begin
                                    trampCall(_recur)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:647"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_seed)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:647"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         )
                        end
                    } ; ___lambda.call(
                    nil
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._fold_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_fold', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_fold'] = self.method( :_fold_METHOD )
    @_fold = 
    trampCall(
          Proc.new { |_kons,_knil,_lis1,*__rest__| _lists = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 654 );
                    _pair_QUMARK(
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:654"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin #makeLetrec
                    ___lambda = lambda { |_lp| 
                        _lp                         = 
                          Proc.new { |_lists,_ans| 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  delayCall( '_call_MIMARKwith_MIMARKvalues',  'call-with-values',
                                      begin
                                        if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                          trampCall(@_call_MIMARKwith_MIMARKvalues)
                                        else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        Proc.new { || 
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 656 );
                                                trampCall( self.__PAMARKcars_PLMARKcdrs_PLMARK_METHOD(  '%cars+cdrs+',
                                                    begin
                                                      if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs_PLMARK') then
                                                        trampCall(@__PAMARKcars_PLMARKcdrs_PLMARK)
                                                      else raise NameError.new( "Error: undefined variable %cars+cdrs+", "%cars+cdrs+" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:656"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_lists)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:656"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      begin
                                                          trampCall(_ans)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:656"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end
                                        }                                      ,
                                        Proc.new { |_cars_PLMARKans,_cdrs| 
                                            if ( 
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 657 );
                                                  _null_QUMARK(
                                                      begin
                                                          trampCall(_cars_PLMARKans)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:657"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end
                                             ) then
                                                begin
                                                    trampCall(_ans)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:657"] + __e.backtrace ) ; raise __e
                                                end
                                            else
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 658 );
                                                    trampCall( callProcedure(  '_lp',  'lp',
                                                        begin
                                                            trampCall(_lp)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:658"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                              trampCall(_cdrs)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:658"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 658 );
                                                              trampCall( self._apply_METHOD(  'apply',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_apply') then
                                                                      trampCall(@_apply)
                                                                    else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:658"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                    begin
                                                                        trampCall(_kons)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:658"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    begin
                                                                        trampCall(_cars_PLMARKans)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:658"] + __e.backtrace ) ; raise __e
                                                                    end
                                                              ]
                                                                           ))
                                                          end
                                                    ]
                                                                 ))
                                                end
                                            end
                                        }
                                  ]
                                               )
                              end
                          }
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 655 );
                            delayCall( '_lp',  'lp',
                                begin
                                    trampCall(_lp)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:655"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 655 );
                                      _cons(
                                          begin
                                              trampCall(_lis1)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:655"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          begin
                                              trampCall(_lists)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:655"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end                                ,
                                  begin
                                      trampCall(_knil)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:655"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         )
                        end
                    } ; ___lambda.call(
                    nil
                               )
                  end
              else
                  begin
                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 661 );
                      delayCall( '__PAMARKfold',  '%fold',
                          begin
                            if @global_lisp_binding.has_key?('__PAMARKfold') then
                              trampCall(@__PAMARKfold)
                            else raise NameError.new( "Error: undefined variable %fold", "%fold" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:661"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                                trampCall(_kons)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:661"] + __e.backtrace ) ; raise __e
                            end                          ,
                            begin
                                trampCall(_knil)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:661"] + __e.backtrace ) ; raise __e
                            end                          ,
                            begin
                                trampCall(_lis1)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:661"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._fold_MIMARKright_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_fold_MIMARKright', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_fold_MIMARKright'] = self.method( :_fold_MIMARKright_METHOD )
    @_fold_MIMARKright = 
    trampCall(
          Proc.new { |_kons,_knil,_lis1,*__rest__| _lists = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 665 );
                    _pair_QUMARK(
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:665"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin #makeLetrec
                    ___lambda = lambda { |_recur| 
                        _recur                         = 
                          Proc.new { |_lists| 
                              begin #makeLet
                                ___lambda = lambda { |_cdrs| 
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 668 );
                                          _null_QUMARK(
                                              begin
                                                  trampCall(_cdrs)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:668"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                     ) then
                                        begin
                                            trampCall(_knil)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:668"] + __e.backtrace ) ; raise __e
                                        end
                                    else
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 669 );
                                            delayCall( '_apply',  'apply',
                                                begin
                                                  if @global_lisp_binding.has_key?('_apply') then
                                                    trampCall(@_apply)
                                                  else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:669"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_kons)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:669"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 669 );
                                                      trampCall( self.__PAMARKcars_PLMARK_METHOD(  '%cars+',
                                                          begin
                                                            if @global_lisp_binding.has_key?('__PAMARKcars_PLMARK') then
                                                              trampCall(@__PAMARKcars_PLMARK)
                                                            else raise NameError.new( "Error: undefined variable %cars+", "%cars+" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:669"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_lists)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:669"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 669 );
                                                                trampCall( callProcedure(  '_recur',  'recur',
                                                                    begin
                                                                        trampCall(_recur)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:669"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                      begin
                                                                          trampCall(_cdrs)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:669"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                ]
                                                                             ))
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                            ]
                                                         )
                                        end
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 667 );
                                          trampCall( self.__PAMARKcdrs_METHOD(  '%cdrs',
                                              begin
                                                if @global_lisp_binding.has_key?('__PAMARKcdrs') then
                                                  trampCall(@__PAMARKcdrs)
                                                else raise NameError.new( "Error: undefined variable %cdrs", "%cdrs" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:667"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                    trampCall(_lists)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:667"] + __e.backtrace ) ; raise __e
                                                end
                                          ]
                                                       ))
                                      end
                                           )
                              end
                          }
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 666 );
                            delayCall( '_recur',  'recur',
                                begin
                                    trampCall(_recur)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:666"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 666 );
                                      _cons(
                                          begin
                                              trampCall(_lis1)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:666"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          begin
                                              trampCall(_lists)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:666"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                            ]
                                         )
                        end
                    } ; ___lambda.call(
                    nil
                               )
                  end
              else
                  begin #makeLetrec
                    ___lambda = lambda { |_recur| 
                        _recur                         = 
                          Proc.new { |_lis| 
                              if ( 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 672 );
                                    trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                        begin
                                          if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                            trampCall(@_null_MIMARKlist_QUMARK)
                                          else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:672"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(_lis)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:672"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 ))
                                end
                               ) then
                                  begin
                                      trampCall(_knil)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:672"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  begin #makeLet
                                    ___lambda = lambda { |_head| 
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 674 );
                                            delayCall( '_kons',  'kons',
                                                begin
                                                    trampCall(_kons)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:674"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_head)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:674"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 674 );
                                                      trampCall( callProcedure(  '_recur',  'recur',
                                                          begin
                                                              trampCall(_recur)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:674"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 674 );
                                                                _cdr(
                                                                    begin
                                                                        trampCall(_lis)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:674"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                            ]
                                                         )
                                        end
                                    } ; ___lambda.call(
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 673 );
                                              _car(
                                                  begin
                                                      trampCall(_lis)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:673"] + __e.backtrace ) ; raise __e
                                                  end
                                              )
                                          end
                                               )
                                  end
                              end
                          }
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 671 );
                            delayCall( '_recur',  'recur',
                                begin
                                    trampCall(_recur)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:671"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_lis1)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:671"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         )
                        end
                    } ; ___lambda.call(
                    nil
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._pair_MIMARKfold_MIMARKright_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_pair_MIMARKfold_MIMARKright', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_pair_MIMARKfold_MIMARKright'] = self.method( :_pair_MIMARKfold_MIMARKright_METHOD )
    @_pair_MIMARKfold_MIMARKright = 
    trampCall(
          Proc.new { |_f,_zero,_lis1,*__rest__| _lists = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 679 );
                    _pair_QUMARK(
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:679"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin #makeLetrec
                    ___lambda = lambda { |_recur| 
                        _recur                         = 
                          Proc.new { |_lists| 
                              begin #makeLet
                                ___lambda = lambda { |_cdrs| 
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 682 );
                                          _null_QUMARK(
                                              begin
                                                  trampCall(_cdrs)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:682"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                     ) then
                                        begin
                                            trampCall(_zero)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:682"] + __e.backtrace ) ; raise __e
                                        end
                                    else
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 683 );
                                            delayCall( '_apply',  'apply',
                                                begin
                                                  if @global_lisp_binding.has_key?('_apply') then
                                                    trampCall(@_apply)
                                                  else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:683"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_f)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:683"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 683 );
                                                      trampCall( self._append_EXMARK_METHOD(  'append!',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_append_EXMARK') then
                                                              trampCall(@_append_EXMARK)
                                                            else raise NameError.new( "Error: undefined variable append!", "append!" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:683"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_lists)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:683"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 683 );
                                                                trampCall( self._list_METHOD(  'list',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_list') then
                                                                        trampCall(@_list)
                                                                      else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:683"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 683 );
                                                                          trampCall( callProcedure(  '_recur',  'recur',
                                                                              begin
                                                                                  trampCall(_recur)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:683"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                                begin
                                                                                    trampCall(_cdrs)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:683"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                          ]
                                                                                       ))
                                                                      end
                                                                ]
                                                                             ))
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                            ]
                                                         )
                                        end
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 681 );
                                          trampCall( self.__PAMARKcdrs_METHOD(  '%cdrs',
                                              begin
                                                if @global_lisp_binding.has_key?('__PAMARKcdrs') then
                                                  trampCall(@__PAMARKcdrs)
                                                else raise NameError.new( "Error: undefined variable %cdrs", "%cdrs" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:681"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                    trampCall(_lists)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:681"] + __e.backtrace ) ; raise __e
                                                end
                                          ]
                                                       ))
                                      end
                                           )
                              end
                          }
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 680 );
                            delayCall( '_recur',  'recur',
                                begin
                                    trampCall(_recur)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:680"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 680 );
                                      _cons(
                                          begin
                                              trampCall(_lis1)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:680"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          begin
                                              trampCall(_lists)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:680"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                            ]
                                         )
                        end
                    } ; ___lambda.call(
                    nil
                               )
                  end
              else
                  begin #makeLetrec
                    ___lambda = lambda { |_recur| 
                        _recur                         = 
                          Proc.new { |_lis| 
                              if ( 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 686 );
                                    trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                        begin
                                          if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                            trampCall(@_null_MIMARKlist_QUMARK)
                                          else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:686"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(_lis)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:686"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 ))
                                end
                               ) then
                                  begin
                                      trampCall(_zero)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:686"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 686 );
                                      delayCall( '_f',  'f',
                                          begin
                                              trampCall(_f)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:686"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:686"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 686 );
                                                trampCall( callProcedure(  '_recur',  'recur',
                                                    begin
                                                        trampCall(_recur)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:686"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 686 );
                                                          _cdr(
                                                              begin
                                                                  trampCall(_lis)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:686"] + __e.backtrace ) ; raise __e
                                                              end
                                                          )
                                                      end
                                                ]
                                                             ))
                                            end
                                      ]
                                                   )
                                  end
                              end
                          }
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 685 );
                            delayCall( '_recur',  'recur',
                                begin
                                    trampCall(_recur)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:685"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_lis1)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:685"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         )
                        end
                    } ; ___lambda.call(
                    nil
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._pair_MIMARKfold_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_pair_MIMARKfold', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_pair_MIMARKfold'] = self.method( :_pair_MIMARKfold_METHOD )
    @_pair_MIMARKfold = 
    trampCall(
          Proc.new { |_f,_zero,_lis1,*__rest__| _lists = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 690 );
                    _pair_QUMARK(
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:690"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin #makeLetrec
                    ___lambda = lambda { |_lp| 
                        _lp                         = 
                          Proc.new { |_lists,_ans| 
                              begin #makeLet
                                ___lambda = lambda { |_tails| 
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 693 );
                                          _null_QUMARK(
                                              begin
                                                  trampCall(_tails)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:693"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                     ) then
                                        begin
                                            trampCall(_ans)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:693"] + __e.backtrace ) ; raise __e
                                        end
                                    else
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 694 );
                                            delayCall( '_lp',  'lp',
                                                begin
                                                    trampCall(_lp)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:694"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_tails)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:694"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 694 );
                                                      trampCall( self._apply_METHOD(  'apply',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_apply') then
                                                              trampCall(@_apply)
                                                            else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:694"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_f)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:694"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 694 );
                                                                trampCall( self._append_EXMARK_METHOD(  'append!',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_append_EXMARK') then
                                                                        trampCall(@_append_EXMARK)
                                                                      else raise NameError.new( "Error: undefined variable append!", "append!" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:694"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                      begin
                                                                          trampCall(_lists)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:694"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 694 );
                                                                          trampCall( self._list_METHOD(  'list',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_list') then
                                                                                  trampCall(@_list)
                                                                                else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:694"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                                begin
                                                                                    trampCall(_ans)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:694"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                          ]
                                                                                       ))
                                                                      end
                                                                ]
                                                                             ))
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                            ]
                                                         )
                                        end
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 692 );
                                          trampCall( self.__PAMARKcdrs_METHOD(  '%cdrs',
                                              begin
                                                if @global_lisp_binding.has_key?('__PAMARKcdrs') then
                                                  trampCall(@__PAMARKcdrs)
                                                else raise NameError.new( "Error: undefined variable %cdrs", "%cdrs" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:692"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                    trampCall(_lists)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:692"] + __e.backtrace ) ; raise __e
                                                end
                                          ]
                                                       ))
                                      end
                                           )
                              end
                          }
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 691 );
                            delayCall( '_lp',  'lp',
                                begin
                                    trampCall(_lp)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:691"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 691 );
                                      _cons(
                                          begin
                                              trampCall(_lis1)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:691"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          begin
                                              trampCall(_lists)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:691"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end                                ,
                                  begin
                                      trampCall(_zero)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:691"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         )
                        end
                    } ; ___lambda.call(
                    nil
                               )
                  end
              else
                  begin #makeLetrec
                    ___lambda = lambda { |_lp| 
                        _lp                         = 
                          Proc.new { |_lis,_ans| 
                              if ( 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 697 );
                                    trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                        begin
                                          if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                            trampCall(@_null_MIMARKlist_QUMARK)
                                          else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:697"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(_lis)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:697"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 ))
                                end
                               ) then
                                  begin
                                      trampCall(_ans)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:697"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  begin #makeLet
                                    ___lambda = lambda { |_tail| 
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 699 );
                                            delayCall( '_lp',  'lp',
                                                begin
                                                    trampCall(_lp)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:699"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_tail)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:699"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 699 );
                                                      trampCall( callProcedure(  '_f',  'f',
                                                          begin
                                                              trampCall(_f)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:699"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_lis)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:699"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            begin
                                                                trampCall(_ans)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:699"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                            ]
                                                         )
                                        end
                                    } ; ___lambda.call(
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 698 );
                                              _cdr(
                                                  begin
                                                      trampCall(_lis)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:698"] + __e.backtrace ) ; raise __e
                                                  end
                                              )
                                          end
                                               )
                                  end
                              end
                          }
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 696 );
                            delayCall( '_lp',  'lp',
                                begin
                                    trampCall(_lp)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:696"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_lis1)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:696"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  begin
                                      trampCall(_zero)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:696"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         )
                        end
                    } ; ___lambda.call(
                    nil
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._reduce_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_reduce', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_reduce'] = self.method( :_reduce_METHOD )
    @_reduce = 
    trampCall(
          Proc.new { |_f,_ridentity,_lis| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 707 );
                    trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                        begin
                          if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                            trampCall(@_null_MIMARKlist_QUMARK)
                          else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:707"] + __e.backtrace ) ; raise __e
                        end                      ,
                    [
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:707"] + __e.backtrace ) ; raise __e
                          end
                    ]
                                 ))
                end
               ) then
                  begin
                      trampCall(_ridentity)
                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:707"] + __e.backtrace ) ; raise __e
                  end
              else
                  begin
                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 708 );
                      delayCall( '_fold',  'fold',
                          begin
                            if @global_lisp_binding.has_key?('_fold') then
                              trampCall(@_fold)
                            else raise NameError.new( "Error: undefined variable fold", "fold" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:708"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                                trampCall(_f)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:708"] + __e.backtrace ) ; raise __e
                            end                          ,
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 708 );
                                _car(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:708"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end                          ,
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 708 );
                                _cdr(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:708"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                      ]
                                   )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._reduce_MIMARKright_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_reduce_MIMARKright', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_reduce_MIMARKright'] = self.method( :_reduce_MIMARKright_METHOD )
    @_reduce_MIMARKright = 
    trampCall(
          Proc.new { |_f,_ridentity,_lis| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 712 );
                    trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                        begin
                          if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                            trampCall(@_null_MIMARKlist_QUMARK)
                          else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:712"] + __e.backtrace ) ; raise __e
                        end                      ,
                    [
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:712"] + __e.backtrace ) ; raise __e
                          end
                    ]
                                 ))
                end
               ) then
                  begin
                      trampCall(_ridentity)
                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:712"] + __e.backtrace ) ; raise __e
                  end
              else
                  begin #makeLetrec
                    ___lambda = lambda { |_recur| 
                        _recur                         = 
                          Proc.new { |_head,_lis| 
                              if ( 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 714 );
                                    _pair_QUMARK(
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:714"] + __e.backtrace ) ; raise __e
                                        end
                                    )
                                end
                               ) then
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 715 );
                                      delayCall( '_f',  'f',
                                          begin
                                              trampCall(_f)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:715"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_head)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:715"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 715 );
                                                trampCall( callProcedure(  '_recur',  'recur',
                                                    begin
                                                        trampCall(_recur)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:715"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 715 );
                                                          _car(
                                                              begin
                                                                  trampCall(_lis)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:715"] + __e.backtrace ) ; raise __e
                                                              end
                                                          )
                                                      end                                                    ,
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 715 );
                                                          _cdr(
                                                              begin
                                                                  trampCall(_lis)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:715"] + __e.backtrace ) ; raise __e
                                                              end
                                                          )
                                                      end
                                                ]
                                                             ))
                                            end
                                      ]
                                                   )
                                  end
                              else
                                  begin
                                      trampCall(_head)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:716"] + __e.backtrace ) ; raise __e
                                  end
                              end
                          }
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 713 );
                            delayCall( '_recur',  'recur',
                                begin
                                    trampCall(_recur)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:713"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 713 );
                                      _car(
                                          begin
                                              trampCall(_lis)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:713"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end                                ,
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 713 );
                                      _cdr(
                                          begin
                                              trampCall(_lis)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:713"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                            ]
                                         )
                        end
                    } ; ___lambda.call(
                    nil
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._append_MIMARKmap_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_append_MIMARKmap', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_append_MIMARKmap'] = self.method( :_append_MIMARKmap_METHOD )
    @_append_MIMARKmap = 
    trampCall(
          Proc.new { |_f,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 724 );
                  delayCall( '_really_MIMARKappend_MIMARKmap',  'really-append-map',
                      begin
                        if @global_lisp_binding.has_key?('_really_MIMARKappend_MIMARKmap') then
                          trampCall(@_really_MIMARKappend_MIMARKmap)
                        else raise NameError.new( "Error: undefined variable really-append-map", "really-append-map" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:724"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          if @global_lisp_binding.has_key?('_append_MIMARKmap') then
                            trampCall(@_append_MIMARKmap)
                          else raise NameError.new( "Error: undefined variable append-map", "append-map" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:724"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                          if @global_lisp_binding.has_key?('_append') then
                            trampCall(@_append)
                          else raise NameError.new( "Error: undefined variable append", "append" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:724"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_f)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:724"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_lis1)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:724"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:724"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._append_MIMARKmap_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_append_MIMARKmap_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_append_MIMARKmap_EXMARK'] = self.method( :_append_MIMARKmap_EXMARK_METHOD )
    @_append_MIMARKmap_EXMARK = 
    trampCall(
          Proc.new { |_f,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 726 );
                  delayCall( '_really_MIMARKappend_MIMARKmap',  'really-append-map',
                      begin
                        if @global_lisp_binding.has_key?('_really_MIMARKappend_MIMARKmap') then
                          trampCall(@_really_MIMARKappend_MIMARKmap)
                        else raise NameError.new( "Error: undefined variable really-append-map", "really-append-map" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:726"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          if @global_lisp_binding.has_key?('_append_MIMARKmap_EXMARK') then
                            trampCall(@_append_MIMARKmap_EXMARK)
                          else raise NameError.new( "Error: undefined variable append-map!", "append-map!" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:726"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                          if @global_lisp_binding.has_key?('_append_EXMARK') then
                            trampCall(@_append_EXMARK)
                          else raise NameError.new( "Error: undefined variable append!", "append!" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:726"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_f)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:726"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_lis1)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:726"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:726"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._really_MIMARKappend_MIMARKmap_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_really_MIMARKappend_MIMARKmap', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_really_MIMARKappend_MIMARKmap'] = self.method( :_really_MIMARKappend_MIMARKmap_METHOD )
    @_really_MIMARKappend_MIMARKmap = 
    trampCall(
          Proc.new { |_who,_appender,_f,_lis1,_lists| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 730 );
                    _pair_QUMARK(
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:730"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin
                    embedBacktraceInfo( "", 1 );
                      delayCall( '_call_MIMARKwith_MIMARKvalues',  'call-with-values',
                          begin
                            if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                              trampCall(@_call_MIMARKwith_MIMARKvalues)
                            else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            Proc.new { || 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 731 );
                                    trampCall( self.__PAMARKcars_PLMARKcdrs_METHOD(  '%cars+cdrs',
                                        begin
                                          if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs') then
                                            trampCall(@__PAMARKcars_PLMARKcdrs)
                                          else raise NameError.new( "Error: undefined variable %cars+cdrs", "%cars+cdrs" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:731"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 731 );
                                              _cons(
                                                  begin
                                                      trampCall(_lis1)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:731"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  begin
                                                      trampCall(_lists)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:731"] + __e.backtrace ) ; raise __e
                                                  end
                                              )
                                          end
                                    ]
                                                 ))
                                end
                            }                          ,
                            Proc.new { |_cars,_cdrs| 
                                if ( 
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 732 );
                                      _null_QUMARK(
                                          begin
                                              trampCall(_cars)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:732"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                                 ) then
                                  Cell.new()
                                else
                                    begin #makeLetrec
                                      ___lambda = lambda { |_recur| 
                                          _recur                                           = 
                                            Proc.new { |_cars,_cdrs| 
                                                begin #makeLet
                                                  ___lambda = lambda { |_vals| 
                                                      begin
                                                        embedBacktraceInfo( "", 1 );
                                                          trampCall( self._call_MIMARKwith_MIMARKvalues_METHOD(  'call-with-values',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                                  trampCall(@_call_MIMARKwith_MIMARKvalues)
                                                                else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                          [
                                                                Proc.new { || 
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 735 );
                                                                        trampCall( self.__PAMARKcars_PLMARKcdrs_METHOD(  '%cars+cdrs',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs') then
                                                                                trampCall(@__PAMARKcars_PLMARKcdrs)
                                                                              else raise NameError.new( "Error: undefined variable %cars+cdrs", "%cars+cdrs" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:735"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                  trampCall(_cdrs)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:735"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end
                                                                }                                                              ,
                                                                Proc.new { |_cars2,_cdrs2| 
                                                                    if ( 
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 736 );
                                                                          _null_QUMARK(
                                                                              begin
                                                                                  trampCall(_cars2)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:736"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          )
                                                                      end
                                                                     ) then
                                                                        begin
                                                                            trampCall(_vals)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:736"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    else
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 737 );
                                                                            trampCall( callProcedure(  '_appender',  'appender',
                                                                                begin
                                                                                    trampCall(_appender)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:737"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  begin
                                                                                      trampCall(_vals)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:737"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  begin
                                                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 737 );
                                                                                      trampCall( callProcedure(  '_recur',  'recur',
                                                                                          begin
                                                                                              trampCall(_recur)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:737"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                      [
                                                                                            begin
                                                                                                trampCall(_cars2)
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:737"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,
                                                                                            begin
                                                                                                trampCall(_cdrs2)
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:737"] + __e.backtrace ) ; raise __e
                                                                                            end
                                                                                      ]
                                                                                                   ))
                                                                                  end
                                                                            ]
                                                                                         ))
                                                                        end
                                                                    end
                                                                }
                                                          ]
                                                                       ))
                                                      end
                                                  } ; ___lambda.call(
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 734 );
                                                            trampCall( self._apply_METHOD(  'apply',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_apply') then
                                                                    trampCall(@_apply)
                                                                  else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:734"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  begin
                                                                      trampCall(_f)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:734"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  begin
                                                                      trampCall(_cars)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:734"] + __e.backtrace ) ; raise __e
                                                                  end
                                                            ]
                                                                         ))
                                                        end
                                                             )
                                                end
                                            }
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 733 );
                                              trampCall( callProcedure(  '_recur',  'recur',
                                                  begin
                                                      trampCall(_recur)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:733"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(_cars)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:733"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    begin
                                                        trampCall(_cdrs)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:733"] + __e.backtrace ) ; raise __e
                                                    end
                                              ]
                                                           ))
                                          end
                                      } ; ___lambda.call(
                                      nil
                                                 )
                                    end
                                end
                            }
                      ]
                                   )
                  end
              else
                  if ( 
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 740 );
                        trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                            begin
                              if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                trampCall(@_null_MIMARKlist_QUMARK)
                              else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:740"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lis1)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:740"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     ))
                    end
                   ) then
                    Cell.new()
                  else
                      begin #makeLetrec
                        ___lambda = lambda { |_recur| 
                            _recur                             = 
                              Proc.new { |_elt,_rest| 
                                  begin #makeLet
                                    ___lambda = lambda { |_vals| 
                                        if ( 
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 743 );
                                              trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                      trampCall(@_null_MIMARKlist_QUMARK)
                                                    else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:743"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(_rest)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:743"] + __e.backtrace ) ; raise __e
                                                    end
                                              ]
                                                           ))
                                          end
                                         ) then
                                            begin
                                                trampCall(_vals)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:743"] + __e.backtrace ) ; raise __e
                                            end
                                        else
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 744 );
                                                delayCall( '_appender',  'appender',
                                                    begin
                                                        trampCall(_appender)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:744"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_vals)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:744"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 744 );
                                                          trampCall( callProcedure(  '_recur',  'recur',
                                                              begin
                                                                  trampCall(_recur)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:744"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                          [
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 744 );
                                                                    _car(
                                                                        begin
                                                                            trampCall(_rest)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:744"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    )
                                                                end                                                              ,
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 744 );
                                                                    _cdr(
                                                                        begin
                                                                            trampCall(_rest)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:744"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    )
                                                                end
                                                          ]
                                                                       ))
                                                      end
                                                ]
                                                             )
                                            end
                                        end
                                    } ; ___lambda.call(
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 742 );
                                              trampCall( callProcedure(  '_f',  'f',
                                                  begin
                                                      trampCall(_f)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:742"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(_elt)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:742"] + __e.backtrace ) ; raise __e
                                                    end
                                              ]
                                                           ))
                                          end
                                               )
                                  end
                              }
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 741 );
                                delayCall( '_recur',  'recur',
                                    begin
                                        trampCall(_recur)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:741"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 741 );
                                          _car(
                                              begin
                                                  trampCall(_lis1)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:741"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end                                    ,
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 741 );
                                          _cdr(
                                              begin
                                                  trampCall(_lis1)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:741"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                ]
                                             )
                            end
                        } ; ___lambda.call(
                        nil
                                   )
                      end
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._pair_MIMARKfor_MIMARKeach_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_pair_MIMARKfor_MIMARKeach', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_pair_MIMARKfor_MIMARKeach'] = self.method( :_pair_MIMARKfor_MIMARKeach_METHOD )
    @_pair_MIMARKfor_MIMARKeach = 
    trampCall(
          Proc.new { |_proc,_lis1,*__rest__| _lists = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 749 );
                    _pair_QUMARK(
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:749"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin #makeLetrec
                    ___lambda = lambda { |_lp| 
                        _lp                         = 
                          Proc.new { |_lists| 
                              begin #makeLet
                                ___lambda = lambda { |_tails| 
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 753 );
                                          _pair_QUMARK(
                                              begin
                                                  trampCall(_tails)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:753"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                     ) then
                                        begin  #makeBegin
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 754 );
                                                trampCall( self._apply_METHOD(  'apply',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_apply') then
                                                        trampCall(@_apply)
                                                      else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:754"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_proc)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:754"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      begin
                                                          trampCall(_lists)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:754"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 755 );
                                                delayCall( '_lp',  'lp',
                                                    begin
                                                        trampCall(_lp)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:755"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_tails)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:755"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             )
                                            end
                                        end
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 752 );
                                          trampCall( self.__PAMARKcdrs_METHOD(  '%cdrs',
                                              begin
                                                if @global_lisp_binding.has_key?('__PAMARKcdrs') then
                                                  trampCall(@__PAMARKcdrs)
                                                else raise NameError.new( "Error: undefined variable %cdrs", "%cdrs" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:752"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                    trampCall(_lists)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:752"] + __e.backtrace ) ; raise __e
                                                end
                                          ]
                                                       ))
                                      end
                                           )
                              end
                          }
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 751 );
                            delayCall( '_lp',  'lp',
                                begin
                                    trampCall(_lp)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:751"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 751 );
                                      _cons(
                                          begin
                                              trampCall(_lis1)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:751"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          begin
                                              trampCall(_lists)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:751"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                            ]
                                         )
                        end
                    } ; ___lambda.call(
                    nil
                               )
                  end
              else
                  begin #makeLetrec
                    ___lambda = lambda { |_lp| 
                        _lp                         = 
                          Proc.new { |_lis| 
                              if ( 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 759 );
                                    _not(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 759 );
                                            trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                                begin
                                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                    trampCall(@_null_MIMARKlist_QUMARK)
                                                  else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:759"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_lis)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:759"] + __e.backtrace ) ; raise __e
                                                  end
                                            ]
                                                         ))
                                        end
                                    )
                                end
                               ) then
                                  begin #makeLet
                                    ___lambda = lambda { |_tail| 
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 761 );
                                            trampCall( callProcedure(  '_proc',  'proc',
                                                begin
                                                    trampCall(_proc)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:761"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_lis)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:761"] + __e.backtrace ) ; raise __e
                                                  end
                                            ]
                                                         ))
                                        end
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 762 );
                                            delayCall( '_lp',  'lp',
                                                begin
                                                    trampCall(_lp)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:762"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_tail)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:762"] + __e.backtrace ) ; raise __e
                                                  end
                                            ]
                                                         )
                                        end
                                    } ; ___lambda.call(
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 760 );
                                              _cdr(
                                                  begin
                                                      trampCall(_lis)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:760"] + __e.backtrace ) ; raise __e
                                                  end
                                              )
                                          end
                                               )
                                  end
                              end
                          }
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 758 );
                            delayCall( '_lp',  'lp',
                                begin
                                    trampCall(_lp)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:758"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_lis1)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:758"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         )
                        end
                    } ; ___lambda.call(
                    nil
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._map_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_map_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_map_EXMARK'] = self.method( :_map_EXMARK_METHOD )
    @_map_EXMARK = 
    trampCall(
          Proc.new { |_f,_lis1,*__rest__| _lists = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 767 );
                    _pair_QUMARK(
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:767"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin #makeLetrec
                    ___lambda = lambda { |_lp| 
                        _lp                         = 
                          Proc.new { |_lis1,_lists| 
                              if ( 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 769 );
                                    _not(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 769 );
                                            trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                                begin
                                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                    trampCall(@_null_MIMARKlist_QUMARK)
                                                  else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:769"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_lis1)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:769"] + __e.backtrace ) ; raise __e
                                                  end
                                            ]
                                                         ))
                                        end
                                    )
                                end
                               ) then
                                  begin
                                    embedBacktraceInfo( "", 1 );
                                      trampCall( self._call_MIMARKwith_MIMARKvalues_METHOD(  'call-with-values',
                                          begin
                                            if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                              trampCall(@_call_MIMARKwith_MIMARKvalues)
                                            else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            Proc.new { || 
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 770 );
                                                    trampCall( self.__PAMARKcars_PLMARKcdrs_SLMARKno_MIMARKtest_METHOD(  '%cars+cdrs/no-test',
                                                        begin
                                                          if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs_SLMARKno_MIMARKtest') then
                                                            trampCall(@__PAMARKcars_PLMARKcdrs_SLMARKno_MIMARKtest)
                                                          else raise NameError.new( "Error: undefined variable %cars+cdrs/no-test", "%cars+cdrs/no-test" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:770"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                              trampCall(_lists)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:770"] + __e.backtrace ) ; raise __e
                                                          end
                                                    ]
                                                                 ))
                                                end
                                            }                                          ,
                                            Proc.new { |_heads,_tails| 
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 771 );
                                                    _set_MIMARKcar_EXMARK(
                                                        begin
                                                            trampCall(_lis1)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:771"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 771 );
                                                            trampCall( self._apply_METHOD(  'apply',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_apply') then
                                                                    trampCall(@_apply)
                                                                  else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:771"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  begin
                                                                      trampCall(_f)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:771"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 771 );
                                                                      _car(
                                                                          begin
                                                                              trampCall(_lis1)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:771"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                      )
                                                                  end                                                                ,
                                                                  begin
                                                                      trampCall(_heads)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:771"] + __e.backtrace ) ; raise __e
                                                                  end
                                                            ]
                                                                         ))
                                                        end
                                                    )
                                                end
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 772 );
                                                    trampCall( callProcedure(  '_lp',  'lp',
                                                        begin
                                                            trampCall(_lp)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:772"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 772 );
                                                              _cdr(
                                                                  begin
                                                                      trampCall(_lis1)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:772"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              )
                                                          end                                                        ,
                                                          begin
                                                              trampCall(_tails)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:772"] + __e.backtrace ) ; raise __e
                                                          end
                                                    ]
                                                                 ))
                                                end
                                            }
                                      ]
                                                   ))
                                  end
                              end
                          }
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 768 );
                            trampCall( callProcedure(  '_lp',  'lp',
                                begin
                                    trampCall(_lp)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:768"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_lis1)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:768"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  begin
                                      trampCall(_lists)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:768"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         ))
                        end
                    } ; ___lambda.call(
                    nil
                               )
                  end
              else
                  begin
                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 775 );
                      trampCall( self._pair_MIMARKfor_MIMARKeach_METHOD(  'pair-for-each',
                          begin
                            if @global_lisp_binding.has_key?('_pair_MIMARKfor_MIMARKeach') then
                              trampCall(@_pair_MIMARKfor_MIMARKeach)
                            else raise NameError.new( "Error: undefined variable pair-for-each", "pair-for-each" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:775"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            Proc.new { |_pair| 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 775 );
                                    _set_MIMARKcar_EXMARK(
                                        begin
                                            trampCall(_pair)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:775"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 775 );
                                            trampCall( callProcedure(  '_f',  'f',
                                                begin
                                                    trampCall(_f)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:775"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 775 );
                                                      _car(
                                                          begin
                                                              trampCall(_pair)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:775"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                            ]
                                                         ))
                                        end
                                    )
                                end
                            }                          ,
                            begin
                                trampCall(_lis1)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:775"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   ))
                  end
              end
              begin
                  trampCall(_lis1)
                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:776"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._filter_MIMARKmap_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_filter_MIMARKmap', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_filter_MIMARKmap'] = self.method( :_filter_MIMARKmap_METHOD )
    @_filter_MIMARKmap = 
    trampCall(
          Proc.new { |_f,_lis1,*__rest__| _lists = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 782 );
                    _pair_QUMARK(
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:782"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin #makeLetrec
                    ___lambda = lambda { |_recur| 
                        _recur                         = 
                          Proc.new { |_lists| 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  delayCall( '_call_MIMARKwith_MIMARKvalues',  'call-with-values',
                                      begin
                                        if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                          trampCall(@_call_MIMARKwith_MIMARKvalues)
                                        else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        Proc.new { || 
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 784 );
                                                trampCall( self.__PAMARKcars_PLMARKcdrs_METHOD(  '%cars+cdrs',
                                                    begin
                                                      if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs') then
                                                        trampCall(@__PAMARKcars_PLMARKcdrs)
                                                      else raise NameError.new( "Error: undefined variable %cars+cdrs", "%cars+cdrs" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:784"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_lists)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:784"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end
                                        }                                      ,
                                        Proc.new { |_cars,_cdrs| 
                                            if ( 
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 785 );
                                                  _pair_QUMARK(
                                                      begin
                                                          trampCall(_cars)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:785"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end
                                             ) then
                                                if ( 
                                                  begin #execFunc
                                                      def self.___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30280_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30280', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                                                      @global_lisp_binding['___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30280'] = self.method( :___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30280_METHOD )
                                                    @___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30280 = 
                                                    trampCall(
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 786 );
                                                              trampCall( self._apply_METHOD(  'apply',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_apply') then
                                                                      trampCall(@_apply)
                                                                    else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:786"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                    begin
                                                                        trampCall(_f)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:786"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    begin
                                                                        trampCall(_cars)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:786"] + __e.backtrace ) ; raise __e
                                                                    end
                                                              ]
                                                                           ))
                                                          end
                                                    )
                                                  end
                                                 ) then
                                                    trampCall( callProcedure( nil, 'anonymouse', 
                                                        Proc.new { |_x| 
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 786 );
                                                                _cons(
                                                                    begin
                                                                        trampCall(_x)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:786"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 786 );
                                                                        trampCall( callProcedure(  '_recur',  'recur',
                                                                            begin
                                                                                trampCall(_recur)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:786"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                  trampCall(_cdrs)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:786"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end
                                                                )
                                                            end
                                                        }                                                      ,
                                                    [
                                                          begin
                                                            if @global_lisp_binding.has_key?('___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30280') then
                                                              trampCall(@___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30280)
                                                            else raise NameError.new( "Error: undefined variable __gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30280", "__gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30280" ) end
                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                          end
                                                    ]
                                                              ))
                                                else
                                                    if ( 
                                                    true
                                                     ) then
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 787 );
                                                              trampCall( callProcedure(  '_recur',  'recur',
                                                                  begin
                                                                      trampCall(_recur)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:787"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                    begin
                                                                        trampCall(_cdrs)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:787"] + __e.backtrace ) ; raise __e
                                                                    end
                                                              ]
                                                                           ))
                                                          end
                                                    else
                                                        Cell.new()
                                                    end
                                                end
                                            else
                                              Cell.new()
                                            end
                                        }
                                  ]
                                               )
                              end
                          }
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 783 );
                            delayCall( '_recur',  'recur',
                                begin
                                    trampCall(_recur)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:783"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 783 );
                                      _cons(
                                          begin
                                              trampCall(_lis1)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:783"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          begin
                                              trampCall(_lists)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:783"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                            ]
                                         )
                        end
                    } ; ___lambda.call(
                    nil
                               )
                  end
              else
                  begin
                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 791 );
                      delayCall( '__PAMARKfilter_MIMARKmap',  '%filter-map',
                          begin
                            if @global_lisp_binding.has_key?('__PAMARKfilter_MIMARKmap') then
                              trampCall(@__PAMARKfilter_MIMARKmap)
                            else raise NameError.new( "Error: undefined variable %filter-map", "%filter-map" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:791"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                                trampCall(_f)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:791"] + __e.backtrace ) ; raise __e
                            end                          ,
                            begin
                                trampCall(_lis1)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:791"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._map_MIMARKin_MIMARKorder_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_map_MIMARKin_MIMARKorder', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_map_MIMARKin_MIMARKorder'] = self.method( :_map_MIMARKin_MIMARKorder_METHOD )
    @_map_MIMARKin_MIMARKorder = 
    trampCall(
          Proc.new { |_f,_lis1,*__rest__| _lists = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 799 );
                    _pair_QUMARK(
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:799"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin #makeLetrec
                    ___lambda = lambda { |_recur| 
                        _recur                         = 
                          Proc.new { |_lists| 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  delayCall( '_call_MIMARKwith_MIMARKvalues',  'call-with-values',
                                      begin
                                        if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                          trampCall(@_call_MIMARKwith_MIMARKvalues)
                                        else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        Proc.new { || 
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 801 );
                                                trampCall( self.__PAMARKcars_PLMARKcdrs_METHOD(  '%cars+cdrs',
                                                    begin
                                                      if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs') then
                                                        trampCall(@__PAMARKcars_PLMARKcdrs)
                                                      else raise NameError.new( "Error: undefined variable %cars+cdrs", "%cars+cdrs" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:801"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_lists)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:801"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end
                                        }                                      ,
                                        Proc.new { |_cars,_cdrs| 
                                            if ( 
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 802 );
                                                  _pair_QUMARK(
                                                      begin
                                                          trampCall(_cars)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:802"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end
                                             ) then
                                                begin #makeLet
                                                  ___lambda = lambda { |_x| 
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 804 );
                                                          _cons(
                                                              begin
                                                                  trampCall(_x)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:804"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 804 );
                                                                  trampCall( callProcedure(  '_recur',  'recur',
                                                                      begin
                                                                          trampCall(_recur)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:804"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                  [
                                                                        begin
                                                                            trampCall(_cdrs)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:804"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                  ]
                                                                               ))
                                                              end
                                                          )
                                                      end
                                                  } ; ___lambda.call(
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 803 );
                                                            trampCall( self._apply_METHOD(  'apply',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_apply') then
                                                                    trampCall(@_apply)
                                                                  else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:803"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  begin
                                                                      trampCall(_f)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:803"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  begin
                                                                      trampCall(_cars)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:803"] + __e.backtrace ) ; raise __e
                                                                  end
                                                            ]
                                                                         ))
                                                        end
                                                             )
                                                end
                                            else
                                              Cell.new()
                                            end
                                        }
                                  ]
                                               )
                              end
                          }
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 800 );
                            delayCall( '_recur',  'recur',
                                begin
                                    trampCall(_recur)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:800"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 800 );
                                      _cons(
                                          begin
                                              trampCall(_lis1)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:800"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          begin
                                              trampCall(_lists)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:800"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                            ]
                                         )
                        end
                    } ; ___lambda.call(
                    nil
                               )
                  end
              else
                  begin
                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 808 );
                      delayCall( '__PAMARKmap',  '%map',
                          begin
                            if @global_lisp_binding.has_key?('__PAMARKmap') then
                              trampCall(@__PAMARKmap)
                            else raise NameError.new( "Error: undefined variable %map", "%map" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:808"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                                trampCall(_f)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:808"] + __e.backtrace ) ; raise __e
                            end                          ,
                            begin
                                trampCall(_lis1)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:808"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._for_MIMARKeach_MIMARKin_MIMARKorder_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_for_MIMARKeach_MIMARKin_MIMARKorder', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_for_MIMARKeach_MIMARKin_MIMARKorder'] = self.method( :_for_MIMARKeach_MIMARKin_MIMARKorder_METHOD )
    @_for_MIMARKeach_MIMARKin_MIMARKorder = 
    trampCall(
          Proc.new { |_f,_lis1,*__rest__| _lists = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 816 );
                    _pair_QUMARK(
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:816"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin #makeLetrec
                    ___lambda = lambda { |_recur| 
                        _recur                         = 
                          Proc.new { |_lists| 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  delayCall( '_call_MIMARKwith_MIMARKvalues',  'call-with-values',
                                      begin
                                        if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                          trampCall(@_call_MIMARKwith_MIMARKvalues)
                                        else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        Proc.new { || 
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 818 );
                                                trampCall( self.__PAMARKcars_PLMARKcdrs_METHOD(  '%cars+cdrs',
                                                    begin
                                                      if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs') then
                                                        trampCall(@__PAMARKcars_PLMARKcdrs)
                                                      else raise NameError.new( "Error: undefined variable %cars+cdrs", "%cars+cdrs" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:818"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_lists)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:818"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end
                                        }                                      ,
                                        Proc.new { |_cars,_cdrs| 
                                            if ( 
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 819 );
                                                  _pair_QUMARK(
                                                      begin
                                                          trampCall(_cars)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:819"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end
                                             ) then
                                                begin #makeLet
                                                  ___lambda = lambda { |_x| 
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 821 );
                                                          _cons(
                                                              begin
                                                                  trampCall(_x)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:821"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 821 );
                                                                  trampCall( callProcedure(  '_recur',  'recur',
                                                                      begin
                                                                          trampCall(_recur)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:821"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                  [
                                                                        begin
                                                                            trampCall(_cdrs)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:821"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                  ]
                                                                               ))
                                                              end
                                                          )
                                                      end
                                                  } ; ___lambda.call(
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 820 );
                                                            trampCall( self._apply_METHOD(  'apply',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_apply') then
                                                                    trampCall(@_apply)
                                                                  else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:820"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  begin
                                                                      trampCall(_f)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:820"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  begin
                                                                      trampCall(_cars)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:820"] + __e.backtrace ) ; raise __e
                                                                  end
                                                            ]
                                                                         ))
                                                        end
                                                             )
                                                end
                                            else
                                              Cell.new()
                                            end
                                        }
                                  ]
                                               )
                              end
                          }
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 817 );
                            delayCall( '_recur',  'recur',
                                begin
                                    trampCall(_recur)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:817"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 817 );
                                      _cons(
                                          begin
                                              trampCall(_lis1)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:817"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          begin
                                              trampCall(_lists)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:817"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                            ]
                                         )
                        end
                    } ; ___lambda.call(
                    nil
                               )
                  end
              else
                  begin
                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 825 );
                      delayCall( '__PAMARKfor_MIMARKeach',  '%for-each',
                          begin
                            if @global_lisp_binding.has_key?('__PAMARKfor_MIMARKeach') then
                              trampCall(@__PAMARKfor_MIMARKeach)
                            else raise NameError.new( "Error: undefined variable %for-each", "%for-each" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:825"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                                trampCall(_f)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:825"] + __e.backtrace ) ; raise __e
                            end                          ,
                            begin
                                trampCall(_lis1)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:825"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._map_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_map', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_map'] = self.method( :_map_METHOD )
    @_map = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('_map_MIMARKin_MIMARKorder') then
              trampCall(@_map_MIMARKin_MIMARKorder)
            else raise NameError.new( "Error: undefined variable map-in-order", "map-in-order" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._for_MIMARKeach_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_for_MIMARKeach', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_for_MIMARKeach'] = self.method( :_for_MIMARKeach_METHOD )
    @_for_MIMARKeach = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('_for_MIMARKeach_MIMARKin_MIMARKorder') then
              trampCall(@_for_MIMARKeach_MIMARKin_MIMARKorder)
            else raise NameError.new( "Error: undefined variable for-each-in-order", "for-each-in-order" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:829"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._filter_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_filter', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_filter'] = self.method( :_filter_METHOD )
    @_filter = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('__PAMARKfilter') then
              trampCall(@__PAMARKfilter)
            else raise NameError.new( "Error: undefined variable %filter", "%filter" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:851"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._filter_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_filter_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_filter_EXMARK'] = self.method( :_filter_EXMARK_METHOD )
    @_filter_EXMARK = 
    trampCall(
          Proc.new { |_pred,_lis| 
              begin #makeLetrec
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_ans| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 897 );
                                trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                        trampCall(@_null_MIMARKlist_QUMARK)
                                      else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:897"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_ans)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:897"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                           ) then
                                begin
                                    trampCall(_ans)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:897"] + __e.backtrace ) ; raise __e
                                end
                          else
                              if ( 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 898 );
                                    _not(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 898 );
                                            trampCall( callProcedure(  '_pred',  'pred',
                                                begin
                                                    trampCall(_pred)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:898"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 898 );
                                                      _car(
                                                          begin
                                                              trampCall(_ans)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:898"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                            ]
                                                         ))
                                        end
                                    )
                                end
                               ) then
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 898 );
                                        delayCall( '_lp',  'lp',
                                            begin
                                                trampCall(_lp)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:898"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 898 );
                                                  _cdr(
                                                      begin
                                                          trampCall(_ans)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:898"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end
                                        ]
                                                     )
                                    end
                              else
                                  if ( 
                                  true
                                   ) then
                                        begin #makeLetrec
                                          ___lambda = lambda { |_scan_MIMARKin,_scan_MIMARKout| 
                                              _scan_MIMARKin                                               = 
                                                Proc.new { |_prev,_lis| 
                                                    if ( 
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 910 );
                                                          _pair_QUMARK(
                                                              begin
                                                                  trampCall(_lis)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:910"] + __e.backtrace ) ; raise __e
                                                              end
                                                          )
                                                      end
                                                     ) then
                                                        if ( 
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 911 );
                                                              trampCall( callProcedure(  '_pred',  'pred',
                                                                  begin
                                                                      trampCall(_pred)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:911"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 911 );
                                                                        _car(
                                                                            begin
                                                                                trampCall(_lis)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:911"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                        )
                                                                    end
                                                              ]
                                                                           ))
                                                          end
                                                         ) then
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 912 );
                                                                delayCall( '_scan_MIMARKin',  'scan-in',
                                                                    begin
                                                                        trampCall(_scan_MIMARKin)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:912"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                      begin
                                                                          trampCall(_lis)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:912"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 912 );
                                                                          _cdr(
                                                                              begin
                                                                                  trampCall(_lis)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:912"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          )
                                                                      end
                                                                ]
                                                                             )
                                                            end
                                                        else
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 913 );
                                                                delayCall( '_scan_MIMARKout',  'scan-out',
                                                                    begin
                                                                        trampCall(_scan_MIMARKout)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:913"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                      begin
                                                                          trampCall(_prev)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:913"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 913 );
                                                                          _cdr(
                                                                              begin
                                                                                  trampCall(_lis)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:913"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          )
                                                                      end
                                                                ]
                                                                             )
                                                            end
                                                        end
                                                    end
                                                }
                                              _scan_MIMARKout                                               = 
                                                Proc.new { |_prev,_lis| 
                                                    begin #makeLetrec
                                                      ___lambda = lambda { |_lp| 
                                                          _lp                                                           = 
                                                            Proc.new { |_lis| 
                                                                if ( 
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 916 );
                                                                      _pair_QUMARK(
                                                                          begin
                                                                              trampCall(_lis)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:916"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                      )
                                                                  end
                                                                 ) then
                                                                    if ( 
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 917 );
                                                                          trampCall( callProcedure(  '_pred',  'pred',
                                                                              begin
                                                                                  trampCall(_pred)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:917"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                                begin
                                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 917 );
                                                                                    _car(
                                                                                        begin
                                                                                            trampCall(_lis)
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:917"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                    )
                                                                                end
                                                                          ]
                                                                                       ))
                                                                      end
                                                                     ) then
                                                                        begin  #makeBegin
                                                                            begin
                                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 918 );
                                                                                _set_MIMARKcdr_EXMARK(
                                                                                    begin
                                                                                        trampCall(_prev)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:918"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    begin
                                                                                        trampCall(_lis)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:918"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                )
                                                                            end
                                                                            begin
                                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 919 );
                                                                                delayCall( '_scan_MIMARKin',  'scan-in',
                                                                                    begin
                                                                                        trampCall(_scan_MIMARKin)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:919"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                [
                                                                                      begin
                                                                                          trampCall(_lis)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:919"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                      begin
                                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 919 );
                                                                                          _cdr(
                                                                                              begin
                                                                                                  trampCall(_lis)
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:919"] + __e.backtrace ) ; raise __e
                                                                                              end
                                                                                          )
                                                                                      end
                                                                                ]
                                                                                             )
                                                                            end
                                                                        end
                                                                    else
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 920 );
                                                                            delayCall( '_lp',  'lp',
                                                                                begin
                                                                                    trampCall(_lp)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:920"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  begin
                                                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 920 );
                                                                                      _cdr(
                                                                                          begin
                                                                                              trampCall(_lis)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:920"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                      )
                                                                                  end
                                                                            ]
                                                                                         )
                                                                        end
                                                                    end
                                                                else
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 921 );
                                                                        delayCall( '_set_MIMARKcdr_EXMARK',  'set-cdr!',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_set_MIMARKcdr_EXMARK') then
                                                                                trampCall(@_set_MIMARKcdr_EXMARK)
                                                                              else raise NameError.new( "Error: undefined variable set-cdr!", "set-cdr!" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:921"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                  trampCall(_prev)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:921"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              begin
                                                                                  trampCall(_lis)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:921"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                        ]
                                                                                     )
                                                                    end
                                                                end
                                                            }
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 915 );
                                                              delayCall( '_lp',  'lp',
                                                                  begin
                                                                      trampCall(_lp)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:915"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                    begin
                                                                        trampCall(_lis)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:915"] + __e.backtrace ) ; raise __e
                                                                    end
                                                              ]
                                                                           )
                                                          end
                                                      } ; ___lambda.call(
                                                      nil
                                                                 )
                                                    end
                                                }
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 922 );
                                                  trampCall( callProcedure(  '_scan_MIMARKin',  'scan-in',
                                                      begin
                                                          trampCall(_scan_MIMARKin)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:922"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                        begin
                                                            trampCall(_ans)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:922"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 922 );
                                                            _cdr(
                                                                begin
                                                                    trampCall(_ans)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:922"] + __e.backtrace ) ; raise __e
                                                                end
                                                            )
                                                        end
                                                  ]
                                                               ))
                                              end
                                              begin
                                                  trampCall(_ans)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:923"] + __e.backtrace ) ; raise __e
                                              end
                                          } ; ___lambda.call(
                                          nil,nil
                                                     )
                                        end
                                  else
                                      Cell.new()
                                  end
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 896 );
                        delayCall( '_lp',  'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:896"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:896"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._partition_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_partition', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_partition'] = self.method( :_partition_METHOD )
    @_partition = 
    trampCall(
          Proc.new { |_pred,_lis| 
              begin #makeLetrec
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lis| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 933 );
                                trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                        trampCall(@_null_MIMARKlist_QUMARK)
                                      else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:933"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:933"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                           ) then
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 933 );
                                  delayCall( '_values',  'values',
                                      begin
                                        if @global_lisp_binding.has_key?('_values') then
                                          trampCall(@_values)
                                        else raise NameError.new( "Error: undefined variable values", "values" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:933"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:933"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:933"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               )
                              end
                          else
                              begin #makeLet
                                ___lambda = lambda { |_elt,_tail| 
                                    begin
                                      embedBacktraceInfo( "", 1 );
                                        delayCall( '_call_MIMARKwith_MIMARKvalues',  'call-with-values',
                                            begin
                                              if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                trampCall(@_call_MIMARKwith_MIMARKvalues)
                                              else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              Proc.new { || 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 936 );
                                                      trampCall( callProcedure(  '_recur',  'recur',
                                                          begin
                                                              trampCall(_recur)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:936"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_tail)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:936"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                              }                                            ,
                                              Proc.new { |_in,_out| 
                                                  if ( 
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 937 );
                                                        trampCall( callProcedure(  '_pred',  'pred',
                                                            begin
                                                                trampCall(_pred)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:937"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                        [
                                                              begin
                                                                  trampCall(_elt)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:937"] + __e.backtrace ) ; raise __e
                                                              end
                                                        ]
                                                                     ))
                                                    end
                                                   ) then
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 938 );
                                                          trampCall( self._values_METHOD(  'values',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_values') then
                                                                  trampCall(@_values)
                                                                else raise NameError.new( "Error: undefined variable values", "values" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:938"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                          [
                                                                if ( 
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 938 );
                                                                      _pair_QUMARK(
                                                                          begin
                                                                              trampCall(_out)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:938"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                      )
                                                                  end
                                                                 ) then
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 938 );
                                                                        _cons(
                                                                            begin
                                                                                trampCall(_elt)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:938"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            begin
                                                                                trampCall(_in)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:938"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                        )
                                                                    end
                                                                else
                                                                    begin
                                                                        trampCall(_lis)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:938"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                end                                                              ,
                                                                begin
                                                                    trampCall(_out)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:938"] + __e.backtrace ) ; raise __e
                                                                end
                                                          ]
                                                                       ))
                                                      end
                                                  else
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 939 );
                                                          trampCall( self._values_METHOD(  'values',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_values') then
                                                                  trampCall(@_values)
                                                                else raise NameError.new( "Error: undefined variable values", "values" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:939"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                          [
                                                                begin
                                                                    trampCall(_in)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:939"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                if ( 
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 939 );
                                                                      _pair_QUMARK(
                                                                          begin
                                                                              trampCall(_in)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:939"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                      )
                                                                  end
                                                                 ) then
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 939 );
                                                                        _cons(
                                                                            begin
                                                                                trampCall(_elt)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:939"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            begin
                                                                                trampCall(_out)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:939"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                        )
                                                                    end
                                                                else
                                                                    begin
                                                                        trampCall(_lis)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:939"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                end
                                                          ]
                                                                       ))
                                                      end
                                                  end
                                              }
                                        ]
                                                     )
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 934 );
                                          _car(
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:934"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end                                    ,
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 935 );
                                          _cdr(
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:935"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                           )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 932 );
                        delayCall( '_recur',  'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:932"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:932"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._partition_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_partition_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_partition_EXMARK'] = self.method( :_partition_EXMARK_METHOD )
    @_partition_EXMARK = 
    trampCall(
          Proc.new { |_pred,_lis| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 966 );
                    trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                        begin
                          if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                            trampCall(@_null_MIMARKlist_QUMARK)
                          else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:966"] + __e.backtrace ) ; raise __e
                        end                      ,
                    [
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:966"] + __e.backtrace ) ; raise __e
                          end
                    ]
                                 ))
                end
               ) then
                  begin
                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 966 );
                      delayCall( '_values',  'values',
                          begin
                            if @global_lisp_binding.has_key?('_values') then
                              trampCall(@_values)
                            else raise NameError.new( "Error: undefined variable values", "values" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:966"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                                trampCall(_lis)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:966"] + __e.backtrace ) ; raise __e
                            end                          ,
                            begin
                                trampCall(_lis)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:966"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   )
                  end
              else
                  begin #makeLetrec
                    ___lambda = lambda { |_scan_MIMARKin,_scan_MIMARKout| 
                        _scan_MIMARKin                         = 
                          Proc.new { |_in_MIMARKprev,_out_MIMARKprev,_lis| 
                              begin #makeLetrec
                                ___lambda = lambda { |_lp| 
                                    _lp                                     = 
                                      Proc.new { |_in_MIMARKprev,_lis| 
                                          if ( 
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 974 );
                                                _pair_QUMARK(
                                                    begin
                                                        trampCall(_lis)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:974"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                           ) then
                                              if ( 
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 975 );
                                                    trampCall( callProcedure(  '_pred',  'pred',
                                                        begin
                                                            trampCall(_pred)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:975"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 975 );
                                                              _car(
                                                                  begin
                                                                      trampCall(_lis)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:975"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              )
                                                          end
                                                    ]
                                                                 ))
                                                end
                                               ) then
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 976 );
                                                      delayCall( '_lp',  'lp',
                                                          begin
                                                              trampCall(_lp)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:976"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_lis)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:976"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 976 );
                                                                _cdr(
                                                                    begin
                                                                        trampCall(_lis)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:976"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                      ]
                                                                   )
                                                  end
                                              else
                                                  begin  #makeBegin
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 977 );
                                                          _set_MIMARKcdr_EXMARK(
                                                              begin
                                                                  trampCall(_out_MIMARKprev)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:977"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              begin
                                                                  trampCall(_lis)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:977"] + __e.backtrace ) ; raise __e
                                                              end
                                                          )
                                                      end
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 978 );
                                                          delayCall( '_scan_MIMARKout',  'scan-out',
                                                              begin
                                                                  trampCall(_scan_MIMARKout)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:978"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                          [
                                                                begin
                                                                    trampCall(_in_MIMARKprev)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:978"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                begin
                                                                    trampCall(_lis)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:978"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 978 );
                                                                    _cdr(
                                                                        begin
                                                                            trampCall(_lis)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:978"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    )
                                                                end
                                                          ]
                                                                       )
                                                      end
                                                  end
                                              end
                                          else
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 979 );
                                                  delayCall( '_set_MIMARKcdr_EXMARK',  'set-cdr!',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_set_MIMARKcdr_EXMARK') then
                                                          trampCall(@_set_MIMARKcdr_EXMARK)
                                                        else raise NameError.new( "Error: undefined variable set-cdr!", "set-cdr!" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:979"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                        begin
                                                            trampCall(_out_MIMARKprev)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:979"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        begin
                                                            trampCall(_lis)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:979"] + __e.backtrace ) ; raise __e
                                                        end
                                                  ]
                                                               )
                                              end
                                          end
                                      }
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 973 );
                                        delayCall( '_lp',  'lp',
                                            begin
                                                trampCall(_lp)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:973"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_in_MIMARKprev)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:973"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:973"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     )
                                    end
                                } ; ___lambda.call(
                                nil
                                           )
                              end
                          }
                        _scan_MIMARKout                         = 
                          Proc.new { |_in_MIMARKprev,_out_MIMARKprev,_lis| 
                              begin #makeLetrec
                                ___lambda = lambda { |_lp| 
                                    _lp                                     = 
                                      Proc.new { |_out_MIMARKprev,_lis| 
                                          if ( 
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 983 );
                                                _pair_QUMARK(
                                                    begin
                                                        trampCall(_lis)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:983"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                           ) then
                                              if ( 
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 984 );
                                                    trampCall( callProcedure(  '_pred',  'pred',
                                                        begin
                                                            trampCall(_pred)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:984"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 984 );
                                                              _car(
                                                                  begin
                                                                      trampCall(_lis)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:984"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              )
                                                          end
                                                    ]
                                                                 ))
                                                end
                                               ) then
                                                  begin  #makeBegin
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 985 );
                                                          _set_MIMARKcdr_EXMARK(
                                                              begin
                                                                  trampCall(_in_MIMARKprev)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:985"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              begin
                                                                  trampCall(_lis)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:985"] + __e.backtrace ) ; raise __e
                                                              end
                                                          )
                                                      end
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 986 );
                                                          delayCall( '_scan_MIMARKin',  'scan-in',
                                                              begin
                                                                  trampCall(_scan_MIMARKin)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:986"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                          [
                                                                begin
                                                                    trampCall(_lis)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:986"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                begin
                                                                    trampCall(_out_MIMARKprev)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:986"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 986 );
                                                                    _cdr(
                                                                        begin
                                                                            trampCall(_lis)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:986"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    )
                                                                end
                                                          ]
                                                                       )
                                                      end
                                                  end
                                              else
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 987 );
                                                      delayCall( '_lp',  'lp',
                                                          begin
                                                              trampCall(_lp)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:987"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_lis)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:987"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 987 );
                                                                _cdr(
                                                                    begin
                                                                        trampCall(_lis)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:987"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                      ]
                                                                   )
                                                  end
                                              end
                                          else
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 988 );
                                                  delayCall( '_set_MIMARKcdr_EXMARK',  'set-cdr!',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_set_MIMARKcdr_EXMARK') then
                                                          trampCall(@_set_MIMARKcdr_EXMARK)
                                                        else raise NameError.new( "Error: undefined variable set-cdr!", "set-cdr!" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:988"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                        begin
                                                            trampCall(_in_MIMARKprev)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:988"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        begin
                                                            trampCall(_lis)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:988"] + __e.backtrace ) ; raise __e
                                                        end
                                                  ]
                                                               )
                                              end
                                          end
                                      }
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 982 );
                                        delayCall( '_lp',  'lp',
                                            begin
                                                trampCall(_lp)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:982"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_out_MIMARKprev)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:982"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:982"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     )
                                    end
                                } ; ___lambda.call(
                                nil
                                           )
                              end
                          }
                        if ( 
                          begin
                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 991 );
                              trampCall( callProcedure(  '_pred',  'pred',
                                  begin
                                      trampCall(_pred)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:991"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 991 );
                                        _car(
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:991"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    end
                              ]
                                           ))
                          end
                         ) then
                            begin #makeLetrec
                              ___lambda = lambda { |_lp| 
                                  _lp                                   = 
                                    Proc.new { |_prev_MIMARKl,_l| 
                                        if ( 
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 994 );
                                              _not(
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 994 );
                                                      _pair_QUMARK(
                                                          begin
                                                              trampCall(_l)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:994"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                              )
                                          end
                                         ) then
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 994 );
                                                  delayCall( '_values',  'values',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_values') then
                                                          trampCall(@_values)
                                                        else raise NameError.new( "Error: undefined variable values", "values" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:994"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                        begin
                                                            trampCall(_lis)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:994"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        begin
                                                            trampCall(_l)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:994"] + __e.backtrace ) ; raise __e
                                                        end
                                                  ]
                                                               )
                                              end
                                        else
                                            if ( 
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 995 );
                                                  trampCall( callProcedure(  '_pred',  'pred',
                                                      begin
                                                          trampCall(_pred)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:995"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 995 );
                                                            _car(
                                                                begin
                                                                    trampCall(_l)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:995"] + __e.backtrace ) ; raise __e
                                                                end
                                                            )
                                                        end
                                                  ]
                                                               ))
                                              end
                                             ) then
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 995 );
                                                      delayCall( '_lp',  'lp',
                                                          begin
                                                              trampCall(_lp)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:995"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_l)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:995"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 995 );
                                                                _cdr(
                                                                    begin
                                                                        trampCall(_l)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:995"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                      ]
                                                                   )
                                                  end
                                            else
                                                if ( 
                                                true
                                                 ) then
                                                    begin  #makeBegin
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 996 );
                                                            trampCall( callProcedure(  '_scan_MIMARKout',  'scan-out',
                                                                begin
                                                                    trampCall(_scan_MIMARKout)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:996"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  begin
                                                                      trampCall(_prev_MIMARKl)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:996"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  begin
                                                                      trampCall(_l)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:996"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 996 );
                                                                      _cdr(
                                                                          begin
                                                                              trampCall(_l)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:996"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                      )
                                                                  end
                                                            ]
                                                                         ))
                                                        end
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 997 );
                                                            delayCall( '_values',  'values',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_values') then
                                                                    trampCall(@_values)
                                                                  else raise NameError.new( "Error: undefined variable values", "values" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:997"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  begin
                                                                      trampCall(_lis)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:997"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  begin
                                                                      trampCall(_l)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:997"] + __e.backtrace ) ; raise __e
                                                                  end
                                                            ]
                                                                         )
                                                        end
                                                    end
                                                else
                                                    Cell.new()
                                                end
                                            end
                                        end
                                    }
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 993 );
                                      delayCall( '_lp',  'lp',
                                          begin
                                              trampCall(_lp)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:993"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:993"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 993 );
                                                _cdr(
                                                    begin
                                                        trampCall(_lis)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:993"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                      ]
                                                   )
                                  end
                              } ; ___lambda.call(
                              nil
                                         )
                            end
                        else
                            begin #makeLetrec
                              ___lambda = lambda { |_lp| 
                                  _lp                                   = 
                                    Proc.new { |_prev_MIMARKl,_l| 
                                        if ( 
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1001 );
                                              _not(
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1001 );
                                                      _pair_QUMARK(
                                                          begin
                                                              trampCall(_l)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1001"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                              )
                                          end
                                         ) then
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1001 );
                                                  delayCall( '_values',  'values',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_values') then
                                                          trampCall(@_values)
                                                        else raise NameError.new( "Error: undefined variable values", "values" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1001"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                        begin
                                                            trampCall(_l)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1001"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        begin
                                                            trampCall(_lis)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1001"] + __e.backtrace ) ; raise __e
                                                        end
                                                  ]
                                                               )
                                              end
                                        else
                                            if ( 
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1002 );
                                                  trampCall( callProcedure(  '_pred',  'pred',
                                                      begin
                                                          trampCall(_pred)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1002"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1002 );
                                                            _car(
                                                                begin
                                                                    trampCall(_l)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1002"] + __e.backtrace ) ; raise __e
                                                                end
                                                            )
                                                        end
                                                  ]
                                                               ))
                                              end
                                             ) then
                                                begin  #makeBegin
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1003 );
                                                        trampCall( callProcedure(  '_scan_MIMARKin',  'scan-in',
                                                            begin
                                                                trampCall(_scan_MIMARKin)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1003"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                        [
                                                              begin
                                                                  trampCall(_l)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1003"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              begin
                                                                  trampCall(_prev_MIMARKl)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1003"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1003 );
                                                                  _cdr(
                                                                      begin
                                                                          trampCall(_l)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1003"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                  )
                                                              end
                                                        ]
                                                                     ))
                                                    end
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1004 );
                                                        delayCall( '_values',  'values',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_values') then
                                                                trampCall(@_values)
                                                              else raise NameError.new( "Error: undefined variable values", "values" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1004"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                        [
                                                              begin
                                                                  trampCall(_l)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1004"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              begin
                                                                  trampCall(_lis)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1004"] + __e.backtrace ) ; raise __e
                                                              end
                                                        ]
                                                                     )
                                                    end
                                                end
                                            else
                                                if ( 
                                                true
                                                 ) then
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1005 );
                                                          delayCall( '_lp',  'lp',
                                                              begin
                                                                  trampCall(_lp)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1005"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                          [
                                                                begin
                                                                    trampCall(_l)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1005"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1005 );
                                                                    _cdr(
                                                                        begin
                                                                            trampCall(_l)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1005"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    )
                                                                end
                                                          ]
                                                                       )
                                                      end
                                                else
                                                    Cell.new()
                                                end
                                            end
                                        end
                                    }
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1000 );
                                      delayCall( '_lp',  'lp',
                                          begin
                                              trampCall(_lp)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1000"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1000"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1000 );
                                                _cdr(
                                                    begin
                                                        trampCall(_lis)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1000"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                      ]
                                                   )
                                  end
                              } ; ___lambda.call(
                              nil
                                         )
                            end
                        end
                    } ; ___lambda.call(
                    nil,nil
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._remove_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_remove', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_remove'] = self.method( :_remove_METHOD )
    @_remove = 
    trampCall(
          Proc.new { |_pred,_l| 
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1009 );
                  delayCall( '_filter',  'filter',
                      begin
                        if @global_lisp_binding.has_key?('_filter') then
                          trampCall(@_filter)
                        else raise NameError.new( "Error: undefined variable filter", "filter" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1009"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        Proc.new { |_x| 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1009 );
                                _not(
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1009 );
                                        trampCall( callProcedure(  '_pred',  'pred',
                                            begin
                                                trampCall(_pred)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1009"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_x)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1009"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     ))
                                    end
                                )
                            end
                        }                      ,
                        begin
                            trampCall(_l)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1009"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._remove_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_remove_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_remove_EXMARK'] = self.method( :_remove_EXMARK_METHOD )
    @_remove_EXMARK = 
    trampCall(
          Proc.new { |_pred,_l| 
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1010 );
                  delayCall( '_filter_EXMARK',  'filter!',
                      begin
                        if @global_lisp_binding.has_key?('_filter_EXMARK') then
                          trampCall(@_filter_EXMARK)
                        else raise NameError.new( "Error: undefined variable filter!", "filter!" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1010"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        Proc.new { |_x| 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1010 );
                                _not(
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1010 );
                                        trampCall( callProcedure(  '_pred',  'pred',
                                            begin
                                                trampCall(_pred)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1010"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_x)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1010"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     ))
                                    end
                                )
                            end
                        }                      ,
                        begin
                            trampCall(_l)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1010"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._delete_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_delete', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_delete'] = self.method( :_delete_METHOD )
    @_delete = 
    trampCall(
          Proc.new { |_x,_lis,*__rest__| _maybe_MIMARK_EQMARK = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |__EQMARK| 
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1033 );
                        delayCall( '_filter',  'filter',
                            begin
                              if @global_lisp_binding.has_key?('_filter') then
                                trampCall(@_filter)
                              else raise NameError.new( "Error: undefined variable filter", "filter" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1033"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              Proc.new { |_y| 
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1033 );
                                      _not(
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1033 );
                                              trampCall( callProcedure(  '__EQMARK',  '=',
                                                  begin
                                                      trampCall(__EQMARK)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1033"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(_x)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1033"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    begin
                                                        trampCall(_y)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1033"] + __e.backtrace ) ; raise __e
                                                    end
                                              ]
                                                           ))
                                          end
                                      )
                                  end
                              }                            ,
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1033"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                      begin #makeLet
                        ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30290| 
                            if ( 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _null_QUMARK(
                                      begin
                                          trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30290)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                             ) then
                                begin
                                  if @global_lisp_binding.has_key?('_equal_QUMARK') then
                                    trampCall(@_equal_QUMARK)
                                  else raise NameError.new( "Error: undefined variable equal?", "equal?" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1032"] + __e.backtrace ) ; raise __e
                                end
                            else
                                begin
                                  embedBacktraceInfo( "", 1 );
                                    delayCall( '_car',  'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable car", "car" ) end
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30290)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 )
                                end
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_maybe_MIMARK_EQMARK)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1032"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._delete_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_delete_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_delete_EXMARK'] = self.method( :_delete_EXMARK_METHOD )
    @_delete_EXMARK = 
    trampCall(
          Proc.new { |_x,_lis,*__rest__| _maybe_MIMARK_EQMARK = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |__EQMARK| 
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1037 );
                        delayCall( '_filter_EXMARK',  'filter!',
                            begin
                              if @global_lisp_binding.has_key?('_filter_EXMARK') then
                                trampCall(@_filter_EXMARK)
                              else raise NameError.new( "Error: undefined variable filter!", "filter!" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1037"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              Proc.new { |_y| 
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1037 );
                                      _not(
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1037 );
                                              trampCall( callProcedure(  '__EQMARK',  '=',
                                                  begin
                                                      trampCall(__EQMARK)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1037"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(_x)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1037"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    begin
                                                        trampCall(_y)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1037"] + __e.backtrace ) ; raise __e
                                                    end
                                              ]
                                                           ))
                                          end
                                      )
                                  end
                              }                            ,
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1037"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                      begin #makeLet
                        ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30291| 
                            if ( 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _null_QUMARK(
                                      begin
                                          trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30291)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                             ) then
                                begin
                                  if @global_lisp_binding.has_key?('_equal_QUMARK') then
                                    trampCall(@_equal_QUMARK)
                                  else raise NameError.new( "Error: undefined variable equal?", "equal?" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1036"] + __e.backtrace ) ; raise __e
                                end
                            else
                                begin
                                  embedBacktraceInfo( "", 1 );
                                    delayCall( '_car',  'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable car", "car" ) end
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30291)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 )
                                end
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_maybe_MIMARK_EQMARK)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1036"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._member_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_member', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_member'] = self.method( :_member_METHOD )
    @_member = 
    trampCall(
          Proc.new { |_x,_lis,*__rest__| _maybe_MIMARK_EQMARK = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |__EQMARK| 
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1042 );
                        delayCall( '_find_MIMARKtail',  'find-tail',
                            begin
                              if @global_lisp_binding.has_key?('_find_MIMARKtail') then
                                trampCall(@_find_MIMARKtail)
                              else raise NameError.new( "Error: undefined variable find-tail", "find-tail" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1042"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              Proc.new { |_y| 
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1042 );
                                      trampCall( callProcedure(  '__EQMARK',  '=',
                                          begin
                                              trampCall(__EQMARK)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1042"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_x)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1042"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            begin
                                                trampCall(_y)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1042"] + __e.backtrace ) ; raise __e
                                            end
                                      ]
                                                   ))
                                  end
                              }                            ,
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1042"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                      begin #makeLet
                        ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30292| 
                            if ( 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _null_QUMARK(
                                      begin
                                          trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30292)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                             ) then
                                begin
                                  if @global_lisp_binding.has_key?('_equal_QUMARK') then
                                    trampCall(@_equal_QUMARK)
                                  else raise NameError.new( "Error: undefined variable equal?", "equal?" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1041"] + __e.backtrace ) ; raise __e
                                end
                            else
                                begin
                                  embedBacktraceInfo( "", 1 );
                                    delayCall( '_car',  'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable car", "car" ) end
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30292)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 )
                                end
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_maybe_MIMARK_EQMARK)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1041"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._delete_MIMARKduplicates_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_delete_MIMARKduplicates', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_delete_MIMARKduplicates'] = self.method( :_delete_MIMARKduplicates_METHOD )
    @_delete_MIMARKduplicates = 
    trampCall(
          Proc.new { |_lis,*__rest__| _maybe_MIMARK_EQMARK = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |_elt_EQMARK| 
                    begin #makeLetrec
                      ___lambda = lambda { |_recur| 
                          _recur                           = 
                            Proc.new { |_lis| 
                                if ( 
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1064 );
                                      trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                          begin
                                            if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                              trampCall(@_null_MIMARKlist_QUMARK)
                                            else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1064"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1064"] + __e.backtrace ) ; raise __e
                                            end
                                      ]
                                                   ))
                                  end
                                 ) then
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1064"] + __e.backtrace ) ; raise __e
                                    end
                                else
                                    begin #makeLet
                                      ___lambda = lambda { |_x| 
                                          begin #makeLet
                                            ___lambda = lambda { |_tail| 
                                                begin #makeLet
                                                  ___lambda = lambda { |_new_MIMARKtail| 
                                                      if ( 
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1068 );
                                                            _eq_QUMARK(
                                                                begin
                                                                    trampCall(_tail)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1068"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                begin
                                                                    trampCall(_new_MIMARKtail)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1068"] + __e.backtrace ) ; raise __e
                                                                end
                                                            )
                                                        end
                                                       ) then
                                                          begin
                                                              trampCall(_lis)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1068"] + __e.backtrace ) ; raise __e
                                                          end
                                                      else
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1068 );
                                                              delayCall( '_cons',  'cons',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                      trampCall(@_cons)
                                                                    else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1068"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                    begin
                                                                        trampCall(_x)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1068"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    begin
                                                                        trampCall(_new_MIMARKtail)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1068"] + __e.backtrace ) ; raise __e
                                                                    end
                                                              ]
                                                                           )
                                                          end
                                                      end
                                                  } ; ___lambda.call(
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1067 );
                                                            trampCall( callProcedure(  '_recur',  'recur',
                                                                begin
                                                                    trampCall(_recur)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1067"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1067 );
                                                                      trampCall( self._delete_METHOD(  'delete',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_delete') then
                                                                              trampCall(@_delete)
                                                                            else raise NameError.new( "Error: undefined variable delete", "delete" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1067"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                      [
                                                                            begin
                                                                                trampCall(_x)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1067"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            begin
                                                                                trampCall(_tail)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1067"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            begin
                                                                                trampCall(_elt_EQMARK)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1067"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                      ]
                                                                                   ))
                                                                  end
                                                            ]
                                                                         ))
                                                        end
                                                             )
                                                end
                                            } ; ___lambda.call(
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1066 );
                                                      _cdr(
                                                          begin
                                                              trampCall(_lis)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1066"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                                       )
                                          end
                                      } ; ___lambda.call(
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1065 );
                                                _car(
                                                    begin
                                                        trampCall(_lis)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1065"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                                 )
                                    end
                                end
                            }
                          begin
                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1063 );
                              delayCall( '_recur',  'recur',
                                  begin
                                      trampCall(_recur)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1063"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1063"] + __e.backtrace ) ; raise __e
                                    end
                              ]
                                           )
                          end
                      } ; ___lambda.call(
                      nil
                                 )
                    end
                } ; ___lambda.call(
                      begin #makeLet
                        ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30293| 
                            if ( 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _null_QUMARK(
                                      begin
                                          trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30293)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                             ) then
                                begin
                                  if @global_lisp_binding.has_key?('_equal_QUMARK') then
                                    trampCall(@_equal_QUMARK)
                                  else raise NameError.new( "Error: undefined variable equal?", "equal?" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1061"] + __e.backtrace ) ; raise __e
                                end
                            else
                                begin
                                  embedBacktraceInfo( "", 1 );
                                    delayCall( '_car',  'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable car", "car" ) end
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30293)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 )
                                end
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_maybe_MIMARK_EQMARK)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1061"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._delete_MIMARKduplicates_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_delete_MIMARKduplicates_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_delete_MIMARKduplicates_EXMARK'] = self.method( :_delete_MIMARKduplicates_EXMARK_METHOD )
    @_delete_MIMARKduplicates_EXMARK = 
    trampCall(
          Proc.new { |_lis,*__rest__| _maybe_MIMARK_EQMARK = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |_elt_EQMARK| 
                    begin #makeLetrec
                      ___lambda = lambda { |_recur| 
                          _recur                           = 
                            Proc.new { |_lis| 
                                if ( 
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1074 );
                                      trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                          begin
                                            if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                              trampCall(@_null_MIMARKlist_QUMARK)
                                            else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1074"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1074"] + __e.backtrace ) ; raise __e
                                            end
                                      ]
                                                   ))
                                  end
                                 ) then
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1074"] + __e.backtrace ) ; raise __e
                                    end
                                else
                                    begin #makeLet
                                      ___lambda = lambda { |_x| 
                                          begin #makeLet
                                            ___lambda = lambda { |_tail| 
                                                begin #makeLet
                                                  ___lambda = lambda { |_new_MIMARKtail| 
                                                      if ( 
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1078 );
                                                            _eq_QUMARK(
                                                                begin
                                                                    trampCall(_tail)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1078"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                begin
                                                                    trampCall(_new_MIMARKtail)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1078"] + __e.backtrace ) ; raise __e
                                                                end
                                                            )
                                                        end
                                                       ) then
                                                          begin
                                                              trampCall(_lis)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1079"] + __e.backtrace ) ; raise __e
                                                          end
                                                      else
                                                          begin  #makeBegin
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1081 );
                                                                  _set_MIMARKcar_EXMARK(
                                                                      begin
                                                                          trampCall(_lis)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1081"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      begin
                                                                          trampCall(_x)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1081"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                  )
                                                              end
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1082 );
                                                                  _set_MIMARKcdr_EXMARK(
                                                                      begin
                                                                          trampCall(_lis)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      begin
                                                                          trampCall(_new_MIMARKtail)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                  )
                                                              end
                                                              begin
                                                                  trampCall(_lis)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1083"] + __e.backtrace ) ; raise __e
                                                              end
                                                          end
                                                      end
                                                  } ; ___lambda.call(
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1077 );
                                                            trampCall( callProcedure(  '_recur',  'recur',
                                                                begin
                                                                    trampCall(_recur)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1077"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1077 );
                                                                      trampCall( self._delete_EXMARK_METHOD(  'delete!',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_delete_EXMARK') then
                                                                              trampCall(@_delete_EXMARK)
                                                                            else raise NameError.new( "Error: undefined variable delete!", "delete!" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1077"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                      [
                                                                            begin
                                                                                trampCall(_x)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1077"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            begin
                                                                                trampCall(_tail)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1077"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            begin
                                                                                trampCall(_elt_EQMARK)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1077"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                      ]
                                                                                   ))
                                                                  end
                                                            ]
                                                                         ))
                                                        end
                                                             )
                                                end
                                            } ; ___lambda.call(
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1076 );
                                                      _cdr(
                                                          begin
                                                              trampCall(_lis)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1076"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                                       )
                                          end
                                      } ; ___lambda.call(
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1075 );
                                                _car(
                                                    begin
                                                        trampCall(_lis)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1075"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                                 )
                                    end
                                end
                            }
                          begin
                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1073 );
                              delayCall( '_recur',  'recur',
                                  begin
                                      trampCall(_recur)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1073"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1073"] + __e.backtrace ) ; raise __e
                                    end
                              ]
                                           )
                          end
                      } ; ___lambda.call(
                      nil
                                 )
                    end
                } ; ___lambda.call(
                      begin #makeLet
                        ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30294| 
                            if ( 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _null_QUMARK(
                                      begin
                                          trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30294)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                             ) then
                                begin
                                  if @global_lisp_binding.has_key?('_equal_QUMARK') then
                                    trampCall(@_equal_QUMARK)
                                  else raise NameError.new( "Error: undefined variable equal?", "equal?" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1071"] + __e.backtrace ) ; raise __e
                                end
                            else
                                begin
                                  embedBacktraceInfo( "", 1 );
                                    delayCall( '_car',  'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable car", "car" ) end
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30294)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 )
                                end
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_maybe_MIMARK_EQMARK)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1071"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._assoc_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_assoc', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_assoc'] = self.method( :_assoc_METHOD )
    @_assoc = 
    trampCall(
          Proc.new { |_x,_lis,*__rest__| _maybe_MIMARK_EQMARK = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |__EQMARK| 
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1091 );
                        delayCall( '_find',  'find',
                            begin
                              if @global_lisp_binding.has_key?('_find') then
                                trampCall(@_find)
                              else raise NameError.new( "Error: undefined variable find", "find" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1091"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              Proc.new { |_entry| 
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1091 );
                                      trampCall( callProcedure(  '__EQMARK',  '=',
                                          begin
                                              trampCall(__EQMARK)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1091"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_x)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1091"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1091 );
                                                _car(
                                                    begin
                                                        trampCall(_entry)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1091"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                      ]
                                                   ))
                                  end
                              }                            ,
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1091"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                      begin #makeLet
                        ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30295| 
                            if ( 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _null_QUMARK(
                                      begin
                                          trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30295)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                             ) then
                                begin
                                  if @global_lisp_binding.has_key?('_equal_QUMARK') then
                                    trampCall(@_equal_QUMARK)
                                  else raise NameError.new( "Error: undefined variable equal?", "equal?" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1090"] + __e.backtrace ) ; raise __e
                                end
                            else
                                begin
                                  embedBacktraceInfo( "", 1 );
                                    delayCall( '_car',  'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable car", "car" ) end
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30295)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 )
                                end
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_maybe_MIMARK_EQMARK)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1090"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._alist_MIMARKcons_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_alist_MIMARKcons', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_alist_MIMARKcons'] = self.method( :_alist_MIMARKcons_METHOD )
    @_alist_MIMARKcons = 
    trampCall(
          Proc.new { |_key,_datum,_alist| 
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1093 );
                  delayCall( '_cons',  'cons',
                      begin
                        if @global_lisp_binding.has_key?('_cons') then
                          trampCall(@_cons)
                        else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1093 );
                            _cons(
                                begin
                                    trampCall(_key)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                                end                              ,
                                begin
                                    trampCall(_datum)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end                      ,
                        begin
                            trampCall(_alist)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._alist_MIMARKcopy_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_alist_MIMARKcopy', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_alist_MIMARKcopy'] = self.method( :_alist_MIMARKcopy_METHOD )
    @_alist_MIMARKcopy = 
    trampCall(
          Proc.new { |_alist| 
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1096 );
                  delayCall( '_map',  'map',
                      begin
                        if @global_lisp_binding.has_key?('_map') then
                          trampCall(@_map)
                        else raise NameError.new( "Error: undefined variable map", "map" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1096"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        Proc.new { |_elt| 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1096 );
                                _cons(
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1096 );
                                        _car(
                                            begin
                                                trampCall(_elt)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1096"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    end                                  ,
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1096 );
                                        _cdr(
                                            begin
                                                trampCall(_elt)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1096"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    end
                                )
                            end
                        }                      ,
                        begin
                            trampCall(_alist)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1097"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._alist_MIMARKdelete_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_alist_MIMARKdelete', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_alist_MIMARKdelete'] = self.method( :_alist_MIMARKdelete_METHOD )
    @_alist_MIMARKdelete = 
    trampCall(
          Proc.new { |_key,_alist,*__rest__| _maybe_MIMARK_EQMARK = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |__EQMARK| 
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1101 );
                        delayCall( '_filter',  'filter',
                            begin
                              if @global_lisp_binding.has_key?('_filter') then
                                trampCall(@_filter)
                              else raise NameError.new( "Error: undefined variable filter", "filter" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1101"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              Proc.new { |_elt| 
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1101 );
                                      _not(
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1101 );
                                              trampCall( callProcedure(  '__EQMARK',  '=',
                                                  begin
                                                      trampCall(__EQMARK)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1101"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(_key)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1101"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1101 );
                                                        _car(
                                                            begin
                                                                trampCall(_elt)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1101"] + __e.backtrace ) ; raise __e
                                                            end
                                                        )
                                                    end
                                              ]
                                                           ))
                                          end
                                      )
                                  end
                              }                            ,
                              begin
                                  trampCall(_alist)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1101"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                      begin #makeLet
                        ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30296| 
                            if ( 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _null_QUMARK(
                                      begin
                                          trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30296)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                             ) then
                                begin
                                  if @global_lisp_binding.has_key?('_equal_QUMARK') then
                                    trampCall(@_equal_QUMARK)
                                  else raise NameError.new( "Error: undefined variable equal?", "equal?" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1100"] + __e.backtrace ) ; raise __e
                                end
                            else
                                begin
                                  embedBacktraceInfo( "", 1 );
                                    delayCall( '_car',  'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable car", "car" ) end
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30296)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 )
                                end
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_maybe_MIMARK_EQMARK)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1100"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._alist_MIMARKdelete_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_alist_MIMARKdelete_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_alist_MIMARKdelete_EXMARK'] = self.method( :_alist_MIMARKdelete_EXMARK_METHOD )
    @_alist_MIMARKdelete_EXMARK = 
    trampCall(
          Proc.new { |_key,_alist,*__rest__| _maybe_MIMARK_EQMARK = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |__EQMARK| 
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1105 );
                        delayCall( '_filter_EXMARK',  'filter!',
                            begin
                              if @global_lisp_binding.has_key?('_filter_EXMARK') then
                                trampCall(@_filter_EXMARK)
                              else raise NameError.new( "Error: undefined variable filter!", "filter!" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1105"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              Proc.new { |_elt| 
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1105 );
                                      _not(
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1105 );
                                              trampCall( callProcedure(  '__EQMARK',  '=',
                                                  begin
                                                      trampCall(__EQMARK)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1105"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(_key)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1105"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1105 );
                                                        _car(
                                                            begin
                                                                trampCall(_elt)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1105"] + __e.backtrace ) ; raise __e
                                                            end
                                                        )
                                                    end
                                              ]
                                                           ))
                                          end
                                      )
                                  end
                              }                            ,
                              begin
                                  trampCall(_alist)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1105"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                      begin #makeLet
                        ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30297| 
                            if ( 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _null_QUMARK(
                                      begin
                                          trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30297)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                             ) then
                                begin
                                  if @global_lisp_binding.has_key?('_equal_QUMARK') then
                                    trampCall(@_equal_QUMARK)
                                  else raise NameError.new( "Error: undefined variable equal?", "equal?" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1104"] + __e.backtrace ) ; raise __e
                                end
                            else
                                begin
                                  embedBacktraceInfo( "", 1 );
                                    delayCall( '_car',  'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable car", "car" ) end
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30297)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 )
                                end
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_maybe_MIMARK_EQMARK)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1104"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._find_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_find', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_find'] = self.method( :_find_METHOD )
    @_find = 
    trampCall(
          Proc.new { |_pred,_list| 
              if ( 
                begin #execFunc
                    def self.___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30299_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30299', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                    @global_lisp_binding['___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30299'] = self.method( :___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30299_METHOD )
                  @___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30299 = 
                  trampCall(
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1112 );
                            trampCall( self._find_MIMARKtail_METHOD(  'find-tail',
                                begin
                                  if @global_lisp_binding.has_key?('_find_MIMARKtail') then
                                    trampCall(@_find_MIMARKtail)
                                  else raise NameError.new( "Error: undefined variable find-tail", "find-tail" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1112"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_pred)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1112"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  begin
                                      trampCall(_list)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1112"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         ))
                        end
                  )
                end
               ) then
                  begin
                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1112 );
                      delayCall( '_car',  'car',
                          begin
                            if @global_lisp_binding.has_key?('_car') then
                              trampCall(@_car)
                            else raise NameError.new( "Error: undefined variable car", "car" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1112"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                              if @global_lisp_binding.has_key?('___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30299') then
                                trampCall(@___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30299)
                              else raise NameError.new( "Error: undefined variable __gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30299", "__gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30299" ) end
                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   )
                  end
              else
                  if ( 
                  true
                   ) then
                      false
                  else
                      Cell.new()
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._find_MIMARKtail_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_find_MIMARKtail', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_find_MIMARKtail'] = self.method( :_find_MIMARKtail_METHOD )
    @_find_MIMARKtail = 
    trampCall(
          Proc.new { |_pred,_list| 
              begin #makeLetrec
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_list| 
                          if ( 
                            begin
                              embedBacktraceInfo( "", 1 );
                                _not(
                                    begin
                                      embedBacktraceInfo( "", 1 );
                                        _eq_QUMARK(
                                          false                                          ,
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1118 );
                                                _not(
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1118 );
                                                        trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                                trampCall(@_null_MIMARKlist_QUMARK)
                                                              else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1118"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                        [
                                                              begin
                                                                  trampCall(_list)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1118"] + __e.backtrace ) ; raise __e
                                                              end
                                                        ]
                                                                     ))
                                                    end
                                                )
                                            end
                                        )
                                    end
                                )
                            end
                           ) then
                              if ( 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1119 );
                                    trampCall( callProcedure(  '_pred',  'pred',
                                        begin
                                            trampCall(_pred)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1119"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1119 );
                                              _car(
                                                  begin
                                                      trampCall(_list)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1119"] + __e.backtrace ) ; raise __e
                                                  end
                                              )
                                          end
                                    ]
                                                 ))
                                end
                               ) then
                                  begin
                                      trampCall(_list)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1119"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1120 );
                                      delayCall( '_lp',  'lp',
                                          begin
                                              trampCall(_lp)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1120"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1120 );
                                                _cdr(
                                                    begin
                                                        trampCall(_list)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1120"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                      ]
                                                   )
                                  end
                              end
                          else
                            false
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1117 );
                        delayCall( '_lp',  'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1117"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_list)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1117"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._take_MIMARKwhile_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_take_MIMARKwhile', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_take_MIMARKwhile'] = self.method( :_take_MIMARKwhile_METHOD )
    @_take_MIMARKwhile = 
    trampCall(
          Proc.new { |_pred,_lis| 
              begin #makeLetrec
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lis| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1125 );
                                trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                        trampCall(@_null_MIMARKlist_QUMARK)
                                      else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1125"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1125"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                           ) then
                            Cell.new()
                          else
                              begin #makeLet
                                ___lambda = lambda { |_x| 
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1127 );
                                          trampCall( callProcedure(  '_pred',  'pred',
                                              begin
                                                  trampCall(_pred)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1127"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                    trampCall(_x)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1127"] + __e.backtrace ) ; raise __e
                                                end
                                          ]
                                                       ))
                                      end
                                     ) then
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1128 );
                                            delayCall( '_cons',  'cons',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cons') then
                                                    trampCall(@_cons)
                                                  else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1128"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_x)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1128"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1128 );
                                                      trampCall( callProcedure(  '_recur',  'recur',
                                                          begin
                                                              trampCall(_recur)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1128"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1128 );
                                                                _cdr(
                                                                    begin
                                                                        trampCall(_lis)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1128"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                            ]
                                                         )
                                        end
                                    else
                                      Cell.new()
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1126 );
                                          _car(
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1126"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                           )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1124 );
                        delayCall( '_recur',  'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1124"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1124"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._drop_MIMARKwhile_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_drop_MIMARKwhile', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_drop_MIMARKwhile'] = self.method( :_drop_MIMARKwhile_METHOD )
    @_drop_MIMARKwhile = 
    trampCall(
          Proc.new { |_pred,_lis| 
              begin #makeLetrec
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_lis| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1134 );
                                trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                        trampCall(@_null_MIMARKlist_QUMARK)
                                      else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1134"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1134"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                           ) then
                            Cell.new()
                          else
                              if ( 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1135 );
                                    trampCall( callProcedure(  '_pred',  'pred',
                                        begin
                                            trampCall(_pred)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1135"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1135 );
                                              _car(
                                                  begin
                                                      trampCall(_lis)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1135"] + __e.backtrace ) ; raise __e
                                                  end
                                              )
                                          end
                                    ]
                                                 ))
                                end
                               ) then
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1136 );
                                      delayCall( '_lp',  'lp',
                                          begin
                                              trampCall(_lp)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1136"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1136 );
                                                _cdr(
                                                    begin
                                                        trampCall(_lis)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1136"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                      ]
                                                   )
                                  end
                              else
                                  begin
                                      trampCall(_lis)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1137"] + __e.backtrace ) ; raise __e
                                  end
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1133 );
                        delayCall( '_lp',  'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1133"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1133"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._take_MIMARKwhile_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_take_MIMARKwhile_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_take_MIMARKwhile_EXMARK'] = self.method( :_take_MIMARKwhile_EXMARK_METHOD )
    @_take_MIMARKwhile_EXMARK = 
    trampCall(
          Proc.new { |_pred,_lis| 
              if ( 
                begin #makeLet
                  ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30300| 
                      if ( 
                        begin
                            trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30300)
                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                        end
                       ) then
                          begin
                              trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30300)
                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                          end
                      else
                          begin #makeLet
                            ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30301| 
                                if ( 
                                  begin
                                      trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30301)
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                                 ) then
                                    begin
                                        trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30301)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                else
                                  false
                                end
                            } ; ___lambda.call(
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1141 );
                                      _not(
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1141 );
                                              trampCall( callProcedure(  '_pred',  'pred',
                                                  begin
                                                      trampCall(_pred)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1141"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1141 );
                                                        _car(
                                                            begin
                                                                trampCall(_lis)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1141"] + __e.backtrace ) ; raise __e
                                                            end
                                                        )
                                                    end
                                              ]
                                                           ))
                                          end
                                      )
                                  end
                                       )
                          end
                      end
                  } ; ___lambda.call(
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1141 );
                            trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                begin
                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                    trampCall(@_null_MIMARKlist_QUMARK)
                                  else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1141"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_lis)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1141"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         ))
                        end
                             )
                end
               ) then
                Cell.new()
              else
                  begin  #makeBegin
                      begin #makeLetrec
                        ___lambda = lambda { |_lp| 
                            _lp                             = 
                              Proc.new { |_prev,_rest| 
                                  if ( 
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1143 );
                                        _pair_QUMARK(
                                            begin
                                                trampCall(_rest)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1143"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    end
                                   ) then
                                      begin #makeLet
                                        ___lambda = lambda { |_x| 
                                            if ( 
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1145 );
                                                  trampCall( callProcedure(  '_pred',  'pred',
                                                      begin
                                                          trampCall(_pred)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1145"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                        begin
                                                            trampCall(_x)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1145"] + __e.backtrace ) ; raise __e
                                                        end
                                                  ]
                                                               ))
                                              end
                                             ) then
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1145 );
                                                    trampCall( callProcedure(  '_lp',  'lp',
                                                        begin
                                                            trampCall(_lp)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1145"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                              trampCall(_rest)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1145"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1145 );
                                                              _cdr(
                                                                  begin
                                                                      trampCall(_rest)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1145"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              )
                                                          end
                                                    ]
                                                                 ))
                                                end
                                            else
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1146 );
                                                    _set_MIMARKcdr_EXMARK(
                                                        begin
                                                            trampCall(_prev)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1146"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                      Cell.new()
                                                    )
                                                end
                                            end
                                        } ; ___lambda.call(
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1144 );
                                                  _car(
                                                      begin
                                                          trampCall(_rest)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1144"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end
                                                   )
                                      end
                                  end
                              }
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1142 );
                                trampCall( callProcedure(  '_lp',  'lp',
                                    begin
                                        trampCall(_lp)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1142"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1142"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1142 );
                                          _cdr(
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1142"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                ]
                                             ))
                            end
                        } ; ___lambda.call(
                        nil
                                   )
                      end
                      begin
                          trampCall(_lis)
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1147"] + __e.backtrace ) ; raise __e
                      end
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._span_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_span', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_span'] = self.method( :_span_METHOD )
    @_span = 
    trampCall(
          Proc.new { |_pred,_lis| 
              begin #makeLetrec
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lis| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1152 );
                                trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                        trampCall(@_null_MIMARKlist_QUMARK)
                                      else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1152"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1152"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                           ) then
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1152 );
                                  delayCall( '_values',  'values',
                                      begin
                                        if @global_lisp_binding.has_key?('_values') then
                                          trampCall(@_values)
                                        else raise NameError.new( "Error: undefined variable values", "values" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1152"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                      Cell.new()                                      ,
                                      Cell.new()
                                  ]
                                               )
                              end
                          else
                              begin #makeLet
                                ___lambda = lambda { |_x| 
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1154 );
                                          trampCall( callProcedure(  '_pred',  'pred',
                                              begin
                                                  trampCall(_pred)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1154"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                    trampCall(_x)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1154"] + __e.backtrace ) ; raise __e
                                                end
                                          ]
                                                       ))
                                      end
                                     ) then
                                        begin
                                          embedBacktraceInfo( "", 1 );
                                            delayCall( '_call_MIMARKwith_MIMARKvalues',  'call-with-values',
                                                begin
                                                  if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                    trampCall(@_call_MIMARKwith_MIMARKvalues)
                                                  else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  Proc.new { || 
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1155 );
                                                          trampCall( callProcedure(  '_recur',  'recur',
                                                              begin
                                                                  trampCall(_recur)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1155"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                          [
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1155 );
                                                                    _cdr(
                                                                        begin
                                                                            trampCall(_lis)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1155"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    )
                                                                end
                                                          ]
                                                                       ))
                                                      end
                                                  }                                                ,
                                                  Proc.new { |_prefix,_suffix| 
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1156 );
                                                          trampCall( self._values_METHOD(  'values',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_values') then
                                                                  trampCall(@_values)
                                                                else raise NameError.new( "Error: undefined variable values", "values" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1156"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                          [
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1156 );
                                                                    _cons(
                                                                        begin
                                                                            trampCall(_x)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1156"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        begin
                                                                            trampCall(_prefix)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1156"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    )
                                                                end                                                              ,
                                                                begin
                                                                    trampCall(_suffix)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1156"] + __e.backtrace ) ; raise __e
                                                                end
                                                          ]
                                                                       ))
                                                      end
                                                  }
                                            ]
                                                         )
                                        end
                                    else
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1157 );
                                            delayCall( '_values',  'values',
                                                begin
                                                  if @global_lisp_binding.has_key?('_values') then
                                                    trampCall(@_values)
                                                  else raise NameError.new( "Error: undefined variable values", "values" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1157"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                Cell.new()                                                ,
                                                  begin
                                                      trampCall(_lis)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1157"] + __e.backtrace ) ; raise __e
                                                  end
                                            ]
                                                         )
                                        end
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1153 );
                                          _car(
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1153"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                           )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1151 );
                        delayCall( '_recur',  'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1151"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1151"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._span_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_span_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_span_EXMARK'] = self.method( :_span_EXMARK_METHOD )
    @_span_EXMARK = 
    trampCall(
          Proc.new { |_pred,_lis| 
              if ( 
                begin #makeLet
                  ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30302| 
                      if ( 
                        begin
                            trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30302)
                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                        end
                       ) then
                          begin
                              trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30302)
                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                          end
                      else
                          begin #makeLet
                            ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30303| 
                                if ( 
                                  begin
                                      trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30303)
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                                 ) then
                                    begin
                                        trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30303)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                else
                                  false
                                end
                            } ; ___lambda.call(
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1161 );
                                      _not(
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1161 );
                                              trampCall( callProcedure(  '_pred',  'pred',
                                                  begin
                                                      trampCall(_pred)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1161"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1161 );
                                                        _car(
                                                            begin
                                                                trampCall(_lis)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1161"] + __e.backtrace ) ; raise __e
                                                            end
                                                        )
                                                    end
                                              ]
                                                           ))
                                          end
                                      )
                                  end
                                       )
                          end
                      end
                  } ; ___lambda.call(
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1161 );
                            trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                begin
                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                    trampCall(@_null_MIMARKlist_QUMARK)
                                  else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1161"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_lis)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1161"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         ))
                        end
                             )
                end
               ) then
                  begin
                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1161 );
                      delayCall( '_values',  'values',
                          begin
                            if @global_lisp_binding.has_key?('_values') then
                              trampCall(@_values)
                            else raise NameError.new( "Error: undefined variable values", "values" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1161"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                          Cell.new()                          ,
                            begin
                                trampCall(_lis)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1161"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   )
                  end
              else
                  begin #makeLet
                    ___lambda = lambda { |_suffix| 
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1168 );
                            delayCall( '_values',  'values',
                                begin
                                  if @global_lisp_binding.has_key?('_values') then
                                    trampCall(@_values)
                                  else raise NameError.new( "Error: undefined variable values", "values" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1168"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_lis)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1168"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  begin
                                      trampCall(_suffix)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1168"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         )
                        end
                    } ; ___lambda.call(
                          begin #makeLetrec
                            ___lambda = lambda { |_lp| 
                                _lp                                 = 
                                  Proc.new { |_prev,_rest| 
                                      if ( 
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1163 );
                                            trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                                begin
                                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                    trampCall(@_null_MIMARKlist_QUMARK)
                                                  else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1163"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_rest)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1163"] + __e.backtrace ) ; raise __e
                                                  end
                                            ]
                                                         ))
                                        end
                                       ) then
                                          begin
                                              trampCall(_rest)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1163"] + __e.backtrace ) ; raise __e
                                          end
                                      else
                                          begin #makeLet
                                            ___lambda = lambda { |_x| 
                                                if ( 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1165 );
                                                      trampCall( callProcedure(  '_pred',  'pred',
                                                          begin
                                                              trampCall(_pred)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1165"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_x)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1165"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                                 ) then
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1165 );
                                                        delayCall( '_lp',  'lp',
                                                            begin
                                                                trampCall(_lp)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1165"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                        [
                                                              begin
                                                                  trampCall(_rest)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1165"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1165 );
                                                                  _cdr(
                                                                      begin
                                                                          trampCall(_rest)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1165"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                  )
                                                              end
                                                        ]
                                                                     )
                                                    end
                                                else
                                                    begin  #makeBegin
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1166 );
                                                            _set_MIMARKcdr_EXMARK(
                                                                begin
                                                                    trampCall(_prev)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1166"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                              Cell.new()
                                                            )
                                                        end
                                                        begin
                                                            trampCall(_rest)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1167"] + __e.backtrace ) ; raise __e
                                                        end
                                                    end
                                                end
                                            } ; ___lambda.call(
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1164 );
                                                      _car(
                                                          begin
                                                              trampCall(_rest)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1164"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                                       )
                                          end
                                      end
                                  }
                                begin
                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1162 );
                                    delayCall( '_lp',  'lp',
                                        begin
                                            trampCall(_lp)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1162"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(_lis)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1162"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1162 );
                                              _cdr(
                                                  begin
                                                      trampCall(_lis)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1162"] + __e.backtrace ) ; raise __e
                                                  end
                                              )
                                          end
                                    ]
                                                 )
                                end
                            } ; ___lambda.call(
                            nil
                                       )
                          end
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._break_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_break', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_break'] = self.method( :_break_METHOD )
    @_break = 
    trampCall(
          Proc.new { |_pred,_lis| 
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1171 );
                  delayCall( '_span',  'span',
                      begin
                        if @global_lisp_binding.has_key?('_span') then
                          trampCall(@_span)
                        else raise NameError.new( "Error: undefined variable span", "span" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1171"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        Proc.new { |_x| 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1171 );
                                _not(
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1171 );
                                        trampCall( callProcedure(  '_pred',  'pred',
                                            begin
                                                trampCall(_pred)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1171"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_x)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1171"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     ))
                                    end
                                )
                            end
                        }                      ,
                        begin
                            trampCall(_lis)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1171"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._break_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_break_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_break_EXMARK'] = self.method( :_break_EXMARK_METHOD )
    @_break_EXMARK = 
    trampCall(
          Proc.new { |_pred,_lis| 
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1172 );
                  delayCall( '_span_EXMARK',  'span!',
                      begin
                        if @global_lisp_binding.has_key?('_span_EXMARK') then
                          trampCall(@_span_EXMARK)
                        else raise NameError.new( "Error: undefined variable span!", "span!" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1172"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        Proc.new { |_x| 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1172 );
                                _not(
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1172 );
                                        trampCall( callProcedure(  '_pred',  'pred',
                                            begin
                                                trampCall(_pred)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1172"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_x)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1172"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     ))
                                    end
                                )
                            end
                        }                      ,
                        begin
                            trampCall(_lis)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1172"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._any_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_any', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_any'] = self.method( :_any_METHOD )
    @_any = 
    trampCall(
          Proc.new { |_pred,_lis1,*__rest__| _lists = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1176 );
                    _pair_QUMARK(
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin
                    embedBacktraceInfo( "", 1 );
                      delayCall( '_call_MIMARKwith_MIMARKvalues',  'call-with-values',
                          begin
                            if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                              trampCall(@_call_MIMARKwith_MIMARKvalues)
                            else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            Proc.new { || 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1179 );
                                    trampCall( self.__PAMARKcars_PLMARKcdrs_METHOD(  '%cars+cdrs',
                                        begin
                                          if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs') then
                                            trampCall(@__PAMARKcars_PLMARKcdrs)
                                          else raise NameError.new( "Error: undefined variable %cars+cdrs", "%cars+cdrs" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1179"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1179 );
                                              _cons(
                                                  begin
                                                      trampCall(_lis1)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1179"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  begin
                                                      trampCall(_lists)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1179"] + __e.backtrace ) ; raise __e
                                                  end
                                              )
                                          end
                                    ]
                                                 ))
                                end
                            }                          ,
                            Proc.new { |_heads,_tails| 
                                if ( 
                                  begin
                                    embedBacktraceInfo( "", 1 );
                                      _not(
                                          begin
                                            embedBacktraceInfo( "", 1 );
                                              _eq_QUMARK(
                                                false                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1180 );
                                                      _pair_QUMARK(
                                                          begin
                                                              trampCall(_heads)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1180"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                              )
                                          end
                                      )
                                  end
                                 ) then
                                    begin #makeLetrec
                                      ___lambda = lambda { |_lp| 
                                          _lp                                           = 
                                            Proc.new { |_heads,_tails| 
                                                begin
                                                  embedBacktraceInfo( "", 1 );
                                                    trampCall( self._call_MIMARKwith_MIMARKvalues_METHOD(  'call-with-values',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                            trampCall(@_call_MIMARKwith_MIMARKvalues)
                                                          else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          Proc.new { || 
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1182 );
                                                                  trampCall( self.__PAMARKcars_PLMARKcdrs_METHOD(  '%cars+cdrs',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs') then
                                                                          trampCall(@__PAMARKcars_PLMARKcdrs)
                                                                        else raise NameError.new( "Error: undefined variable %cars+cdrs", "%cars+cdrs" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1182"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                  [
                                                                        begin
                                                                            trampCall(_tails)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1182"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                  ]
                                                                               ))
                                                              end
                                                          }                                                        ,
                                                          Proc.new { |_next_MIMARKheads,_next_MIMARKtails| 
                                                              if ( 
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1183 );
                                                                    _pair_QUMARK(
                                                                        begin
                                                                            trampCall(_next_MIMARKheads)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1183"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    )
                                                                end
                                                               ) then
                                                                  begin #makeLet
                                                                    ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30306| 
                                                                        if ( 
                                                                          begin
                                                                              trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30306)
                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                         ) then
                                                                            begin
                                                                                trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30306)
                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                        else
                                                                            begin #makeLet
                                                                              ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30307| 
                                                                                  if ( 
                                                                                    begin
                                                                                        trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30307)
                                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                   ) then
                                                                                      begin
                                                                                          trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30307)
                                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                  else
                                                                                    false
                                                                                  end
                                                                              } ; ___lambda.call(
                                                                                    begin
                                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1184 );
                                                                                        trampCall( callProcedure(  '_lp',  'lp',
                                                                                            begin
                                                                                                trampCall(_lp)
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1184"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,
                                                                                        [
                                                                                              begin
                                                                                                  trampCall(_next_MIMARKheads)
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1184"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              begin
                                                                                                  trampCall(_next_MIMARKtails)
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1184"] + __e.backtrace ) ; raise __e
                                                                                              end
                                                                                        ]
                                                                                                     ))
                                                                                    end
                                                                                         )
                                                                            end
                                                                        end
                                                                    } ; ___lambda.call(
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1184 );
                                                                              trampCall( self._apply_METHOD(  'apply',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_apply') then
                                                                                      trampCall(@_apply)
                                                                                    else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1184"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                              [
                                                                                    begin
                                                                                        trampCall(_pred)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1184"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    begin
                                                                                        trampCall(_heads)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1184"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                              ]
                                                                                           ))
                                                                          end
                                                                               )
                                                                  end
                                                              else
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1185 );
                                                                      trampCall( self._apply_METHOD(  'apply',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_apply') then
                                                                              trampCall(@_apply)
                                                                            else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1185"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                      [
                                                                            begin
                                                                                trampCall(_pred)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1185"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            begin
                                                                                trampCall(_heads)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1185"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                      ]
                                                                                   ))
                                                                  end
                                                              end
                                                          }
                                                    ]
                                                                 ))
                                                end
                                            }
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1181 );
                                              trampCall( callProcedure(  '_lp',  'lp',
                                                  begin
                                                      trampCall(_lp)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1181"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(_heads)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1181"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    begin
                                                        trampCall(_tails)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1181"] + __e.backtrace ) ; raise __e
                                                    end
                                              ]
                                                           ))
                                          end
                                      } ; ___lambda.call(
                                      nil
                                                 )
                                    end
                                else
                                  false
                                end
                            }
                      ]
                                   )
                  end
              else
                  if ( 
                    begin
                      embedBacktraceInfo( "", 1 );
                        _not(
                            begin
                              embedBacktraceInfo( "", 1 );
                                _eq_QUMARK(
                                  false                                  ,
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1188 );
                                        _not(
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1188 );
                                                trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                        trampCall(@_null_MIMARKlist_QUMARK)
                                                      else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1188"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_lis1)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1188"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end
                                        )
                                    end
                                )
                            end
                        )
                    end
                   ) then
                      begin #makeLetrec
                        ___lambda = lambda { |_lp| 
                            _lp                             = 
                              Proc.new { |_head,_tail| 
                                  if ( 
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1190 );
                                        trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                            begin
                                              if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                trampCall(@_null_MIMARKlist_QUMARK)
                                              else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1190"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_tail)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1190"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     ))
                                    end
                                   ) then
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1191 );
                                          delayCall( '_pred',  'pred',
                                              begin
                                                  trampCall(_pred)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1191"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                    trampCall(_head)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1191"] + __e.backtrace ) ; raise __e
                                                end
                                          ]
                                                       )
                                      end
                                  else
                                      begin #makeLet
                                        ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30304| 
                                            if ( 
                                              begin
                                                  trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30304)
                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                              end
                                             ) then
                                                begin
                                                    trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30304)
                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                end
                                            else
                                                begin #makeLet
                                                  ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30305| 
                                                      if ( 
                                                        begin
                                                            trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30305)
                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                        end
                                                       ) then
                                                          begin
                                                              trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30305)
                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                          end
                                                      else
                                                        false
                                                      end
                                                  } ; ___lambda.call(
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1192 );
                                                            trampCall( callProcedure(  '_lp',  'lp',
                                                                begin
                                                                    trampCall(_lp)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1192"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1192 );
                                                                      _car(
                                                                          begin
                                                                              trampCall(_tail)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1192"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                      )
                                                                  end                                                                ,
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1192 );
                                                                      _cdr(
                                                                          begin
                                                                              trampCall(_tail)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1192"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                      )
                                                                  end
                                                            ]
                                                                         ))
                                                        end
                                                             )
                                                end
                                            end
                                        } ; ___lambda.call(
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1192 );
                                                  trampCall( callProcedure(  '_pred',  'pred',
                                                      begin
                                                          trampCall(_pred)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1192"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                        begin
                                                            trampCall(_head)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1192"] + __e.backtrace ) ; raise __e
                                                        end
                                                  ]
                                                               ))
                                              end
                                                   )
                                      end
                                  end
                              }
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1189 );
                                delayCall( '_lp',  'lp',
                                    begin
                                        trampCall(_lp)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1189"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1189 );
                                          _car(
                                              begin
                                                  trampCall(_lis1)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1189"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end                                    ,
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1189 );
                                          _cdr(
                                              begin
                                                  trampCall(_lis1)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1189"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                ]
                                             )
                            end
                        } ; ___lambda.call(
                        nil
                                   )
                      end
                  else
                    false
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._every_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_every', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_every'] = self.method( :_every_METHOD )
    @_every = 
    trampCall(
          Proc.new { |_pred,_lis1,*__rest__| _lists = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1203 );
                    _pair_QUMARK(
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1203"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin
                    embedBacktraceInfo( "", 1 );
                      delayCall( '_call_MIMARKwith_MIMARKvalues',  'call-with-values',
                          begin
                            if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                              trampCall(@_call_MIMARKwith_MIMARKvalues)
                            else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            Proc.new { || 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1206 );
                                    trampCall( self.__PAMARKcars_PLMARKcdrs_METHOD(  '%cars+cdrs',
                                        begin
                                          if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs') then
                                            trampCall(@__PAMARKcars_PLMARKcdrs)
                                          else raise NameError.new( "Error: undefined variable %cars+cdrs", "%cars+cdrs" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1206"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1206 );
                                              _cons(
                                                  begin
                                                      trampCall(_lis1)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1206"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  begin
                                                      trampCall(_lists)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1206"] + __e.backtrace ) ; raise __e
                                                  end
                                              )
                                          end
                                    ]
                                                 ))
                                end
                            }                          ,
                            Proc.new { |_heads,_tails| 
                                begin #makeLet
                                  ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30310| 
                                      if ( 
                                        begin
                                            trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30310)
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end
                                       ) then
                                          begin
                                              trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30310)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                      else
                                          begin #makeLet
                                            ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30311| 
                                                if ( 
                                                  begin
                                                      trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30311)
                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                  end
                                                 ) then
                                                    begin
                                                        trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30311)
                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                    end
                                                else
                                                  false
                                                end
                                            } ; ___lambda.call(
                                                  begin #makeLetrec
                                                    ___lambda = lambda { |_lp| 
                                                        _lp                                                         = 
                                                          Proc.new { |_heads,_tails| 
                                                              begin
                                                                embedBacktraceInfo( "", 1 );
                                                                  trampCall( self._call_MIMARKwith_MIMARKvalues_METHOD(  'call-with-values',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                                          trampCall(@_call_MIMARKwith_MIMARKvalues)
                                                                        else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                  [
                                                                        Proc.new { || 
                                                                            begin
                                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1209 );
                                                                                trampCall( self.__PAMARKcars_PLMARKcdrs_METHOD(  '%cars+cdrs',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs') then
                                                                                        trampCall(@__PAMARKcars_PLMARKcdrs)
                                                                                      else raise NameError.new( "Error: undefined variable %cars+cdrs", "%cars+cdrs" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1209"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                [
                                                                                      begin
                                                                                          trampCall(_tails)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1209"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                ]
                                                                                             ))
                                                                            end
                                                                        }                                                                      ,
                                                                        Proc.new { |_next_MIMARKheads,_next_MIMARKtails| 
                                                                            if ( 
                                                                              begin
                                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1210 );
                                                                                  _pair_QUMARK(
                                                                                      begin
                                                                                          trampCall(_next_MIMARKheads)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1210"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                  )
                                                                              end
                                                                             ) then
                                                                                if ( 
                                                                                  begin
                                                                                    embedBacktraceInfo( "", 1 );
                                                                                      _not(
                                                                                          begin
                                                                                            embedBacktraceInfo( "", 1 );
                                                                                              _eq_QUMARK(
                                                                                                false                                                                                                ,
                                                                                                  begin
                                                                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1211 );
                                                                                                      trampCall( self._apply_METHOD(  'apply',
                                                                                                          begin
                                                                                                            if @global_lisp_binding.has_key?('_apply') then
                                                                                                              trampCall(@_apply)
                                                                                                            else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1211"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                      [
                                                                                                            begin
                                                                                                                trampCall(_pred)
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1211"] + __e.backtrace ) ; raise __e
                                                                                                            end                                                                                                          ,
                                                                                                            begin
                                                                                                                trampCall(_heads)
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1211"] + __e.backtrace ) ; raise __e
                                                                                                            end
                                                                                                      ]
                                                                                                                   ))
                                                                                                  end
                                                                                              )
                                                                                          end
                                                                                      )
                                                                                  end
                                                                                 ) then
                                                                                    begin
                                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1211 );
                                                                                        trampCall( callProcedure(  '_lp',  'lp',
                                                                                            begin
                                                                                                trampCall(_lp)
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1211"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,
                                                                                        [
                                                                                              begin
                                                                                                  trampCall(_next_MIMARKheads)
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1211"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              begin
                                                                                                  trampCall(_next_MIMARKtails)
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1211"] + __e.backtrace ) ; raise __e
                                                                                              end
                                                                                        ]
                                                                                                     ))
                                                                                    end
                                                                                else
                                                                                  false
                                                                                end
                                                                            else
                                                                                begin
                                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1212 );
                                                                                    trampCall( self._apply_METHOD(  'apply',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_apply') then
                                                                                            trampCall(@_apply)
                                                                                          else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1212"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                    [
                                                                                          begin
                                                                                              trampCall(_pred)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1212"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          begin
                                                                                              trampCall(_heads)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1212"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                    ]
                                                                                                 ))
                                                                                end
                                                                            end
                                                                        }
                                                                  ]
                                                                               ))
                                                              end
                                                          }
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1208 );
                                                            trampCall( callProcedure(  '_lp',  'lp',
                                                                begin
                                                                    trampCall(_lp)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1208"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  begin
                                                                      trampCall(_heads)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1208"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  begin
                                                                      trampCall(_tails)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1208"] + __e.backtrace ) ; raise __e
                                                                  end
                                                            ]
                                                                         ))
                                                        end
                                                    } ; ___lambda.call(
                                                    nil
                                                               )
                                                  end
                                                       )
                                          end
                                      end
                                  } ; ___lambda.call(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1207 );
                                            _not(
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1207 );
                                                    _pair_QUMARK(
                                                        begin
                                                            trampCall(_heads)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1207"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end
                                            )
                                        end
                                             )
                                end
                            }
                      ]
                                   )
                  end
              else
                  begin #makeLet
                    ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30308| 
                        if ( 
                          begin
                              trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30308)
                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                          end
                         ) then
                            begin
                                trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30308)
                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                            end
                        else
                            begin #makeLet
                              ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30309| 
                                  if ( 
                                    begin
                                        trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30309)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                   ) then
                                      begin
                                          trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30309)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  else
                                    false
                                  end
                              } ; ___lambda.call(
                                    begin #makeLetrec
                                      ___lambda = lambda { |_lp| 
                                          _lp                                           = 
                                            Proc.new { |_head,_tail| 
                                                if ( 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1217 );
                                                      trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                              trampCall(@_null_MIMARKlist_QUMARK)
                                                            else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1217"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_tail)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1217"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                                 ) then
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1218 );
                                                        delayCall( '_pred',  'pred',
                                                            begin
                                                                trampCall(_pred)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1218"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                        [
                                                              begin
                                                                  trampCall(_head)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1218"] + __e.backtrace ) ; raise __e
                                                              end
                                                        ]
                                                                     )
                                                    end
                                                else
                                                    if ( 
                                                      begin
                                                        embedBacktraceInfo( "", 1 );
                                                          _not(
                                                              begin
                                                                embedBacktraceInfo( "", 1 );
                                                                  _eq_QUMARK(
                                                                    false                                                                    ,
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1219 );
                                                                          trampCall( callProcedure(  '_pred',  'pred',
                                                                              begin
                                                                                  trampCall(_pred)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1219"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                                begin
                                                                                    trampCall(_head)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1219"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                          ]
                                                                                       ))
                                                                      end
                                                                  )
                                                              end
                                                          )
                                                      end
                                                     ) then
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1219 );
                                                            delayCall( '_lp',  'lp',
                                                                begin
                                                                    trampCall(_lp)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1219"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1219 );
                                                                      _car(
                                                                          begin
                                                                              trampCall(_tail)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1219"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                      )
                                                                  end                                                                ,
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1219 );
                                                                      _cdr(
                                                                          begin
                                                                              trampCall(_tail)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1219"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                      )
                                                                  end
                                                            ]
                                                                         )
                                                        end
                                                    else
                                                      false
                                                    end
                                                end
                                            }
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1216 );
                                              delayCall( '_lp',  'lp',
                                                  begin
                                                      trampCall(_lp)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1216"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1216 );
                                                        _car(
                                                            begin
                                                                trampCall(_lis1)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1216"] + __e.backtrace ) ; raise __e
                                                            end
                                                        )
                                                    end                                                  ,
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1216 );
                                                        _cdr(
                                                            begin
                                                                trampCall(_lis1)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1216"] + __e.backtrace ) ; raise __e
                                                            end
                                                        )
                                                    end
                                              ]
                                                           )
                                          end
                                      } ; ___lambda.call(
                                      nil
                                                 )
                                    end
                                         )
                            end
                        end
                    } ; ___lambda.call(
                          begin
                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1215 );
                              trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                  begin
                                    if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                      trampCall(@_null_MIMARKlist_QUMARK)
                                    else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1215"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_lis1)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1215"] + __e.backtrace ) ; raise __e
                                    end
                              ]
                                           ))
                          end
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._list_MIMARKindex_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_list_MIMARKindex', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_list_MIMARKindex'] = self.method( :_list_MIMARKindex_METHOD )
    @_list_MIMARKindex = 
    trampCall(
          Proc.new { |_pred,_lis1,*__rest__| _lists = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1223 );
                    _pair_QUMARK(
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1223"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin #makeLetrec
                    ___lambda = lambda { |_lp| 
                        _lp                         = 
                          Proc.new { |_lists,_n| 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  delayCall( '_call_MIMARKwith_MIMARKvalues',  'call-with-values',
                                      begin
                                        if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                          trampCall(@_call_MIMARKwith_MIMARKvalues)
                                        else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        Proc.new { || 
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1227 );
                                                trampCall( self.__PAMARKcars_PLMARKcdrs_METHOD(  '%cars+cdrs',
                                                    begin
                                                      if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs') then
                                                        trampCall(@__PAMARKcars_PLMARKcdrs)
                                                      else raise NameError.new( "Error: undefined variable %cars+cdrs", "%cars+cdrs" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1227"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_lists)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1227"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end
                                        }                                      ,
                                        Proc.new { |_heads,_tails| 
                                            if ( 
                                              begin
                                                embedBacktraceInfo( "", 1 );
                                                  _not(
                                                      begin
                                                        embedBacktraceInfo( "", 1 );
                                                          _eq_QUMARK(
                                                            false                                                            ,
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1228 );
                                                                  _pair_QUMARK(
                                                                      begin
                                                                          trampCall(_heads)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1228"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                  )
                                                              end
                                                          )
                                                      end
                                                  )
                                              end
                                             ) then
                                                if ( 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1229 );
                                                      trampCall( self._apply_METHOD(  'apply',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_apply') then
                                                              trampCall(@_apply)
                                                            else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1229"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_pred)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1229"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            begin
                                                                trampCall(_heads)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1229"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                                 ) then
                                                    begin
                                                        trampCall(_n)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1229"] + __e.backtrace ) ; raise __e
                                                    end
                                                else
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1230 );
                                                        trampCall( callProcedure(  '_lp',  'lp',
                                                            begin
                                                                trampCall(_lp)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1230"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                        [
                                                              begin
                                                                  trampCall(_tails)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1230"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1230 );
                                                                  ( 
                                                                    begin
                                                                        trampCall(_n)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1230"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  +
                                                                  1
                                                                   ) 
                                                              end
                                                        ]
                                                                     ))
                                                    end
                                                end
                                            else
                                              false
                                            end
                                        }
                                  ]
                                               )
                              end
                          }
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1226 );
                            delayCall( '_lp',  'lp',
                                begin
                                    trampCall(_lp)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1226"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1226 );
                                      _cons(
                                          begin
                                              trampCall(_lis1)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1226"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          begin
                                              trampCall(_lists)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1226"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end                                ,
                                0
                            ]
                                         )
                        end
                    } ; ___lambda.call(
                    nil
                               )
                  end
              else
                  begin #makeLetrec
                    ___lambda = lambda { |_lp| 
                        _lp                         = 
                          Proc.new { |_lis,_n| 
                              if ( 
                                begin
                                  embedBacktraceInfo( "", 1 );
                                    _not(
                                        begin
                                          embedBacktraceInfo( "", 1 );
                                            _eq_QUMARK(
                                              false                                              ,
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1234 );
                                                    _not(
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1234 );
                                                            trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                                    trampCall(@_null_MIMARKlist_QUMARK)
                                                                  else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1234"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  begin
                                                                      trampCall(_lis)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1234"] + __e.backtrace ) ; raise __e
                                                                  end
                                                            ]
                                                                         ))
                                                        end
                                                    )
                                                end
                                            )
                                        end
                                    )
                                end
                               ) then
                                  if ( 
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1235 );
                                        trampCall( callProcedure(  '_pred',  'pred',
                                            begin
                                                trampCall(_pred)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1235"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1235 );
                                                  _car(
                                                      begin
                                                          trampCall(_lis)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1235"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end
                                        ]
                                                     ))
                                    end
                                   ) then
                                      begin
                                          trampCall(_n)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1235"] + __e.backtrace ) ; raise __e
                                      end
                                  else
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1235 );
                                          delayCall( '_lp',  'lp',
                                              begin
                                                  trampCall(_lp)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1235"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1235 );
                                                    _cdr(
                                                        begin
                                                            trampCall(_lis)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1235"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end                                              ,
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1235 );
                                                    ( 
                                                      begin
                                                          trampCall(_n)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1235"] + __e.backtrace ) ; raise __e
                                                      end                                                    +
                                                    1
                                                     ) 
                                                end
                                          ]
                                                       )
                                      end
                                  end
                              else
                                false
                              end
                          }
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1233 );
                            delayCall( '_lp',  'lp',
                                begin
                                    trampCall(_lp)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1233"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_lis1)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1233"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                0
                            ]
                                         )
                        end
                    } ; ___lambda.call(
                    nil
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._reverse_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_reverse_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_reverse_EXMARK'] = self.method( :_reverse_EXMARK_METHOD )
    @_reverse_EXMARK = 
    trampCall(
          Proc.new { |_lis| 
              begin #makeLetrec
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_lis,_ans| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1248 );
                                trampCall( self._null_MIMARKlist_QUMARK_METHOD(  'null-list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                        trampCall(@_null_MIMARKlist_QUMARK)
                                      else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1248"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1248"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                           ) then
                              begin
                                  trampCall(_ans)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1248"] + __e.backtrace ) ; raise __e
                              end
                          else
                              begin #makeLet
                                ___lambda = lambda { |_tail| 
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1250 );
                                        _set_MIMARKcdr_EXMARK(
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            begin
                                                trampCall(_ans)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    end
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1251 );
                                        delayCall( '_lp',  'lp',
                                            begin
                                                trampCall(_lp)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1251"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_tail)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1251"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1251"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     )
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1249 );
                                          _cdr(
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1249"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                           )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1247 );
                        delayCall( '_lp',  'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1247"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1247"] + __e.backtrace ) ; raise __e
                              end                            ,
                            Cell.new()
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARKlset2_LTMARK_EQMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKlset2_LTMARK_EQMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKlset2_LTMARK_EQMARK'] = self.method( :__PAMARKlset2_LTMARK_EQMARK_METHOD )
    @__PAMARKlset2_LTMARK_EQMARK = 
    trampCall(
          Proc.new { |__EQMARK,_lis1,_lis2| 
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1266 );
                  delayCall( '_every',  'every',
                      begin
                        if @global_lisp_binding.has_key?('_every') then
                          trampCall(@_every)
                        else raise NameError.new( "Error: undefined variable every", "every" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1266"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        Proc.new { |_x| 
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1266 );
                                trampCall( self._member_METHOD(  'member',
                                    begin
                                      if @global_lisp_binding.has_key?('_member') then
                                        trampCall(@_member)
                                      else raise NameError.new( "Error: undefined variable member", "member" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1266"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1266"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      begin
                                          trampCall(_lis2)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1266"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      begin
                                          trampCall(__EQMARK)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1266"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                        }                      ,
                        begin
                            trampCall(_lis1)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1266"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._lset_LTMARK_EQMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_lset_LTMARK_EQMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_lset_LTMARK_EQMARK'] = self.method( :_lset_LTMARK_EQMARK_METHOD )
    @_lset_LTMARK_EQMARK = 
    trampCall(
          Proc.new { |__EQMARK,*__rest__| _lists = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30312| 
                    if ( 
                      begin
                          trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30312)
                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                      end
                     ) then
                        begin
                            trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30312)
                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                        end
                    else
                        begin #makeLet
                          ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30313| 
                              if ( 
                                begin
                                    trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30313)
                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                end
                               ) then
                                  begin
                                      trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30313)
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                false
                              end
                          } ; ___lambda.call(
                                begin #makeLetrec
                                  ___lambda = lambda { |_lp| 
                                      _lp                                       = 
                                        Proc.new { |_s1,_rest| 
                                            begin #makeLet
                                              ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30314| 
                                                  if ( 
                                                    begin
                                                        trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30314)
                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                    end
                                                   ) then
                                                      begin
                                                          trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30314)
                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                      end
                                                  else
                                                      begin #makeLet
                                                        ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30315| 
                                                            if ( 
                                                              begin
                                                                  trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30315)
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end
                                                             ) then
                                                                begin
                                                                    trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30315)
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end
                                                            else
                                                              false
                                                            end
                                                        } ; ___lambda.call(
                                                              begin #makeLet
                                                                ___lambda = lambda { |_s2,_rest| 
                                                                    if ( 
                                                                      begin
                                                                        embedBacktraceInfo( "", 1 );
                                                                          _not(
                                                                              begin
                                                                                embedBacktraceInfo( "", 1 );
                                                                                  _eq_QUMARK(
                                                                                    false                                                                                    ,
                                                                                      begin #makeLet
                                                                                        ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30316| 
                                                                                            if ( 
                                                                                              begin
                                                                                                  trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30316)
                                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                              end
                                                                                             ) then
                                                                                                begin
                                                                                                    trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30316)
                                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                end
                                                                                            else
                                                                                                begin #makeLet
                                                                                                  ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30317| 
                                                                                                      if ( 
                                                                                                        begin
                                                                                                            trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30317)
                                                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                        end
                                                                                                       ) then
                                                                                                          begin
                                                                                                              trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30317)
                                                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                          end
                                                                                                      else
                                                                                                        false
                                                                                                      end
                                                                                                  } ; ___lambda.call(
                                                                                                        begin
                                                                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1275 );
                                                                                                            trampCall( self.__PAMARKlset2_LTMARK_EQMARK_METHOD(  '%lset2<=',
                                                                                                                begin
                                                                                                                  if @global_lisp_binding.has_key?('__PAMARKlset2_LTMARK_EQMARK') then
                                                                                                                    trampCall(@__PAMARKlset2_LTMARK_EQMARK)
                                                                                                                  else raise NameError.new( "Error: undefined variable %lset2<=", "%lset2<=" ) end
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1275"] + __e.backtrace ) ; raise __e
                                                                                                                end                                                                                                              ,
                                                                                                            [
                                                                                                                  begin
                                                                                                                      trampCall(__EQMARK)
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1275"] + __e.backtrace ) ; raise __e
                                                                                                                  end                                                                                                                ,
                                                                                                                  begin
                                                                                                                      trampCall(_s1)
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1275"] + __e.backtrace ) ; raise __e
                                                                                                                  end                                                                                                                ,
                                                                                                                  begin
                                                                                                                      trampCall(_s2)
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1275"] + __e.backtrace ) ; raise __e
                                                                                                                  end
                                                                                                            ]
                                                                                                                         ))
                                                                                                        end
                                                                                                             )
                                                                                                end
                                                                                            end
                                                                                        } ; ___lambda.call(
                                                                                              begin
                                                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1274 );
                                                                                                  _eq_QUMARK(
                                                                                                      begin
                                                                                                          trampCall(_s2)
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1274"] + __e.backtrace ) ; raise __e
                                                                                                      end                                                                                                    ,
                                                                                                      begin
                                                                                                          trampCall(_s1)
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1274"] + __e.backtrace ) ; raise __e
                                                                                                      end
                                                                                                  )
                                                                                              end
                                                                                                   )
                                                                                      end
                                                                                  )
                                                                              end
                                                                          )
                                                                      end
                                                                     ) then
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1276 );
                                                                            delayCall( '_lp',  'lp',
                                                                                begin
                                                                                    trampCall(_lp)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1276"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  begin
                                                                                      trampCall(_s2)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1276"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  begin
                                                                                      trampCall(_rest)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1276"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                            ]
                                                                                         )
                                                                        end
                                                                    else
                                                                      false
                                                                    end
                                                                } ; ___lambda.call(
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1273 );
                                                                          _car(
                                                                              begin
                                                                                  trampCall(_rest)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1273"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          )
                                                                      end                                                                    ,
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1273 );
                                                                          _cdr(
                                                                              begin
                                                                                  trampCall(_rest)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1273"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          )
                                                                      end
                                                                           )
                                                              end
                                                                   )
                                                      end
                                                  end
                                              } ; ___lambda.call(
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1272 );
                                                        _not(
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1272 );
                                                                _pair_QUMARK(
                                                                    begin
                                                                        trampCall(_rest)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1272"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                        )
                                                    end
                                                         )
                                            end
                                        }
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1271 );
                                          delayCall( '_lp',  'lp',
                                              begin
                                                  trampCall(_lp)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1271"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1271 );
                                                    _car(
                                                        begin
                                                            trampCall(_lists)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1271"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end                                              ,
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1271 );
                                                    _cdr(
                                                        begin
                                                            trampCall(_lists)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1271"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end
                                          ]
                                                       )
                                      end
                                  } ; ___lambda.call(
                                  nil
                                             )
                                end
                                     )
                        end
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1270 );
                          _not(
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1270 );
                                  _pair_QUMARK(
                                      begin
                                          trampCall(_lists)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1270"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                          )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._lset_EQMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_lset_EQMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_lset_EQMARK'] = self.method( :_lset_EQMARK_METHOD )
    @_lset_EQMARK = 
    trampCall(
          Proc.new { |__EQMARK,*__rest__| _lists = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30318| 
                    if ( 
                      begin
                          trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30318)
                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                      end
                     ) then
                        begin
                            trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30318)
                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                        end
                    else
                        begin #makeLet
                          ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30319| 
                              if ( 
                                begin
                                    trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30319)
                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                end
                               ) then
                                  begin
                                      trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30319)
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                false
                              end
                          } ; ___lambda.call(
                                begin #makeLetrec
                                  ___lambda = lambda { |_lp| 
                                      _lp                                       = 
                                        Proc.new { |_s1,_rest| 
                                            begin #makeLet
                                              ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30320| 
                                                  if ( 
                                                    begin
                                                        trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30320)
                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                    end
                                                   ) then
                                                      begin
                                                          trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30320)
                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                      end
                                                  else
                                                      begin #makeLet
                                                        ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30321| 
                                                            if ( 
                                                              begin
                                                                  trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30321)
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end
                                                             ) then
                                                                begin
                                                                    trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30321)
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end
                                                            else
                                                              false
                                                            end
                                                        } ; ___lambda.call(
                                                              begin #makeLet
                                                                ___lambda = lambda { |_s2,_rest| 
                                                                    if ( 
                                                                      begin
                                                                        embedBacktraceInfo( "", 1 );
                                                                          _not(
                                                                              begin
                                                                                embedBacktraceInfo( "", 1 );
                                                                                  _eq_QUMARK(
                                                                                    false                                                                                    ,
                                                                                      begin #makeLet
                                                                                        ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30322| 
                                                                                            if ( 
                                                                                              begin
                                                                                                  trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30322)
                                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                              end
                                                                                             ) then
                                                                                                begin
                                                                                                    trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30322)
                                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                end
                                                                                            else
                                                                                                begin #makeLet
                                                                                                  ___lambda = lambda { |___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30323| 
                                                                                                      if ( 
                                                                                                        begin
                                                                                                            trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30323)
                                                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                        end
                                                                                                       ) then
                                                                                                          begin
                                                                                                              trampCall(___gensym__3a6fb51a4afc9a00b624538ff0c698aecda43d9c_30323)
                                                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                          end
                                                                                                      else
                                                                                                        false
                                                                                                      end
                                                                                                  } ; ___lambda.call(
                                                                                                        if ( 
                                                                                                          begin
                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                              _not(
                                                                                                                  begin
                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                      _eq_QUMARK(
                                                                                                                        false                                                                                                                        ,
                                                                                                                          begin
                                                                                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1286 );
                                                                                                                              trampCall( self.__PAMARKlset2_LTMARK_EQMARK_METHOD(  '%lset2<=',
                                                                                                                                  begin
                                                                                                                                    if @global_lisp_binding.has_key?('__PAMARKlset2_LTMARK_EQMARK') then
                                                                                                                                      trampCall(@__PAMARKlset2_LTMARK_EQMARK)
                                                                                                                                    else raise NameError.new( "Error: undefined variable %lset2<=", "%lset2<=" ) end
                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1286"] + __e.backtrace ) ; raise __e
                                                                                                                                  end                                                                                                                                ,
                                                                                                                              [
                                                                                                                                    begin
                                                                                                                                        trampCall(__EQMARK)
                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1286"] + __e.backtrace ) ; raise __e
                                                                                                                                    end                                                                                                                                  ,
                                                                                                                                    begin
                                                                                                                                        trampCall(_s1)
                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1286"] + __e.backtrace ) ; raise __e
                                                                                                                                    end                                                                                                                                  ,
                                                                                                                                    begin
                                                                                                                                        trampCall(_s2)
                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1286"] + __e.backtrace ) ; raise __e
                                                                                                                                    end
                                                                                                                              ]
                                                                                                                                           ))
                                                                                                                          end
                                                                                                                      )
                                                                                                                  end
                                                                                                              )
                                                                                                          end
                                                                                                         ) then
                                                                                                            begin
                                                                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1286 );
                                                                                                                trampCall( self.__PAMARKlset2_LTMARK_EQMARK_METHOD(  '%lset2<=',
                                                                                                                    begin
                                                                                                                      if @global_lisp_binding.has_key?('__PAMARKlset2_LTMARK_EQMARK') then
                                                                                                                        trampCall(@__PAMARKlset2_LTMARK_EQMARK)
                                                                                                                      else raise NameError.new( "Error: undefined variable %lset2<=", "%lset2<=" ) end
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1286"] + __e.backtrace ) ; raise __e
                                                                                                                    end                                                                                                                  ,
                                                                                                                [
                                                                                                                      begin
                                                                                                                          trampCall(__EQMARK)
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1286"] + __e.backtrace ) ; raise __e
                                                                                                                      end                                                                                                                    ,
                                                                                                                      begin
                                                                                                                          trampCall(_s2)
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1286"] + __e.backtrace ) ; raise __e
                                                                                                                      end                                                                                                                    ,
                                                                                                                      begin
                                                                                                                          trampCall(_s1)
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1286"] + __e.backtrace ) ; raise __e
                                                                                                                      end
                                                                                                                ]
                                                                                                                             ))
                                                                                                            end
                                                                                                        else
                                                                                                          false
                                                                                                        end
                                                                                                             )
                                                                                                end
                                                                                            end
                                                                                        } ; ___lambda.call(
                                                                                              begin
                                                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1285 );
                                                                                                  _eq_QUMARK(
                                                                                                      begin
                                                                                                          trampCall(_s1)
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1285"] + __e.backtrace ) ; raise __e
                                                                                                      end                                                                                                    ,
                                                                                                      begin
                                                                                                          trampCall(_s2)
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1285"] + __e.backtrace ) ; raise __e
                                                                                                      end
                                                                                                  )
                                                                                              end
                                                                                                   )
                                                                                      end
                                                                                  )
                                                                              end
                                                                          )
                                                                      end
                                                                     ) then
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1287 );
                                                                            delayCall( '_lp',  'lp',
                                                                                begin
                                                                                    trampCall(_lp)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1287"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  begin
                                                                                      trampCall(_s2)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1287"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  begin
                                                                                      trampCall(_rest)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1287"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                            ]
                                                                                         )
                                                                        end
                                                                    else
                                                                      false
                                                                    end
                                                                } ; ___lambda.call(
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1283 );
                                                                          _car(
                                                                              begin
                                                                                  trampCall(_rest)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1283"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          )
                                                                      end                                                                    ,
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1284 );
                                                                          _cdr(
                                                                              begin
                                                                                  trampCall(_rest)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1284"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          )
                                                                      end
                                                                           )
                                                              end
                                                                   )
                                                      end
                                                  end
                                              } ; ___lambda.call(
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1282 );
                                                        _not(
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1282 );
                                                                _pair_QUMARK(
                                                                    begin
                                                                        trampCall(_rest)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1282"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                        )
                                                    end
                                                         )
                                            end
                                        }
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1281 );
                                          delayCall( '_lp',  'lp',
                                              begin
                                                  trampCall(_lp)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1281"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1281 );
                                                    _car(
                                                        begin
                                                            trampCall(_lists)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1281"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end                                              ,
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1281 );
                                                    _cdr(
                                                        begin
                                                            trampCall(_lists)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1281"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end
                                          ]
                                                       )
                                      end
                                  } ; ___lambda.call(
                                  nil
                                             )
                                end
                                     )
                        end
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1280 );
                          _not(
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1280 );
                                  _pair_QUMARK(
                                      begin
                                          trampCall(_lists)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1280"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                          )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._lset_MIMARKadjoin_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_lset_MIMARKadjoin', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_lset_MIMARKadjoin'] = self.method( :_lset_MIMARKadjoin_METHOD )
    @_lset_MIMARKadjoin = 
    trampCall(
          Proc.new { |__EQMARK,_lis,*__rest__| _elts = __rest__[0] ;  
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1292 );
                  delayCall( '_fold',  'fold',
                      begin
                        if @global_lisp_binding.has_key?('_fold') then
                          trampCall(@_fold)
                        else raise NameError.new( "Error: undefined variable fold", "fold" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1292"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        Proc.new { |_elt,_ans| 
                            if ( 
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1292 );
                                  trampCall( self._member_METHOD(  'member',
                                      begin
                                        if @global_lisp_binding.has_key?('_member') then
                                          trampCall(@_member)
                                        else raise NameError.new( "Error: undefined variable member", "member" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1292"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_elt)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1292"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_ans)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1292"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(__EQMARK)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1292"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               ))
                              end
                             ) then
                                begin
                                    trampCall(_ans)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1292"] + __e.backtrace ) ; raise __e
                                end
                            else
                                begin
                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1292 );
                                    _cons(
                                        begin
                                            trampCall(_elt)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1292"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_ans)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1292"] + __e.backtrace ) ; raise __e
                                        end
                                    )
                                end
                            end
                        }                      ,
                        begin
                            trampCall(_lis)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1293"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_elts)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1293"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._lset_MIMARKunion_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_lset_MIMARKunion', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_lset_MIMARKunion'] = self.method( :_lset_MIMARKunion_METHOD )
    @_lset_MIMARKunion = 
    trampCall(
          Proc.new { |__EQMARK,*__rest__| _lists = __rest__[0] ;  
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1298 );
                  delayCall( '_reduce',  'reduce',
                      begin
                        if @global_lisp_binding.has_key?('_reduce') then
                          trampCall(@_reduce)
                        else raise NameError.new( "Error: undefined variable reduce", "reduce" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1298"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        Proc.new { |_lis,_ans| 
                            if ( 
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1299 );
                                  _null_QUMARK(
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1299"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                             ) then
                                  begin
                                      trampCall(_ans)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1299"] + __e.backtrace ) ; raise __e
                                  end
                            else
                                if ( 
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1300 );
                                      _null_QUMARK(
                                          begin
                                              trampCall(_ans)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1300"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                                 ) then
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1300"] + __e.backtrace ) ; raise __e
                                      end
                                else
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1301 );
                                          _eq_QUMARK(
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1301"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              begin
                                                  trampCall(_ans)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1301"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                     ) then
                                          begin
                                              trampCall(_ans)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1301"] + __e.backtrace ) ; raise __e
                                          end
                                    else
                                        if ( 
                                        true
                                         ) then
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1303 );
                                                  trampCall( self._fold_METHOD(  'fold',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_fold') then
                                                          trampCall(@_fold)
                                                        else raise NameError.new( "Error: undefined variable fold", "fold" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1303"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                        Proc.new { |_elt,_ans| 
                                                            if ( 
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1303 );
                                                                  trampCall( self._any_METHOD(  'any',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_any') then
                                                                          trampCall(@_any)
                                                                        else raise NameError.new( "Error: undefined variable any", "any" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1303"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                  [
                                                                        Proc.new { |_x| 
                                                                            begin
                                                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1303 );
                                                                                trampCall( callProcedure(  '__EQMARK',  '=',
                                                                                    begin
                                                                                        trampCall(__EQMARK)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1303"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                [
                                                                                      begin
                                                                                          trampCall(_x)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1303"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                      begin
                                                                                          trampCall(_elt)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1303"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                ]
                                                                                             ))
                                                                            end
                                                                        }                                                                      ,
                                                                        begin
                                                                            trampCall(_ans)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1303"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                  ]
                                                                               ))
                                                              end
                                                             ) then
                                                                begin
                                                                    trampCall(_ans)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1304"] + __e.backtrace ) ; raise __e
                                                                end
                                                            else
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1305 );
                                                                    _cons(
                                                                        begin
                                                                            trampCall(_elt)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1305"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        begin
                                                                            trampCall(_ans)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1305"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    )
                                                                end
                                                            end
                                                        }                                                      ,
                                                        begin
                                                            trampCall(_ans)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1306"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        begin
                                                            trampCall(_lis)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1306"] + __e.backtrace ) ; raise __e
                                                        end
                                                  ]
                                                               ))
                                              end
                                        else
                                            Cell.new()
                                        end
                                    end
                                end
                            end
                        }                      ,
                      Cell.new()                      ,
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1307"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._lset_MIMARKunion_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_lset_MIMARKunion_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_lset_MIMARKunion_EXMARK'] = self.method( :_lset_MIMARKunion_EXMARK_METHOD )
    @_lset_MIMARKunion_EXMARK = 
    trampCall(
          Proc.new { |__EQMARK,*__rest__| _lists = __rest__[0] ;  
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1311 );
                  delayCall( '_reduce',  'reduce',
                      begin
                        if @global_lisp_binding.has_key?('_reduce') then
                          trampCall(@_reduce)
                        else raise NameError.new( "Error: undefined variable reduce", "reduce" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1311"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        Proc.new { |_lis,_ans| 
                            if ( 
                              begin
                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1312 );
                                  _null_QUMARK(
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1312"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                             ) then
                                  begin
                                      trampCall(_ans)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1312"] + __e.backtrace ) ; raise __e
                                  end
                            else
                                if ( 
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1313 );
                                      _null_QUMARK(
                                          begin
                                              trampCall(_ans)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1313"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                                 ) then
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1313"] + __e.backtrace ) ; raise __e
                                      end
                                else
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1314 );
                                          _eq_QUMARK(
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1314"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              begin
                                                  trampCall(_ans)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1314"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                     ) then
                                          begin
                                              trampCall(_ans)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1314"] + __e.backtrace ) ; raise __e
                                          end
                                    else
                                        if ( 
                                        true
                                         ) then
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1316 );
                                                  trampCall( self._pair_MIMARKfold_METHOD(  'pair-fold',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_pair_MIMARKfold') then
                                                          trampCall(@_pair_MIMARKfold)
                                                        else raise NameError.new( "Error: undefined variable pair-fold", "pair-fold" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1316"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                        Proc.new { |_pair,_ans| 
                                                            begin #makeLet
                                                              ___lambda = lambda { |_elt| 
                                                                  if ( 
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1318 );
                                                                        trampCall( self._any_METHOD(  'any',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_any') then
                                                                                trampCall(@_any)
                                                                              else raise NameError.new( "Error: undefined variable any", "any" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1318"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              Proc.new { |_x| 
                                                                                  begin
                                                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1318 );
                                                                                      trampCall( callProcedure(  '__EQMARK',  '=',
                                                                                          begin
                                                                                              trampCall(__EQMARK)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1318"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                      [
                                                                                            begin
                                                                                                trampCall(_x)
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1318"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,
                                                                                            begin
                                                                                                trampCall(_elt)
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1318"] + __e.backtrace ) ; raise __e
                                                                                            end
                                                                                      ]
                                                                                                   ))
                                                                                  end
                                                                              }                                                                            ,
                                                                              begin
                                                                                  trampCall(_ans)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1318"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end
                                                                   ) then
                                                                      begin
                                                                          trampCall(_ans)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1319"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                  else
                                                                      begin  #makeBegin
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1320 );
                                                                              _set_MIMARKcdr_EXMARK(
                                                                                  begin
                                                                                      trampCall(_pair)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1320"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  begin
                                                                                      trampCall(_ans)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1320"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                              )
                                                                          end
                                                                          begin
                                                                              trampCall(_pair)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1320"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                      end
                                                                  end
                                                              } ; ___lambda.call(
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1317 );
                                                                        _car(
                                                                            begin
                                                                                trampCall(_pair)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1317"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                        )
                                                                    end
                                                                         )
                                                            end
                                                        }                                                      ,
                                                        begin
                                                            trampCall(_ans)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1321"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        begin
                                                            trampCall(_lis)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1321"] + __e.backtrace ) ; raise __e
                                                        end
                                                  ]
                                                               ))
                                              end
                                        else
                                            Cell.new()
                                        end
                                    end
                                end
                            end
                        }                      ,
                      Cell.new()                      ,
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1322"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._lset_MIMARKintersection_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_lset_MIMARKintersection', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_lset_MIMARKintersection'] = self.method( :_lset_MIMARKintersection_METHOD )
    @_lset_MIMARKintersection = 
    trampCall(
          Proc.new { |__EQMARK,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |_lists| 
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1328 );
                          trampCall( self._any_METHOD(  'any',
                              begin
                                if @global_lisp_binding.has_key?('_any') then
                                  trampCall(@_any)
                                else raise NameError.new( "Error: undefined variable any", "any" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1328"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                begin
                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                    trampCall(@_null_MIMARKlist_QUMARK)
                                  else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1328"] + __e.backtrace ) ; raise __e
                                end                              ,
                                begin
                                    trampCall(_lists)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1328"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       ))
                      end
                     ) then
                        Cell.new()
                    else
                        if ( 
                          begin
                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1329 );
                              _null_QUMARK(
                                  begin
                                      trampCall(_lists)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1329"] + __e.backtrace ) ; raise __e
                                  end
                              )
                          end
                         ) then
                              begin
                                  trampCall(_lis1)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1329"] + __e.backtrace ) ; raise __e
                              end
                        else
                            if ( 
                            true
                             ) then
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1330 );
                                      delayCall( '_filter',  'filter',
                                          begin
                                            if @global_lisp_binding.has_key?('_filter') then
                                              trampCall(@_filter)
                                            else raise NameError.new( "Error: undefined variable filter", "filter" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1330"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            Proc.new { |_x| 
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1331 );
                                                    trampCall( self._every_METHOD(  'every',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_every') then
                                                            trampCall(@_every)
                                                          else raise NameError.new( "Error: undefined variable every", "every" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1331"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          Proc.new { |_lis| 
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1331 );
                                                                  trampCall( self._member_METHOD(  'member',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_member') then
                                                                          trampCall(@_member)
                                                                        else raise NameError.new( "Error: undefined variable member", "member" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1331"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                  [
                                                                        begin
                                                                            trampCall(_x)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1331"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        begin
                                                                            trampCall(_lis)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1331"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        begin
                                                                            trampCall(__EQMARK)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1331"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                  ]
                                                                               ))
                                                              end
                                                          }                                                        ,
                                                          begin
                                                              trampCall(_lists)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1331"] + __e.backtrace ) ; raise __e
                                                          end
                                                    ]
                                                                 ))
                                                end
                                            }                                          ,
                                            begin
                                                trampCall(_lis1)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1332"] + __e.backtrace ) ; raise __e
                                            end
                                      ]
                                                   )
                                  end
                            else
                                Cell.new()
                            end
                        end
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1327 );
                          trampCall( self._delete_METHOD(  'delete',
                              begin
                                if @global_lisp_binding.has_key?('_delete') then
                                  trampCall(@_delete)
                                else raise NameError.new( "Error: undefined variable delete", "delete" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1327"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                begin
                                    trampCall(_lis1)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1327"] + __e.backtrace ) ; raise __e
                                end                              ,
                                begin
                                    trampCall(_lists)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1327"] + __e.backtrace ) ; raise __e
                                end                              ,
                                begin
                                  if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                    trampCall(@_eq_QUMARK)
                                  else raise NameError.new( "Error: undefined variable eq?", "eq?" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1327"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       ))
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._lset_MIMARKintersection_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_lset_MIMARKintersection_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_lset_MIMARKintersection_EXMARK'] = self.method( :_lset_MIMARKintersection_EXMARK_METHOD )
    @_lset_MIMARKintersection_EXMARK = 
    trampCall(
          Proc.new { |__EQMARK,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |_lists| 
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1337 );
                          trampCall( self._any_METHOD(  'any',
                              begin
                                if @global_lisp_binding.has_key?('_any') then
                                  trampCall(@_any)
                                else raise NameError.new( "Error: undefined variable any", "any" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1337"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                begin
                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                    trampCall(@_null_MIMARKlist_QUMARK)
                                  else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1337"] + __e.backtrace ) ; raise __e
                                end                              ,
                                begin
                                    trampCall(_lists)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1337"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       ))
                      end
                     ) then
                        Cell.new()
                    else
                        if ( 
                          begin
                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1338 );
                              _null_QUMARK(
                                  begin
                                      trampCall(_lists)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1338"] + __e.backtrace ) ; raise __e
                                  end
                              )
                          end
                         ) then
                              begin
                                  trampCall(_lis1)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1338"] + __e.backtrace ) ; raise __e
                              end
                        else
                            if ( 
                            true
                             ) then
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1339 );
                                      delayCall( '_filter_EXMARK',  'filter!',
                                          begin
                                            if @global_lisp_binding.has_key?('_filter_EXMARK') then
                                              trampCall(@_filter_EXMARK)
                                            else raise NameError.new( "Error: undefined variable filter!", "filter!" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1339"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            Proc.new { |_x| 
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1340 );
                                                    trampCall( self._every_METHOD(  'every',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_every') then
                                                            trampCall(@_every)
                                                          else raise NameError.new( "Error: undefined variable every", "every" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1340"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          Proc.new { |_lis| 
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1340 );
                                                                  trampCall( self._member_METHOD(  'member',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_member') then
                                                                          trampCall(@_member)
                                                                        else raise NameError.new( "Error: undefined variable member", "member" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1340"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                  [
                                                                        begin
                                                                            trampCall(_x)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1340"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        begin
                                                                            trampCall(_lis)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1340"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        begin
                                                                            trampCall(__EQMARK)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1340"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                  ]
                                                                               ))
                                                              end
                                                          }                                                        ,
                                                          begin
                                                              trampCall(_lists)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1340"] + __e.backtrace ) ; raise __e
                                                          end
                                                    ]
                                                                 ))
                                                end
                                            }                                          ,
                                            begin
                                                trampCall(_lis1)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1341"] + __e.backtrace ) ; raise __e
                                            end
                                      ]
                                                   )
                                  end
                            else
                                Cell.new()
                            end
                        end
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1336 );
                          trampCall( self._delete_METHOD(  'delete',
                              begin
                                if @global_lisp_binding.has_key?('_delete') then
                                  trampCall(@_delete)
                                else raise NameError.new( "Error: undefined variable delete", "delete" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1336"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                begin
                                    trampCall(_lis1)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1336"] + __e.backtrace ) ; raise __e
                                end                              ,
                                begin
                                    trampCall(_lists)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1336"] + __e.backtrace ) ; raise __e
                                end                              ,
                                begin
                                  if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                    trampCall(@_eq_QUMARK)
                                  else raise NameError.new( "Error: undefined variable eq?", "eq?" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1336"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       ))
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._lset_MIMARKdifference_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_lset_MIMARKdifference', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_lset_MIMARKdifference'] = self.method( :_lset_MIMARKdifference_METHOD )
    @_lset_MIMARKdifference = 
    trampCall(
          Proc.new { |__EQMARK,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |_lists| 
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1347 );
                          _null_QUMARK(
                              begin
                                  trampCall(_lists)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1347"] + __e.backtrace ) ; raise __e
                              end
                          )
                      end
                     ) then
                          begin
                              trampCall(_lis1)
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1347"] + __e.backtrace ) ; raise __e
                          end
                    else
                        if ( 
                          begin
                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1348 );
                              trampCall( self._memq_METHOD(  'memq',
                                  begin
                                    if @global_lisp_binding.has_key?('_memq') then
                                      trampCall(@_memq)
                                    else raise NameError.new( "Error: undefined variable memq", "memq" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1348"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_lis1)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1348"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    begin
                                        trampCall(_lists)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1348"] + __e.backtrace ) ; raise __e
                                    end
                              ]
                                           ))
                          end
                         ) then
                            Cell.new()
                        else
                            if ( 
                            true
                             ) then
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1349 );
                                      delayCall( '_filter',  'filter',
                                          begin
                                            if @global_lisp_binding.has_key?('_filter') then
                                              trampCall(@_filter)
                                            else raise NameError.new( "Error: undefined variable filter", "filter" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1349"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            Proc.new { |_x| 
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1350 );
                                                    trampCall( self._every_METHOD(  'every',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_every') then
                                                            trampCall(@_every)
                                                          else raise NameError.new( "Error: undefined variable every", "every" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1350"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          Proc.new { |_lis| 
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1350 );
                                                                  _not(
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1350 );
                                                                          trampCall( self._member_METHOD(  'member',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_member') then
                                                                                  trampCall(@_member)
                                                                                else raise NameError.new( "Error: undefined variable member", "member" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1350"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                                begin
                                                                                    trampCall(_x)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1350"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                begin
                                                                                    trampCall(_lis)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1350"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                begin
                                                                                    trampCall(__EQMARK)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1350"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                          ]
                                                                                       ))
                                                                      end
                                                                  )
                                                              end
                                                          }                                                        ,
                                                          begin
                                                              trampCall(_lists)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1351"] + __e.backtrace ) ; raise __e
                                                          end
                                                    ]
                                                                 ))
                                                end
                                            }                                          ,
                                            begin
                                                trampCall(_lis1)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1352"] + __e.backtrace ) ; raise __e
                                            end
                                      ]
                                                   )
                                  end
                            else
                                Cell.new()
                            end
                        end
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1346 );
                          trampCall( self._filter_METHOD(  'filter',
                              begin
                                if @global_lisp_binding.has_key?('_filter') then
                                  trampCall(@_filter)
                                else raise NameError.new( "Error: undefined variable filter", "filter" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1346"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                begin
                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                    trampCall(@_pair_QUMARK)
                                  else raise NameError.new( "Error: undefined variable pair?", "pair?" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1346"] + __e.backtrace ) ; raise __e
                                end                              ,
                                begin
                                    trampCall(_lists)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1346"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       ))
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._lset_MIMARKdifference_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_lset_MIMARKdifference_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_lset_MIMARKdifference_EXMARK'] = self.method( :_lset_MIMARKdifference_EXMARK_METHOD )
    @_lset_MIMARKdifference_EXMARK = 
    trampCall(
          Proc.new { |__EQMARK,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |_lists| 
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1357 );
                          _null_QUMARK(
                              begin
                                  trampCall(_lists)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1357"] + __e.backtrace ) ; raise __e
                              end
                          )
                      end
                     ) then
                          begin
                              trampCall(_lis1)
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1357"] + __e.backtrace ) ; raise __e
                          end
                    else
                        if ( 
                          begin
                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1358 );
                              trampCall( self._memq_METHOD(  'memq',
                                  begin
                                    if @global_lisp_binding.has_key?('_memq') then
                                      trampCall(@_memq)
                                    else raise NameError.new( "Error: undefined variable memq", "memq" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1358"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_lis1)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1358"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    begin
                                        trampCall(_lists)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1358"] + __e.backtrace ) ; raise __e
                                    end
                              ]
                                           ))
                          end
                         ) then
                            Cell.new()
                        else
                            if ( 
                            true
                             ) then
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1359 );
                                      delayCall( '_filter_EXMARK',  'filter!',
                                          begin
                                            if @global_lisp_binding.has_key?('_filter_EXMARK') then
                                              trampCall(@_filter_EXMARK)
                                            else raise NameError.new( "Error: undefined variable filter!", "filter!" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1359"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            Proc.new { |_x| 
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1360 );
                                                    trampCall( self._every_METHOD(  'every',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_every') then
                                                            trampCall(@_every)
                                                          else raise NameError.new( "Error: undefined variable every", "every" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          Proc.new { |_lis| 
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1360 );
                                                                  _not(
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1360 );
                                                                          trampCall( self._member_METHOD(  'member',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_member') then
                                                                                  trampCall(@_member)
                                                                                else raise NameError.new( "Error: undefined variable member", "member" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                                begin
                                                                                    trampCall(_x)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                begin
                                                                                    trampCall(_lis)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                begin
                                                                                    trampCall(__EQMARK)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                          ]
                                                                                       ))
                                                                      end
                                                                  )
                                                              end
                                                          }                                                        ,
                                                          begin
                                                              trampCall(_lists)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1361"] + __e.backtrace ) ; raise __e
                                                          end
                                                    ]
                                                                 ))
                                                end
                                            }                                          ,
                                            begin
                                                trampCall(_lis1)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1362"] + __e.backtrace ) ; raise __e
                                            end
                                      ]
                                                   )
                                  end
                            else
                                Cell.new()
                            end
                        end
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1356 );
                          trampCall( self._filter_METHOD(  'filter',
                              begin
                                if @global_lisp_binding.has_key?('_filter') then
                                  trampCall(@_filter)
                                else raise NameError.new( "Error: undefined variable filter", "filter" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1356"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                begin
                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                    trampCall(@_pair_QUMARK)
                                  else raise NameError.new( "Error: undefined variable pair?", "pair?" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1356"] + __e.backtrace ) ; raise __e
                                end                              ,
                                begin
                                    trampCall(_lists)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1356"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       ))
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._lset_MIMARKxor_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_lset_MIMARKxor', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_lset_MIMARKxor'] = self.method( :_lset_MIMARKxor_METHOD )
    @_lset_MIMARKxor = 
    trampCall(
          Proc.new { |__EQMARK,*__rest__| _lists = __rest__[0] ;  
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1367 );
                  delayCall( '_reduce',  'reduce',
                      begin
                        if @global_lisp_binding.has_key?('_reduce') then
                          trampCall(@_reduce)
                        else raise NameError.new( "Error: undefined variable reduce", "reduce" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1367"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        Proc.new { |_b,_a| 
                            begin
                              embedBacktraceInfo( "", 1 );
                                trampCall( self._call_MIMARKwith_MIMARKvalues_METHOD(  'call-with-values',
                                    begin
                                      if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                        trampCall(@_call_MIMARKwith_MIMARKvalues)
                                      else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      Proc.new { || 
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1377 );
                                              trampCall( self._lset_MIMARKdiff_PLMARKintersection_METHOD(  'lset-diff+intersection',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_lset_MIMARKdiff_PLMARKintersection') then
                                                      trampCall(@_lset_MIMARKdiff_PLMARKintersection)
                                                    else raise NameError.new( "Error: undefined variable lset-diff+intersection", "lset-diff+intersection" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1377"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(__EQMARK)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1377"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    begin
                                                        trampCall(_a)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1377"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    begin
                                                        trampCall(_b)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1377"] + __e.backtrace ) ; raise __e
                                                    end
                                              ]
                                                           ))
                                          end
                                      }                                    ,
                                      Proc.new { |_a_MIMARKb,_a_MIMARKint_MIMARKb| 
                                          if ( 
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1378 );
                                                _null_QUMARK(
                                                    begin
                                                        trampCall(_a_MIMARKb)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1378"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                           ) then
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1378 );
                                                    trampCall( self._lset_MIMARKdifference_METHOD(  'lset-difference',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_lset_MIMARKdifference') then
                                                            trampCall(@_lset_MIMARKdifference)
                                                          else raise NameError.new( "Error: undefined variable lset-difference", "lset-difference" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1378"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                              trampCall(__EQMARK)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1378"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          begin
                                                              trampCall(_b)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1378"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          begin
                                                              trampCall(_a)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1378"] + __e.backtrace ) ; raise __e
                                                          end
                                                    ]
                                                                 ))
                                                end
                                          else
                                              if ( 
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1379 );
                                                    _null_QUMARK(
                                                        begin
                                                            trampCall(_a_MIMARKint_MIMARKb)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1379"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end
                                               ) then
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1379 );
                                                        trampCall( self._append_METHOD(  'append',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_append') then
                                                                trampCall(@_append)
                                                              else raise NameError.new( "Error: undefined variable append", "append" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1379"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                        [
                                                              begin
                                                                  trampCall(_b)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1379"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              begin
                                                                  trampCall(_a)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1379"] + __e.backtrace ) ; raise __e
                                                              end
                                                        ]
                                                                     ))
                                                    end
                                              else
                                                  if ( 
                                                  true
                                                   ) then
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1380 );
                                                            trampCall( self._fold_METHOD(  'fold',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_fold') then
                                                                    trampCall(@_fold)
                                                                  else raise NameError.new( "Error: undefined variable fold", "fold" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1380"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  Proc.new { |_xb,_ans| 
                                                                      if ( 
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1381 );
                                                                            trampCall( self._member_METHOD(  'member',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_member') then
                                                                                    trampCall(@_member)
                                                                                  else raise NameError.new( "Error: undefined variable member", "member" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1381"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  begin
                                                                                      trampCall(_xb)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1381"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  begin
                                                                                      trampCall(_a_MIMARKint_MIMARKb)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1381"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  begin
                                                                                      trampCall(__EQMARK)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1381"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                            ]
                                                                                         ))
                                                                        end
                                                                       ) then
                                                                          begin
                                                                              trampCall(_ans)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1381"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                      else
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1381 );
                                                                              _cons(
                                                                                  begin
                                                                                      trampCall(_xb)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1381"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  begin
                                                                                      trampCall(_ans)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1381"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                              )
                                                                          end
                                                                      end
                                                                  }                                                                ,
                                                                  begin
                                                                      trampCall(_a_MIMARKb)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1382"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  begin
                                                                      trampCall(_b)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1383"] + __e.backtrace ) ; raise __e
                                                                  end
                                                            ]
                                                                         ))
                                                        end
                                                  else
                                                      Cell.new()
                                                  end
                                              end
                                          end
                                      }
                                ]
                                             ))
                            end
                        }                      ,
                      Cell.new()                      ,
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1384"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._lset_MIMARKxor_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_lset_MIMARKxor_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_lset_MIMARKxor_EXMARK'] = self.method( :_lset_MIMARKxor_EXMARK_METHOD )
    @_lset_MIMARKxor_EXMARK = 
    trampCall(
          Proc.new { |__EQMARK,*__rest__| _lists = __rest__[0] ;  
              begin
                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1389 );
                  delayCall( '_reduce',  'reduce',
                      begin
                        if @global_lisp_binding.has_key?('_reduce') then
                          trampCall(@_reduce)
                        else raise NameError.new( "Error: undefined variable reduce", "reduce" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1389"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        Proc.new { |_b,_a| 
                            begin
                              embedBacktraceInfo( "", 1 );
                                trampCall( self._call_MIMARKwith_MIMARKvalues_METHOD(  'call-with-values',
                                    begin
                                      if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                        trampCall(@_call_MIMARKwith_MIMARKvalues)
                                      else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      Proc.new { || 
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1399 );
                                              trampCall( self._lset_MIMARKdiff_PLMARKintersection_EXMARK_METHOD(  'lset-diff+intersection!',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_lset_MIMARKdiff_PLMARKintersection_EXMARK') then
                                                      trampCall(@_lset_MIMARKdiff_PLMARKintersection_EXMARK)
                                                    else raise NameError.new( "Error: undefined variable lset-diff+intersection!", "lset-diff+intersection!" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1399"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(__EQMARK)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1399"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    begin
                                                        trampCall(_a)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1399"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    begin
                                                        trampCall(_b)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1399"] + __e.backtrace ) ; raise __e
                                                    end
                                              ]
                                                           ))
                                          end
                                      }                                    ,
                                      Proc.new { |_a_MIMARKb,_a_MIMARKint_MIMARKb| 
                                          if ( 
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1400 );
                                                _null_QUMARK(
                                                    begin
                                                        trampCall(_a_MIMARKb)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1400"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                           ) then
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1400 );
                                                    trampCall( self._lset_MIMARKdifference_EXMARK_METHOD(  'lset-difference!',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_lset_MIMARKdifference_EXMARK') then
                                                            trampCall(@_lset_MIMARKdifference_EXMARK)
                                                          else raise NameError.new( "Error: undefined variable lset-difference!", "lset-difference!" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1400"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                              trampCall(__EQMARK)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1400"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          begin
                                                              trampCall(_b)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1400"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          begin
                                                              trampCall(_a)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1400"] + __e.backtrace ) ; raise __e
                                                          end
                                                    ]
                                                                 ))
                                                end
                                          else
                                              if ( 
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1401 );
                                                    _null_QUMARK(
                                                        begin
                                                            trampCall(_a_MIMARKint_MIMARKb)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1401"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end
                                               ) then
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1401 );
                                                        trampCall( self._append_EXMARK_METHOD(  'append!',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_append_EXMARK') then
                                                                trampCall(@_append_EXMARK)
                                                              else raise NameError.new( "Error: undefined variable append!", "append!" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1401"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                        [
                                                              begin
                                                                  trampCall(_b)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1401"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              begin
                                                                  trampCall(_a)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1401"] + __e.backtrace ) ; raise __e
                                                              end
                                                        ]
                                                                     ))
                                                    end
                                              else
                                                  if ( 
                                                  true
                                                   ) then
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1402 );
                                                            trampCall( self._pair_MIMARKfold_METHOD(  'pair-fold',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_pair_MIMARKfold') then
                                                                    trampCall(@_pair_MIMARKfold)
                                                                  else raise NameError.new( "Error: undefined variable pair-fold", "pair-fold" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1402"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  Proc.new { |_b_MIMARKpair,_ans| 
                                                                      if ( 
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1403 );
                                                                            trampCall( self._member_METHOD(  'member',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_member') then
                                                                                    trampCall(@_member)
                                                                                  else raise NameError.new( "Error: undefined variable member", "member" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  begin
                                                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1403 );
                                                                                      _car(
                                                                                          begin
                                                                                              trampCall(_b_MIMARKpair)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                      )
                                                                                  end                                                                                ,
                                                                                  begin
                                                                                      trampCall(_a_MIMARKint_MIMARKb)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  begin
                                                                                      trampCall(__EQMARK)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                            ]
                                                                                         ))
                                                                        end
                                                                       ) then
                                                                          begin
                                                                              trampCall(_ans)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                      else
                                                                          begin  #makeBegin
                                                                              begin
                                                                                embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1404 );
                                                                                  _set_MIMARKcdr_EXMARK(
                                                                                      begin
                                                                                          trampCall(_b_MIMARKpair)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1404"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                      begin
                                                                                          trampCall(_ans)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1404"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                  )
                                                                              end
                                                                              begin
                                                                                  trampCall(_b_MIMARKpair)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1404"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          end
                                                                      end
                                                                  }                                                                ,
                                                                  begin
                                                                      trampCall(_a_MIMARKb)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1405"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  begin
                                                                      trampCall(_b)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1406"] + __e.backtrace ) ; raise __e
                                                                  end
                                                            ]
                                                                         ))
                                                        end
                                                  else
                                                      Cell.new()
                                                  end
                                              end
                                          end
                                      }
                                ]
                                             ))
                            end
                        }                      ,
                      Cell.new()                      ,
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1407"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._lset_MIMARKdiff_PLMARKintersection_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_lset_MIMARKdiff_PLMARKintersection', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_lset_MIMARKdiff_PLMARKintersection'] = self.method( :_lset_MIMARKdiff_PLMARKintersection_METHOD )
    @_lset_MIMARKdiff_PLMARKintersection = 
    trampCall(
          Proc.new { |__EQMARK,_lis1,*__rest__| _lists = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1412 );
                    trampCall( self._every_METHOD(  'every',
                        begin
                          if @global_lisp_binding.has_key?('_every') then
                            trampCall(@_every)
                          else raise NameError.new( "Error: undefined variable every", "every" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1412"] + __e.backtrace ) ; raise __e
                        end                      ,
                    [
                          begin
                            if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                              trampCall(@_null_MIMARKlist_QUMARK)
                            else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1412"] + __e.backtrace ) ; raise __e
                          end                        ,
                          begin
                              trampCall(_lists)
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1412"] + __e.backtrace ) ; raise __e
                          end
                    ]
                                 ))
                end
               ) then
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1412 );
                        delayCall( '_values',  'values',
                            begin
                              if @global_lisp_binding.has_key?('_values') then
                                trampCall(@_values)
                              else raise NameError.new( "Error: undefined variable values", "values" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1412"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lis1)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1412"] + __e.backtrace ) ; raise __e
                              end                            ,
                            Cell.new()
                        ]
                                     )
                    end
              else
                  if ( 
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1413 );
                        trampCall( self._memq_METHOD(  'memq',
                            begin
                              if @global_lisp_binding.has_key?('_memq') then
                                trampCall(@_memq)
                              else raise NameError.new( "Error: undefined variable memq", "memq" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1413"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lis1)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1413"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                  trampCall(_lists)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1413"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     ))
                    end
                   ) then
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1413 );
                            delayCall( '_values',  'values',
                                begin
                                  if @global_lisp_binding.has_key?('_values') then
                                    trampCall(@_values)
                                  else raise NameError.new( "Error: undefined variable values", "values" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1413"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                Cell.new()                                ,
                                  begin
                                      trampCall(_lis1)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1413"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         )
                        end
                  else
                      if ( 
                      true
                       ) then
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1414 );
                                delayCall( '_partition',  'partition',
                                    begin
                                      if @global_lisp_binding.has_key?('_partition') then
                                        trampCall(@_partition)
                                      else raise NameError.new( "Error: undefined variable partition", "partition" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1414"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      Proc.new { |_elt| 
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1415 );
                                              _not(
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1415 );
                                                      trampCall( self._any_METHOD(  'any',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_any') then
                                                              trampCall(@_any)
                                                            else raise NameError.new( "Error: undefined variable any", "any" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1415"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            Proc.new { |_lis| 
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1415 );
                                                                    trampCall( self._member_METHOD(  'member',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_member') then
                                                                            trampCall(@_member)
                                                                          else raise NameError.new( "Error: undefined variable member", "member" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1415"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                    [
                                                                          begin
                                                                              trampCall(_elt)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1415"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          begin
                                                                              trampCall(_lis)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1415"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          begin
                                                                              trampCall(__EQMARK)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1415"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                    ]
                                                                                 ))
                                                                end
                                                            }                                                          ,
                                                            begin
                                                                trampCall(_lists)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1416"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                              )
                                          end
                                      }                                    ,
                                      begin
                                          trampCall(_lis1)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1417"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             )
                            end
                      else
                          Cell.new()
                      end
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._lset_MIMARKdiff_PLMARKintersection_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_lset_MIMARKdiff_PLMARKintersection_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_lset_MIMARKdiff_PLMARKintersection_EXMARK'] = self.method( :_lset_MIMARKdiff_PLMARKintersection_EXMARK_METHOD )
    @_lset_MIMARKdiff_PLMARKintersection_EXMARK = 
    trampCall(
          Proc.new { |__EQMARK,_lis1,*__rest__| _lists = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1421 );
                    trampCall( self._every_METHOD(  'every',
                        begin
                          if @global_lisp_binding.has_key?('_every') then
                            trampCall(@_every)
                          else raise NameError.new( "Error: undefined variable every", "every" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1421"] + __e.backtrace ) ; raise __e
                        end                      ,
                    [
                          begin
                            if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                              trampCall(@_null_MIMARKlist_QUMARK)
                            else raise NameError.new( "Error: undefined variable null-list?", "null-list?" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1421"] + __e.backtrace ) ; raise __e
                          end                        ,
                          begin
                              trampCall(_lists)
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1421"] + __e.backtrace ) ; raise __e
                          end
                    ]
                                 ))
                end
               ) then
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1421 );
                        delayCall( '_values',  'values',
                            begin
                              if @global_lisp_binding.has_key?('_values') then
                                trampCall(@_values)
                              else raise NameError.new( "Error: undefined variable values", "values" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1421"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lis1)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1421"] + __e.backtrace ) ; raise __e
                              end                            ,
                            Cell.new()
                        ]
                                     )
                    end
              else
                  if ( 
                    begin
                      embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1422 );
                        trampCall( self._memq_METHOD(  'memq',
                            begin
                              if @global_lisp_binding.has_key?('_memq') then
                                trampCall(@_memq)
                              else raise NameError.new( "Error: undefined variable memq", "memq" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1422"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lis1)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1422"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                  trampCall(_lists)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1422"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     ))
                    end
                   ) then
                        begin
                          embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1422 );
                            delayCall( '_values',  'values',
                                begin
                                  if @global_lisp_binding.has_key?('_values') then
                                    trampCall(@_values)
                                  else raise NameError.new( "Error: undefined variable values", "values" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1422"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                Cell.new()                                ,
                                  begin
                                      trampCall(_lis1)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1422"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         )
                        end
                  else
                      if ( 
                      true
                       ) then
                            begin
                              embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1423 );
                                delayCall( '_partition_EXMARK',  'partition!',
                                    begin
                                      if @global_lisp_binding.has_key?('_partition_EXMARK') then
                                        trampCall(@_partition_EXMARK)
                                      else raise NameError.new( "Error: undefined variable partition!", "partition!" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1423"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      Proc.new { |_elt| 
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1424 );
                                              _not(
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1424 );
                                                      trampCall( self._any_METHOD(  'any',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_any') then
                                                              trampCall(@_any)
                                                            else raise NameError.new( "Error: undefined variable any", "any" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1424"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            Proc.new { |_lis| 
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/srfi-1.nnd", 1424 );
                                                                    trampCall( self._member_METHOD(  'member',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_member') then
                                                                            trampCall(@_member)
                                                                          else raise NameError.new( "Error: undefined variable member", "member" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1424"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                    [
                                                                          begin
                                                                              trampCall(_elt)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1424"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          begin
                                                                              trampCall(_lis)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1424"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          begin
                                                                              trampCall(__EQMARK)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1424"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                    ]
                                                                                 ))
                                                                end
                                                            }                                                          ,
                                                            begin
                                                                trampCall(_lists)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1425"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                              )
                                          end
                                      }                                    ,
                                      begin
                                          trampCall(_lis1)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/srfi-1.nnd:1426"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             )
                            end
                      else
                          Cell.new()
                      end
                  end
              end
          }
    )
  end
 )


# -------------------------------------------------------
# [EOF]
# -------------------------------------------------------
