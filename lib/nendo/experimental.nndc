#
#    This file is nendo's compiled library file. 
#    generated  "nendo -c src" command. 
# 

trampCall( 
  begin
      def self.__PAMARK_PAMARKenumerable_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARK_PAMARKenumerable_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARK_PAMARKenumerable_QUMARK'] = self.method( :__PAMARK_PAMARKenumerable_QUMARK_METHOD )
    @__PAMARK_PAMARKenumerable_QUMARK = 
    trampCall(
          Proc.new { |_x| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/experimental.nnd", 39 ); 
                    _not(
                        begin
                          embedBacktraceInfo( "", 1 ); 
                            _eq_QUMARK(
                              false                              ,
                                begin
                                    trampCall(_x).is_a?(
                                          begin
                                              trampCall(Enumerable)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:38"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:39"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                    )
                end
               ) then
                  begin
                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 39 ); 
                      delayCall( '_not',  'not',
                          begin
                            if @global_lisp_binding.has_key?('_not') then
                              trampCall(@_not)
                            else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:39"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                                trampCall(_x).is_a?(
                                      begin
                                          trampCall(Cell)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:39"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:39"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   )
                  end
              else
                false
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self.__PAMARK_PAMARKmap_MIMARKable_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARK_PAMARKmap_MIMARKable_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARK_PAMARKmap_MIMARKable_QUMARK'] = self.method( :__PAMARK_PAMARKmap_MIMARKable_QUMARK_METHOD )
    @__PAMARK_PAMARKmap_MIMARKable_QUMARK = 
    trampCall(
          Proc.new { |_proc,*__rest__| _lists = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/experimental.nnd", 44 ); 
                    __EQMARK(
                      1                      ,
                        begin
                          embedBacktraceInfo( "./lib/nendo/experimental.nnd", 44 ); 
                            _length(
                                begin
                                    trampCall(_lists)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:45"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                    )
                end
               ) then
                  begin
                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 45 ); 
                      delayCall( '__PAMARK_PAMARKenumerable_QUMARK',  '%%enumerable?',
                          begin
                            if @global_lisp_binding.has_key?('__PAMARK_PAMARKenumerable_QUMARK') then
                              trampCall(@__PAMARK_PAMARKenumerable_QUMARK)
                            else raise NameError.new( "Error: undefined variable __PAMARK_PAMARKenumerable_QUMARK", "__PAMARK_PAMARKenumerable_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:45"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                              embedBacktraceInfo( "./lib/nendo/experimental.nnd", 45 ); 
                                _car(
                                    begin
                                        trampCall(_lists)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:45"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                      ]
                                   )
                  end
              else
                false
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self.__PAMARK_PAMARKmap_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARK_PAMARKmap', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARK_PAMARKmap'] = self.method( :__PAMARK_PAMARKmap_METHOD )
    @__PAMARK_PAMARKmap = 
    trampCall(
          Proc.new { |_proc,_vec| 
              begin
                  trampCall(_vec).map(
                        &Proc.new { |_x| 
                            begin
                              embedBacktraceInfo( "./lib/nendo/experimental.nnd", 51 ); 
                                trampCall( callProcedure(  '_proc',  'proc',
                                    begin
                                        trampCall(_proc)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:51"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:51"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                        }
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:49"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self.__PAMARKmap_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKmap', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKmap'] = self.method( :__PAMARKmap_METHOD )
    @__PAMARKmap = 
    trampCall(
          Proc.new { |_proc,*__rest__| _lists = __rest__[0] ;  
              begin
                ___lambda = lambda { |_args| 
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/experimental.nnd", 57 ); 
                          trampCall( self._apply_METHOD(  'apply',
                              begin
                                if @global_lisp_binding.has_key?('_apply') then
                                  trampCall(@_apply)
                                else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:57"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                begin
                                  if @global_lisp_binding.has_key?('__PAMARK_PAMARKmap_MIMARKable_QUMARK') then
                                    trampCall(@__PAMARK_PAMARKmap_MIMARKable_QUMARK)
                                  else raise NameError.new( "Error: undefined variable __PAMARK_PAMARKmap_MIMARKable_QUMARK", "__PAMARK_PAMARKmap_MIMARKable_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:55"] + __e.backtrace ) ; raise __e
                                end                              ,
                                begin
                                    trampCall(_args)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:57"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       ))
                      end
                     ) then
                        begin
                          embedBacktraceInfo( "./lib/nendo/experimental.nnd", 56 ); 
                            delayCall( '__PAMARK_PAMARKmap',  '%%map',
                                begin
                                  if @global_lisp_binding.has_key?('__PAMARK_PAMARKmap') then
                                    trampCall(@__PAMARK_PAMARKmap)
                                  else raise NameError.new( "Error: undefined variable __PAMARK_PAMARKmap", "__PAMARK_PAMARKmap" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:56"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_proc)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:56"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 56 ); 
                                      _car(
                                          begin
                                              trampCall(_lists)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:56"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                            ]
                                         )
                        end
                    else
                        begin
                          embedBacktraceInfo( "./lib/nendo/experimental.nnd", 57 ); 
                            delayCall( '_apply',  'apply',
                                begin
                                  if @global_lisp_binding.has_key?('_apply') then
                                    trampCall(@_apply)
                                  else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:57"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                    if @global_lisp_binding.has_key?('__PAMARKmap_MIMARKoriginal') then
                                      trampCall(@__PAMARKmap_MIMARKoriginal)
                                    else raise NameError.new( "Error: undefined variable __PAMARKmap_MIMARKoriginal", "__PAMARKmap_MIMARKoriginal" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:57"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  begin
                                      trampCall(_args)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:57"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         )
                        end
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/experimental.nnd", 54 ); 
                          _cons(
                              begin
                                  trampCall(_proc)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:56"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                  trampCall(_lists)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:56"] + __e.backtrace ) ; raise __e
                              end
                          )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self.__PAMARK_PAMARKfor_MIMARKeach_MIMARKable_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARK_PAMARKfor_MIMARKeach_MIMARKable_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARK_PAMARKfor_MIMARKeach_MIMARKable_QUMARK'] = self.method( :__PAMARK_PAMARKfor_MIMARKeach_MIMARKable_QUMARK_METHOD )
    @__PAMARK_PAMARKfor_MIMARKeach_MIMARKable_QUMARK = 
    trampCall(
          Proc.new { |_proc,*__rest__| _lists = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/experimental.nnd", 61 ); 
                    __EQMARK(
                      1                      ,
                        begin
                          embedBacktraceInfo( "./lib/nendo/experimental.nnd", 61 ); 
                            _length(
                                begin
                                    trampCall(_lists)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:62"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                    )
                end
               ) then
                  begin
                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 62 ); 
                      delayCall( '__PAMARK_PAMARKenumerable_QUMARK',  '%%enumerable?',
                          begin
                            if @global_lisp_binding.has_key?('__PAMARK_PAMARKenumerable_QUMARK') then
                              trampCall(@__PAMARK_PAMARKenumerable_QUMARK)
                            else raise NameError.new( "Error: undefined variable __PAMARK_PAMARKenumerable_QUMARK", "__PAMARK_PAMARKenumerable_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:62"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                              embedBacktraceInfo( "./lib/nendo/experimental.nnd", 62 ); 
                                _car(
                                    begin
                                        trampCall(_lists)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:62"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                      ]
                                   )
                  end
              else
                false
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self.__PAMARK_PAMARKfor_MIMARKeach_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARK_PAMARKfor_MIMARKeach', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARK_PAMARKfor_MIMARKeach'] = self.method( :__PAMARK_PAMARKfor_MIMARKeach_METHOD )
    @__PAMARK_PAMARKfor_MIMARKeach = 
    trampCall(
          Proc.new { |_proc,_vec| 
              begin
                  trampCall(_vec).each(
                        &Proc.new { |_x| 
                            begin
                              embedBacktraceInfo( "./lib/nendo/experimental.nnd", 68 ); 
                                trampCall( callProcedure(  '_proc',  'proc',
                                    begin
                                        trampCall(_proc)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:68"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:68"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                        }
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:66"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self.__PAMARKfor_MIMARKeach_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKfor_MIMARKeach', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKfor_MIMARKeach'] = self.method( :__PAMARKfor_MIMARKeach_METHOD )
    @__PAMARKfor_MIMARKeach = 
    trampCall(
          Proc.new { |_proc,*__rest__| _lists = __rest__[0] ;  
              begin
                ___lambda = lambda { |_args| 
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/experimental.nnd", 74 ); 
                          trampCall( self._apply_METHOD(  'apply',
                              begin
                                if @global_lisp_binding.has_key?('_apply') then
                                  trampCall(@_apply)
                                else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:74"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                begin
                                  if @global_lisp_binding.has_key?('__PAMARK_PAMARKfor_MIMARKeach_MIMARKable_QUMARK') then
                                    trampCall(@__PAMARK_PAMARKfor_MIMARKeach_MIMARKable_QUMARK)
                                  else raise NameError.new( "Error: undefined variable __PAMARK_PAMARKfor_MIMARKeach_MIMARKable_QUMARK", "__PAMARK_PAMARKfor_MIMARKeach_MIMARKable_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:72"] + __e.backtrace ) ; raise __e
                                end                              ,
                                begin
                                    trampCall(_args)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:74"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       ))
                      end
                     ) then
                        begin
                          embedBacktraceInfo( "./lib/nendo/experimental.nnd", 73 ); 
                            delayCall( '__PAMARK_PAMARKfor_MIMARKeach',  '%%for-each',
                                begin
                                  if @global_lisp_binding.has_key?('__PAMARK_PAMARKfor_MIMARKeach') then
                                    trampCall(@__PAMARK_PAMARKfor_MIMARKeach)
                                  else raise NameError.new( "Error: undefined variable __PAMARK_PAMARKfor_MIMARKeach", "__PAMARK_PAMARKfor_MIMARKeach" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:73"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_proc)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:73"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 73 ); 
                                      _car(
                                          begin
                                              trampCall(_lists)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:73"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                            ]
                                         )
                        end
                    else
                        begin
                          embedBacktraceInfo( "./lib/nendo/experimental.nnd", 74 ); 
                            delayCall( '_apply',  'apply',
                                begin
                                  if @global_lisp_binding.has_key?('_apply') then
                                    trampCall(@_apply)
                                  else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:74"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                    if @global_lisp_binding.has_key?('__PAMARKfor_MIMARKeach_MIMARKoriginal') then
                                      trampCall(@__PAMARKfor_MIMARKeach_MIMARKoriginal)
                                    else raise NameError.new( "Error: undefined variable __PAMARKfor_MIMARKeach_MIMARKoriginal", "__PAMARKfor_MIMARKeach_MIMARKoriginal" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:74"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  begin
                                      trampCall(_args)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:74"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         )
                        end
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/experimental.nnd", 71 ); 
                          _cons(
                              begin
                                  trampCall(_proc)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:73"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                  trampCall(_lists)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:73"] + __e.backtrace ) ; raise __e
                              end
                          )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self.__PAMARK_PAMARKfilter_MIMARKable_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARK_PAMARKfilter_MIMARKable_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARK_PAMARKfilter_MIMARKable_QUMARK'] = self.method( :__PAMARK_PAMARKfilter_MIMARKable_QUMARK_METHOD )
    @__PAMARK_PAMARKfilter_MIMARKable_QUMARK = 
    trampCall(
          Proc.new { |_proc,_lst| 
              begin
                embedBacktraceInfo( "./lib/nendo/experimental.nnd", 78 ); 
                  delayCall( '__PAMARK_PAMARKenumerable_QUMARK',  '%%enumerable?',
                      begin
                        if @global_lisp_binding.has_key?('__PAMARK_PAMARKenumerable_QUMARK') then
                          trampCall(@__PAMARK_PAMARKenumerable_QUMARK)
                        else raise NameError.new( "Error: undefined variable __PAMARK_PAMARKenumerable_QUMARK", "__PAMARK_PAMARKenumerable_QUMARK" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:78"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                            trampCall(_lst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:78"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self.__PAMARK_PAMARKfilter_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARK_PAMARKfilter', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARK_PAMARKfilter'] = self.method( :__PAMARK_PAMARKfilter_METHOD )
    @__PAMARK_PAMARKfilter = 
    trampCall(
          Proc.new { |_proc,_vec| 
              begin
                  trampCall(_vec).select(
                        &Proc.new { |_x| 
                            begin
                              embedBacktraceInfo( "./lib/nendo/experimental.nnd", 83 ); 
                                trampCall( callProcedure(  '_proc',  'proc',
                                    begin
                                        trampCall(_proc)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:83"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:83"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                        }
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:81"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self.__PAMARKfilter_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKfilter', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKfilter'] = self.method( :__PAMARKfilter_METHOD )
    @__PAMARKfilter = 
    trampCall(
          Proc.new { |_proc,_lst| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/experimental.nnd", 86 ); 
                    trampCall( self.__PAMARK_PAMARKfilter_MIMARKable_QUMARK_METHOD(  '%%filter-able?',
                        begin
                          if @global_lisp_binding.has_key?('__PAMARK_PAMARKfilter_MIMARKable_QUMARK') then
                            trampCall(@__PAMARK_PAMARKfilter_MIMARKable_QUMARK)
                          else raise NameError.new( "Error: undefined variable __PAMARK_PAMARKfilter_MIMARKable_QUMARK", "__PAMARK_PAMARKfilter_MIMARKable_QUMARK" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:86"] + __e.backtrace ) ; raise __e
                        end                      ,
                    [
                          begin
                              trampCall(_proc)
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:88"] + __e.backtrace ) ; raise __e
                          end                        ,
                          begin
                              trampCall(_lst)
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:88"] + __e.backtrace ) ; raise __e
                          end
                    ]
                                 ))
                end
               ) then
                  begin
                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 87 ); 
                      delayCall( '__PAMARK_PAMARKfilter',  '%%filter',
                          begin
                            if @global_lisp_binding.has_key?('__PAMARK_PAMARKfilter') then
                              trampCall(@__PAMARK_PAMARKfilter)
                            else raise NameError.new( "Error: undefined variable __PAMARK_PAMARKfilter", "__PAMARK_PAMARKfilter" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:87"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                                trampCall(_proc)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:88"] + __e.backtrace ) ; raise __e
                            end                          ,
                            begin
                                trampCall(_lst)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:88"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   )
                  end
              else
                  begin
                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 88 ); 
                      delayCall( '__PAMARKfilter_MIMARKoriginal',  '%filter-original',
                          begin
                            if @global_lisp_binding.has_key?('__PAMARKfilter_MIMARKoriginal') then
                              trampCall(@__PAMARKfilter_MIMARKoriginal)
                            else raise NameError.new( "Error: undefined variable __PAMARKfilter_MIMARKoriginal", "__PAMARKfilter_MIMARKoriginal" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:88"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                                trampCall(_proc)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:88"] + __e.backtrace ) ; raise __e
                            end                          ,
                            begin
                                trampCall(_lst)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:88"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self._map_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_map', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_map'] = self.method( :_map_METHOD )
    @_map = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('__PAMARKmap') then
              trampCall(@__PAMARKmap)
            else raise NameError.new( "Error: undefined variable __PAMARKmap", "__PAMARKmap" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:91"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self._for_MIMARKeach_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_for_MIMARKeach', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_for_MIMARKeach'] = self.method( :_for_MIMARKeach_METHOD )
    @_for_MIMARKeach = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('__PAMARKfor_MIMARKeach') then
              trampCall(@__PAMARKfor_MIMARKeach)
            else raise NameError.new( "Error: undefined variable __PAMARKfor_MIMARKeach", "__PAMARKfor_MIMARKeach" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:92"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self._filter_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_filter', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_filter'] = self.method( :_filter_METHOD )
    @_filter = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('__PAMARKfilter') then
              trampCall(@__PAMARKfilter)
            else raise NameError.new( "Error: undefined variable __PAMARKfilter", "__PAMARKfilter" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:93"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self._disasm_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_disasm', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_disasm'] = self.method( :_disasm_METHOD )
    @_disasm = 
    trampCall(
          Proc.new { |_varname,*__rest__| _opt = __rest__[0] ;  
              begin
                ___lambda = lambda { |_kind,_alist| 
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/experimental.nnd", 108 ); 
                          trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                              begin
                                if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                  trampCall(@_eqv_QUMARK)
                                else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:108"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                begin
                                    trampCall(_kind)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:108"] + __e.backtrace ) ; raise __e
                                end                              ,
                              :"compiled"
                          ]
                                       ))
                      end
                     ) then
                        begin
                            begin
                              embedBacktraceInfo( "./lib/nendo/experimental.nnd", 118 ); 
                                delayCall( '_assv_MIMARKref',  'assv-ref',
                                    begin
                                      if @global_lisp_binding.has_key?('_assv_MIMARKref') then
                                        trampCall(@_assv_MIMARKref)
                                      else raise NameError.new( "Error: undefined variable _assv_MIMARKref", "_assv_MIMARKref" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:118"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                    "compiled_str"                                    ,
                                      begin
                                          trampCall(_alist)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:118"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             )
                            end
                        end
                    else
                        if ( 
                          begin
                            embedBacktraceInfo( "./lib/nendo/experimental.nnd", 108 ); 
                              trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                  begin
                                    if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                      trampCall(@_eqv_QUMARK)
                                    else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:108"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_kind)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:108"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                  :"source"
                              ]
                                           ))
                          end
                         ) then
                            begin
                                begin
                                  embedBacktraceInfo( "./lib/nendo/experimental.nnd", 118 ); 
                                    delayCall( '_assv_MIMARKref',  'assv-ref',
                                        begin
                                          if @global_lisp_binding.has_key?('_assv_MIMARKref') then
                                            trampCall(@_assv_MIMARKref)
                                          else raise NameError.new( "Error: undefined variable _assv_MIMARKref", "_assv_MIMARKref" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:118"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        "source"                                        ,
                                          begin
                                              trampCall(_alist)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:118"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 )
                                end
                            end
                        else
                            if ( 
                              begin
                                embedBacktraceInfo( "./lib/nendo/experimental.nnd", 108 ); 
                                  trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                      begin
                                        if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                          trampCall(@_eqv_QUMARK)
                                        else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:108"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_kind)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:108"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                      :"expanded"
                                  ]
                                               ))
                              end
                             ) then
                                begin
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/experimental.nnd", 118 ); 
                                        delayCall( '_assv_MIMARKref',  'assv-ref',
                                            begin
                                              if @global_lisp_binding.has_key?('_assv_MIMARKref') then
                                                trampCall(@_assv_MIMARKref)
                                              else raise NameError.new( "Error: undefined variable _assv_MIMARKref", "_assv_MIMARKref" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:118"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                            "expanded"                                            ,
                                              begin
                                                  trampCall(_alist)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:118"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     )
                                    end
                                end
                            else
                                if ( 
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 108 ); 
                                      trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                          begin
                                            if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                              trampCall(@_eqv_QUMARK)
                                            else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:108"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_kind)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:108"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                          :"info"
                                      ]
                                                   ))
                                  end
                                 ) then
                                    begin
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/experimental.nnd", 109 ); 
                                            delayCall( '_string_MIMARKjoin',  'string-join',
                                                begin
                                                  if @global_lisp_binding.has_key?('_string_MIMARKjoin') then
                                                    trampCall(@_string_MIMARKjoin)
                                                  else raise NameError.new( "Error: undefined variable _string_MIMARKjoin", "_string_MIMARKjoin" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:109"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 110 ); 
                                                      trampCall( self._list_METHOD(  'list',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_list') then
                                                              trampCall(@_list)
                                                            else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:110"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/experimental.nnd", 116 ); 
                                                                trampCall( self._sprintf_METHOD(  'sprintf',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_sprintf') then
                                                                        trampCall(@_sprintf)
                                                                      else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:116"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                    " file:   %s 
"                                                                    ,
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/experimental.nnd", 118 ); 
                                                                          trampCall( self._assv_MIMARKref_METHOD(  'assv-ref',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_assv_MIMARKref') then
                                                                                  trampCall(@_assv_MIMARKref)
                                                                                else raise NameError.new( "Error: undefined variable _assv_MIMARKref", "_assv_MIMARKref" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:118"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                              "sourcefile"                                                                              ,
                                                                                begin
                                                                                    trampCall(_alist)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:118"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                          ]
                                                                                       ))
                                                                      end
                                                                ]
                                                                             ))
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/experimental.nnd", 116 ); 
                                                                trampCall( self._sprintf_METHOD(  'sprintf',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_sprintf') then
                                                                        trampCall(@_sprintf)
                                                                      else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:116"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                    " lineno: %s 
"                                                                    ,
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/experimental.nnd", 118 ); 
                                                                          trampCall( self._assv_MIMARKref_METHOD(  'assv-ref',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_assv_MIMARKref') then
                                                                                  trampCall(@_assv_MIMARKref)
                                                                                else raise NameError.new( "Error: undefined variable _assv_MIMARKref", "_assv_MIMARKref" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:118"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                              "lineno"                                                                              ,
                                                                                begin
                                                                                    trampCall(_alist)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:118"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                          ]
                                                                                       ))
                                                                      end
                                                                ]
                                                                             ))
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/experimental.nnd", 116 ); 
                                                                trampCall( self._sprintf_METHOD(  'sprintf',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_sprintf') then
                                                                        trampCall(@_sprintf)
                                                                      else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:116"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                    " source: 
"
                                                                ]
                                                                             ))
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/experimental.nnd", 117 ); 
                                                                trampCall( self._pretty_MIMARKprint_MIMARKto_MIMARKstring_METHOD(  'pretty-print-to-string',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_pretty_MIMARKprint_MIMARKto_MIMARKstring') then
                                                                        trampCall(@_pretty_MIMARKprint_MIMARKto_MIMARKstring)
                                                                      else raise NameError.new( "Error: undefined variable _pretty_MIMARKprint_MIMARKto_MIMARKstring", "_pretty_MIMARKprint_MIMARKto_MIMARKstring" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:117"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/experimental.nnd", 118 ); 
                                                                          trampCall( self._assv_MIMARKref_METHOD(  'assv-ref',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_assv_MIMARKref') then
                                                                                  trampCall(@_assv_MIMARKref)
                                                                                else raise NameError.new( "Error: undefined variable _assv_MIMARKref", "_assv_MIMARKref" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:118"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                              "source"                                                                              ,
                                                                                begin
                                                                                    trampCall(_alist)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:118"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                          ]
                                                                                       ))
                                                                      end
                                                                ]
                                                                             ))
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/experimental.nnd", 116 ); 
                                                                trampCall( self._sprintf_METHOD(  'sprintf',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_sprintf') then
                                                                        trampCall(@_sprintf)
                                                                      else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:116"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                    " expanded: 
"
                                                                ]
                                                                             ))
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/experimental.nnd", 117 ); 
                                                                trampCall( self._pretty_MIMARKprint_MIMARKto_MIMARKstring_METHOD(  'pretty-print-to-string',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_pretty_MIMARKprint_MIMARKto_MIMARKstring') then
                                                                        trampCall(@_pretty_MIMARKprint_MIMARKto_MIMARKstring)
                                                                      else raise NameError.new( "Error: undefined variable _pretty_MIMARKprint_MIMARKto_MIMARKstring", "_pretty_MIMARKprint_MIMARKto_MIMARKstring" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:117"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/experimental.nnd", 118 ); 
                                                                          trampCall( self._assv_MIMARKref_METHOD(  'assv-ref',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_assv_MIMARKref') then
                                                                                  trampCall(@_assv_MIMARKref)
                                                                                else raise NameError.new( "Error: undefined variable _assv_MIMARKref", "_assv_MIMARKref" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:118"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                              "expanded"                                                                              ,
                                                                                begin
                                                                                    trampCall(_alist)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:118"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                          ]
                                                                                       ))
                                                                      end
                                                                ]
                                                                             ))
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                            ]
                                                         )
                                        end
                                    end
                                else
                                    Cell.new()
                                end
                            end
                        end
                    end
                } ; ___lambda.call(
                      begin
                        ___lambda = lambda { |___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30055| 
                            if ( 
                              begin
                                embedBacktraceInfo( "", 1 ); 
                                  _null_QUMARK(
                                      begin
                                          trampCall(___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30055)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                             ) then
                              :"compiled"
                            else
                                begin
                                  embedBacktraceInfo( "./lib/nendo/experimental.nnd", 73 ); 
                                    delayCall( '_car',  'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:73"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30055)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 )
                                end
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_opt)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:99"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end                    ,
                      begin
                        embedBacktraceInfo( "./lib/nendo/experimental.nnd", 100 ); 
                          trampCall( self._get_MIMARKsource_MIMARKinfo_METHOD(  'get-source-info',
                              begin
                                if @global_lisp_binding.has_key?('_get_MIMARKsource_MIMARKinfo') then
                                  trampCall(@_get_MIMARKsource_MIMARKinfo)
                                else raise NameError.new( "Error: undefined variable _get_MIMARKsource_MIMARKinfo", "_get_MIMARKsource_MIMARKinfo" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:100"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                begin
                                    trampCall(_varname).to_s(
                                      )
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:100"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       ))
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self.__PAMARKguard_MIMARKvar_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKguard_MIMARKvar', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKguard_MIMARKvar'] = self.method( :__PAMARKguard_MIMARKvar_METHOD )
    @__PAMARKguard_MIMARKvar = 
    trampCall(
          begin
            embedBacktraceInfo( "", 1 ); 
              trampCall( self._er_MIMARKmacro_MIMARKtransformer_METHOD(  'er-macro-transformer',
                  begin
                    if @global_lisp_binding.has_key?('_er_MIMARKmacro_MIMARKtransformer') then
                      trampCall(@_er_MIMARKmacro_MIMARKtransformer)
                    else raise NameError.new( "Error: undefined variable _er_MIMARKmacro_MIMARKtransformer", "_er_MIMARKmacro_MIMARKtransformer" ) end
                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                  end                ,
              [
                    Proc.new { |__expr__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30060,__rename__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30061,__compare__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30062| 
                        begin
                          ___lambda = lambda { |___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30073| 
                              if ( 
                                begin
                                    trampCall(___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30073)
                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                end
                               ) then
                                  begin
                                      trampCall(___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30073)
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  begin
                                    ___lambda = lambda { |___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30074| 
                                        if ( 
                                          begin
                                              trampCall(___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30074)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                         ) then
                                            begin
                                                trampCall(___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30074)
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end
                                        else
                                          false
                                        end
                                    } ; ___lambda.call(
                                          begin raise RuntimeError, 
                                            "no expansion for" ' ' + 
                                            _write_MIMARKto_MIMARKstring(
                                              begin
                                                embedBacktraceInfo( "", 1 ); 
                                                  trampCall( self._strip_MIMARKsyntactic_MIMARKclosures_METHOD(  'strip-syntactic-closures',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_strip_MIMARKsyntactic_MIMARKclosures') then
                                                          trampCall(@_strip_MIMARKsyntactic_MIMARKclosures)
                                                        else raise NameError.new( "Error: undefined variable _strip_MIMARKsyntactic_MIMARKclosures", "_strip_MIMARKsyntactic_MIMARKclosures" ) end
                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                      __expr__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30060
                                                  ]
                                                               ))
                                              end
                                            )
                                          rescue => __e 
                                            __e.set_backtrace( ["./lib/nendo/experimental.nnd:138"] + __e.backtrace )
                                            raise __e
                                          end 
                                               )
                                  end
                              end
                          } ; ___lambda.call(
                                begin
                                  ___lambda = lambda { |__v__1__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30068| 
                                      if ( 
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/experimental.nnd", 39 ); 
                                            _not(
                                                begin
                                                  embedBacktraceInfo( "", 1 ); 
                                                    _eq_QUMARK(
                                                      false                                                      ,
                                                        begin
                                                          embedBacktraceInfo( "", 1 ); 
                                                            _pair_QUMARK(
                                                              __v__1__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30068
                                                            )
                                                        end
                                                    )
                                                end
                                            )
                                        end
                                       ) then
                                          begin
                                            ___lambda = lambda { |__v__2__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30069| 
                                                if ( 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 39 ); 
                                                      _not(
                                                          begin
                                                            embedBacktraceInfo( "", 1 ); 
                                                              _eq_QUMARK(
                                                                false                                                                ,
                                                                  begin
                                                                    embedBacktraceInfo( "", 1 ); 
                                                                      _pair_QUMARK(
                                                                        __v__2__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30069
                                                                      )
                                                                  end
                                                              )
                                                          end
                                                      )
                                                  end
                                                 ) then
                                                    begin
                                                      ___lambda = lambda { |__v__3__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30070| 
                                                          begin
                                                            ___lambda = lambda { |_var| 
                                                                begin
                                                                  ___lambda = lambda { |__v__4__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30071| 
                                                                      if ( 
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/experimental.nnd", 39 ); 
                                                                            _not(
                                                                                begin
                                                                                  embedBacktraceInfo( "", 1 ); 
                                                                                    _eq_QUMARK(
                                                                                      false                                                                                      ,
                                                                                        begin
                                                                                          embedBacktraceInfo( "", 1 ); 
                                                                                            trampCall( self._list_QUMARK_METHOD(  'list?',
                                                                                                begin
                                                                                                  if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                                                                    trampCall(@_list_QUMARK)
                                                                                                  else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,
                                                                                            [
                                                                                                __v__4__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30071
                                                                                            ]
                                                                                                         ))
                                                                                        end
                                                                                    )
                                                                                end
                                                                            )
                                                                        end
                                                                       ) then
                                                                          begin
                                                                            ___lambda = lambda { |_clauses| 
                                                                                begin
                                                                                  ___lambda = lambda { |__v__5__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30072| 
                                                                                      if ( 
                                                                                        begin
                                                                                          embedBacktraceInfo( "./lib/nendo/experimental.nnd", 39 ); 
                                                                                            _not(
                                                                                                begin
                                                                                                  embedBacktraceInfo( "", 1 ); 
                                                                                                    _eq_QUMARK(
                                                                                                      false                                                                                                      ,
                                                                                                        begin
                                                                                                          embedBacktraceInfo( "", 1 ); 
                                                                                                            _null_QUMARK(
                                                                                                              __v__5__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30072
                                                                                                            )
                                                                                                        end
                                                                                                    )
                                                                                                end
                                                                                            )
                                                                                        end
                                                                                       ) then
                                                                                          begin
                                                                                              trampCall(_var)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:125"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                      else
                                                                                        false
                                                                                      end
                                                                                  } ; ___lambda.call(
                                                                                        begin
                                                                                          embedBacktraceInfo( "", 1 ); 
                                                                                            _cdr(
                                                                                              __v__1__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30068
                                                                                            )
                                                                                        end
                                                                                             )
                                                                                end
                                                                            } ; ___lambda.call(
                                                                                __v__4__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30071
                                                                                       )
                                                                          end
                                                                      else
                                                                        false
                                                                      end
                                                                  } ; ___lambda.call(
                                                                        begin
                                                                          embedBacktraceInfo( "", 1 ); 
                                                                            _cdr(
                                                                              __v__2__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30069
                                                                            )
                                                                        end
                                                                             )
                                                                end
                                                            } ; ___lambda.call(
                                                                __v__3__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30070
                                                                       )
                                                          end
                                                      } ; ___lambda.call(
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/experimental.nnd", 73 ); 
                                                                _car(
                                                                  __v__2__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30069
                                                                )
                                                            end
                                                                 )
                                                    end
                                                else
                                                  false
                                                end
                                            } ; ___lambda.call(
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 73 ); 
                                                      _car(
                                                        __v__1__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30068
                                                      )
                                                  end
                                                       )
                                          end
                                      else
                                        false
                                      end
                                  } ; ___lambda.call(
                                        begin
                                          embedBacktraceInfo( "", 1 ); 
                                            _cdr(
                                              __expr__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30060
                                            )
                                        end
                                             )
                                end
                                     )
                        end
                    }
              ]
                           ))
          end
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self.__PAMARKguard_MIMARKclause_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKguard_MIMARKclause', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKguard_MIMARKclause'] = self.method( :__PAMARKguard_MIMARKclause_METHOD )
    @__PAMARKguard_MIMARKclause = 
    trampCall(
          begin
            embedBacktraceInfo( "", 1 ); 
              trampCall( self._er_MIMARKmacro_MIMARKtransformer_METHOD(  'er-macro-transformer',
                  begin
                    if @global_lisp_binding.has_key?('_er_MIMARKmacro_MIMARKtransformer') then
                      trampCall(@_er_MIMARKmacro_MIMARKtransformer)
                    else raise NameError.new( "Error: undefined variable _er_MIMARKmacro_MIMARKtransformer", "_er_MIMARKmacro_MIMARKtransformer" ) end
                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                  end                ,
              [
                    Proc.new { |__expr__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30075,__rename__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30076,__compare__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30077| 
                        begin
                          ___lambda = lambda { |___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30088| 
                              if ( 
                                begin
                                    trampCall(___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30088)
                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                end
                               ) then
                                  begin
                                      trampCall(___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30088)
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  begin
                                    ___lambda = lambda { |___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30089| 
                                        if ( 
                                          begin
                                              trampCall(___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30089)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                         ) then
                                            begin
                                                trampCall(___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30089)
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end
                                        else
                                          false
                                        end
                                    } ; ___lambda.call(
                                          begin raise RuntimeError, 
                                            "no expansion for" ' ' + 
                                            _write_MIMARKto_MIMARKstring(
                                              begin
                                                embedBacktraceInfo( "", 1 ); 
                                                  trampCall( self._strip_MIMARKsyntactic_MIMARKclosures_METHOD(  'strip-syntactic-closures',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_strip_MIMARKsyntactic_MIMARKclosures') then
                                                          trampCall(@_strip_MIMARKsyntactic_MIMARKclosures)
                                                        else raise NameError.new( "Error: undefined variable _strip_MIMARKsyntactic_MIMARKclosures", "_strip_MIMARKsyntactic_MIMARKclosures" ) end
                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                      __expr__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30075
                                                  ]
                                                               ))
                                              end
                                            )
                                          rescue => __e 
                                            __e.set_backtrace( ["./lib/nendo/experimental.nnd:138"] + __e.backtrace )
                                            raise __e
                                          end 
                                               )
                                  end
                              end
                          } ; ___lambda.call(
                                begin
                                  ___lambda = lambda { |__v__1__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30083| 
                                      if ( 
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/experimental.nnd", 39 ); 
                                            _not(
                                                begin
                                                  embedBacktraceInfo( "", 1 ); 
                                                    _eq_QUMARK(
                                                      false                                                      ,
                                                        begin
                                                          embedBacktraceInfo( "", 1 ); 
                                                            _pair_QUMARK(
                                                              __v__1__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30083
                                                            )
                                                        end
                                                    )
                                                end
                                            )
                                        end
                                       ) then
                                          begin
                                            ___lambda = lambda { |__v__2__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30084| 
                                                if ( 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 39 ); 
                                                      _not(
                                                          begin
                                                            embedBacktraceInfo( "", 1 ); 
                                                              _eq_QUMARK(
                                                                false                                                                ,
                                                                  begin
                                                                    embedBacktraceInfo( "", 1 ); 
                                                                      _pair_QUMARK(
                                                                        __v__2__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30084
                                                                      )
                                                                  end
                                                              )
                                                          end
                                                      )
                                                  end
                                                 ) then
                                                    begin
                                                      ___lambda = lambda { |__v__3__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30085| 
                                                          begin
                                                            ___lambda = lambda { |_var| 
                                                                begin
                                                                  ___lambda = lambda { |__v__4__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30086| 
                                                                      if ( 
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/experimental.nnd", 39 ); 
                                                                            _not(
                                                                                begin
                                                                                  embedBacktraceInfo( "", 1 ); 
                                                                                    _eq_QUMARK(
                                                                                      false                                                                                      ,
                                                                                        begin
                                                                                          embedBacktraceInfo( "", 1 ); 
                                                                                            trampCall( self._list_QUMARK_METHOD(  'list?',
                                                                                                begin
                                                                                                  if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                                                                    trampCall(@_list_QUMARK)
                                                                                                  else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,
                                                                                            [
                                                                                                __v__4__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30086
                                                                                            ]
                                                                                                         ))
                                                                                        end
                                                                                    )
                                                                                end
                                                                            )
                                                                        end
                                                                       ) then
                                                                          begin
                                                                            ___lambda = lambda { |_clauses| 
                                                                                begin
                                                                                  ___lambda = lambda { |__v__5__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30087| 
                                                                                      if ( 
                                                                                        begin
                                                                                          embedBacktraceInfo( "./lib/nendo/experimental.nnd", 39 ); 
                                                                                            _not(
                                                                                                begin
                                                                                                  embedBacktraceInfo( "", 1 ); 
                                                                                                    _eq_QUMARK(
                                                                                                      false                                                                                                      ,
                                                                                                        begin
                                                                                                          embedBacktraceInfo( "", 1 ); 
                                                                                                            _null_QUMARK(
                                                                                                              __v__5__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30087
                                                                                                            )
                                                                                                        end
                                                                                                    )
                                                                                                end
                                                                                            )
                                                                                        end
                                                                                       ) then
                                                                                          begin
                                                                                            embedBacktraceInfo( "./lib/nendo/experimental.nnd", 71 ); 
                                                                                              _cons(
                                                                                                  begin
                                                                                                    embedBacktraceInfo( "dynamic S-expression ( no source )", 1 ); 
                                                                                                      trampCall( callProcedure(  '__rename__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30076',  '_rename__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30076',
                                                                                                          begin
                                                                                                              trampCall(__rename__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30076)
                                                                                                            rescue => __e ; __e.set_backtrace( ["dynamic S-expression ( no source ):1"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                      [
                                                                                                          :"case"
                                                                                                      ]
                                                                                                                   ))
                                                                                                  end                                                                                                ,
                                                                                                  begin
                                                                                                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 71 ); 
                                                                                                      _cons(
                                                                                                          begin
                                                                                                              trampCall(_var)
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:130"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                          begin
                                                                                                            embedBacktraceInfo( "./lib/nendo/experimental.nnd", 91 ); 
                                                                                                              trampCall( self._map_METHOD(  'map',
                                                                                                                  begin
                                                                                                                    if @global_lisp_binding.has_key?('_map') then
                                                                                                                      trampCall(@_map)
                                                                                                                    else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:91"] + __e.backtrace ) ; raise __e
                                                                                                                  end                                                                                                                ,
                                                                                                              [
                                                                                                                    Proc.new { |_clauses| 
                                                                                                                        begin
                                                                                                                            trampCall(_clauses)
                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:131"] + __e.backtrace ) ; raise __e
                                                                                                                        end
                                                                                                                    }                                                                                                                  ,
                                                                                                                    begin
                                                                                                                        trampCall(_clauses)
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:131"] + __e.backtrace ) ; raise __e
                                                                                                                    end
                                                                                                              ]
                                                                                                                           ))
                                                                                                          end
                                                                                                      )
                                                                                                  end
                                                                                              )
                                                                                          end
                                                                                      else
                                                                                        false
                                                                                      end
                                                                                  } ; ___lambda.call(
                                                                                        begin
                                                                                          embedBacktraceInfo( "", 1 ); 
                                                                                            _cdr(
                                                                                              __v__1__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30083
                                                                                            )
                                                                                        end
                                                                                             )
                                                                                end
                                                                            } ; ___lambda.call(
                                                                                __v__4__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30086
                                                                                       )
                                                                          end
                                                                      else
                                                                        false
                                                                      end
                                                                  } ; ___lambda.call(
                                                                        begin
                                                                          embedBacktraceInfo( "", 1 ); 
                                                                            _cdr(
                                                                              __v__2__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30084
                                                                            )
                                                                        end
                                                                             )
                                                                end
                                                            } ; ___lambda.call(
                                                                __v__3__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30085
                                                                       )
                                                          end
                                                      } ; ___lambda.call(
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/experimental.nnd", 73 ); 
                                                                _car(
                                                                  __v__2__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30084
                                                                )
                                                            end
                                                                 )
                                                    end
                                                else
                                                  false
                                                end
                                            } ; ___lambda.call(
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 73 ); 
                                                      _car(
                                                        __v__1__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30083
                                                      )
                                                  end
                                                       )
                                          end
                                      else
                                        false
                                      end
                                  } ; ___lambda.call(
                                        begin
                                          embedBacktraceInfo( "", 1 ); 
                                            _cdr(
                                              __expr__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30075
                                            )
                                        end
                                             )
                                end
                                     )
                        end
                    }
              ]
                           ))
          end
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self._guard_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_guard', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_guard'] = self.method( :_guard_METHOD )
    @_guard = 
    trampCall(
          begin
            embedBacktraceInfo( "", 1 ); 
              trampCall( self._er_MIMARKmacro_MIMARKtransformer_METHOD(  'er-macro-transformer',
                  begin
                    if @global_lisp_binding.has_key?('_er_MIMARKmacro_MIMARKtransformer') then
                      trampCall(@_er_MIMARKmacro_MIMARKtransformer)
                    else raise NameError.new( "Error: undefined variable _er_MIMARKmacro_MIMARKtransformer", "_er_MIMARKmacro_MIMARKtransformer" ) end
                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                  end                ,
              [
                    Proc.new { |__expr__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30090,__rename__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30091,__compare__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30092| 
                        begin
                          ___lambda = lambda { |___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30105| 
                              if ( 
                                begin
                                    trampCall(___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30105)
                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                end
                               ) then
                                  begin
                                      trampCall(___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30105)
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  begin
                                    ___lambda = lambda { |___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30106| 
                                        if ( 
                                          begin
                                              trampCall(___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30106)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                         ) then
                                            begin
                                                trampCall(___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30106)
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end
                                        else
                                            begin
                                              ___lambda = lambda { |___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30107| 
                                                  if ( 
                                                    begin
                                                        trampCall(___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30107)
                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                    end
                                                   ) then
                                                      begin
                                                          trampCall(___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30107)
                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                      end
                                                  else
                                                      begin
                                                        ___lambda = lambda { |___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30108| 
                                                            if ( 
                                                              begin
                                                                  trampCall(___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30108)
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end
                                                             ) then
                                                                begin
                                                                    trampCall(___gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30108)
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end
                                                            else
                                                              false
                                                            end
                                                        } ; ___lambda.call(
                                                              begin raise RuntimeError, 
                                                                "no expansion for" ' ' + 
                                                                _write_MIMARKto_MIMARKstring(
                                                                  begin
                                                                    embedBacktraceInfo( "", 1 ); 
                                                                      trampCall( self._strip_MIMARKsyntactic_MIMARKclosures_METHOD(  'strip-syntactic-closures',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_strip_MIMARKsyntactic_MIMARKclosures') then
                                                                              trampCall(@_strip_MIMARKsyntactic_MIMARKclosures)
                                                                            else raise NameError.new( "Error: undefined variable _strip_MIMARKsyntactic_MIMARKclosures", "_strip_MIMARKsyntactic_MIMARKclosures" ) end
                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                      [
                                                                          __expr__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30090
                                                                      ]
                                                                                   ))
                                                                  end
                                                                )
                                                              rescue => __e 
                                                                __e.set_backtrace( ["./lib/nendo/experimental.nnd:138"] + __e.backtrace )
                                                                raise __e
                                                              end 
                                                                   )
                                                      end
                                                  end
                                              } ; ___lambda.call(
                                                    begin
                                                      ___lambda = lambda { |__v__5__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30102| 
                                                          if ( 
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/experimental.nnd", 39 ); 
                                                                _not(
                                                                    begin
                                                                      embedBacktraceInfo( "", 1 ); 
                                                                        _eq_QUMARK(
                                                                          false                                                                          ,
                                                                            begin
                                                                              embedBacktraceInfo( "", 1 ); 
                                                                                _pair_QUMARK(
                                                                                  __v__5__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30102
                                                                                )
                                                                            end
                                                                        )
                                                                    end
                                                                )
                                                            end
                                                           ) then
                                                              begin
                                                                ___lambda = lambda { |__v__6__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30103| 
                                                                    begin
                                                                      ___lambda = lambda { |_var_MIMARKclauses| 
                                                                          begin
                                                                            ___lambda = lambda { |__v__7__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30104| 
                                                                                if ( 
                                                                                  begin
                                                                                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 39 ); 
                                                                                      _not(
                                                                                          begin
                                                                                            embedBacktraceInfo( "", 1 ); 
                                                                                              _eq_QUMARK(
                                                                                                false                                                                                                ,
                                                                                                  begin
                                                                                                    embedBacktraceInfo( "", 1 ); 
                                                                                                      trampCall( self._list_QUMARK_METHOD(  'list?',
                                                                                                          begin
                                                                                                            if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                                                                              trampCall(@_list_QUMARK)
                                                                                                            else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                                                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                      [
                                                                                                          __v__7__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30104
                                                                                                      ]
                                                                                                                   ))
                                                                                                  end
                                                                                              )
                                                                                          end
                                                                                      )
                                                                                  end
                                                                                 ) then
                                                                                    begin
                                                                                      ___lambda = lambda { |_body| 
                                                                                          begin
                                                                                            embedBacktraceInfo( "./lib/nendo/experimental.nnd", 71 ); 
                                                                                              _cons(
                                                                                                  begin
                                                                                                    embedBacktraceInfo( "dynamic S-expression ( no source )", 1 ); 
                                                                                                      trampCall( callProcedure(  '__rename__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30091',  '_rename__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30091',
                                                                                                          begin
                                                                                                              trampCall(__rename__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30091)
                                                                                                            rescue => __e ; __e.set_backtrace( ["dynamic S-expression ( no source ):1"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                      [
                                                                                                          :"%guard"
                                                                                                      ]
                                                                                                                   ))
                                                                                                  end                                                                                                ,
                                                                                                  begin
                                                                                                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 71 ); 
                                                                                                      _cons(
                                                                                                          begin
                                                                                                            embedBacktraceInfo( "./lib/nendo/experimental.nnd", 71 ); 
                                                                                                              _cons(
                                                                                                                  begin
                                                                                                                    embedBacktraceInfo( "dynamic S-expression ( no source )", 1 ); 
                                                                                                                      trampCall( callProcedure(  '__rename__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30091',  '_rename__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30091',
                                                                                                                          begin
                                                                                                                              trampCall(__rename__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30091)
                                                                                                                            rescue => __e ; __e.set_backtrace( ["dynamic S-expression ( no source ):1"] + __e.backtrace ) ; raise __e
                                                                                                                          end                                                                                                                        ,
                                                                                                                      [
                                                                                                                          :"%guard-var"
                                                                                                                      ]
                                                                                                                                   ))
                                                                                                                  end                                                                                                                ,
                                                                                                                  begin
                                                                                                                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 71 ); 
                                                                                                                      _cons(
                                                                                                                          begin
                                                                                                                              trampCall(_var_MIMARKclauses)
                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:144"] + __e.backtrace ) ; raise __e
                                                                                                                          end                                                                                                                        ,
                                                                                                                        Cell.new()
                                                                                                                      )
                                                                                                                  end
                                                                                                              )
                                                                                                          end                                                                                                        ,
                                                                                                          begin
                                                                                                            embedBacktraceInfo( "./lib/nendo/experimental.nnd", 71 ); 
                                                                                                              _cons(
                                                                                                                  begin
                                                                                                                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 71 ); 
                                                                                                                      _cons(
                                                                                                                          begin
                                                                                                                            embedBacktraceInfo( "dynamic S-expression ( no source )", 1 ); 
                                                                                                                              trampCall( callProcedure(  '__rename__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30091',  '_rename__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30091',
                                                                                                                                  begin
                                                                                                                                      trampCall(__rename__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30091)
                                                                                                                                    rescue => __e ; __e.set_backtrace( ["dynamic S-expression ( no source ):1"] + __e.backtrace ) ; raise __e
                                                                                                                                  end                                                                                                                                ,
                                                                                                                              [
                                                                                                                                  :"%guard-clause"
                                                                                                                              ]
                                                                                                                                           ))
                                                                                                                          end                                                                                                                        ,
                                                                                                                          begin
                                                                                                                            embedBacktraceInfo( "./lib/nendo/experimental.nnd", 71 ); 
                                                                                                                              _cons(
                                                                                                                                  begin
                                                                                                                                      trampCall(_var_MIMARKclauses)
                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:144"] + __e.backtrace ) ; raise __e
                                                                                                                                  end                                                                                                                                ,
                                                                                                                                Cell.new()
                                                                                                                              )
                                                                                                                          end
                                                                                                                      )
                                                                                                                  end                                                                                                                ,
                                                                                                                  begin
                                                                                                                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 91 ); 
                                                                                                                      trampCall( self._map_METHOD(  'map',
                                                                                                                          begin
                                                                                                                            if @global_lisp_binding.has_key?('_map') then
                                                                                                                              trampCall(@_map)
                                                                                                                            else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:91"] + __e.backtrace ) ; raise __e
                                                                                                                          end                                                                                                                        ,
                                                                                                                      [
                                                                                                                            Proc.new { |_body| 
                                                                                                                                begin
                                                                                                                                    trampCall(_body)
                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:145"] + __e.backtrace ) ; raise __e
                                                                                                                                end
                                                                                                                            }                                                                                                                          ,
                                                                                                                            begin
                                                                                                                                trampCall(_body)
                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/experimental.nnd:145"] + __e.backtrace ) ; raise __e
                                                                                                                            end
                                                                                                                      ]
                                                                                                                                   ))
                                                                                                                  end
                                                                                                              )
                                                                                                          end
                                                                                                      )
                                                                                                  end
                                                                                              )
                                                                                          end
                                                                                      } ; ___lambda.call(
                                                                                          __v__7__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30104
                                                                                                 )
                                                                                    end
                                                                                else
                                                                                  false
                                                                                end
                                                                            } ; ___lambda.call(
                                                                                  begin
                                                                                    embedBacktraceInfo( "", 1 ); 
                                                                                      _cdr(
                                                                                        __v__5__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30102
                                                                                      )
                                                                                  end
                                                                                       )
                                                                          end
                                                                      } ; ___lambda.call(
                                                                          __v__6__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30103
                                                                                 )
                                                                    end
                                                                } ; ___lambda.call(
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/experimental.nnd", 73 ); 
                                                                          _car(
                                                                            __v__5__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30102
                                                                          )
                                                                      end
                                                                           )
                                                              end
                                                          else
                                                            false
                                                          end
                                                      } ; ___lambda.call(
                                                            begin
                                                              embedBacktraceInfo( "", 1 ); 
                                                                _cdr(
                                                                  __expr__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30090
                                                                )
                                                            end
                                                                 )
                                                    end
                                                         )
                                            end
                                        end
                                    } ; ___lambda.call(
                                          begin
                                            ___lambda = lambda { |__v__2__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30099| 
                                                if ( 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 39 ); 
                                                      _not(
                                                          begin
                                                            embedBacktraceInfo( "", 1 ); 
                                                              _eq_QUMARK(
                                                                false                                                                ,
                                                                  begin
                                                                    embedBacktraceInfo( "", 1 ); 
                                                                      _pair_QUMARK(
                                                                        __v__2__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30099
                                                                      )
                                                                  end
                                                              )
                                                          end
                                                      )
                                                  end
                                                 ) then
                                                    begin
                                                      ___lambda = lambda { |__v__3__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30100| 
                                                          begin
                                                            ___lambda = lambda { |_var_MIMARKclauses| 
                                                                begin
                                                                  ___lambda = lambda { |__v__4__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30101| 
                                                                      if ( 
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/experimental.nnd", 39 ); 
                                                                            _not(
                                                                                begin
                                                                                  embedBacktraceInfo( "", 1 ); 
                                                                                    _eq_QUMARK(
                                                                                      false                                                                                      ,
                                                                                        begin
                                                                                          embedBacktraceInfo( "", 1 ); 
                                                                                            _null_QUMARK(
                                                                                              __v__4__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30101
                                                                                            )
                                                                                        end
                                                                                    )
                                                                                end
                                                                            )
                                                                        end
                                                                       ) then
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/experimental.nnd", 71 ); 
                                                                              _cons(
                                                                                  begin
                                                                                    embedBacktraceInfo( "dynamic S-expression ( no source )", 1 ); 
                                                                                      trampCall( callProcedure(  '__rename__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30091',  '_rename__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30091',
                                                                                          begin
                                                                                              trampCall(__rename__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30091)
                                                                                            rescue => __e ; __e.set_backtrace( ["dynamic S-expression ( no source ):1"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                      [
                                                                                          :"error"
                                                                                      ]
                                                                                                   ))
                                                                                  end                                                                                ,
                                                                                  begin
                                                                                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 71 ); 
                                                                                      _cons(
                                                                                        "guard requires (guard (var (clauses-like-cond)) body ...)"                                                                                        ,
                                                                                        Cell.new()
                                                                                      )
                                                                                  end
                                                                              )
                                                                          end
                                                                      else
                                                                        false
                                                                      end
                                                                  } ; ___lambda.call(
                                                                        begin
                                                                          embedBacktraceInfo( "", 1 ); 
                                                                            _cdr(
                                                                              __v__2__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30099
                                                                            )
                                                                        end
                                                                             )
                                                                end
                                                            } ; ___lambda.call(
                                                                __v__3__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30100
                                                                       )
                                                          end
                                                      } ; ___lambda.call(
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/experimental.nnd", 73 ); 
                                                                _car(
                                                                  __v__2__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30099
                                                                )
                                                            end
                                                                 )
                                                    end
                                                else
                                                  false
                                                end
                                            } ; ___lambda.call(
                                                  begin
                                                    embedBacktraceInfo( "", 1 ); 
                                                      _cdr(
                                                        __expr__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30090
                                                      )
                                                  end
                                                       )
                                          end
                                               )
                                  end
                              end
                          } ; ___lambda.call(
                                begin
                                  ___lambda = lambda { |__v__1__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30098| 
                                      if ( 
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/experimental.nnd", 39 ); 
                                            _not(
                                                begin
                                                  embedBacktraceInfo( "", 1 ); 
                                                    _eq_QUMARK(
                                                      false                                                      ,
                                                        begin
                                                          embedBacktraceInfo( "", 1 ); 
                                                            _null_QUMARK(
                                                              __v__1__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30098
                                                            )
                                                        end
                                                    )
                                                end
                                            )
                                        end
                                       ) then
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/experimental.nnd", 71 ); 
                                              _cons(
                                                  begin
                                                    embedBacktraceInfo( "dynamic S-expression ( no source )", 1 ); 
                                                      trampCall( callProcedure(  '__rename__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30091',  '_rename__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30091',
                                                          begin
                                                              trampCall(__rename__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30091)
                                                            rescue => __e ; __e.set_backtrace( ["dynamic S-expression ( no source ):1"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                          :"error"
                                                      ]
                                                                   ))
                                                  end                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/experimental.nnd", 71 ); 
                                                      _cons(
                                                        "guard requires (guard (var (clauses-like-cond)) body ...)"                                                        ,
                                                        Cell.new()
                                                      )
                                                  end
                                              )
                                          end
                                      else
                                        false
                                      end
                                  } ; ___lambda.call(
                                        begin
                                          embedBacktraceInfo( "", 1 ); 
                                            _cdr(
                                              __expr__gensym__29d1958308f04161c7005d22e2e7d31864eae2bc_30090
                                            )
                                        end
                                             )
                                end
                                     )
                        end
                    }
              ]
                           ))
          end
    )
  end
 )


# -------------------------------------------------------
# [EOF]
# -------------------------------------------------------
