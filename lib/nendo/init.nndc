#
#    This file is nendo's compiled library file. 
#    generated  "nendo -c src" command. 
# 

trampCall( 
  begin #execFunc
      def self.__PAMARKexpand_MIMARKdefine_MIMARKform_MIMARKlambda_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKexpand_MIMARKdefine_MIMARKform_MIMARKlambda', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKexpand_MIMARKdefine_MIMARKform_MIMARKlambda'] = self.method( :__PAMARKexpand_MIMARKdefine_MIMARKform_MIMARKlambda_METHOD )
    @__PAMARKexpand_MIMARKdefine_MIMARKform_MIMARKlambda = 
    trampCall(
          Proc.new { |_arg,_body_MIMARKlist| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 43 );
                    _pair_QUMARK(
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 43 );
                            _cdr(
                                begin
                                    trampCall(_arg)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:43"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                    )
                end
               ) then
                  if ( 
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 44 );
                        _pair_QUMARK(
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 44 );
                                _car(
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 44 );
                                        _cdr(
                                            begin
                                                trampCall(_arg)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:44"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    end
                                )
                            end
                        )
                    end
                   ) then
                      begin raise RuntimeError, 
                      "Error: define syntax error."
                      rescue => __e 
                        __e.set_backtrace( ["./lib/nendo/init.nnd:45"] + __e.backtrace )
                        raise __e
                      end 
                  end
              end
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 46 );
                  delayCall( '_cons',  'cons',
                      begin
                        if @global_lisp_binding.has_key?('_cons') then
                          trampCall(@_cons)
                        else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:46"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                      :"define"                      ,
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 47 );
                            _cons(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 47 );
                                    _car(
                                        begin
                                            trampCall(_arg)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:47"] + __e.backtrace ) ; raise __e
                                        end
                                    )
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 48 );
                                    trampCall( self._list_METHOD(  'list',
                                        begin
                                          if @global_lisp_binding.has_key?('_list') then
                                            trampCall(@_list)
                                          else raise NameError.new( "Error: undefined variable list", "list" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:48"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 49 );
                                              _cons(
                                                :"lambda"                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 50 );
                                                      _cons(
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 50 );
                                                              _cdr(
                                                                  begin
                                                                      trampCall(_arg)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:50"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              )
                                                          end                                                        ,
                                                          begin
                                                              trampCall(_body_MIMARKlist)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:51"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                              )
                                          end
                                    ]
                                                 ))
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._define_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_define', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_define'] = self.method( :_define_METHOD )
    @_define = 
    trampCall(
          LispMacro.new { |_arg,*__rest__| _body = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 55 );
                    _not(
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 55 );
                            _pair_QUMARK(
                                begin
                                    trampCall(_arg)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:55"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                    )
                end
               ) then
                  begin
                    embedBacktraceInfo( "./lib/nendo/init.nnd", 57 );
                      _cons(
                        :"define"                        ,
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 58 );
                              _cons(
                                  begin
                                      trampCall(_arg)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:58"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  begin
                                      trampCall(_body)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:59"] + __e.backtrace ) ; raise __e
                                  end
                              )
                          end
                      )
                  end
              else
                  begin
                    embedBacktraceInfo( "./lib/nendo/init.nnd", 60 );
                      trampCall( self.__PAMARKexpand_MIMARKdefine_MIMARKform_MIMARKlambda_METHOD(  '%expand-define-form-lambda',
                          begin
                            if @global_lisp_binding.has_key?('__PAMARKexpand_MIMARKdefine_MIMARKform_MIMARKlambda') then
                              trampCall(@__PAMARKexpand_MIMARKdefine_MIMARKform_MIMARKlambda)
                            else raise NameError.new( "Error: undefined variable %expand-define-form-lambda", "%expand-define-form-lambda" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:60"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                                trampCall(_arg)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:60"] + __e.backtrace ) ; raise __e
                            end                          ,
                            begin
                                trampCall(_body)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:60"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   ))
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARKexpand_MIMARKdefine_MIMARKform_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKexpand_MIMARKdefine_MIMARKform', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKexpand_MIMARKdefine_MIMARKform'] = self.method( :__PAMARKexpand_MIMARKdefine_MIMARKform_METHOD )
    @__PAMARKexpand_MIMARKdefine_MIMARKform = 
    trampCall(
          Proc.new { |_arg_MIMARKand_MIMARKbody| 
              begin #makeLet
                ___lambda = lambda { |_arg,_body| 
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 67 );
                          _not(
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 67 );
                                  _pair_QUMARK(
                                      begin
                                          trampCall(_arg)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:67"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                          )
                      end
                     ) then
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 69 );
                            delayCall( '_cons',  'cons',
                                begin
                                  if @global_lisp_binding.has_key?('_cons') then
                                    trampCall(@_cons)
                                  else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:69"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                :"define"                                ,
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 70 );
                                      _cons(
                                          begin
                                              trampCall(_arg)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:70"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          begin
                                              trampCall(_body)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:71"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                            ]
                                         )
                        end
                    else
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 72 );
                            delayCall( '__PAMARKexpand_MIMARKdefine_MIMARKform_MIMARKlambda',  '%expand-define-form-lambda',
                                begin
                                  if @global_lisp_binding.has_key?('__PAMARKexpand_MIMARKdefine_MIMARKform_MIMARKlambda') then
                                    trampCall(@__PAMARKexpand_MIMARKdefine_MIMARKform_MIMARKlambda)
                                  else raise NameError.new( "Error: undefined variable %expand-define-form-lambda", "%expand-define-form-lambda" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:72"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_arg)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:72"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  begin
                                      trampCall(_body)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:72"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         )
                        end
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 64 );
                          _car(
                              begin
                                  trampCall(_arg_MIMARKand_MIMARKbody)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:64"] + __e.backtrace ) ; raise __e
                              end
                          )
                      end                    ,
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 65 );
                          _cdr(
                              begin
                                  trampCall(_arg_MIMARKand_MIMARKbody)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:65"] + __e.backtrace ) ; raise __e
                              end
                          )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._debug_MIMARKprint_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_debug_MIMARKprint', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_debug_MIMARKprint'] = self.method( :_debug_MIMARKprint_METHOD )
    @_debug_MIMARKprint = 
    trampCall(
          LispMacro.new { |__form,_sourcefile,_lineno,_sourcesexp| 
              begin
                  trampCall(__form)
                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:78"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._caar_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_caar', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_caar'] = self.method( :_caar_METHOD )
    @_caar = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 83 );
                  delayCall( '_car',  'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          trampCall(@_car)
                        else raise NameError.new( "Error: undefined variable car", "car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:83"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 83 );
                            _car(
                                begin
                                    trampCall(_x)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:83"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cadr_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cadr', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cadr'] = self.method( :_cadr_METHOD )
    @_cadr = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 84 );
                  delayCall( '_car',  'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          trampCall(@_car)
                        else raise NameError.new( "Error: undefined variable car", "car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:84"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 84 );
                            _cdr(
                                begin
                                    trampCall(_x)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:84"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cdar_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cdar', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cdar'] = self.method( :_cdar_METHOD )
    @_cdar = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 85 );
                  delayCall( '_cdr',  'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          trampCall(@_cdr)
                        else raise NameError.new( "Error: undefined variable cdr", "cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:85"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 85 );
                            _car(
                                begin
                                    trampCall(_x)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:85"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cddr_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cddr', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cddr'] = self.method( :_cddr_METHOD )
    @_cddr = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 86 );
                  delayCall( '_cdr',  'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          trampCall(@_cdr)
                        else raise NameError.new( "Error: undefined variable cdr", "cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:86"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 86 );
                            _cdr(
                                begin
                                    trampCall(_x)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:86"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._caaar_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_caaar', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_caaar'] = self.method( :_caaar_METHOD )
    @_caaar = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 87 );
                  delayCall( '_car',  'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          trampCall(@_car)
                        else raise NameError.new( "Error: undefined variable car", "car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:87"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 87 );
                            _car(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 87 );
                                    _car(
                                        begin
                                            trampCall(_x)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:87"] + __e.backtrace ) ; raise __e
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._caadr_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_caadr', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_caadr'] = self.method( :_caadr_METHOD )
    @_caadr = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 88 );
                  delayCall( '_car',  'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          trampCall(@_car)
                        else raise NameError.new( "Error: undefined variable car", "car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:88"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 88 );
                            _car(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 88 );
                                    _cdr(
                                        begin
                                            trampCall(_x)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:88"] + __e.backtrace ) ; raise __e
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cadar_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cadar', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cadar'] = self.method( :_cadar_METHOD )
    @_cadar = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 89 );
                  delayCall( '_car',  'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          trampCall(@_car)
                        else raise NameError.new( "Error: undefined variable car", "car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:89"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 89 );
                            _cdr(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 89 );
                                    _car(
                                        begin
                                            trampCall(_x)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:89"] + __e.backtrace ) ; raise __e
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._caddr_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_caddr', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_caddr'] = self.method( :_caddr_METHOD )
    @_caddr = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 90 );
                  delayCall( '_car',  'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          trampCall(@_car)
                        else raise NameError.new( "Error: undefined variable car", "car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:90"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 90 );
                            _cdr(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 90 );
                                    _cdr(
                                        begin
                                            trampCall(_x)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:90"] + __e.backtrace ) ; raise __e
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cdaar_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cdaar', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cdaar'] = self.method( :_cdaar_METHOD )
    @_cdaar = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 91 );
                  delayCall( '_cdr',  'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          trampCall(@_cdr)
                        else raise NameError.new( "Error: undefined variable cdr", "cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:91"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 91 );
                            _car(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 91 );
                                    _car(
                                        begin
                                            trampCall(_x)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:91"] + __e.backtrace ) ; raise __e
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cdadr_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cdadr', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cdadr'] = self.method( :_cdadr_METHOD )
    @_cdadr = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 92 );
                  delayCall( '_cdr',  'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          trampCall(@_cdr)
                        else raise NameError.new( "Error: undefined variable cdr", "cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:92"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 92 );
                            _car(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 92 );
                                    _cdr(
                                        begin
                                            trampCall(_x)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:92"] + __e.backtrace ) ; raise __e
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cddar_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cddar', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cddar'] = self.method( :_cddar_METHOD )
    @_cddar = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 93 );
                  delayCall( '_cdr',  'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          trampCall(@_cdr)
                        else raise NameError.new( "Error: undefined variable cdr", "cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:93"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 93 );
                            _cdr(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 93 );
                                    _car(
                                        begin
                                            trampCall(_x)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:93"] + __e.backtrace ) ; raise __e
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cdddr_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cdddr', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cdddr'] = self.method( :_cdddr_METHOD )
    @_cdddr = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 94 );
                  delayCall( '_cdr',  'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          trampCall(@_cdr)
                        else raise NameError.new( "Error: undefined variable cdr", "cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:94"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 94 );
                            _cdr(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 94 );
                                    _cdr(
                                        begin
                                            trampCall(_x)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:94"] + __e.backtrace ) ; raise __e
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._caaaar_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_caaaar', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_caaaar'] = self.method( :_caaaar_METHOD )
    @_caaaar = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 95 );
                  delayCall( '_car',  'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          trampCall(@_car)
                        else raise NameError.new( "Error: undefined variable car", "car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:95"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 95 );
                            _car(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 95 );
                                    _car(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 95 );
                                            _car(
                                                begin
                                                    trampCall(_x)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:95"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._caaadr_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_caaadr', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_caaadr'] = self.method( :_caaadr_METHOD )
    @_caaadr = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 96 );
                  delayCall( '_car',  'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          trampCall(@_car)
                        else raise NameError.new( "Error: undefined variable car", "car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:96"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 96 );
                            _car(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 96 );
                                    _car(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 96 );
                                            _cdr(
                                                begin
                                                    trampCall(_x)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:96"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._caadar_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_caadar', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_caadar'] = self.method( :_caadar_METHOD )
    @_caadar = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 97 );
                  delayCall( '_car',  'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          trampCall(@_car)
                        else raise NameError.new( "Error: undefined variable car", "car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:97"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 97 );
                            _car(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 97 );
                                    _cdr(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 97 );
                                            _car(
                                                begin
                                                    trampCall(_x)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:97"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._caaddr_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_caaddr', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_caaddr'] = self.method( :_caaddr_METHOD )
    @_caaddr = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 98 );
                  delayCall( '_car',  'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          trampCall(@_car)
                        else raise NameError.new( "Error: undefined variable car", "car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:98"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 98 );
                            _car(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 98 );
                                    _cdr(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 98 );
                                            _cdr(
                                                begin
                                                    trampCall(_x)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:98"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cadaar_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cadaar', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cadaar'] = self.method( :_cadaar_METHOD )
    @_cadaar = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 99 );
                  delayCall( '_car',  'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          trampCall(@_car)
                        else raise NameError.new( "Error: undefined variable car", "car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:99"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 99 );
                            _cdr(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 99 );
                                    _car(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 99 );
                                            _car(
                                                begin
                                                    trampCall(_x)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:99"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cadadr_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cadadr', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cadadr'] = self.method( :_cadadr_METHOD )
    @_cadadr = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 100 );
                  delayCall( '_car',  'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          trampCall(@_car)
                        else raise NameError.new( "Error: undefined variable car", "car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:100"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 100 );
                            _cdr(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 100 );
                                    _car(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 100 );
                                            _cdr(
                                                begin
                                                    trampCall(_x)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:100"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._caddar_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_caddar', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_caddar'] = self.method( :_caddar_METHOD )
    @_caddar = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 101 );
                  delayCall( '_car',  'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          trampCall(@_car)
                        else raise NameError.new( "Error: undefined variable car", "car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:101"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 101 );
                            _cdr(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 101 );
                                    _cdr(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 101 );
                                            _car(
                                                begin
                                                    trampCall(_x)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:101"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cadddr_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cadddr', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cadddr'] = self.method( :_cadddr_METHOD )
    @_cadddr = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 102 );
                  delayCall( '_car',  'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          trampCall(@_car)
                        else raise NameError.new( "Error: undefined variable car", "car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:102"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 102 );
                            _cdr(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 102 );
                                    _cdr(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 102 );
                                            _cdr(
                                                begin
                                                    trampCall(_x)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:102"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cdaaar_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cdaaar', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cdaaar'] = self.method( :_cdaaar_METHOD )
    @_cdaaar = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 103 );
                  delayCall( '_cdr',  'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          trampCall(@_cdr)
                        else raise NameError.new( "Error: undefined variable cdr", "cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:103"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 103 );
                            _car(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 103 );
                                    _car(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 103 );
                                            _car(
                                                begin
                                                    trampCall(_x)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:103"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cdaadr_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cdaadr', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cdaadr'] = self.method( :_cdaadr_METHOD )
    @_cdaadr = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 104 );
                  delayCall( '_cdr',  'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          trampCall(@_cdr)
                        else raise NameError.new( "Error: undefined variable cdr", "cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:104"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 104 );
                            _car(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 104 );
                                    _car(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 104 );
                                            _cdr(
                                                begin
                                                    trampCall(_x)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:104"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cdadar_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cdadar', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cdadar'] = self.method( :_cdadar_METHOD )
    @_cdadar = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 105 );
                  delayCall( '_cdr',  'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          trampCall(@_cdr)
                        else raise NameError.new( "Error: undefined variable cdr", "cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:105"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 105 );
                            _car(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 105 );
                                    _cdr(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 105 );
                                            _car(
                                                begin
                                                    trampCall(_x)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:105"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cdaddr_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cdaddr', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cdaddr'] = self.method( :_cdaddr_METHOD )
    @_cdaddr = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 106 );
                  delayCall( '_cdr',  'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          trampCall(@_cdr)
                        else raise NameError.new( "Error: undefined variable cdr", "cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:106"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 106 );
                            _car(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 106 );
                                    _cdr(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 106 );
                                            _cdr(
                                                begin
                                                    trampCall(_x)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:106"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cddaar_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cddaar', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cddaar'] = self.method( :_cddaar_METHOD )
    @_cddaar = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 107 );
                  delayCall( '_cdr',  'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          trampCall(@_cdr)
                        else raise NameError.new( "Error: undefined variable cdr", "cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:107"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 107 );
                            _cdr(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 107 );
                                    _car(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 107 );
                                            _car(
                                                begin
                                                    trampCall(_x)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:107"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cddadr_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cddadr', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cddadr'] = self.method( :_cddadr_METHOD )
    @_cddadr = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 108 );
                  delayCall( '_cdr',  'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          trampCall(@_cdr)
                        else raise NameError.new( "Error: undefined variable cdr", "cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:108"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 108 );
                            _cdr(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 108 );
                                    _car(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 108 );
                                            _cdr(
                                                begin
                                                    trampCall(_x)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:108"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cdddar_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cdddar', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cdddar'] = self.method( :_cdddar_METHOD )
    @_cdddar = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 109 );
                  delayCall( '_cdr',  'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          trampCall(@_cdr)
                        else raise NameError.new( "Error: undefined variable cdr", "cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:109"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 109 );
                            _cdr(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 109 );
                                    _cdr(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 109 );
                                            _car(
                                                begin
                                                    trampCall(_x)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:109"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cddddr_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cddddr', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cddddr'] = self.method( :_cddddr_METHOD )
    @_cddddr = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 110 );
                  delayCall( '_cdr',  'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          trampCall(@_cdr)
                        else raise NameError.new( "Error: undefined variable cdr", "cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:110"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 110 );
                            _cdr(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 110 );
                                    _cdr(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 110 );
                                            _cdr(
                                                begin
                                                    trampCall(_x)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:110"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._iota_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_iota', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_iota'] = self.method( :_iota_METHOD )
    @_iota = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('_range') then
              trampCall(@_range)
            else raise NameError.new( "Error: undefined variable range", "range" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:116"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._append_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_append', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_append'] = self.method( :_append_METHOD )
    @_append = 
    trampCall(
          Proc.new { |_a,_b| 
              begin #makeLetrec
                ___lambda = lambda { |_append_MIMARKreverse| 
                    _append_MIMARKreverse                     = 
                      Proc.new { |_a,_b| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 121 );
                                _pair_QUMARK(
                                    begin
                                        trampCall(_a)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:121"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                           ) then
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 122 );
                                  delayCall( '_append_MIMARKreverse',  'append-reverse',
                                      begin
                                          trampCall(_append_MIMARKreverse)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:122"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 122 );
                                            _cdr(
                                                begin
                                                    trampCall(_a)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:122"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 122 );
                                            _cons(
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 122 );
                                                    _car(
                                                        begin
                                                            trampCall(_a)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:122"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end                                              ,
                                                begin
                                                    trampCall(_b)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:122"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                  ]
                                               )
                              end
                          else
                              begin
                                  trampCall(_b)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:123"] + __e.backtrace ) ; raise __e
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 124 );
                        delayCall( '_append_MIMARKreverse',  'append-reverse',
                            begin
                                trampCall(_append_MIMARKreverse)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:124"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 124 );
                                  _reverse(
                                      begin
                                          trampCall(_a)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:124"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end                            ,
                              begin
                                  trampCall(_b)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:124"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._vector_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_vector', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_vector'] = self.method( :_vector_METHOD )
    @_vector = 
    trampCall(
          Proc.new { |*__rest__| _lst = __rest__[0] ;  
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 129 );
                  delayCall( '_to_MIMARKarr',  'to-arr',
                      begin
                        if @global_lisp_binding.has_key?('_to_MIMARKarr') then
                          trampCall(@_to_MIMARKarr)
                        else raise NameError.new( "Error: undefined variable to-arr", "to-arr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:129"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                            trampCall(_lst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:129"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._list_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_list_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_list_QUMARK'] = self.method( :_list_QUMARK_METHOD )
    @_list_QUMARK = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('__PAMARKlist_QUMARK') then
              trampCall(@__PAMARKlist_QUMARK)
            else raise NameError.new( "Error: undefined variable %list?", "%list?" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:130"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._even_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_even_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_even_QUMARK'] = self.method( :_even_QUMARK_METHOD )
    @_even_QUMARK = 
    trampCall(
          Proc.new { |_n| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 131 );
                  delayCall( '__EQMARK',  '=',
                      begin
                        if @global_lisp_binding.has_key?('__EQMARK') then
                          trampCall(@__EQMARK)
                        else raise NameError.new( "Error: undefined variable =", "=" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:131"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 131 );
                            trampCall( self.__PAMARK_METHOD(  '%',
                                begin
                                  if @global_lisp_binding.has_key?('__PAMARK') then
                                    trampCall(@__PAMARK)
                                  else raise NameError.new( "Error: undefined variable %", "%" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:131"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_n)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:131"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                2
                            ]
                                         ))
                        end                      ,
                      0
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._odd_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_odd_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_odd_QUMARK'] = self.method( :_odd_QUMARK_METHOD )
    @_odd_QUMARK = 
    trampCall(
          Proc.new { |_n| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 132 );
                  delayCall( '_not',  'not',
                      begin
                        if @global_lisp_binding.has_key?('_not') then
                          trampCall(@_not)
                        else raise NameError.new( "Error: undefined variable not", "not" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:132"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 132 );
                            __EQMARK(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 132 );
                                    trampCall( self.__PAMARK_METHOD(  '%',
                                        begin
                                          if @global_lisp_binding.has_key?('__PAMARK') then
                                            trampCall(@__PAMARK)
                                          else raise NameError.new( "Error: undefined variable %", "%" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:132"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(_n)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:132"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                        2
                                    ]
                                                 ))
                                end                              ,
                              0
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._zero_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_zero_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_zero_QUMARK'] = self.method( :_zero_QUMARK_METHOD )
    @_zero_QUMARK = 
    trampCall(
          Proc.new { |_n| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 133 );
                  delayCall( '__EQMARK',  '=',
                      begin
                        if @global_lisp_binding.has_key?('__EQMARK') then
                          trampCall(@__EQMARK)
                        else raise NameError.new( "Error: undefined variable =", "=" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:133"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                            trampCall(_n)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:133"] + __e.backtrace ) ; raise __e
                        end                      ,
                      0
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._positive_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_positive_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_positive_QUMARK'] = self.method( :_positive_QUMARK_METHOD )
    @_positive_QUMARK = 
    trampCall(
          Proc.new { |_n| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 134 );
                  delayCall( '__GTMARK',  '>',
                      begin
                        if @global_lisp_binding.has_key?('__GTMARK') then
                          trampCall(@__GTMARK)
                        else raise NameError.new( "Error: undefined variable >", ">" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:134"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                            trampCall(_n)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:134"] + __e.backtrace ) ; raise __e
                        end                      ,
                      0
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._negative_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_negative_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_negative_QUMARK'] = self.method( :_negative_QUMARK_METHOD )
    @_negative_QUMARK = 
    trampCall(
          Proc.new { |_n| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 135 );
                  delayCall( '__LTMARK',  '<',
                      begin
                        if @global_lisp_binding.has_key?('__LTMARK') then
                          trampCall(@__LTMARK)
                        else raise NameError.new( "Error: undefined variable <", "<" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:135"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                            trampCall(_n)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:135"] + __e.backtrace ) ; raise __e
                        end                      ,
                      0
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._abs_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_abs', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_abs'] = self.method( :_abs_METHOD )
    @_abs = 
    trampCall(
          Proc.new { |_n| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 136 );
                    ( 
                      begin
                          trampCall(_n)
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:136"] + __e.backtrace ) ; raise __e
                      end                    >=
                    0
                     ) 
                end
               ) then
                  begin
                      trampCall(_n)
                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:136"] + __e.backtrace ) ; raise __e
                  end
              else
                  begin
                    embedBacktraceInfo( "./lib/nendo/init.nnd", 136 );
                      delayCall( '__MIMARK',  '-',
                          begin
                            if @global_lisp_binding.has_key?('__MIMARK') then
                              trampCall(@__MIMARK)
                            else raise NameError.new( "Error: undefined variable -", "-" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:136"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                                trampCall(_n)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:136"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._max_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_max', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_max'] = self.method( :_max_METHOD )
    @_max = 
    trampCall(
          Proc.new { |*__rest__| _lst = __rest__[0] ;  
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 138 );
                  delayCall( '_fold_MIMARKright',  'fold-right',
                      begin
                        if @global_lisp_binding.has_key?('_fold_MIMARKright') then
                          trampCall(@_fold_MIMARKright)
                        else raise NameError.new( "Error: undefined variable fold-right", "fold-right" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:138"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        Proc.new { |_a,_b| 
                            if ( 
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 138 );
                                  ( 
                                    begin
                                        trampCall(_a)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:138"] + __e.backtrace ) ; raise __e
                                    end                                  >
                                    begin
                                        trampCall(_b)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:138"] + __e.backtrace ) ; raise __e
                                    end
                                   ) 
                              end
                             ) then
                                begin
                                    trampCall(_a)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:138"] + __e.backtrace ) ; raise __e
                                end
                            else
                                begin
                                    trampCall(_b)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:138"] + __e.backtrace ) ; raise __e
                                end
                            end
                        }                      ,
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 138 );
                            _car(
                                begin
                                    trampCall(_lst)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:138"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end                      ,
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 138 );
                            _cdr(
                                begin
                                    trampCall(_lst)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:138"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._min_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_min', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_min'] = self.method( :_min_METHOD )
    @_min = 
    trampCall(
          Proc.new { |*__rest__| _lst = __rest__[0] ;  
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 140 );
                  delayCall( '_fold_MIMARKright',  'fold-right',
                      begin
                        if @global_lisp_binding.has_key?('_fold_MIMARKright') then
                          trampCall(@_fold_MIMARKright)
                        else raise NameError.new( "Error: undefined variable fold-right", "fold-right" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:140"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        Proc.new { |_a,_b| 
                            if ( 
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 140 );
                                  ( 
                                    begin
                                        trampCall(_a)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:140"] + __e.backtrace ) ; raise __e
                                    end                                  <
                                    begin
                                        trampCall(_b)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:140"] + __e.backtrace ) ; raise __e
                                    end
                                   ) 
                              end
                             ) then
                                begin
                                    trampCall(_a)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:140"] + __e.backtrace ) ; raise __e
                                end
                            else
                                begin
                                    trampCall(_b)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:140"] + __e.backtrace ) ; raise __e
                                end
                            end
                        }                      ,
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 140 );
                            _car(
                                begin
                                    trampCall(_lst)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:140"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end                      ,
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 140 );
                            _cdr(
                                begin
                                    trampCall(_lst)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:140"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._succ_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_succ', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_succ'] = self.method( :_succ_METHOD )
    @_succ = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 141 );
                  delayCall( '__PLMARK',  '+',
                      begin
                        if @global_lisp_binding.has_key?('__PLMARK') then
                          trampCall(@__PLMARK)
                        else raise NameError.new( "Error: undefined variable +", "+" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:141"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                            trampCall(_x)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:141"] + __e.backtrace ) ; raise __e
                        end                      ,
                      1
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._pred_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_pred', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_pred'] = self.method( :_pred_METHOD )
    @_pred = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 142 );
                  delayCall( '__MIMARK',  '-',
                      begin
                        if @global_lisp_binding.has_key?('__MIMARK') then
                          trampCall(@__MIMARK)
                        else raise NameError.new( "Error: undefined variable -", "-" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:142"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                            trampCall(_x)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:142"] + __e.backtrace ) ; raise __e
                        end                      ,
                      1
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._nth_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_nth', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_nth'] = self.method( :_nth_METHOD )
    @_nth = 
    trampCall(
          Proc.new { |_n,_lst| 
              begin #makeLetrec
                ___lambda = lambda { |_nth_MIMARKiter| 
                    _nth_MIMARKiter                     = 
                      Proc.new { |_n,_index,_lst| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 146 );
                                _null_QUMARK(
                                    begin
                                        trampCall(_lst)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:146"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                           ) then
                            Cell.new()
                          else
                              if ( 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 148 );
                                    _not(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 148 );
                                            _pair_QUMARK(
                                                begin
                                                    trampCall(_lst)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:148"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                               ) then
                                  begin raise RuntimeError, 
                                  "Error: nth got improper list."
                                  rescue => __e 
                                    __e.set_backtrace( ["./lib/nendo/init.nnd:149"] + __e.backtrace )
                                    raise __e
                                  end 
                              else
                                  if ( 
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 150 );
                                        trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                            begin
                                              if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                trampCall(@_eqv_QUMARK)
                                              else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:150"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_n)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:150"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              begin
                                                  trampCall(_index)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:150"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     ))
                                    end
                                   ) then
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 151 );
                                          delayCall( '_car',  'car',
                                              begin
                                                if @global_lisp_binding.has_key?('_car') then
                                                  trampCall(@_car)
                                                else raise NameError.new( "Error: undefined variable car", "car" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:151"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                    trampCall(_lst)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:151"] + __e.backtrace ) ; raise __e
                                                end
                                          ]
                                                       )
                                      end
                                  else
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 152 );
                                          delayCall( '_nth_MIMARKiter',  'nth-iter',
                                              begin
                                                  trampCall(_nth_MIMARKiter)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:152"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                    trampCall(_n)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:152"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 152 );
                                                    ( 
                                                      begin
                                                          trampCall(_index)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:152"] + __e.backtrace ) ; raise __e
                                                      end                                                    +
                                                    1
                                                     ) 
                                                end                                              ,
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 152 );
                                                    _cdr(
                                                        begin
                                                            trampCall(_lst)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:152"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end
                                          ]
                                                       )
                                      end
                                  end
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 153 );
                        delayCall( '_nth_MIMARKiter',  'nth-iter',
                            begin
                                trampCall(_nth_MIMARKiter)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:153"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_n)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:153"] + __e.backtrace ) ; raise __e
                              end                            ,
                            0                            ,
                              begin
                                  trampCall(_lst)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:153"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._first_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_first', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_first'] = self.method( :_first_METHOD )
    @_first = 
    trampCall(
          Proc.new { |_lst| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 154 );
                  delayCall( '_nth',  'nth',
                      begin
                        if @global_lisp_binding.has_key?('_nth') then
                          trampCall(@_nth)
                        else raise NameError.new( "Error: undefined variable nth", "nth" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:154"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                      0                      ,
                        begin
                            trampCall(_lst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:154"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._second_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_second', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_second'] = self.method( :_second_METHOD )
    @_second = 
    trampCall(
          Proc.new { |_lst| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 155 );
                  delayCall( '_nth',  'nth',
                      begin
                        if @global_lisp_binding.has_key?('_nth') then
                          trampCall(@_nth)
                        else raise NameError.new( "Error: undefined variable nth", "nth" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:155"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                      1                      ,
                        begin
                            trampCall(_lst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:155"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._third_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_third', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_third'] = self.method( :_third_METHOD )
    @_third = 
    trampCall(
          Proc.new { |_lst| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 156 );
                  delayCall( '_nth',  'nth',
                      begin
                        if @global_lisp_binding.has_key?('_nth') then
                          trampCall(@_nth)
                        else raise NameError.new( "Error: undefined variable nth", "nth" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:156"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                      2                      ,
                        begin
                            trampCall(_lst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:156"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._fourth_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_fourth', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_fourth'] = self.method( :_fourth_METHOD )
    @_fourth = 
    trampCall(
          Proc.new { |_lst| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 157 );
                  delayCall( '_nth',  'nth',
                      begin
                        if @global_lisp_binding.has_key?('_nth') then
                          trampCall(@_nth)
                        else raise NameError.new( "Error: undefined variable nth", "nth" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:157"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                      3                      ,
                        begin
                            trampCall(_lst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:157"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._fifth_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_fifth', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_fifth'] = self.method( :_fifth_METHOD )
    @_fifth = 
    trampCall(
          Proc.new { |_lst| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 158 );
                  delayCall( '_nth',  'nth',
                      begin
                        if @global_lisp_binding.has_key?('_nth') then
                          trampCall(@_nth)
                        else raise NameError.new( "Error: undefined variable nth", "nth" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:158"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                      4                      ,
                        begin
                            trampCall(_lst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:158"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._sixth_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_sixth', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_sixth'] = self.method( :_sixth_METHOD )
    @_sixth = 
    trampCall(
          Proc.new { |_lst| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 159 );
                  delayCall( '_nth',  'nth',
                      begin
                        if @global_lisp_binding.has_key?('_nth') then
                          trampCall(@_nth)
                        else raise NameError.new( "Error: undefined variable nth", "nth" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:159"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                      5                      ,
                        begin
                            trampCall(_lst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:159"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._seventh_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_seventh', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_seventh'] = self.method( :_seventh_METHOD )
    @_seventh = 
    trampCall(
          Proc.new { |_lst| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 160 );
                  delayCall( '_nth',  'nth',
                      begin
                        if @global_lisp_binding.has_key?('_nth') then
                          trampCall(@_nth)
                        else raise NameError.new( "Error: undefined variable nth", "nth" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:160"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                      6                      ,
                        begin
                            trampCall(_lst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:160"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._eighth_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_eighth', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_eighth'] = self.method( :_eighth_METHOD )
    @_eighth = 
    trampCall(
          Proc.new { |_lst| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 161 );
                  delayCall( '_nth',  'nth',
                      begin
                        if @global_lisp_binding.has_key?('_nth') then
                          trampCall(@_nth)
                        else raise NameError.new( "Error: undefined variable nth", "nth" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:161"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                      7                      ,
                        begin
                            trampCall(_lst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:161"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._ninth_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_ninth', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_ninth'] = self.method( :_ninth_METHOD )
    @_ninth = 
    trampCall(
          Proc.new { |_lst| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 162 );
                  delayCall( '_nth',  'nth',
                      begin
                        if @global_lisp_binding.has_key?('_nth') then
                          trampCall(@_nth)
                        else raise NameError.new( "Error: undefined variable nth", "nth" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:162"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                      8                      ,
                        begin
                            trampCall(_lst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:162"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._tenth_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_tenth', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_tenth'] = self.method( :_tenth_METHOD )
    @_tenth = 
    trampCall(
          Proc.new { |_lst| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 163 );
                  delayCall( '_nth',  'nth',
                      begin
                        if @global_lisp_binding.has_key?('_nth') then
                          trampCall(@_nth)
                        else raise NameError.new( "Error: undefined variable nth", "nth" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:163"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                      9                      ,
                        begin
                            trampCall(_lst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:163"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._x_MIMARK_GTMARKstring_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_x_MIMARK_GTMARKstring', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_x_MIMARK_GTMARKstring'] = self.method( :_x_MIMARK_GTMARKstring_METHOD )
    @_x_MIMARK_GTMARKstring = 
    trampCall(
          Proc.new { |_object| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 165 );
                  delayCall( '_to_MIMARKs',  'to-s',
                      begin
                        if @global_lisp_binding.has_key?('_to_MIMARKs') then
                          trampCall(@_to_MIMARKs)
                        else raise NameError.new( "Error: undefined variable to-s", "to-s" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:165"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                            trampCall(_object)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:165"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._number_MIMARK_GTMARKstring_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_number_MIMARK_GTMARKstring', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_number_MIMARK_GTMARKstring'] = self.method( :_number_MIMARK_GTMARKstring_METHOD )
    @_number_MIMARK_GTMARKstring = 
    trampCall(
          Proc.new { |_num| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 166 );
                  delayCall( '_x_MIMARK_GTMARKstring',  'x->string',
                      begin
                        if @global_lisp_binding.has_key?('_x_MIMARK_GTMARKstring') then
                          trampCall(@_x_MIMARK_GTMARKstring)
                        else raise NameError.new( "Error: undefined variable x->string", "x->string" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:166"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                            trampCall(_num)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:166"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._string_MIMARKappend_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_string_MIMARKappend', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_string_MIMARKappend'] = self.method( :_string_MIMARKappend_METHOD )
    @_string_MIMARKappend = 
    trampCall(
          Proc.new { |*__rest__| _str_MIMARKlst = __rest__[0] ;  
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 169 );
                  delayCall( '_string_MIMARKjoin',  'string-join',
                      begin
                        if @global_lisp_binding.has_key?('_string_MIMARKjoin') then
                          trampCall(@_string_MIMARKjoin)
                        else raise NameError.new( "Error: undefined variable string-join", "string-join" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:169"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                            trampCall(_str_MIMARKlst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:169"] + __e.backtrace ) ; raise __e
                        end                      ,
                      ""
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._string_EQMARK_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_string_EQMARK_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_string_EQMARK_QUMARK'] = self.method( :_string_EQMARK_QUMARK_METHOD )
    @_string_EQMARK_QUMARK = 
    trampCall(
          Proc.new { |_a,_b| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 172 );
                  delayCall( '_equal_QUMARK',  'equal?',
                      begin
                        if @global_lisp_binding.has_key?('_equal_QUMARK') then
                          trampCall(@_equal_QUMARK)
                        else raise NameError.new( "Error: undefined variable equal?", "equal?" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:172"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                            trampCall(_a)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:172"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_b)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:172"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._macroexpand_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_macroexpand', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_macroexpand'] = self.method( :_macroexpand_METHOD )
    @_macroexpand = 
    trampCall(
          Proc.new { |_sexp| 
              begin #makeLet
                ___lambda = lambda { |_newsexp| 
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 179 );
                          _not(
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 179 );
                                  _equal_QUMARK(
                                      begin
                                          trampCall(_sexp)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:179"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      begin
                                          trampCall(_newsexp)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:179"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                          )
                      end
                     ) then
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 180 );
                            delayCall( '_macroexpand',  'macroexpand',
                                begin
                                  if @global_lisp_binding.has_key?('_macroexpand') then
                                    trampCall(@_macroexpand)
                                  else raise NameError.new( "Error: undefined variable macroexpand", "macroexpand" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:180"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_newsexp)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:180"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         )
                        end
                    else
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 181 );
                            delayCall( '_strip_MIMARKlet_MIMARKsyntax_MIMARKkeyword',  'strip-let-syntax-keyword',
                                begin
                                  if @global_lisp_binding.has_key?('_strip_MIMARKlet_MIMARKsyntax_MIMARKkeyword') then
                                    trampCall(@_strip_MIMARKlet_MIMARKsyntax_MIMARKkeyword)
                                  else raise NameError.new( "Error: undefined variable strip-let-syntax-keyword", "strip-let-syntax-keyword" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:181"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 182 );
                                      trampCall( self._strip_MIMARKsyntax_MIMARKquote_METHOD(  'strip-syntax-quote',
                                          begin
                                            if @global_lisp_binding.has_key?('_strip_MIMARKsyntax_MIMARKquote') then
                                              trampCall(@_strip_MIMARKsyntax_MIMARKquote)
                                            else raise NameError.new( "Error: undefined variable strip-syntax-quote", "strip-syntax-quote" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:182"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_newsexp)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:183"] + __e.backtrace ) ; raise __e
                                            end
                                      ]
                                                   ))
                                  end
                            ]
                                         )
                        end
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 178 );
                          _macroexpand_MIMARK1(
                              begin
                                  trampCall(_sexp)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:178"] + __e.backtrace ) ; raise __e
                              end
                          )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._feedto_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_feedto', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_feedto'] = self.method( :_feedto_METHOD )
    @_feedto = 
    trampCall(
          Proc.new { || 
              begin raise RuntimeError, 
              "=> (feedto) appeared outside cond or case."
              rescue => __e 
                __e.set_backtrace( ["./lib/nendo/init.nnd:187"] + __e.backtrace )
                raise __e
              end 
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cond_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cond', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cond'] = self.method( :_cond_METHOD )
    @_cond = 
    trampCall(
          LispMacro.new { |*__rest__| _lst = __rest__[0] ;  
              begin #makeLetrec
                ___lambda = lambda { |_case_MIMARKblock,_cond_MIMARKiter| 
                    _case_MIMARKblock                     = 
                      Proc.new { |_elem,*__rest__| _elseblock = __rest__[0] ;  
                          begin #makeLet
                            ___lambda = lambda { |_condition,_body,_tmpsym| 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 203 );
                                    trampCall( self._append_METHOD(  'append',
                                        begin
                                          if @global_lisp_binding.has_key?('_append') then
                                            trampCall(@_append)
                                          else raise NameError.new( "Error: undefined variable append", "append" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:203"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          if ( 
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 204 );
                                                _eq_QUMARK(
                                                  :"feedto"                                                  ,
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 204 );
                                                        _car(
                                                            begin
                                                                trampCall(_body)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:204"] + __e.backtrace ) ; raise __e
                                                            end
                                                        )
                                                    end
                                                )
                                            end
                                           ) then
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 205 );
                                                  _cons(
                                                    :"if"                                                    ,
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 206 );
                                                          trampCall( self._list_METHOD(  'list',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_list') then
                                                                  trampCall(@_list)
                                                                else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:206"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                          [
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 207 );
                                                                    trampCall( self._list_METHOD(  'list',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_list') then
                                                                            trampCall(@_list)
                                                                          else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:207"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                    [
                                                                        :"set!"                                                                        ,
                                                                          begin
                                                                              trampCall(_tmpsym)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:207"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          begin
                                                                              trampCall(_condition)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:207"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                    ]
                                                                                 ))
                                                                end                                                              ,
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 208 );
                                                                    trampCall( self._list_METHOD(  'list',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_list') then
                                                                            trampCall(@_list)
                                                                          else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:208"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                    [
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 208 );
                                                                              trampCall( self._cadr_METHOD(  'cadr',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_cadr') then
                                                                                      trampCall(@_cadr)
                                                                                    else raise NameError.new( "Error: undefined variable cadr", "cadr" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:208"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                              [
                                                                                    begin
                                                                                        trampCall(_body)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:208"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                              ]
                                                                                           ))
                                                                          end                                                                        ,
                                                                          begin
                                                                              trampCall(_tmpsym)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:208"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                    ]
                                                                                 ))
                                                                end
                                                          ]
                                                                       ))
                                                      end
                                                  )
                                              end
                                          else
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 209 );
                                                  _cons(
                                                    :"if"                                                    ,
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 210 );
                                                          trampCall( self._list_METHOD(  'list',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_list') then
                                                                  trampCall(@_list)
                                                                else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:210"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                          [
                                                                begin
                                                                    trampCall(_condition)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:211"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 212 );
                                                                    _cons(
                                                                      :"begin"                                                                      ,
                                                                        begin
                                                                            trampCall(_body)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:212"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    )
                                                                end
                                                          ]
                                                                       ))
                                                      end
                                                  )
                                              end
                                          end                                        ,
                                          if ( 
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 213 );
                                                ( 
                                                0                                                <
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 213 );
                                                      _length(
                                                          begin
                                                              trampCall(_elseblock)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:213"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                                 ) 
                                            end
                                           ) then
                                              begin
                                                  trampCall(_elseblock)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:214"] + __e.backtrace ) ; raise __e
                                              end
                                          else
                                            Cell.new()
                                          end
                                    ]
                                                 ))
                                end
                            } ; ___lambda.call(
                                  if ( 
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 193 );
                                        _eq_QUMARK(
                                          :"else"                                          ,
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 193 );
                                                _car(
                                                    begin
                                                        trampCall(_elem)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:193"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                        )
                                    end
                                   ) then
                                    true
                                  else
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 195 );
                                          _car(
                                              begin
                                                  trampCall(_elem)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:195"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                  end                                ,
                                  if ( 
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 196 );
                                        _null_QUMARK(
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 196 );
                                                _cdr(
                                                    begin
                                                        trampCall(_elem)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:196"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                        )
                                    end
                                   ) then
                                    Cell.new(true)
                                  else
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 198 );
                                          _cdr(
                                              begin
                                                  trampCall(_elem)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:198"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                  end                                ,
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 199 );
                                      trampCall( self._gensym_METHOD(  'gensym',
                                          begin
                                            if @global_lisp_binding.has_key?('_gensym') then
                                              trampCall(@_gensym)
                                            else raise NameError.new( "Error: undefined variable gensym", "gensym" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:199"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                      ]
                                                   ))
                                  end
                                       )
                          end
                      }
                    _cond_MIMARKiter                     = 
                      Proc.new { |_lst| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 218 );
                                _eq_QUMARK(
                                  0                                  ,
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 218 );
                                        _length(
                                            begin
                                                trampCall(_lst)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:218"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    end
                                )
                            end
                           ) then
                            Cell.new()
                          else
                              if ( 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 220 );
                                    _eq_QUMARK(
                                      1                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 220 );
                                            _length(
                                                begin
                                                    trampCall(_lst)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:220"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                               ) then
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 221 );
                                      trampCall( callProcedure(  '_case_MIMARKblock',  'case-block',
                                          begin
                                              trampCall(_case_MIMARKblock)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:221"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 221 );
                                                _car(
                                                    begin
                                                        trampCall(_lst)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:221"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end                                          ,
                                          Cell.new()
                                      ]
                                                   ))
                                  end
                              else
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 222 );
                                      trampCall( callProcedure(  '_case_MIMARKblock',  'case-block',
                                          begin
                                              trampCall(_case_MIMARKblock)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:222"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 222 );
                                                _car(
                                                    begin
                                                        trampCall(_lst)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:222"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end                                          ,
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 223 );
                                                trampCall( callProcedure(  '_cond_MIMARKiter',  'cond-iter',
                                                    begin
                                                        trampCall(_cond_MIMARKiter)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:223"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 223 );
                                                          _cdr(
                                                              begin
                                                                  trampCall(_lst)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:223"] + __e.backtrace ) ; raise __e
                                                              end
                                                          )
                                                      end
                                                ]
                                                             ))
                                            end
                                      ]
                                                   ))
                                  end
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 224 );
                        trampCall( callProcedure(  '_cond_MIMARKiter',  'cond-iter',
                            begin
                                trampCall(_cond_MIMARKiter)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:224"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lst)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:224"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     ))
                    end
                } ; ___lambda.call(
                nil,nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._let1_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_let1', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_let1'] = self.method( :_let1_METHOD )
    @_let1 = 
    trampCall(
          LispMacro.new { |_var,_expr,*__rest__| _body = __rest__[0] ;  
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 228 );
                  trampCall( self._append_METHOD(  'append',
                      begin
                        if @global_lisp_binding.has_key?('_append') then
                          trampCall(@_append)
                        else raise NameError.new( "Error: undefined variable append", "append" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:228"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 229 );
                            trampCall( self._list_METHOD(  'list',
                                begin
                                  if @global_lisp_binding.has_key?('_list') then
                                    trampCall(@_list)
                                  else raise NameError.new( "Error: undefined variable list", "list" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:229"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                :"%let"                                ,
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 229 );
                                      trampCall( self._list_METHOD(  'list',
                                          begin
                                            if @global_lisp_binding.has_key?('_list') then
                                              trampCall(@_list)
                                            else raise NameError.new( "Error: undefined variable list", "list" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:229"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 229 );
                                                trampCall( self._list_METHOD(  'list',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_list') then
                                                        trampCall(@_list)
                                                      else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:229"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_var)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:229"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      begin
                                                          trampCall(_expr)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:229"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end
                                      ]
                                                   ))
                                  end
                            ]
                                         ))
                        end                      ,
                        begin
                            trampCall(_body)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:230"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               ))
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._or_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_or', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_or'] = self.method( :_or_METHOD )
    @_or = 
    trampCall(
          LispMacro.new { |*__rest__| _lst = __rest__[0] ;  
              begin #makeLetrec
                ___lambda = lambda { |_or_MIMARKiter| 
                    _or_MIMARKiter                     = 
                      Proc.new { |_lst| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 237 );
                                _eq_QUMARK(
                                  0                                  ,
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 237 );
                                        _length(
                                            begin
                                                trampCall(_lst)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:237"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    end
                                )
                            end
                           ) then
                              false
                          else
                              if ( 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 239 );
                                    _eq_QUMARK(
                                      1                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 239 );
                                            _length(
                                                begin
                                                    trampCall(_lst)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:239"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                               ) then
                                    begin #makeLet
                                      ___lambda = lambda { |_sym| 
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 241 );
                                              trampCall( self._list_METHOD(  'list',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_list') then
                                                      trampCall(@_list)
                                                    else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:241"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                  :"let1"                                                  ,
                                                    begin
                                                        trampCall(_sym)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:241"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 241 );
                                                        _car(
                                                            begin
                                                                trampCall(_lst)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:241"] + __e.backtrace ) ; raise __e
                                                            end
                                                        )
                                                    end                                                  ,
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 242 );
                                                        trampCall( self._list_METHOD(  'list',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_list') then
                                                                trampCall(@_list)
                                                              else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:242"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                        [
                                                            :"if"                                                            ,
                                                              begin
                                                                  trampCall(_sym)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:242"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              begin
                                                                  trampCall(_sym)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:242"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                            false
                                                        ]
                                                                     ))
                                                    end
                                              ]
                                                           ))
                                          end
                                      } ; ___lambda.call(
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 240 );
                                                trampCall( self._gensym_METHOD(  'gensym',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_gensym') then
                                                        trampCall(@_gensym)
                                                      else raise NameError.new( "Error: undefined variable gensym", "gensym" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:240"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                ]
                                                             ))
                                            end
                                                 )
                                    end
                              else
                                  if ( 
                                  true
                                   ) then
                                        begin #makeLet
                                          ___lambda = lambda { |_sym| 
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 245 );
                                                  trampCall( self._list_METHOD(  'list',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_list') then
                                                          trampCall(@_list)
                                                        else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:245"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                      :"let1"                                                      ,
                                                        begin
                                                            trampCall(_sym)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:245"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 245 );
                                                            _car(
                                                                begin
                                                                    trampCall(_lst)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:245"] + __e.backtrace ) ; raise __e
                                                                end
                                                            )
                                                        end                                                      ,
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 246 );
                                                            trampCall( self._list_METHOD(  'list',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_list') then
                                                                    trampCall(@_list)
                                                                  else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:246"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                :"if"                                                                ,
                                                                  begin
                                                                      trampCall(_sym)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:246"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  begin
                                                                      trampCall(_sym)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:246"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 246 );
                                                                      trampCall( callProcedure(  '_or_MIMARKiter',  'or-iter',
                                                                          begin
                                                                              trampCall(_or_MIMARKiter)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:246"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                      [
                                                                            begin
                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 246 );
                                                                                _cdr(
                                                                                    begin
                                                                                        trampCall(_lst)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:246"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                )
                                                                            end
                                                                      ]
                                                                                   ))
                                                                  end
                                                            ]
                                                                         ))
                                                        end
                                                  ]
                                                               ))
                                              end
                                          } ; ___lambda.call(
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 244 );
                                                    trampCall( self._gensym_METHOD(  'gensym',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_gensym') then
                                                            trampCall(@_gensym)
                                                          else raise NameError.new( "Error: undefined variable gensym", "gensym" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:244"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                    ]
                                                                 ))
                                                end
                                                     )
                                        end
                                  else
                                      Cell.new()
                                  end
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 247 );
                        trampCall( callProcedure(  '_or_MIMARKiter',  'or-iter',
                            begin
                                trampCall(_or_MIMARKiter)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:247"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lst)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:247"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     ))
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._and_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_and', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_and'] = self.method( :_and_METHOD )
    @_and = 
    trampCall(
          LispMacro.new { |*__rest__| _lst = __rest__[0] ;  
              begin #makeLetrec
                ___lambda = lambda { |_and_MIMARKiter| 
                    _and_MIMARKiter                     = 
                      Proc.new { |_lst| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 254 );
                                _eq_QUMARK(
                                  0                                  ,
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 254 );
                                        _length(
                                            begin
                                                trampCall(_lst)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:254"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    end
                                )
                            end
                           ) then
                              true
                          else
                              if ( 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 256 );
                                    _eq_QUMARK(
                                      1                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 256 );
                                            _length(
                                                begin
                                                    trampCall(_lst)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:256"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                               ) then
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 257 );
                                        _car(
                                            begin
                                                trampCall(_lst)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:257"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    end
                              else
                                  if ( 
                                  true
                                   ) then
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 259 );
                                            trampCall( self._list_METHOD(  'list',
                                                begin
                                                  if @global_lisp_binding.has_key?('_list') then
                                                    trampCall(@_list)
                                                  else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:259"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                :"if"                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 259 );
                                                      trampCall( self._list_METHOD(  'list',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_list') then
                                                              trampCall(@_list)
                                                            else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:259"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                          :"not"                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 259 );
                                                                trampCall( self._list_METHOD(  'list',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_list') then
                                                                        trampCall(@_list)
                                                                      else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:259"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                    :"eq?"                                                                    ,
                                                                    false                                                                    ,
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 259 );
                                                                          _car(
                                                                              begin
                                                                                  trampCall(_lst)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:259"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          )
                                                                      end
                                                                ]
                                                                             ))
                                                            end
                                                      ]
                                                                   ))
                                                  end                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 260 );
                                                      trampCall( callProcedure(  '_and_MIMARKiter',  'and-iter',
                                                          begin
                                                              trampCall(_and_MIMARKiter)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:260"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 260 );
                                                                _cdr(
                                                                    begin
                                                                        trampCall(_lst)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:260"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                      ]
                                                                   ))
                                                  end                                                ,
                                                false
                                            ]
                                                         ))
                                        end
                                  else
                                      Cell.new()
                                  end
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 262 );
                        trampCall( callProcedure(  '_and_MIMARKiter',  'and-iter',
                            begin
                                trampCall(_and_MIMARKiter)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:262"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_lst)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:262"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     ))
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._apply_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_apply', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_apply'] = self.method( :_apply_METHOD )
    @_apply = 
    trampCall(
          Proc.new { |_proc,*__rest__| _args = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 266 );
                    _null_QUMARK(
                        begin
                            trampCall(_args)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:266"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin
                    embedBacktraceInfo( "./lib/nendo/init.nnd", 267 );
                      delayCall( '_proc',  'proc',
                          begin
                              trampCall(_proc)
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:267"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                      ]
                                   )
                  end
              else
                  trampCall( callProcedure( nil, 'anonymouse', 
                      Proc.new { |_lol| 
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 269 );
                              trampCall( self._apply1_METHOD(  'apply1',
                                  begin
                                    if @global_lisp_binding.has_key?('_apply1') then
                                      trampCall(@_apply1)
                                    else raise NameError.new( "Error: undefined variable apply1", "apply1" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:269"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_proc)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:269"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 269 );
                                        trampCall( self._append_METHOD(  'append',
                                            begin
                                              if @global_lisp_binding.has_key?('_append') then
                                                trampCall(@_append)
                                              else raise NameError.new( "Error: undefined variable append", "append" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:269"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 269 );
                                                  _reverse(
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 269 );
                                                          _cdr(
                                                              begin
                                                                  trampCall(_lol)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:269"] + __e.backtrace ) ; raise __e
                                                              end
                                                          )
                                                      end
                                                  )
                                              end                                            ,
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 269 );
                                                  _car(
                                                      begin
                                                          trampCall(_lol)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:269"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end
                                        ]
                                                     ))
                                    end
                              ]
                                           ))
                          end
                      }                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 270 );
                            _reverse(
                                begin
                                    trampCall(_args)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:270"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                  ]
                            ))
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._quasiquote_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_quasiquote', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_quasiquote'] = self.method( :_quasiquote_METHOD )
    @_quasiquote = 
    trampCall(
          LispMacro.new { |_l| 
              begin #makeLetrec
                ___lambda = lambda { |_mcons,_mappend,_foo| 
                    _mcons                     = 
                      Proc.new { |_f,_l,_r| 
                          if ( 
                            if ( 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _not(
                                      begin
                                        embedBacktraceInfo( "", 1 );
                                          _eq_QUMARK(
                                            false                                            ,
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 280 );
                                                  _pair_QUMARK(
                                                      begin
                                                          trampCall(_r)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:280"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end
                                          )
                                      end
                                  )
                              end
                             ) then
                                if ( 
                                  begin
                                    embedBacktraceInfo( "", 1 );
                                      _not(
                                          begin
                                            embedBacktraceInfo( "", 1 );
                                              _eq_QUMARK(
                                                false                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 281 );
                                                      _eq_QUMARK(
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 281 );
                                                              _car(
                                                                  begin
                                                                      trampCall(_r)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:281"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              )
                                                          end                                                        ,
                                                        :"quote"
                                                      )
                                                  end
                                              )
                                          end
                                      )
                                  end
                                 ) then
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "", 1 );
                                          _not(
                                              begin
                                                embedBacktraceInfo( "", 1 );
                                                  _eq_QUMARK(
                                                    false                                                    ,
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 282 );
                                                          _eq_QUMARK(
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 282 );
                                                                  _car(
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 282 );
                                                                          _cdr(
                                                                              begin
                                                                                  trampCall(_r)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:282"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          )
                                                                      end
                                                                  )
                                                              end                                                            ,
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 282 );
                                                                  _cdr(
                                                                      begin
                                                                          trampCall(_f)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:282"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                  )
                                                              end
                                                          )
                                                      end
                                                  )
                                              end
                                          )
                                      end
                                     ) then
                                        if ( 
                                          begin
                                            embedBacktraceInfo( "", 1 );
                                              _not(
                                                  begin
                                                    embedBacktraceInfo( "", 1 );
                                                      _eq_QUMARK(
                                                        false                                                        ,
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 283 );
                                                              _pair_QUMARK(
                                                                  begin
                                                                      trampCall(_l)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:283"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              )
                                                          end
                                                      )
                                                  end
                                              )
                                          end
                                         ) then
                                            if ( 
                                              begin
                                                embedBacktraceInfo( "", 1 );
                                                  _not(
                                                      begin
                                                        embedBacktraceInfo( "", 1 );
                                                          _eq_QUMARK(
                                                            false                                                            ,
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 284 );
                                                                  _eq_QUMARK(
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 284 );
                                                                          _car(
                                                                              begin
                                                                                  trampCall(_l)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:284"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          )
                                                                      end                                                                    ,
                                                                    :"quote"
                                                                  )
                                                              end
                                                          )
                                                      end
                                                  )
                                              end
                                             ) then
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 285 );
                                                    _eq_QUMARK(
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 285 );
                                                            _car(
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 285 );
                                                                    _cdr(
                                                                        begin
                                                                            trampCall(_l)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:285"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    )
                                                                end
                                                            )
                                                        end                                                      ,
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 285 );
                                                            _car(
                                                                begin
                                                                    trampCall(_f)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:285"] + __e.backtrace ) ; raise __e
                                                                end
                                                            )
                                                        end
                                                    )
                                                end
                                            else
                                              false
                                            end
                                        else
                                          false
                                        end
                                    else
                                      false
                                    end
                                else
                                  false
                                end
                            else
                              false
                            end
                           ) then
                              if ( 
                                begin #makeLet
                                  ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30374| 
                                      if ( 
                                        begin
                                            trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30374)
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end
                                       ) then
                                          begin
                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30374)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                      else
                                          begin #makeLet
                                            ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30375| 
                                                if ( 
                                                  begin
                                                      trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30375)
                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                  end
                                                 ) then
                                                    begin
                                                        trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30375)
                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                    end
                                                else
                                                    begin #makeLet
                                                      ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30376| 
                                                          if ( 
                                                            begin
                                                                trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30376)
                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                            end
                                                           ) then
                                                              begin
                                                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30376)
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end
                                                          else
                                                            false
                                                          end
                                                      } ; ___lambda.call(
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 286 );
                                                                _string_QUMARK(
                                                                    begin
                                                                        trampCall(_f)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:286"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                                 )
                                                    end
                                                end
                                            } ; ___lambda.call(
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 286 );
                                                      _number_QUMARK(
                                                          begin
                                                              trampCall(_f)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:286"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                                       )
                                          end
                                      end
                                  } ; ___lambda.call(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 286 );
                                            _procedure_QUMARK(
                                                begin
                                                    trampCall(_f)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:286"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                             )
                                end
                               ) then
                                  begin
                                      trampCall(_f)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:287"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 288 );
                                      trampCall( self._list_METHOD(  'list',
                                          begin
                                            if @global_lisp_binding.has_key?('_list') then
                                              trampCall(@_list)
                                            else raise NameError.new( "Error: undefined variable list", "list" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:288"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                          :"quote"                                          ,
                                            begin
                                                trampCall(_f)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:288"] + __e.backtrace ) ; raise __e
                                            end
                                      ]
                                                   ))
                                  end
                              end
                          else
                              if ( 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 289 );
                                    trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                        begin
                                          if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                            trampCall(@_eqv_QUMARK)
                                          else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:289"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(_l)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:289"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          begin
                                            if @global_lisp_binding.has_key?('_vector') then
                                              trampCall(@_vector)
                                            else raise NameError.new( "Error: undefined variable vector", "vector" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:289"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 ))
                                end
                               ) then
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 290 );
                                      trampCall( self._apply_METHOD(  'apply',
                                          begin
                                            if @global_lisp_binding.has_key?('_apply') then
                                              trampCall(@_apply)
                                            else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:290"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_l)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:290"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 290 );
                                                trampCall( self._eval_METHOD(  'eval',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_eval') then
                                                        trampCall(@_eval)
                                                      else raise NameError.new( "Error: undefined variable eval", "eval" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:290"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_r)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:290"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end
                                      ]
                                                   ))
                                  end
                              else
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 291 );
                                      trampCall( self._list_METHOD(  'list',
                                          begin
                                            if @global_lisp_binding.has_key?('_list') then
                                              trampCall(@_list)
                                            else raise NameError.new( "Error: undefined variable list", "list" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:291"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                          :"cons"                                          ,
                                            begin
                                                trampCall(_l)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:291"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            begin
                                                trampCall(_r)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:291"] + __e.backtrace ) ; raise __e
                                            end
                                      ]
                                                   ))
                                  end
                              end
                          end
                      }
                    _mappend                     = 
                      Proc.new { |_f,_l,_r| 
                          if ( 
                            begin #makeLet
                              ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30377| 
                                  if ( 
                                    begin
                                        trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30377)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                   ) then
                                      begin
                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30377)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  else
                                      begin #makeLet
                                        ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30378| 
                                            if ( 
                                              begin
                                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30378)
                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                              end
                                             ) then
                                                begin
                                                    trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30378)
                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                end
                                            else
                                              false
                                            end
                                        } ; ___lambda.call(
                                              if ( 
                                                begin
                                                  embedBacktraceInfo( "", 1 );
                                                    _not(
                                                        begin
                                                          embedBacktraceInfo( "", 1 );
                                                            _eq_QUMARK(
                                                              false                                                              ,
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 297 );
                                                                    _pair_QUMARK(
                                                                        begin
                                                                            trampCall(_r)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:297"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    )
                                                                end
                                                            )
                                                        end
                                                    )
                                                end
                                               ) then
                                                  if ( 
                                                    begin
                                                      embedBacktraceInfo( "", 1 );
                                                        _not(
                                                            begin
                                                              embedBacktraceInfo( "", 1 );
                                                                _eq_QUMARK(
                                                                  false                                                                  ,
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 298 );
                                                                        _eq_QUMARK(
                                                                            begin
                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 298 );
                                                                                _car(
                                                                                    begin
                                                                                        trampCall(_r)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:298"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                )
                                                                            end                                                                          ,
                                                                          :"quote"
                                                                        )
                                                                    end
                                                                )
                                                            end
                                                        )
                                                    end
                                                   ) then
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 299 );
                                                          _eq_QUMARK(
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 299 );
                                                                  _car(
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 299 );
                                                                          _cdr(
                                                                              begin
                                                                                  trampCall(_r)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:299"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          )
                                                                      end
                                                                  )
                                                              end                                                            ,
                                                            Cell.new()
                                                          )
                                                      end
                                                  else
                                                    false
                                                  end
                                              else
                                                false
                                              end
                                                   )
                                      end
                                  end
                              } ; ___lambda.call(
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 296 );
                                        _null_QUMARK(
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 296 );
                                                _cdr(
                                                    begin
                                                        trampCall(_f)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:296"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                        )
                                    end
                                         )
                            end
                           ) then
                              begin
                                  trampCall(_l)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:300"] + __e.backtrace ) ; raise __e
                              end
                          else
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 301 );
                                  trampCall( self._list_METHOD(  'list',
                                      begin
                                        if @global_lisp_binding.has_key?('_list') then
                                          trampCall(@_list)
                                        else raise NameError.new( "Error: undefined variable list", "list" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:301"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                      :"append"                                      ,
                                        begin
                                            trampCall(_l)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:301"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_r)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:301"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               ))
                              end
                          end
                      }
                    _foo                     = 
                      Proc.new { |_level,_form| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 304 );
                                _not(
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 304 );
                                        _pair_QUMARK(
                                            begin
                                                trampCall(_form)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:304"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    end
                                )
                            end
                           ) then
                                if ( 
                                  begin #makeLet
                                    ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30382| 
                                        if ( 
                                          begin
                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30382)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                         ) then
                                            begin
                                                trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30382)
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end
                                        else
                                            begin #makeLet
                                              ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30383| 
                                                  if ( 
                                                    begin
                                                        trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30383)
                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                    end
                                                   ) then
                                                      begin
                                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30383)
                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                      end
                                                  else
                                                      begin #makeLet
                                                        ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30384| 
                                                            if ( 
                                                              begin
                                                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30384)
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end
                                                             ) then
                                                                begin
                                                                    trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30384)
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end
                                                            else
                                                              false
                                                            end
                                                        } ; ___lambda.call(
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 305 );
                                                                  _string_QUMARK(
                                                                      begin
                                                                          trampCall(_form)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:305"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                  )
                                                              end
                                                                   )
                                                      end
                                                  end
                                              } ; ___lambda.call(
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 305 );
                                                        _number_QUMARK(
                                                            begin
                                                                trampCall(_form)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:305"] + __e.backtrace ) ; raise __e
                                                            end
                                                        )
                                                    end
                                                         )
                                            end
                                        end
                                    } ; ___lambda.call(
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 305 );
                                              _procedure_QUMARK(
                                                  begin
                                                      trampCall(_form)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:305"] + __e.backtrace ) ; raise __e
                                                  end
                                              )
                                          end
                                               )
                                  end
                                 ) then
                                    begin
                                        trampCall(_form)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:306"] + __e.backtrace ) ; raise __e
                                    end
                                else
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 307 );
                                        trampCall( self._list_METHOD(  'list',
                                            begin
                                              if @global_lisp_binding.has_key?('_list') then
                                                trampCall(@_list)
                                              else raise NameError.new( "Error: undefined variable list", "list" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:307"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                            :"quote"                                            ,
                                              begin
                                                  trampCall(_form)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:307"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     ))
                                    end
                                end
                          else
                              if ( 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 309 );
                                    _eq_QUMARK(
                                      :"quasiquote"                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 309 );
                                            _car(
                                                begin
                                                    trampCall(_form)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                               ) then
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 310 );
                                        trampCall( callProcedure(  '_mcons',  'mcons',
                                            begin
                                                trampCall(_mcons)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:310"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_form)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:310"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                            Cell.new(:"quote",Cell.new(:"quasiquote"))                                            ,
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 310 );
                                                  trampCall( callProcedure(  '_foo',  'foo',
                                                      begin
                                                          trampCall(_foo)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:310"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 310 );
                                                            ( 
                                                              begin
                                                                  trampCall(_level)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:310"] + __e.backtrace ) ; raise __e
                                                              end                                                            +
                                                            1
                                                             ) 
                                                        end                                                      ,
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 310 );
                                                            _cdr(
                                                                begin
                                                                    trampCall(_form)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:310"] + __e.backtrace ) ; raise __e
                                                                end
                                                            )
                                                        end
                                                  ]
                                                               ))
                                              end
                                        ]
                                                     ))
                                    end
                              else
                                  if ( 
                                  true
                                   ) then
                                        if ( 
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 311 );
                                              trampCall( self._zero_QUMARK_METHOD(  'zero?',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_zero_QUMARK') then
                                                      trampCall(@_zero_QUMARK)
                                                    else raise NameError.new( "Error: undefined variable zero?", "zero?" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:311"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(_level)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:311"] + __e.backtrace ) ; raise __e
                                                    end
                                              ]
                                                           ))
                                          end
                                         ) then
                                            if ( 
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 312 );
                                                  _eq_QUMARK(
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 312 );
                                                          _car(
                                                              begin
                                                                  trampCall(_form)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:312"] + __e.backtrace ) ; raise __e
                                                              end
                                                          )
                                                      end                                                    ,
                                                    :"unquote"
                                                  )
                                              end
                                             ) then
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 312 );
                                                      _car(
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 312 );
                                                              _cdr(
                                                                  begin
                                                                      trampCall(_form)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:312"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              )
                                                          end
                                                      )
                                                  end
                                            else
                                                if ( 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 313 );
                                                      _eq_QUMARK(
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 313 );
                                                              _car(
                                                                  begin
                                                                      trampCall(_form)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:313"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              )
                                                          end                                                        ,
                                                        :"unquote-splicing"
                                                      )
                                                  end
                                                 ) then
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 314 );
                                                          trampCall( self.__PAMARKraise_METHOD(  '%raise',
                                                              begin
                                                                if @global_lisp_binding.has_key?('__PAMARKraise') then
                                                                  trampCall(@__PAMARKraise)
                                                                else raise NameError.new( "Error: undefined variable %raise", "%raise" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:314"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                          [
                                                                begin
                                                                    trampCall(RuntimeError)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:314"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 314 );
                                                                    ( 
                                                                    "Error: Unquote-splicing wasn't in a list: "                                                                    +
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 314 );
                                                                          _write_MIMARKto_MIMARKstring(
                                                                              begin
                                                                                  trampCall(_form)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:314"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          )
                                                                      end
                                                                     ) 
                                                                end                                                              ,
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 315 );
                                                                    trampCall( self._sprintf_METHOD(  'sprintf',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_sprintf') then
                                                                            trampCall(@_sprintf)
                                                                          else raise NameError.new( "Error: undefined variable sprintf", "sprintf" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:315"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                    [
                                                                        "%s:%s outside list."                                                                        ,
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 315 );
                                                                              trampCall( self.__ASMARKFILE_ASMARK_METHOD(  '*FILE*',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('__ASMARKFILE_ASMARK') then
                                                                                      trampCall(@__ASMARKFILE_ASMARK)
                                                                                    else raise NameError.new( "Error: undefined variable *FILE*", "*FILE*" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:315"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                              [
                                                                              ]
                                                                                           ))
                                                                          end                                                                        ,
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 315 );
                                                                              trampCall( self.__ASMARKLINE_ASMARK_METHOD(  '*LINE*',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('__ASMARKLINE_ASMARK') then
                                                                                      trampCall(@__ASMARKLINE_ASMARK)
                                                                                    else raise NameError.new( "Error: undefined variable *LINE*", "*LINE*" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:315"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                              [
                                                                              ]
                                                                                           ))
                                                                          end
                                                                    ]
                                                                                 ))
                                                                end
                                                          ]
                                                                       ))
                                                      end
                                                else
                                                    if ( 
                                                      if ( 
                                                        begin
                                                          embedBacktraceInfo( "", 1 );
                                                            _not(
                                                                begin
                                                                  embedBacktraceInfo( "", 1 );
                                                                    _eq_QUMARK(
                                                                      false                                                                      ,
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 316 );
                                                                            _pair_QUMARK(
                                                                                begin
                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 316 );
                                                                                    _car(
                                                                                        begin
                                                                                            trampCall(_form)
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:316"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                    )
                                                                                end
                                                                            )
                                                                        end
                                                                    )
                                                                end
                                                            )
                                                        end
                                                       ) then
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 317 );
                                                              _eq_QUMARK(
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 317 );
                                                                      _car(
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 317 );
                                                                              _car(
                                                                                  begin
                                                                                      trampCall(_form)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:317"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                              )
                                                                          end
                                                                      )
                                                                  end                                                                ,
                                                                :"unquote-splicing"
                                                              )
                                                          end
                                                      else
                                                        false
                                                      end
                                                     ) then
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 318 );
                                                              trampCall( callProcedure(  '_mappend',  'mappend',
                                                                  begin
                                                                      trampCall(_mappend)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:318"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                    begin
                                                                        trampCall(_form)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:318"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 318 );
                                                                        _car(
                                                                            begin
                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 318 );
                                                                                _cdr(
                                                                                    begin
                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 318 );
                                                                                        _car(
                                                                                            begin
                                                                                                trampCall(_form)
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:318"] + __e.backtrace ) ; raise __e
                                                                                            end
                                                                                        )
                                                                                    end
                                                                                )
                                                                            end
                                                                        )
                                                                    end                                                                  ,
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 319 );
                                                                        trampCall( callProcedure(  '_foo',  'foo',
                                                                            begin
                                                                                trampCall(_foo)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:319"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                  trampCall(_level)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:319"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              begin
                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 319 );
                                                                                  _cdr(
                                                                                      begin
                                                                                          trampCall(_form)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:319"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                  )
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end
                                                              ]
                                                                           ))
                                                          end
                                                    else
                                                        if ( 
                                                        true
                                                         ) then
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 320 );
                                                                  trampCall( callProcedure(  '_mcons',  'mcons',
                                                                      begin
                                                                          trampCall(_mcons)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:320"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                  [
                                                                        begin
                                                                            trampCall(_form)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:320"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 320 );
                                                                            trampCall( callProcedure(  '_foo',  'foo',
                                                                                begin
                                                                                    trampCall(_foo)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:320"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  begin
                                                                                      trampCall(_level)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:320"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  begin
                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 320 );
                                                                                      _car(
                                                                                          begin
                                                                                              trampCall(_form)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:320"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                      )
                                                                                  end
                                                                            ]
                                                                                         ))
                                                                        end                                                                      ,
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 321 );
                                                                            trampCall( callProcedure(  '_foo',  'foo',
                                                                                begin
                                                                                    trampCall(_foo)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:321"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  begin
                                                                                      trampCall(_level)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:321"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  begin
                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 321 );
                                                                                      _cdr(
                                                                                          begin
                                                                                              trampCall(_form)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:321"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                      )
                                                                                  end
                                                                            ]
                                                                                         ))
                                                                        end
                                                                  ]
                                                                               ))
                                                              end
                                                        else
                                                            Cell.new()
                                                        end
                                                    end
                                                end
                                            end
                                        else
                                            if ( 
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 322 );
                                                  _eq_QUMARK(
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 322 );
                                                          _car(
                                                              begin
                                                                  trampCall(_form)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:322"] + __e.backtrace ) ; raise __e
                                                              end
                                                          )
                                                      end                                                    ,
                                                    :"unquote"
                                                  )
                                              end
                                             ) then
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 323 );
                                                      trampCall( callProcedure(  '_mcons',  'mcons',
                                                          begin
                                                              trampCall(_mcons)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:323"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_form)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:323"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                          Cell.new(:"quote",Cell.new(:"unquote"))                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 323 );
                                                                trampCall( callProcedure(  '_foo',  'foo',
                                                                    begin
                                                                        trampCall(_foo)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:323"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 323 );
                                                                          ( 
                                                                            begin
                                                                                trampCall(_level)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:323"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          -
                                                                          1
                                                                           ) 
                                                                      end                                                                    ,
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 324 );
                                                                          _cdr(
                                                                              begin
                                                                                  trampCall(_form)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:324"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          )
                                                                      end
                                                                ]
                                                                             ))
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                            else
                                                if ( 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 325 );
                                                      _eq_QUMARK(
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 325 );
                                                              _car(
                                                                  begin
                                                                      trampCall(_form)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:325"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              )
                                                          end                                                        ,
                                                        :"unquote-splicing"
                                                      )
                                                  end
                                                 ) then
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 326 );
                                                          trampCall( callProcedure(  '_mcons',  'mcons',
                                                              begin
                                                                  trampCall(_mcons)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:326"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                          [
                                                                begin
                                                                    trampCall(_form)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:326"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                              Cell.new(:"quote",Cell.new(:"unquote-splicing"))                                                              ,
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 327 );
                                                                    trampCall( callProcedure(  '_foo',  'foo',
                                                                        begin
                                                                            trampCall(_foo)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:327"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                    [
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 327 );
                                                                              ( 
                                                                                begin
                                                                                    trampCall(_level)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:327"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              -
                                                                              1
                                                                               ) 
                                                                          end                                                                        ,
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 327 );
                                                                              _cdr(
                                                                                  begin
                                                                                      trampCall(_form)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:327"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                              )
                                                                          end
                                                                    ]
                                                                                 ))
                                                                end
                                                          ]
                                                                       ))
                                                      end
                                                else
                                                    if ( 
                                                    true
                                                     ) then
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 328 );
                                                              trampCall( callProcedure(  '_mcons',  'mcons',
                                                                  begin
                                                                      trampCall(_mcons)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:328"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                    begin
                                                                        trampCall(_form)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:328"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 328 );
                                                                        trampCall( callProcedure(  '_foo',  'foo',
                                                                            begin
                                                                                trampCall(_foo)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:328"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                  trampCall(_level)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:328"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              begin
                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 328 );
                                                                                  _car(
                                                                                      begin
                                                                                          trampCall(_form)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:328"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                  )
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end                                                                  ,
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 329 );
                                                                        trampCall( callProcedure(  '_foo',  'foo',
                                                                            begin
                                                                                trampCall(_foo)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:329"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                  trampCall(_level)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:329"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              begin
                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 329 );
                                                                                  _cdr(
                                                                                      begin
                                                                                          trampCall(_form)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:329"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                  )
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end
                                                              ]
                                                                           ))
                                                          end
                                                    else
                                                        Cell.new()
                                                    end
                                                end
                                            end
                                        end
                                  else
                                      Cell.new()
                                  end
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 330 );
                        trampCall( callProcedure(  '_foo',  'foo',
                            begin
                                trampCall(_foo)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:330"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                            0                            ,
                              begin
                                  trampCall(_l)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:330"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     ))
                    end
                } ; ___lambda.call(
                nil,nil,nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._unquote_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_unquote', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_unquote'] = self.method( :_unquote_METHOD )
    @_unquote = 
    trampCall(
          LispMacro.new { |_lst| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 334 );
                  trampCall( self.__PAMARKraise_METHOD(  '%raise',
                      begin
                        if @global_lisp_binding.has_key?('__PAMARKraise') then
                          trampCall(@__PAMARKraise)
                        else raise NameError.new( "Error: undefined variable %raise", "%raise" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:334"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                            trampCall(RuntimeError)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:334"] + __e.backtrace ) ; raise __e
                        end                      ,
                      "Error: unquote appeared outside quasiquote"                      ,
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 334 );
                            trampCall( self._sprintf_METHOD(  'sprintf',
                                begin
                                  if @global_lisp_binding.has_key?('_sprintf') then
                                    trampCall(@_sprintf)
                                  else raise NameError.new( "Error: undefined variable sprintf", "sprintf" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:334"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                "%s:%s outside quasiquote"                                ,
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 334 );
                                      trampCall( self.__ASMARKFILE_ASMARK_METHOD(  '*FILE*',
                                          begin
                                            if @global_lisp_binding.has_key?('__ASMARKFILE_ASMARK') then
                                              trampCall(@__ASMARKFILE_ASMARK)
                                            else raise NameError.new( "Error: undefined variable *FILE*", "*FILE*" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:334"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                      ]
                                                   ))
                                  end                                ,
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 334 );
                                      trampCall( self.__ASMARKLINE_ASMARK_METHOD(  '*LINE*',
                                          begin
                                            if @global_lisp_binding.has_key?('__ASMARKLINE_ASMARK') then
                                              trampCall(@__ASMARKLINE_ASMARK)
                                            else raise NameError.new( "Error: undefined variable *LINE*", "*LINE*" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:334"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                      ]
                                                   ))
                                  end
                            ]
                                         ))
                        end
                  ]
                               ))
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._unquote_MIMARKsplicing_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_unquote_MIMARKsplicing', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_unquote_MIMARKsplicing'] = self.method( :_unquote_MIMARKsplicing_METHOD )
    @_unquote_MIMARKsplicing = 
    trampCall(
          LispMacro.new { |_lst| 
              begin
                embedBacktraceInfo( "", 1 );
                  trampCall( self.__PAMARKraise_METHOD(  '%raise',
                      begin
                        if @global_lisp_binding.has_key?('__PAMARKraise') then
                          trampCall(@__PAMARKraise)
                        else raise NameError.new( "Error: undefined variable %raise", "%raise" ) end
                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                            trampCall(RuntimeError)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:339"] + __e.backtrace ) ; raise __e
                        end                      ,
                      "Error: unquote-splicing appeared outside quasiquote"                      ,
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 339 );
                            trampCall( self._sprintf_METHOD(  'sprintf',
                                begin
                                  if @global_lisp_binding.has_key?('_sprintf') then
                                    trampCall(@_sprintf)
                                  else raise NameError.new( "Error: undefined variable sprintf", "sprintf" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:339"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                "%s:%s outside quasiquote"                                ,
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 339 );
                                      trampCall( self.__ASMARKFILE_ASMARK_METHOD(  '*FILE*',
                                          begin
                                            if @global_lisp_binding.has_key?('__ASMARKFILE_ASMARK') then
                                              trampCall(@__ASMARKFILE_ASMARK)
                                            else raise NameError.new( "Error: undefined variable *FILE*", "*FILE*" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:339"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                      ]
                                                   ))
                                  end                                ,
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 339 );
                                      trampCall( self.__ASMARKLINE_ASMARK_METHOD(  '*LINE*',
                                          begin
                                            if @global_lisp_binding.has_key?('__ASMARKLINE_ASMARK') then
                                              trampCall(@__ASMARKLINE_ASMARK)
                                            else raise NameError.new( "Error: undefined variable *LINE*", "*LINE*" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:339"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                      ]
                                                   ))
                                  end
                            ]
                                         ))
                        end
                  ]
                               ))
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._when_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_when', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_when'] = self.method( :_when_METHOD )
    @_when = 
    trampCall(
          LispMacro.new { |*__rest__| _form = __rest__[0] ;  
              begin
                embedBacktraceInfo( "", 1 );
                  _cons(
                    :"if"                    ,
                      begin
                        embedBacktraceInfo( "", 1 );
                          _cons(
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 344 );
                                  _car(
                                      begin
                                          trampCall(_form)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:344"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end                            ,
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _cons(
                                      begin
                                        embedBacktraceInfo( "", 1 );
                                          _cons(
                                            :"begin"                                            ,
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 344 );
                                                  _cdr(
                                                      begin
                                                          trampCall(_form)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:344"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end
                                          )
                                      end                                    ,
                                    Cell.new()
                                  )
                              end
                          )
                      end
                  )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._unless_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_unless', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_unless'] = self.method( :_unless_METHOD )
    @_unless = 
    trampCall(
          LispMacro.new { |*__rest__| _form = __rest__[0] ;  
              begin
                embedBacktraceInfo( "", 1 );
                  _cons(
                    :"if"                    ,
                      begin
                        embedBacktraceInfo( "", 1 );
                          _cons(
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _cons(
                                    :"not"                                    ,
                                      begin
                                        embedBacktraceInfo( "", 1 );
                                          _cons(
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 348 );
                                                  _car(
                                                      begin
                                                          trampCall(_form)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:348"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end                                            ,
                                            Cell.new()
                                          )
                                      end
                                  )
                              end                            ,
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _cons(
                                      begin
                                        embedBacktraceInfo( "", 1 );
                                          _cons(
                                            :"begin"                                            ,
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 348 );
                                                  _cdr(
                                                      begin
                                                          trampCall(_form)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:348"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end
                                          )
                                      end                                    ,
                                    Cell.new()
                                  )
                              end
                          )
                      end
                  )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._while_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_while', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_while'] = self.method( :_while_METHOD )
    @_while = 
    trampCall(
          LispMacro.new { |*__rest__| _form = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |_sym| 
                    begin
                      embedBacktraceInfo( "", 1 );
                        _cons(
                          :"begin"                          ,
                            begin
                              embedBacktraceInfo( "", 1 );
                                _cons(
                                    begin
                                      embedBacktraceInfo( "", 1 );
                                        _cons(
                                          :"define"                                          ,
                                            begin
                                              embedBacktraceInfo( "", 1 );
                                                _cons(
                                                    begin
                                                        trampCall(_sym)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:354"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    begin
                                                      embedBacktraceInfo( "", 1 );
                                                        _cons(
                                                            begin
                                                              embedBacktraceInfo( "", 1 );
                                                                _cons(
                                                                  :"lambda"                                                                  ,
                                                                    begin
                                                                      embedBacktraceInfo( "", 1 );
                                                                        _cons(
                                                                          Cell.new()                                                                          ,
                                                                            begin
                                                                              embedBacktraceInfo( "", 1 );
                                                                                _cons(
                                                                                    begin
                                                                                      embedBacktraceInfo( "", 1 );
                                                                                        _cons(
                                                                                          :"if"                                                                                          ,
                                                                                            begin
                                                                                              embedBacktraceInfo( "", 1 );
                                                                                                _cons(
                                                                                                    begin
                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 356 );
                                                                                                        _car(
                                                                                                            begin
                                                                                                                trampCall(_form)
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:356"] + __e.backtrace ) ; raise __e
                                                                                                            end
                                                                                                        )
                                                                                                    end                                                                                                  ,
                                                                                                    begin
                                                                                                      embedBacktraceInfo( "", 1 );
                                                                                                        _cons(
                                                                                                            begin
                                                                                                              embedBacktraceInfo( "", 1 );
                                                                                                                _cons(
                                                                                                                  :"begin"                                                                                                                  ,
                                                                                                                    begin
                                                                                                                      embedBacktraceInfo( "", 1 );
                                                                                                                        trampCall( self._append_METHOD(  'append',
                                                                                                                            begin
                                                                                                                              if @global_lisp_binding.has_key?('_append') then
                                                                                                                                trampCall(@_append)
                                                                                                                              else raise NameError.new( "Error: undefined variable append", "append" ) end
                                                                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                                            end                                                                                                                          ,
                                                                                                                        [
                                                                                                                              begin
                                                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 357 );
                                                                                                                                  _cdr(
                                                                                                                                      begin
                                                                                                                                          trampCall(_form)
                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:357"] + __e.backtrace ) ; raise __e
                                                                                                                                      end
                                                                                                                                  )
                                                                                                                              end                                                                                                                            ,
                                                                                                                              begin
                                                                                                                                embedBacktraceInfo( "", 1 );
                                                                                                                                  _cons(
                                                                                                                                      begin
                                                                                                                                        embedBacktraceInfo( "", 1 );
                                                                                                                                          _cons(
                                                                                                                                              begin
                                                                                                                                                  trampCall(_sym)
                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:358"] + __e.backtrace ) ; raise __e
                                                                                                                                              end                                                                                                                                            ,
                                                                                                                                            Cell.new()
                                                                                                                                          )
                                                                                                                                      end                                                                                                                                    ,
                                                                                                                                    Cell.new()
                                                                                                                                  )
                                                                                                                              end
                                                                                                                        ]
                                                                                                                                     ))
                                                                                                                    end
                                                                                                                )
                                                                                                            end                                                                                                          ,
                                                                                                          Cell.new()
                                                                                                        )
                                                                                                    end
                                                                                                )
                                                                                            end
                                                                                        )
                                                                                    end                                                                                  ,
                                                                                  Cell.new()
                                                                                )
                                                                            end
                                                                        )
                                                                    end
                                                                )
                                                            end                                                          ,
                                                          Cell.new()
                                                        )
                                                    end
                                                )
                                            end
                                        )
                                    end                                  ,
                                    begin
                                      embedBacktraceInfo( "", 1 );
                                        _cons(
                                            begin
                                              embedBacktraceInfo( "", 1 );
                                                _cons(
                                                    begin
                                                        trampCall(_sym)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:359"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                  Cell.new()
                                                )
                                            end                                          ,
                                          Cell.new()
                                        )
                                    end
                                )
                            end
                        )
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 352 );
                          trampCall( self._gensym_METHOD(  'gensym',
                              begin
                                if @global_lisp_binding.has_key?('_gensym') then
                                  trampCall(@_gensym)
                                else raise NameError.new( "Error: undefined variable gensym", "gensym" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:352"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                          ]
                                       ))
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._until_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_until', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_until'] = self.method( :_until_METHOD )
    @_until = 
    trampCall(
          LispMacro.new { |*__rest__| _form = __rest__[0] ;  
              begin
                embedBacktraceInfo( "", 1 );
                  _cons(
                    :"while"                    ,
                      begin
                        embedBacktraceInfo( "", 1 );
                          _cons(
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _cons(
                                    :"not"                                    ,
                                      begin
                                        embedBacktraceInfo( "", 1 );
                                          _cons(
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 363 );
                                                  _car(
                                                      begin
                                                          trampCall(_form)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:363"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end                                            ,
                                            Cell.new()
                                          )
                                      end
                                  )
                              end                            ,
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 364 );
                                  _cdr(
                                      begin
                                          trampCall(_form)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:364"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                          )
                      end
                  )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._let_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_let', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_let'] = self.method( :_let_METHOD )
    @_let = 
    trampCall(
          LispMacro.new { |*__rest__| _lst = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 371 );
                    _symbol_QUMARK(
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 371 );
                            _car(
                                begin
                                    trampCall(_lst)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:371"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                    )
                end
               ) then
                    if ( 
                      begin #makeLet
                        ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30394| 
                            if ( 
                              begin
                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30394)
                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                              end
                             ) then
                                begin
                                    trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30394)
                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                end
                            else
                                begin #makeLet
                                  ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30395| 
                                      if ( 
                                        begin
                                            trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30395)
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end
                                       ) then
                                          begin
                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30395)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                      else
                                        false
                                      end
                                  } ; ___lambda.call(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 374 );
                                            _not(
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 374 );
                                                    trampCall( self._list_QUMARK_METHOD(  'list?',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                            trampCall(@_list_QUMARK)
                                                          else raise NameError.new( "Error: undefined variable list?", "list?" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:374"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 374 );
                                                              trampCall( self._second_METHOD(  'second',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_second') then
                                                                      trampCall(@_second)
                                                                    else raise NameError.new( "Error: undefined variable second", "second" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:374"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                    begin
                                                                        trampCall(_lst)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:374"] + __e.backtrace ) ; raise __e
                                                                    end
                                                              ]
                                                                           ))
                                                          end
                                                    ]
                                                                 ))
                                                end
                                            )
                                        end
                                             )
                                end
                            end
                        } ; ___lambda.call(
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 373 );
                                  ( 
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 373 );
                                        _length(
                                            begin
                                                trampCall(_lst)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:373"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    end                                  <
                                  3
                                   ) 
                              end
                                   )
                      end
                     ) then
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 375 );
                              trampCall( self.__PAMARKraise_METHOD(  '%raise',
                                  begin
                                    if @global_lisp_binding.has_key?('__PAMARKraise') then
                                      trampCall(@__PAMARKraise)
                                    else raise NameError.new( "Error: undefined variable %raise", "%raise" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:375"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(SyntaxError)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:375"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 376 );
                                        trampCall( self._sprintf_METHOD(  'sprintf',
                                            begin
                                              if @global_lisp_binding.has_key?('_sprintf') then
                                                trampCall(@_sprintf)
                                              else raise NameError.new( "Error: undefined variable sprintf", "sprintf" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:376"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                            "named let requires (let name (bind-list) body ...) form  But got %s"                                            ,
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 376 );
                                                  _write_MIMARKto_MIMARKstring(
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 376 );
                                                          _cons(
                                                            :"let"                                                            ,
                                                              begin
                                                                  trampCall(_lst)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:376"] + __e.backtrace ) ; raise __e
                                                              end
                                                          )
                                                      end
                                                  )
                                              end
                                        ]
                                                     ))
                                    end                                  ,
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 377 );
                                        trampCall( self._sprintf_METHOD(  'sprintf',
                                            begin
                                              if @global_lisp_binding.has_key?('_sprintf') then
                                                trampCall(@_sprintf)
                                              else raise NameError.new( "Error: undefined variable sprintf", "sprintf" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:377"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                            "%s:%s in named let form"                                            ,
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 377 );
                                                  trampCall( self.__ASMARKFILE_ASMARK_METHOD(  '*FILE*',
                                                      begin
                                                        if @global_lisp_binding.has_key?('__ASMARKFILE_ASMARK') then
                                                          trampCall(@__ASMARKFILE_ASMARK)
                                                        else raise NameError.new( "Error: undefined variable *FILE*", "*FILE*" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:377"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                  ]
                                                               ))
                                              end                                            ,
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 377 );
                                                  trampCall( self.__ASMARKLINE_ASMARK_METHOD(  '*LINE*',
                                                      begin
                                                        if @global_lisp_binding.has_key?('__ASMARKLINE_ASMARK') then
                                                          trampCall(@__ASMARKLINE_ASMARK)
                                                        else raise NameError.new( "Error: undefined variable *LINE*", "*LINE*" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:377"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                  ]
                                                               ))
                                              end
                                        ]
                                                     ))
                                    end
                              ]
                                           ))
                          end
                    end
              else
                  if ( 
                  true
                   ) then
                        if ( 
                          begin #makeLet
                            ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30396| 
                                if ( 
                                  begin
                                      trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30396)
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                                 ) then
                                    begin
                                        trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30396)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                else
                                    begin #makeLet
                                      ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30397| 
                                          if ( 
                                            begin
                                                trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30397)
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end
                                           ) then
                                              begin
                                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30397)
                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                              end
                                          else
                                            false
                                          end
                                      } ; ___lambda.call(
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 380 );
                                                _not(
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 380 );
                                                        trampCall( self._list_QUMARK_METHOD(  'list?',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                                trampCall(@_list_QUMARK)
                                                              else raise NameError.new( "Error: undefined variable list?", "list?" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:380"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                        [
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 380 );
                                                                  trampCall( self._first_METHOD(  'first',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_first') then
                                                                          trampCall(@_first)
                                                                        else raise NameError.new( "Error: undefined variable first", "first" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:380"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                  [
                                                                        begin
                                                                            trampCall(_lst)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:380"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                  ]
                                                                               ))
                                                              end
                                                        ]
                                                                     ))
                                                    end
                                                )
                                            end
                                                 )
                                    end
                                end
                            } ; ___lambda.call(
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 379 );
                                      ( 
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 379 );
                                            _length(
                                                begin
                                                    trampCall(_lst)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:379"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end                                      <
                                      2
                                       ) 
                                  end
                                       )
                          end
                         ) then
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 381 );
                                  trampCall( self.__PAMARKraise_METHOD(  '%raise',
                                      begin
                                        if @global_lisp_binding.has_key?('__PAMARKraise') then
                                          trampCall(@__PAMARKraise)
                                        else raise NameError.new( "Error: undefined variable %raise", "%raise" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:381"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(SyntaxError)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:381"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 382 );
                                            trampCall( self._sprintf_METHOD(  'sprintf',
                                                begin
                                                  if @global_lisp_binding.has_key?('_sprintf') then
                                                    trampCall(@_sprintf)
                                                  else raise NameError.new( "Error: undefined variable sprintf", "sprintf" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:382"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                "let requires (let (bind-list) body ...) form  But got %s"                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 382 );
                                                      _write_MIMARKto_MIMARKstring(
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 382 );
                                                              _cons(
                                                                :"let"                                                                ,
                                                                  begin
                                                                      trampCall(_lst)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:382"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              )
                                                          end
                                                      )
                                                  end
                                            ]
                                                         ))
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 383 );
                                            trampCall( self._sprintf_METHOD(  'sprintf',
                                                begin
                                                  if @global_lisp_binding.has_key?('_sprintf') then
                                                    trampCall(@_sprintf)
                                                  else raise NameError.new( "Error: undefined variable sprintf", "sprintf" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:383"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                "%s:%s in named let form"                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 383 );
                                                      trampCall( self.__ASMARKFILE_ASMARK_METHOD(  '*FILE*',
                                                          begin
                                                            if @global_lisp_binding.has_key?('__ASMARKFILE_ASMARK') then
                                                              trampCall(@__ASMARKFILE_ASMARK)
                                                            else raise NameError.new( "Error: undefined variable *FILE*", "*FILE*" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:383"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                      ]
                                                                   ))
                                                  end                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 383 );
                                                      trampCall( self.__ASMARKLINE_ASMARK_METHOD(  '*LINE*',
                                                          begin
                                                            if @global_lisp_binding.has_key?('__ASMARKLINE_ASMARK') then
                                                              trampCall(@__ASMARKLINE_ASMARK)
                                                            else raise NameError.new( "Error: undefined variable *LINE*", "*LINE*" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:383"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                      ]
                                                                   ))
                                                  end
                                            ]
                                                         ))
                                        end
                                  ]
                                               ))
                              end
                        end
                  else
                      Cell.new()
                  end
              end
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 386 );
                    _symbol_QUMARK(
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 386 );
                            _car(
                                begin
                                    trampCall(_lst)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:386"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                    )
                end
               ) then
                  begin
                    embedBacktraceInfo( "", 1 );
                      _cons(
                        :"letrec"                        ,
                          begin
                            embedBacktraceInfo( "", 1 );
                              _cons(
                                  begin
                                    embedBacktraceInfo( "", 1 );
                                      _cons(
                                          begin
                                            embedBacktraceInfo( "", 1 );
                                              _cons(
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 388 );
                                                      trampCall( self._first_METHOD(  'first',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_first') then
                                                              trampCall(@_first)
                                                            else raise NameError.new( "Error: undefined variable first", "first" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:388"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_lst)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:388"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   ))
                                                  end                                                ,
                                                  begin
                                                    embedBacktraceInfo( "", 1 );
                                                      _cons(
                                                          begin
                                                            embedBacktraceInfo( "", 1 );
                                                              _cons(
                                                                :"lambda"                                                                ,
                                                                  begin
                                                                    embedBacktraceInfo( "", 1 );
                                                                      _cons(
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 389 );
                                                                              trampCall( self._map_METHOD(  'map',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_map') then
                                                                                      trampCall(@_map)
                                                                                    else raise NameError.new( "Error: undefined variable map", "map" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:389"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                              [
                                                                                    Proc.new { |_x| 
                                                                                        begin
                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 391 );
                                                                                            trampCall( self._first_METHOD(  'first',
                                                                                                begin
                                                                                                  if @global_lisp_binding.has_key?('_first') then
                                                                                                    trampCall(@_first)
                                                                                                  else raise NameError.new( "Error: undefined variable first", "first" ) end
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:391"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,
                                                                                            [
                                                                                                  begin
                                                                                                      trampCall(_x)
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:391"] + __e.backtrace ) ; raise __e
                                                                                                  end
                                                                                            ]
                                                                                                         ))
                                                                                        end
                                                                                    }                                                                                  ,
                                                                                    begin
                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 392 );
                                                                                        trampCall( self._second_METHOD(  'second',
                                                                                            begin
                                                                                              if @global_lisp_binding.has_key?('_second') then
                                                                                                trampCall(@_second)
                                                                                              else raise NameError.new( "Error: undefined variable second", "second" ) end
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:392"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,
                                                                                        [
                                                                                              begin
                                                                                                  trampCall(_lst)
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:392"] + __e.backtrace ) ; raise __e
                                                                                              end
                                                                                        ]
                                                                                                     ))
                                                                                    end
                                                                              ]
                                                                                           ))
                                                                          end                                                                        ,
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 393 );
                                                                              trampCall( self._cddr_METHOD(  'cddr',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_cddr') then
                                                                                      trampCall(@_cddr)
                                                                                    else raise NameError.new( "Error: undefined variable cddr", "cddr" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:393"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                              [
                                                                                    begin
                                                                                        trampCall(_lst)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:393"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                              ]
                                                                                           ))
                                                                          end
                                                                      )
                                                                  end
                                                              )
                                                          end                                                        ,
                                                        Cell.new()
                                                      )
                                                  end
                                              )
                                          end                                        ,
                                        Cell.new()
                                      )
                                  end                                ,
                                  begin
                                    embedBacktraceInfo( "", 1 );
                                      _cons(
                                          begin
                                            embedBacktraceInfo( "", 1 );
                                              _cons(
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 394 );
                                                      trampCall( self._first_METHOD(  'first',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_first') then
                                                              trampCall(@_first)
                                                            else raise NameError.new( "Error: undefined variable first", "first" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:394"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_lst)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:394"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   ))
                                                  end                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 395 );
                                                      trampCall( self._map_METHOD(  'map',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_map') then
                                                              trampCall(@_map)
                                                            else raise NameError.new( "Error: undefined variable map", "map" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:395"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            Proc.new { |_x| 
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 397 );
                                                                    trampCall( self._second_METHOD(  'second',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_second') then
                                                                            trampCall(@_second)
                                                                          else raise NameError.new( "Error: undefined variable second", "second" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:397"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                    [
                                                                          begin
                                                                              trampCall(_x)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:397"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                    ]
                                                                                 ))
                                                                end
                                                            }                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 398 );
                                                                trampCall( self._second_METHOD(  'second',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_second') then
                                                                        trampCall(@_second)
                                                                      else raise NameError.new( "Error: undefined variable second", "second" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:398"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                      begin
                                                                          trampCall(_lst)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:398"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                ]
                                                                             ))
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                              )
                                          end                                        ,
                                        Cell.new()
                                      )
                                  end
                              )
                          end
                      )
                  end
              else
                  begin
                    embedBacktraceInfo( "", 1 );
                      _cons(
                        :"%let"                        ,
                          begin
                              trampCall(_lst)
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:401"] + __e.backtrace ) ; raise __e
                          end
                      )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._if_MIMARKlet1_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_if_MIMARKlet1', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_if_MIMARKlet1'] = self.method( :_if_MIMARKlet1_METHOD )
    @_if_MIMARKlet1 = 
    trampCall(
          LispMacro.new { |_var,__expr,__then,*__rest__| __else = __rest__[0] ;  
              begin
                embedBacktraceInfo( "", 1 );
                  _cons(
                    :"let1"                    ,
                      begin
                        embedBacktraceInfo( "", 1 );
                          _cons(
                              begin
                                  trampCall(_var)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:406"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _cons(
                                      begin
                                          trampCall(__expr)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:406"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      begin
                                        embedBacktraceInfo( "", 1 );
                                          _cons(
                                              begin
                                                embedBacktraceInfo( "", 1 );
                                                  _cons(
                                                    :"if"                                                    ,
                                                      begin
                                                        embedBacktraceInfo( "", 1 );
                                                          _cons(
                                                              begin
                                                                  trampCall(_var)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:407"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              begin
                                                                embedBacktraceInfo( "", 1 );
                                                                  _cons(
                                                                      begin
                                                                          trampCall(__then)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:407"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      begin
                                                                          trampCall(__else)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:407"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                  )
                                                              end
                                                          )
                                                      end
                                                  )
                                              end                                            ,
                                            Cell.new()
                                          )
                                      end
                                  )
                              end
                          )
                      end
                  )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._push_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_push_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_push_EXMARK'] = self.method( :_push_EXMARK_METHOD )
    @_push_EXMARK = 
    trampCall(
          LispMacro.new { |__lst,__val| 
              begin
                embedBacktraceInfo( "", 1 );
                  _cons(
                    :"set!"                    ,
                      begin
                        embedBacktraceInfo( "", 1 );
                          _cons(
                              begin
                                  trampCall(__lst)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:412"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _cons(
                                      begin
                                        embedBacktraceInfo( "", 1 );
                                          _cons(
                                            :"append"                                            ,
                                              begin
                                                embedBacktraceInfo( "", 1 );
                                                  _cons(
                                                      begin
                                                        embedBacktraceInfo( "", 1 );
                                                          _cons(
                                                            :"list"                                                            ,
                                                              begin
                                                                embedBacktraceInfo( "", 1 );
                                                                  _cons(
                                                                      begin
                                                                          trampCall(__val)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:412"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                    Cell.new()
                                                                  )
                                                              end
                                                          )
                                                      end                                                    ,
                                                      begin
                                                        embedBacktraceInfo( "", 1 );
                                                          _cons(
                                                              begin
                                                                  trampCall(__lst)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:412"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                            Cell.new()
                                                          )
                                                      end
                                                  )
                                              end
                                          )
                                      end                                    ,
                                    Cell.new()
                                  )
                              end
                          )
                      end
                  )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._errorf_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_errorf', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_errorf'] = self.method( :_errorf_METHOD )
    @_errorf = 
    trampCall(
          LispMacro.new { |_format,*__rest__| _args = __rest__[0] ;  
              begin
                embedBacktraceInfo( "", 1 );
                  _cons(
                    :"error"                    ,
                      begin
                        embedBacktraceInfo( "", 1 );
                          _cons(
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _cons(
                                    :"sprintf"                                    ,
                                      begin
                                        embedBacktraceInfo( "", 1 );
                                          _cons(
                                              begin
                                                  trampCall(_format)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:420"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              begin
                                                  trampCall(_args)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:420"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                  )
                              end                            ,
                            Cell.new()
                          )
                      end
                  )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._get_MIMARKoptional_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_get_MIMARKoptional', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_get_MIMARKoptional'] = self.method( :_get_MIMARKoptional_METHOD )
    @_get_MIMARKoptional = 
    trampCall(
          LispMacro.new { |_restarg,_default| 
              begin #makeLet
                ___lambda = lambda { |__restarg| 
                    begin
                      embedBacktraceInfo( "", 1 );
                        _cons(
                          :"let1"                          ,
                            begin
                              embedBacktraceInfo( "", 1 );
                                _cons(
                                    begin
                                        trampCall(__restarg)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:429"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    begin
                                      embedBacktraceInfo( "", 1 );
                                        _cons(
                                            begin
                                                trampCall(_restarg)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:429"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            begin
                                              embedBacktraceInfo( "", 1 );
                                                _cons(
                                                    begin
                                                      embedBacktraceInfo( "", 1 );
                                                        _cons(
                                                          :"if"                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "", 1 );
                                                                _cons(
                                                                    begin
                                                                      embedBacktraceInfo( "", 1 );
                                                                        _cons(
                                                                          :"null?"                                                                          ,
                                                                            begin
                                                                              embedBacktraceInfo( "", 1 );
                                                                                _cons(
                                                                                    begin
                                                                                        trampCall(__restarg)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:430"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                  Cell.new()
                                                                                )
                                                                            end
                                                                        )
                                                                    end                                                                  ,
                                                                    begin
                                                                      embedBacktraceInfo( "", 1 );
                                                                        _cons(
                                                                            begin
                                                                                trampCall(_default)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:431"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            begin
                                                                              embedBacktraceInfo( "", 1 );
                                                                                _cons(
                                                                                    begin
                                                                                      embedBacktraceInfo( "", 1 );
                                                                                        _cons(
                                                                                          :"car"                                                                                          ,
                                                                                            begin
                                                                                              embedBacktraceInfo( "", 1 );
                                                                                                _cons(
                                                                                                    begin
                                                                                                        trampCall(__restarg)
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:432"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                  Cell.new()
                                                                                                )
                                                                                            end
                                                                                        )
                                                                                    end                                                                                  ,
                                                                                  Cell.new()
                                                                                )
                                                                            end
                                                                        )
                                                                    end
                                                                )
                                                            end
                                                        )
                                                    end                                                  ,
                                                  Cell.new()
                                                )
                                            end
                                        )
                                    end
                                )
                            end
                        )
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 428 );
                          trampCall( self._gensym_METHOD(  'gensym',
                              begin
                                if @global_lisp_binding.has_key?('_gensym') then
                                  trampCall(@_gensym)
                                else raise NameError.new( "Error: undefined variable gensym", "gensym" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:428"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                          ]
                                       ))
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._check_MIMARKarg_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_check_MIMARKarg', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_check_MIMARKarg'] = self.method( :_check_MIMARKarg_METHOD )
    @_check_MIMARKarg = 
    trampCall(
          LispMacro.new { |_a,_b,*__rest__| _c = __rest__[0] ;  
              begin
                embedBacktraceInfo( "", 1 );
                  _cons(
                    :"begin"                    ,
                    Cell.new()
                  )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._do_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_do', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_do'] = self.method( :_do_METHOD )
    @_do = 
    trampCall(
          LispMacro.new { |*__rest__| _do_MIMARKmacro = __rest__[0] ;  
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 448 );
                  trampCall( self._apply_METHOD(  'apply',
                      begin
                        if @global_lisp_binding.has_key?('_apply') then
                          trampCall(@_apply)
                        else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:448"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        Proc.new { |_vars,_endtest,*__rest__| _body = __rest__[0] ;  
                            begin #makeLet
                              ___lambda = lambda { |_do_MIMARKloop| 
                                  begin
                                    embedBacktraceInfo( "", 1 );
                                      _cons(
                                        :"letrec"                                        ,
                                          begin
                                            embedBacktraceInfo( "", 1 );
                                              _cons(
                                                  begin
                                                    embedBacktraceInfo( "", 1 );
                                                      _cons(
                                                          begin
                                                            embedBacktraceInfo( "", 1 );
                                                              _cons(
                                                                  begin
                                                                      trampCall(_do_MIMARKloop)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:450"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  begin
                                                                    embedBacktraceInfo( "", 1 );
                                                                      _cons(
                                                                          begin
                                                                            embedBacktraceInfo( "", 1 );
                                                                              _cons(
                                                                                :"lambda"                                                                                ,
                                                                                  begin
                                                                                    embedBacktraceInfo( "", 1 );
                                                                                      _cons(
                                                                                          begin
                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 451 );
                                                                                              trampCall( self._map_METHOD(  'map',
                                                                                                  begin
                                                                                                    if @global_lisp_binding.has_key?('_map') then
                                                                                                      trampCall(@_map)
                                                                                                    else raise NameError.new( "Error: undefined variable map", "map" ) end
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:451"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,
                                                                                              [
                                                                                                    Proc.new { |_x| 
                                                                                                        if ( 
                                                                                                          begin
                                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 452 );
                                                                                                              _pair_QUMARK(
                                                                                                                  begin
                                                                                                                      trampCall(_x)
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:452"] + __e.backtrace ) ; raise __e
                                                                                                                  end
                                                                                                              )
                                                                                                          end
                                                                                                         ) then
                                                                                                            begin
                                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 452 );
                                                                                                                _car(
                                                                                                                    begin
                                                                                                                        trampCall(_x)
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:452"] + __e.backtrace ) ; raise __e
                                                                                                                    end
                                                                                                                )
                                                                                                            end
                                                                                                        else
                                                                                                            begin
                                                                                                                trampCall(_x)
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:452"] + __e.backtrace ) ; raise __e
                                                                                                            end
                                                                                                        end
                                                                                                    }                                                                                                  ,
                                                                                                    begin
                                                                                                        trampCall(_vars)
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:453"] + __e.backtrace ) ; raise __e
                                                                                                    end
                                                                                              ]
                                                                                                           ))
                                                                                          end                                                                                        ,
                                                                                          begin
                                                                                            embedBacktraceInfo( "", 1 );
                                                                                              _cons(
                                                                                                  begin
                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                      _cons(
                                                                                                        :"if"                                                                                                        ,
                                                                                                          begin
                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                              _cons(
                                                                                                                  begin
                                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 454 );
                                                                                                                      _car(
                                                                                                                          begin
                                                                                                                              trampCall(_endtest)
                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:454"] + __e.backtrace ) ; raise __e
                                                                                                                          end
                                                                                                                      )
                                                                                                                  end                                                                                                                ,
                                                                                                                  begin
                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                      _cons(
                                                                                                                          begin
                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                              _cons(
                                                                                                                                :"begin"                                                                                                                                ,
                                                                                                                                  begin
                                                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 455 );
                                                                                                                                      _cdr(
                                                                                                                                          begin
                                                                                                                                              trampCall(_endtest)
                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:455"] + __e.backtrace ) ; raise __e
                                                                                                                                          end
                                                                                                                                      )
                                                                                                                                  end
                                                                                                                              )
                                                                                                                          end                                                                                                                        ,
                                                                                                                          begin
                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                              _cons(
                                                                                                                                  begin
                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                      _cons(
                                                                                                                                        :"begin"                                                                                                                                        ,
                                                                                                                                          begin
                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                              trampCall( self._append_METHOD(  'append',
                                                                                                                                                  begin
                                                                                                                                                    if @global_lisp_binding.has_key?('_append') then
                                                                                                                                                      trampCall(@_append)
                                                                                                                                                    else raise NameError.new( "Error: undefined variable append", "append" ) end
                                                                                                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                                                                  end                                                                                                                                                ,
                                                                                                                                              [
                                                                                                                                                    begin
                                                                                                                                                        trampCall(_body)
                                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:457"] + __e.backtrace ) ; raise __e
                                                                                                                                                    end                                                                                                                                                  ,
                                                                                                                                                    begin
                                                                                                                                                      embedBacktraceInfo( "", 1 );
                                                                                                                                                        _cons(
                                                                                                                                                            begin
                                                                                                                                                              embedBacktraceInfo( "", 1 );
                                                                                                                                                                _cons(
                                                                                                                                                                    begin
                                                                                                                                                                        trampCall(_do_MIMARKloop)
                                                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:458"] + __e.backtrace ) ; raise __e
                                                                                                                                                                    end                                                                                                                                                                  ,
                                                                                                                                                                    begin
                                                                                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 459 );
                                                                                                                                                                        trampCall( self._map_METHOD(  'map',
                                                                                                                                                                            begin
                                                                                                                                                                              if @global_lisp_binding.has_key?('_map') then
                                                                                                                                                                                trampCall(@_map)
                                                                                                                                                                              else raise NameError.new( "Error: undefined variable map", "map" ) end
                                                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:459"] + __e.backtrace ) ; raise __e
                                                                                                                                                                            end                                                                                                                                                                          ,
                                                                                                                                                                        [
                                                                                                                                                                              Proc.new { |_x| 
                                                                                                                                                                                  if ( 
                                                                                                                                                                                    begin
                                                                                                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 461 );
                                                                                                                                                                                        _not(
                                                                                                                                                                                            begin
                                                                                                                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 461 );
                                                                                                                                                                                                _pair_QUMARK(
                                                                                                                                                                                                    begin
                                                                                                                                                                                                        trampCall(_x)
                                                                                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:461"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                    end
                                                                                                                                                                                                )
                                                                                                                                                                                            end
                                                                                                                                                                                        )
                                                                                                                                                                                    end
                                                                                                                                                                                   ) then
                                                                                                                                                                                        begin
                                                                                                                                                                                            trampCall(_x)
                                                                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:461"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                        end
                                                                                                                                                                                  else
                                                                                                                                                                                      if ( 
                                                                                                                                                                                        begin
                                                                                                                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 462 );
                                                                                                                                                                                            ( 
                                                                                                                                                                                              begin
                                                                                                                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 462 );
                                                                                                                                                                                                  _length(
                                                                                                                                                                                                      begin
                                                                                                                                                                                                          trampCall(_x)
                                                                                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:462"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                      end
                                                                                                                                                                                                  )
                                                                                                                                                                                              end                                                                                                                                                                                            <
                                                                                                                                                                                            3
                                                                                                                                                                                             ) 
                                                                                                                                                                                        end
                                                                                                                                                                                       ) then
                                                                                                                                                                                            begin
                                                                                                                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 462 );
                                                                                                                                                                                                _car(
                                                                                                                                                                                                    begin
                                                                                                                                                                                                        trampCall(_x)
                                                                                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:462"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                    end
                                                                                                                                                                                                )
                                                                                                                                                                                            end
                                                                                                                                                                                      else
                                                                                                                                                                                          if ( 
                                                                                                                                                                                          true
                                                                                                                                                                                           ) then
                                                                                                                                                                                                begin
                                                                                                                                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 463 );
                                                                                                                                                                                                    _car(
                                                                                                                                                                                                        begin
                                                                                                                                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 463 );
                                                                                                                                                                                                            _cdr(
                                                                                                                                                                                                                begin
                                                                                                                                                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 463 );
                                                                                                                                                                                                                    _cdr(
                                                                                                                                                                                                                        begin
                                                                                                                                                                                                                            trampCall(_x)
                                                                                                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:463"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                        end
                                                                                                                                                                                                                    )
                                                                                                                                                                                                                end
                                                                                                                                                                                                            )
                                                                                                                                                                                                        end
                                                                                                                                                                                                    )
                                                                                                                                                                                                end
                                                                                                                                                                                          else
                                                                                                                                                                                              Cell.new()
                                                                                                                                                                                          end
                                                                                                                                                                                      end
                                                                                                                                                                                  end
                                                                                                                                                                              }                                                                                                                                                                            ,
                                                                                                                                                                              begin
                                                                                                                                                                                  trampCall(_vars)
                                                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:464"] + __e.backtrace ) ; raise __e
                                                                                                                                                                              end
                                                                                                                                                                        ]
                                                                                                                                                                                     ))
                                                                                                                                                                    end
                                                                                                                                                                )
                                                                                                                                                            end                                                                                                                                                          ,
                                                                                                                                                          Cell.new()
                                                                                                                                                        )
                                                                                                                                                    end
                                                                                                                                              ]
                                                                                                                                                           ))
                                                                                                                                          end
                                                                                                                                      )
                                                                                                                                  end                                                                                                                                ,
                                                                                                                                Cell.new()
                                                                                                                              )
                                                                                                                          end
                                                                                                                      )
                                                                                                                  end
                                                                                                              )
                                                                                                          end
                                                                                                      )
                                                                                                  end                                                                                                ,
                                                                                                Cell.new()
                                                                                              )
                                                                                          end
                                                                                      )
                                                                                  end
                                                                              )
                                                                          end                                                                        ,
                                                                        Cell.new()
                                                                      )
                                                                  end
                                                              )
                                                          end                                                        ,
                                                        Cell.new()
                                                      )
                                                  end                                                ,
                                                  begin
                                                    embedBacktraceInfo( "", 1 );
                                                      _cons(
                                                          begin
                                                            embedBacktraceInfo( "", 1 );
                                                              _cons(
                                                                  begin
                                                                      trampCall(_do_MIMARKloop)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:465"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 466 );
                                                                      trampCall( self._map_METHOD(  'map',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_map') then
                                                                              trampCall(@_map)
                                                                            else raise NameError.new( "Error: undefined variable map", "map" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:466"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                      [
                                                                            Proc.new { |_x| 
                                                                                if ( 
                                                                                  if ( 
                                                                                    begin
                                                                                      embedBacktraceInfo( "", 1 );
                                                                                        _not(
                                                                                            begin
                                                                                              embedBacktraceInfo( "", 1 );
                                                                                                _eq_QUMARK(
                                                                                                  false                                                                                                  ,
                                                                                                    begin
                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 467 );
                                                                                                        _pair_QUMARK(
                                                                                                            begin
                                                                                                                trampCall(_x)
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:467"] + __e.backtrace ) ; raise __e
                                                                                                            end
                                                                                                        )
                                                                                                    end
                                                                                                )
                                                                                            end
                                                                                        )
                                                                                    end
                                                                                   ) then
                                                                                      begin
                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 467 );
                                                                                          _cdr(
                                                                                              begin
                                                                                                  trampCall(_x)
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:467"] + __e.backtrace ) ; raise __e
                                                                                              end
                                                                                          )
                                                                                      end
                                                                                  else
                                                                                    false
                                                                                  end
                                                                                 ) then
                                                                                    begin
                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 468 );
                                                                                        _car(
                                                                                            begin
                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 468 );
                                                                                                _cdr(
                                                                                                    begin
                                                                                                        trampCall(_x)
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:468"] + __e.backtrace ) ; raise __e
                                                                                                    end
                                                                                                )
                                                                                            end
                                                                                        )
                                                                                    end
                                                                                else
                                                                                  Cell.new()
                                                                                end
                                                                            }                                                                          ,
                                                                            begin
                                                                                trampCall(_vars)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:470"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                      ]
                                                                                   ))
                                                                  end
                                                              )
                                                          end                                                        ,
                                                        Cell.new()
                                                      )
                                                  end
                                              )
                                          end
                                      )
                                  end
                              } ; ___lambda.call(
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 449 );
                                        trampCall( self._gensym_METHOD(  'gensym',
                                            begin
                                              if @global_lisp_binding.has_key?('_gensym') then
                                                trampCall(@_gensym)
                                              else raise NameError.new( "Error: undefined variable gensym", "gensym" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:449"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                        ]
                                                     ))
                                    end
                                         )
                            end
                        }                      ,
                        begin
                            trampCall(_do_MIMARKmacro)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:471"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               ))
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._generic_MIMARKmember_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_generic_MIMARKmember', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_generic_MIMARKmember'] = self.method( :_generic_MIMARKmember_METHOD )
    @_generic_MIMARKmember = 
    trampCall(
          Proc.new { |_cmp,_obj,_lst| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 477 );
                    _null_QUMARK(
                        begin
                            trampCall(_lst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:477"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  false
              else
                  if ( 
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 478 );
                        _not(
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 478 );
                                _pair_QUMARK(
                                    begin
                                        trampCall(_lst)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:478"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                        )
                    end
                   ) then
                      false
                  else
                      if ( 
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 479 );
                            trampCall( callProcedure(  '_cmp',  'cmp',
                                begin
                                    trampCall(_cmp)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:479"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_obj)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:479"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 479 );
                                      _car(
                                          begin
                                              trampCall(_lst)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:479"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                            ]
                                         ))
                        end
                       ) then
                            begin
                                trampCall(_lst)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:479"] + __e.backtrace ) ; raise __e
                            end
                      else
                          if ( 
                          true
                           ) then
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 480 );
                                    delayCall( '_generic_MIMARKmember',  'generic-member',
                                        begin
                                          if @global_lisp_binding.has_key?('_generic_MIMARKmember') then
                                            trampCall(@_generic_MIMARKmember)
                                          else raise NameError.new( "Error: undefined variable generic-member", "generic-member" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:480"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(_cmp)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:480"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          begin
                                              trampCall(_obj)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:480"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 480 );
                                              _cdr(
                                                  begin
                                                      trampCall(_lst)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:480"] + __e.backtrace ) ; raise __e
                                                  end
                                              )
                                          end
                                    ]
                                                 )
                                end
                          else
                              Cell.new()
                          end
                      end
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._memq_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_memq', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_memq'] = self.method( :_memq_METHOD )
    @_memq = 
    trampCall(
          Proc.new { |_obj,_lst| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 483 );
                  delayCall( '_generic_MIMARKmember',  'generic-member',
                      begin
                        if @global_lisp_binding.has_key?('_generic_MIMARKmember') then
                          trampCall(@_generic_MIMARKmember)
                        else raise NameError.new( "Error: undefined variable generic-member", "generic-member" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:483"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          if @global_lisp_binding.has_key?('_eq_QUMARK') then
                            trampCall(@_eq_QUMARK)
                          else raise NameError.new( "Error: undefined variable eq?", "eq?" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:483"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_obj)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:483"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_lst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:483"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._memv_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_memv', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_memv'] = self.method( :_memv_METHOD )
    @_memv = 
    trampCall(
          Proc.new { |_obj,_lst| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 485 );
                  delayCall( '_generic_MIMARKmember',  'generic-member',
                      begin
                        if @global_lisp_binding.has_key?('_generic_MIMARKmember') then
                          trampCall(@_generic_MIMARKmember)
                        else raise NameError.new( "Error: undefined variable generic-member", "generic-member" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:485"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                            trampCall(@_eqv_QUMARK)
                          else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:485"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_obj)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:485"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_lst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:485"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._member_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_member', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_member'] = self.method( :_member_METHOD )
    @_member = 
    trampCall(
          Proc.new { |_obj,_lst| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 487 );
                  delayCall( '_generic_MIMARKmember',  'generic-member',
                      begin
                        if @global_lisp_binding.has_key?('_generic_MIMARKmember') then
                          trampCall(@_generic_MIMARKmember)
                        else raise NameError.new( "Error: undefined variable generic-member", "generic-member" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:487"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          if @global_lisp_binding.has_key?('_equal_QUMARK') then
                            trampCall(@_equal_QUMARK)
                          else raise NameError.new( "Error: undefined variable equal?", "equal?" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:487"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_obj)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:487"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_lst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:487"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._generic_MIMARKassoc_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_generic_MIMARKassoc', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_generic_MIMARKassoc'] = self.method( :_generic_MIMARKassoc_METHOD )
    @_generic_MIMARKassoc = 
    trampCall(
          Proc.new { |_cmp,_obj,_alst| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 492 );
                    _null_QUMARK(
                        begin
                            trampCall(_alst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:492"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  false
              else
                  if ( 
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 493 );
                        trampCall( callProcedure(  '_cmp',  'cmp',
                            begin
                                trampCall(_cmp)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:493"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_obj)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:493"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 493 );
                                  trampCall( self._caar_METHOD(  'caar',
                                      begin
                                        if @global_lisp_binding.has_key?('_caar') then
                                          trampCall(@_caar)
                                        else raise NameError.new( "Error: undefined variable caar", "caar" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:493"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_alst)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:493"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               ))
                              end
                        ]
                                     ))
                    end
                   ) then
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 493 );
                            delayCall( '_car',  'car',
                                begin
                                  if @global_lisp_binding.has_key?('_car') then
                                    trampCall(@_car)
                                  else raise NameError.new( "Error: undefined variable car", "car" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:493"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_alst)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:493"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         )
                        end
                  else
                      if ( 
                      true
                       ) then
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 494 );
                                delayCall( '_generic_MIMARKassoc',  'generic-assoc',
                                    begin
                                      if @global_lisp_binding.has_key?('_generic_MIMARKassoc') then
                                        trampCall(@_generic_MIMARKassoc)
                                      else raise NameError.new( "Error: undefined variable generic-assoc", "generic-assoc" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:494"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_cmp)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:494"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      begin
                                          trampCall(_obj)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:494"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 494 );
                                          _cdr(
                                              begin
                                                  trampCall(_alst)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:494"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                ]
                                             )
                            end
                      else
                          Cell.new()
                      end
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._assq_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_assq', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_assq'] = self.method( :_assq_METHOD )
    @_assq = 
    trampCall(
          Proc.new { |_obj,_alst| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 497 );
                  delayCall( '_generic_MIMARKassoc',  'generic-assoc',
                      begin
                        if @global_lisp_binding.has_key?('_generic_MIMARKassoc') then
                          trampCall(@_generic_MIMARKassoc)
                        else raise NameError.new( "Error: undefined variable generic-assoc", "generic-assoc" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:497"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          if @global_lisp_binding.has_key?('_eq_QUMARK') then
                            trampCall(@_eq_QUMARK)
                          else raise NameError.new( "Error: undefined variable eq?", "eq?" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:497"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_obj)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:497"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_alst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:497"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._assv_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_assv', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_assv'] = self.method( :_assv_METHOD )
    @_assv = 
    trampCall(
          Proc.new { |_obj,_alst| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 499 );
                  delayCall( '_generic_MIMARKassoc',  'generic-assoc',
                      begin
                        if @global_lisp_binding.has_key?('_generic_MIMARKassoc') then
                          trampCall(@_generic_MIMARKassoc)
                        else raise NameError.new( "Error: undefined variable generic-assoc", "generic-assoc" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:499"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                            trampCall(@_eqv_QUMARK)
                          else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:499"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_obj)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:499"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_alst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:499"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._assoc_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_assoc', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_assoc'] = self.method( :_assoc_METHOD )
    @_assoc = 
    trampCall(
          Proc.new { |_obj,_alst| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 501 );
                  delayCall( '_generic_MIMARKassoc',  'generic-assoc',
                      begin
                        if @global_lisp_binding.has_key?('_generic_MIMARKassoc') then
                          trampCall(@_generic_MIMARKassoc)
                        else raise NameError.new( "Error: undefined variable generic-assoc", "generic-assoc" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:501"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          if @global_lisp_binding.has_key?('_equal_QUMARK') then
                            trampCall(@_equal_QUMARK)
                          else raise NameError.new( "Error: undefined variable equal?", "equal?" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:501"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_obj)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:501"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_alst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:501"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._acons_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_acons', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_acons'] = self.method( :_acons_METHOD )
    @_acons = 
    trampCall(
          Proc.new { |_x,_y,_z| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 503 );
                  delayCall( '_cons',  'cons',
                      begin
                        if @global_lisp_binding.has_key?('_cons') then
                          trampCall(@_cons)
                        else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:503"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 503 );
                            _cons(
                                begin
                                    trampCall(_x)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:503"] + __e.backtrace ) ; raise __e
                                end                              ,
                                begin
                                    trampCall(_y)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:503"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end                      ,
                        begin
                            trampCall(_z)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:503"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._assq_MIMARKref_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_assq_MIMARKref', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_assq_MIMARKref'] = self.method( :_assq_MIMARKref_METHOD )
    @_assq_MIMARKref = 
    trampCall(
          Proc.new { |_obj,_alst| 
              if ( 
                begin #execFunc
                    def self.___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30409_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30409', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                    @global_lisp_binding['___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30409'] = self.method( :___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30409_METHOD )
                  @___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30409 = 
                  trampCall(
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 506 );
                            trampCall( self._assq_METHOD(  'assq',
                                begin
                                  if @global_lisp_binding.has_key?('_assq') then
                                    trampCall(@_assq)
                                  else raise NameError.new( "Error: undefined variable assq", "assq" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:506"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_obj)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:506"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  begin
                                      trampCall(_alst)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:506"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         ))
                        end
                  )
                end
               ) then
                  begin
                    embedBacktraceInfo( "./lib/nendo/init.nnd", 506 );
                      delayCall( '_cdr',  'cdr',
                          begin
                            if @global_lisp_binding.has_key?('_cdr') then
                              trampCall(@_cdr)
                            else raise NameError.new( "Error: undefined variable cdr", "cdr" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:506"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                              if @global_lisp_binding.has_key?('___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30409') then
                                trampCall(@___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30409)
                              else raise NameError.new( "Error: undefined variable __gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30409", "__gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30409" ) end
                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   )
                  end
              else
                  if ( 
                  true
                   ) then
                      nil
                  else
                      Cell.new()
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._assv_MIMARKref_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_assv_MIMARKref', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_assv_MIMARKref'] = self.method( :_assv_MIMARKref_METHOD )
    @_assv_MIMARKref = 
    trampCall(
          Proc.new { |_obj,_alst| 
              if ( 
                begin #execFunc
                    def self.___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30411_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30411', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                    @global_lisp_binding['___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30411'] = self.method( :___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30411_METHOD )
                  @___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30411 = 
                  trampCall(
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 509 );
                            trampCall( self._assv_METHOD(  'assv',
                                begin
                                  if @global_lisp_binding.has_key?('_assv') then
                                    trampCall(@_assv)
                                  else raise NameError.new( "Error: undefined variable assv", "assv" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:509"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_obj)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:509"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  begin
                                      trampCall(_alst)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:509"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         ))
                        end
                  )
                end
               ) then
                  begin
                    embedBacktraceInfo( "./lib/nendo/init.nnd", 509 );
                      delayCall( '_cdr',  'cdr',
                          begin
                            if @global_lisp_binding.has_key?('_cdr') then
                              trampCall(@_cdr)
                            else raise NameError.new( "Error: undefined variable cdr", "cdr" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:509"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                              if @global_lisp_binding.has_key?('___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30411') then
                                trampCall(@___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30411)
                              else raise NameError.new( "Error: undefined variable __gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30411", "__gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30411" ) end
                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   )
                  end
              else
                  if ( 
                  true
                   ) then
                      nil
                  else
                      Cell.new()
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._assoc_MIMARKref_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_assoc_MIMARKref', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_assoc_MIMARKref'] = self.method( :_assoc_MIMARKref_METHOD )
    @_assoc_MIMARKref = 
    trampCall(
          Proc.new { |_obj,_alst| 
              if ( 
                begin #execFunc
                    def self.___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30413_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30413', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                    @global_lisp_binding['___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30413'] = self.method( :___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30413_METHOD )
                  @___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30413 = 
                  trampCall(
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 512 );
                            trampCall( self._assoc_METHOD(  'assoc',
                                begin
                                  if @global_lisp_binding.has_key?('_assoc') then
                                    trampCall(@_assoc)
                                  else raise NameError.new( "Error: undefined variable assoc", "assoc" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:512"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_obj)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:512"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  begin
                                      trampCall(_alst)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:512"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         ))
                        end
                  )
                end
               ) then
                  begin
                    embedBacktraceInfo( "./lib/nendo/init.nnd", 512 );
                      delayCall( '_cdr',  'cdr',
                          begin
                            if @global_lisp_binding.has_key?('_cdr') then
                              trampCall(@_cdr)
                            else raise NameError.new( "Error: undefined variable cdr", "cdr" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:512"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                              if @global_lisp_binding.has_key?('___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30413') then
                                trampCall(@___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30413)
                              else raise NameError.new( "Error: undefined variable __gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30413", "__gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30413" ) end
                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   )
                  end
              else
                  if ( 
                  true
                   ) then
                      nil
                  else
                      Cell.new()
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._fold_MIMARKright_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_fold_MIMARKright', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_fold_MIMARKright'] = self.method( :_fold_MIMARKright_METHOD )
    @_fold_MIMARKright = 
    trampCall(
          Proc.new { |_f,_x,_lst| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 522 );
                    _null_QUMARK(
                        begin
                            trampCall(_lst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:522"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin
                      trampCall(_x)
                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:523"] + __e.backtrace ) ; raise __e
                  end
              else
                  begin
                    embedBacktraceInfo( "./lib/nendo/init.nnd", 524 );
                      delayCall( '_fold_MIMARKright',  'fold-right',
                          begin
                            if @global_lisp_binding.has_key?('_fold_MIMARKright') then
                              trampCall(@_fold_MIMARKright)
                            else raise NameError.new( "Error: undefined variable fold-right", "fold-right" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:524"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                                trampCall(_f)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:524"] + __e.backtrace ) ; raise __e
                            end                          ,
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 524 );
                                trampCall( callProcedure(  '_f',  'f',
                                    begin
                                        trampCall(_f)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:524"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:524"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 524 );
                                          _car(
                                              begin
                                                  trampCall(_lst)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:524"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                ]
                                             ))
                            end                          ,
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 524 );
                                _cdr(
                                    begin
                                        trampCall(_lst)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:524"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                      ]
                                   )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._unzip1_MIMARKwith_MIMARKcdr_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_unzip1_MIMARKwith_MIMARKcdr', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_unzip1_MIMARKwith_MIMARKcdr'] = self.method( :_unzip1_MIMARKwith_MIMARKcdr_METHOD )
    @_unzip1_MIMARKwith_MIMARKcdr = 
    trampCall(
          Proc.new { |*__rest__| _lists = __rest__[0] ;  
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 527 );
                  delayCall( '_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative',  'unzip1-with-cdr-iterative',
                      begin
                        if @global_lisp_binding.has_key?('_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative') then
                          trampCall(@_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative)
                        else raise NameError.new( "Error: undefined variable unzip1-with-cdr-iterative", "unzip1-with-cdr-iterative" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:527"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:527"] + __e.backtrace ) ; raise __e
                        end                      ,
                      Cell.new()                      ,
                      Cell.new()
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative'] = self.method( :_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative_METHOD )
    @_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative = 
    trampCall(
          Proc.new { |_lists,_cars,_cdrs| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 530 );
                    _null_QUMARK(
                        begin
                            trampCall(_lists)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:530"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin
                    embedBacktraceInfo( "./lib/nendo/init.nnd", 531 );
                      delayCall( '_cons',  'cons',
                          begin
                            if @global_lisp_binding.has_key?('_cons') then
                              trampCall(@_cons)
                            else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:531"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                                trampCall(_cars)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:531"] + __e.backtrace ) ; raise __e
                            end                          ,
                            begin
                                trampCall(_cdrs)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:531"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   )
                  end
              else
                  begin #makeLet
                    ___lambda = lambda { |_car1,_cdr1| 
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 534 );
                            delayCall( '_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative',  'unzip1-with-cdr-iterative',
                                begin
                                  if @global_lisp_binding.has_key?('_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative') then
                                    trampCall(@_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative)
                                  else raise NameError.new( "Error: undefined variable unzip1-with-cdr-iterative", "unzip1-with-cdr-iterative" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:534"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 535 );
                                      _cdr(
                                          begin
                                              trampCall(_lists)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:535"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end                                ,
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 536 );
                                      trampCall( self._append_METHOD(  'append',
                                          begin
                                            if @global_lisp_binding.has_key?('_append') then
                                              trampCall(@_append)
                                            else raise NameError.new( "Error: undefined variable append", "append" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:536"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_cars)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:536"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 536 );
                                                trampCall( self._list_METHOD(  'list',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_list') then
                                                        trampCall(@_list)
                                                      else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:536"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_car1)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:536"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end
                                      ]
                                                   ))
                                  end                                ,
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 537 );
                                      trampCall( self._append_METHOD(  'append',
                                          begin
                                            if @global_lisp_binding.has_key?('_append') then
                                              trampCall(@_append)
                                            else raise NameError.new( "Error: undefined variable append", "append" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:537"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_cdrs)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:537"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 537 );
                                                trampCall( self._list_METHOD(  'list',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_list') then
                                                        trampCall(@_list)
                                                      else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:537"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_cdr1)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:537"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end
                                      ]
                                                   ))
                                  end
                            ]
                                         )
                        end
                    } ; ___lambda.call(
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 532 );
                              trampCall( self._caar_METHOD(  'caar',
                                  begin
                                    if @global_lisp_binding.has_key?('_caar') then
                                      trampCall(@_caar)
                                    else raise NameError.new( "Error: undefined variable caar", "caar" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:532"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_lists)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:532"] + __e.backtrace ) ; raise __e
                                    end
                              ]
                                           ))
                          end                        ,
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 533 );
                              trampCall( self._cdar_METHOD(  'cdar',
                                  begin
                                    if @global_lisp_binding.has_key?('_cdar') then
                                      trampCall(@_cdar)
                                    else raise NameError.new( "Error: undefined variable cdar", "cdar" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:533"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_lists)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:533"] + __e.backtrace ) ; raise __e
                                    end
                              ]
                                           ))
                          end
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARKmap_MIMARKoriginal_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKmap_MIMARKoriginal', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKmap_MIMARKoriginal'] = self.method( :__PAMARKmap_MIMARKoriginal_METHOD )
    @__PAMARKmap_MIMARKoriginal = 
    trampCall(
          Proc.new { |_proc,*__rest__| _lists = __rest__[0] ;  
              begin #makeLetrec
                ___lambda = lambda { |_result,__PAMARKmap_MIMARKarg1| 
                    _result                     = 
                    Cell.new()
                    __PAMARKmap_MIMARKarg1                     = 
                      Proc.new { |_proc,_lst| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 544 );
                                _null_QUMARK(
                                    begin
                                        trampCall(_lst)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:544"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                           ) then
                            true
                          else
                              begin  #makeBegin
                                  begin #execFunc
                                    
                                    _result = 
                                    trampCall(
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 548 );
                                              _cons(
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 548 );
                                                      trampCall( callProcedure(  '_proc',  'proc',
                                                          begin
                                                              trampCall(_proc)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:548"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 548 );
                                                                _car(
                                                                    begin
                                                                        trampCall(_lst)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:548"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                      ]
                                                                   ))
                                                  end                                                ,
                                                  begin
                                                      trampCall(_result)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:549"] + __e.backtrace ) ; raise __e
                                                  end
                                              )
                                          end
                                    )
                                  end
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 550 );
                                      delayCall( '__PAMARKmap_MIMARKarg1',  '%map-arg1',
                                          begin
                                              trampCall(__PAMARKmap_MIMARKarg1)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:550"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_proc)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:550"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 550 );
                                                _cdr(
                                                    begin
                                                        trampCall(_lst)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:550"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                      ]
                                                   )
                                  end
                              end
                          end
                      }
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 552 );
                          _null_QUMARK(
                              begin
                                  trampCall(_lists)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:552"] + __e.backtrace ) ; raise __e
                              end
                          )
                      end
                     ) then
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 553 );
                              delayCall( '_apply',  'apply',
                                  begin
                                    if @global_lisp_binding.has_key?('_apply') then
                                      trampCall(@_apply)
                                    else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:553"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_proc)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:553"] + __e.backtrace ) ; raise __e
                                    end
                              ]
                                           )
                          end
                    else
                        if ( 
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 554 );
                              _eq_QUMARK(
                                1                                ,
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 554 );
                                      _length(
                                          begin
                                              trampCall(_lists)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:554"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                              )
                          end
                         ) then
                            begin  #makeBegin
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 555 );
                                    trampCall( callProcedure(  '__PAMARKmap_MIMARKarg1',  '%map-arg1',
                                        begin
                                            trampCall(__PAMARKmap_MIMARKarg1)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:555"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(_proc)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:555"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 555 );
                                              _car(
                                                  begin
                                                      trampCall(_lists)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:555"] + __e.backtrace ) ; raise __e
                                                  end
                                              )
                                          end
                                    ]
                                                 ))
                                end
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 556 );
                                    delayCall( '_reverse',  'reverse',
                                        begin
                                          if @global_lisp_binding.has_key?('_reverse') then
                                            trampCall(@_reverse)
                                          else raise NameError.new( "Error: undefined variable reverse", "reverse" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:556"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(_result)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:556"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 )
                                end
                            end
                        else
                            if ( 
                            true
                             ) then
                                  if ( 
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 558 );
                                        _null_QUMARK(
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 558 );
                                                _car(
                                                    begin
                                                        trampCall(_lists)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:558"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                        )
                                    end
                                   ) then
                                    Cell.new()
                                  else
                                      begin #makeLet
                                        ___lambda = lambda { |_unz| 
                                            begin #makeLet
                                              ___lambda = lambda { |_cars,_cdrs| 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 563 );
                                                      delayCall( '_cons',  'cons',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cons') then
                                                              trampCall(@_cons)
                                                            else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:563"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 563 );
                                                                trampCall( self._apply_METHOD(  'apply',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_apply') then
                                                                        trampCall(@_apply)
                                                                      else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:563"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                      begin
                                                                          trampCall(_proc)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:563"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      begin
                                                                          trampCall(_cars)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:563"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                ]
                                                                             ))
                                                            end                                                          ,
                                                            if ( 
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 564 );
                                                                  _null_QUMARK(
                                                                      begin
                                                                          trampCall(_cdrs)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:564"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                  )
                                                              end
                                                             ) then
                                                              Cell.new()
                                                            else
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 566 );
                                                                    trampCall( self._apply_METHOD(  'apply',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_apply') then
                                                                            trampCall(@_apply)
                                                                          else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:566"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                    [
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('__PAMARKmap_MIMARKoriginal') then
                                                                              trampCall(@__PAMARKmap_MIMARKoriginal)
                                                                            else raise NameError.new( "Error: undefined variable %map-original", "%map-original" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:566"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 566 );
                                                                              _cons(
                                                                                  begin
                                                                                      trampCall(_proc)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:566"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  begin
                                                                                      trampCall(_cdrs)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:566"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                              )
                                                                          end
                                                                    ]
                                                                                 ))
                                                                end
                                                            end
                                                      ]
                                                                   )
                                                  end
                                              } ; ___lambda.call(
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 561 );
                                                        _car(
                                                            begin
                                                                trampCall(_unz)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:561"] + __e.backtrace ) ; raise __e
                                                            end
                                                        )
                                                    end                                                  ,
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 562 );
                                                        _cdr(
                                                            begin
                                                                trampCall(_unz)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:562"] + __e.backtrace ) ; raise __e
                                                            end
                                                        )
                                                    end
                                                         )
                                            end
                                        } ; ___lambda.call(
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 560 );
                                                  trampCall( self._apply_METHOD(  'apply',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_apply') then
                                                          trampCall(@_apply)
                                                        else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:560"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                        begin
                                                          if @global_lisp_binding.has_key?('_unzip1_MIMARKwith_MIMARKcdr') then
                                                            trampCall(@_unzip1_MIMARKwith_MIMARKcdr)
                                                          else raise NameError.new( "Error: undefined variable unzip1-with-cdr", "unzip1-with-cdr" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:560"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        begin
                                                            trampCall(_lists)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:560"] + __e.backtrace ) ; raise __e
                                                        end
                                                  ]
                                                               ))
                                              end
                                                   )
                                      end
                                  end
                            else
                                Cell.new()
                            end
                        end
                    end
                } ; ___lambda.call(
                nil,nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARKmap_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKmap', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKmap'] = self.method( :__PAMARKmap_METHOD )
    @__PAMARKmap = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('__PAMARKmap_MIMARKoriginal') then
              trampCall(@__PAMARKmap_MIMARKoriginal)
            else raise NameError.new( "Error: undefined variable %map-original", "%map-original" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:567"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARKinternal_MIMARKdefine_MIMARKto_MIMARKletrec_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKinternal_MIMARKdefine_MIMARKto_MIMARKletrec', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKinternal_MIMARKdefine_MIMARKto_MIMARKletrec'] = self.method( :__PAMARKinternal_MIMARKdefine_MIMARKto_MIMARKletrec_METHOD )
    @__PAMARKinternal_MIMARKdefine_MIMARKto_MIMARKletrec = 
    trampCall(
          Proc.new { |__sym,__src| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 570 );
                    _not(
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 570 );
                            trampCall( self._list_QUMARK_METHOD(  'list?',
                                begin
                                  if @global_lisp_binding.has_key?('_list_QUMARK') then
                                    trampCall(@_list_QUMARK)
                                  else raise NameError.new( "Error: undefined variable list?", "list?" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:570"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 570 );
                                      trampCall( self._cadr_METHOD(  'cadr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cadr') then
                                              trampCall(@_cadr)
                                            else raise NameError.new( "Error: undefined variable cadr", "cadr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:570"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(__src)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:570"] + __e.backtrace ) ; raise __e
                                            end
                                      ]
                                                   ))
                                  end
                            ]
                                         ))
                        end
                    )
                end
               ) then
                  begin
                    embedBacktraceInfo( "", 1 );
                      delayCall( '_cons',  'cons',
                          begin
                            if @global_lisp_binding.has_key?('_cons') then
                              trampCall(@_cons)
                            else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                                trampCall(__sym)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:571"] + __e.backtrace ) ; raise __e
                            end                          ,
                            begin
                                trampCall(__src)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:571"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   )
                  end
              else
                  begin #makeLet
                    ___lambda = lambda { |_body,_defs,_rest| 
                        if ( 
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 575 );
                              _not(
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 575 );
                                      trampCall( self._list_QUMARK_METHOD(  'list?',
                                          begin
                                            if @global_lisp_binding.has_key?('_list_QUMARK') then
                                              trampCall(@_list_QUMARK)
                                            else raise NameError.new( "Error: undefined variable list?", "list?" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:575"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 575 );
                                                _car(
                                                    begin
                                                        trampCall(_body)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:575"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                      ]
                                                   ))
                                  end
                              )
                          end
                         ) then
                            begin
                              embedBacktraceInfo( "", 1 );
                                delayCall( '_cons',  'cons',
                                    begin
                                      if @global_lisp_binding.has_key?('_cons') then
                                        trampCall(@_cons)
                                      else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(__sym)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:576"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      begin
                                          trampCall(__src)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:576"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             )
                            end
                        else
                            begin  #makeBegin
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 578 );
                                    trampCall( self.__PAMARKmap_METHOD(  '%map',
                                        begin
                                          if @global_lisp_binding.has_key?('__PAMARKmap') then
                                            trampCall(@__PAMARKmap)
                                          else raise NameError.new( "Error: undefined variable %map", "%map" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:578"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          Proc.new { |_x| 
                                              if ( 
                                                if ( 
                                                  begin
                                                    embedBacktraceInfo( "", 1 );
                                                      _not(
                                                          begin
                                                            embedBacktraceInfo( "", 1 );
                                                              _eq_QUMARK(
                                                                false                                                                ,
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 580 );
                                                                      _pair_QUMARK(
                                                                          begin
                                                                              trampCall(_x)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:580"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                      )
                                                                  end
                                                              )
                                                          end
                                                      )
                                                  end
                                                 ) then
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 581 );
                                                        _eq_QUMARK(
                                                          :"define"                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 581 );
                                                                _car(
                                                                    begin
                                                                        trampCall(_x)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:581"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                        )
                                                    end
                                                else
                                                  false
                                                end
                                               ) then
                                                  begin #execFunc
                                                    
                                                    _defs = 
                                                    trampCall(
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 582 );
                                                              _cons(
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 582 );
                                                                      trampCall( self.__PAMARKexpand_MIMARKdefine_MIMARKform_METHOD(  '%expand-define-form',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('__PAMARKexpand_MIMARKdefine_MIMARKform') then
                                                                              trampCall(@__PAMARKexpand_MIMARKdefine_MIMARKform)
                                                                            else raise NameError.new( "Error: undefined variable %expand-define-form", "%expand-define-form" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:582"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                      [
                                                                            begin
                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 582 );
                                                                                _cdr(
                                                                                    begin
                                                                                        trampCall(_x)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:582"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                )
                                                                            end
                                                                      ]
                                                                                   ))
                                                                  end                                                                ,
                                                                  begin
                                                                      trampCall(_defs)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:582"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              )
                                                          end
                                                    )
                                                  end
                                              else
                                                  begin #execFunc
                                                    
                                                    _rest = 
                                                    trampCall(
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 583 );
                                                              _cons(
                                                                  begin
                                                                      trampCall(_x)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:583"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  begin
                                                                      trampCall(_rest)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:583"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              )
                                                          end
                                                    )
                                                  end
                                              end
                                          }                                        ,
                                          begin
                                              trampCall(_body)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:584"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 ))
                                end
                                begin #makeLet
                                  ___lambda = lambda { |_defs,_rest| 
                                      if ( 
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 587 );
                                            ( 
                                            0                                            <
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 587 );
                                                  _length(
                                                      begin
                                                          trampCall(_defs)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:587"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end
                                             ) 
                                        end
                                       ) then
                                          begin
                                            embedBacktraceInfo( "", 1 );
                                              delayCall( '_cons',  'cons',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cons') then
                                                      trampCall(@_cons)
                                                    else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(__sym)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:588"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    begin
                                                      embedBacktraceInfo( "", 1 );
                                                        _cons(
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 589 );
                                                                _car(
                                                                    begin
                                                                        trampCall(__src)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:589"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "", 1 );
                                                                _cons(
                                                                    begin
                                                                      embedBacktraceInfo( "", 1 );
                                                                        _cons(
                                                                          :"letrec"                                                                          ,
                                                                            begin
                                                                              embedBacktraceInfo( "", 1 );
                                                                                _cons(
                                                                                    begin
                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 591 );
                                                                                        trampCall( self.__PAMARKmap_METHOD(  '%map',
                                                                                            begin
                                                                                              if @global_lisp_binding.has_key?('__PAMARKmap') then
                                                                                                trampCall(@__PAMARKmap)
                                                                                              else raise NameError.new( "Error: undefined variable %map", "%map" ) end
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:591"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,
                                                                                        [
                                                                                              Proc.new { |_x| 
                                                                                                  begin
                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 593 );
                                                                                                      trampCall( self._list_METHOD(  'list',
                                                                                                          begin
                                                                                                            if @global_lisp_binding.has_key?('_list') then
                                                                                                              trampCall(@_list)
                                                                                                            else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:593"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                      [
                                                                                                            begin
                                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 594 );
                                                                                                                trampCall( self._cadr_METHOD(  'cadr',
                                                                                                                    begin
                                                                                                                      if @global_lisp_binding.has_key?('_cadr') then
                                                                                                                        trampCall(@_cadr)
                                                                                                                      else raise NameError.new( "Error: undefined variable cadr", "cadr" ) end
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:594"] + __e.backtrace ) ; raise __e
                                                                                                                    end                                                                                                                  ,
                                                                                                                [
                                                                                                                      begin
                                                                                                                          trampCall(_x)
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:594"] + __e.backtrace ) ; raise __e
                                                                                                                      end
                                                                                                                ]
                                                                                                                             ))
                                                                                                            end                                                                                                          ,
                                                                                                            begin
                                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 595 );
                                                                                                                trampCall( self._caddr_METHOD(  'caddr',
                                                                                                                    begin
                                                                                                                      if @global_lisp_binding.has_key?('_caddr') then
                                                                                                                        trampCall(@_caddr)
                                                                                                                      else raise NameError.new( "Error: undefined variable caddr", "caddr" ) end
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:595"] + __e.backtrace ) ; raise __e
                                                                                                                    end                                                                                                                  ,
                                                                                                                [
                                                                                                                      begin
                                                                                                                          trampCall(_x)
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:595"] + __e.backtrace ) ; raise __e
                                                                                                                      end
                                                                                                                ]
                                                                                                                             ))
                                                                                                            end
                                                                                                      ]
                                                                                                                   ))
                                                                                                  end
                                                                                              }                                                                                            ,
                                                                                              begin
                                                                                                  trampCall(_defs)
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:596"] + __e.backtrace ) ; raise __e
                                                                                              end
                                                                                        ]
                                                                                                     ))
                                                                                    end                                                                                  ,
                                                                                    begin
                                                                                        trampCall(_rest)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:597"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                )
                                                                            end
                                                                        )
                                                                    end                                                                  ,
                                                                  Cell.new()
                                                                )
                                                            end
                                                        )
                                                    end
                                              ]
                                                           )
                                          end
                                      else
                                          begin
                                            embedBacktraceInfo( "", 1 );
                                              delayCall( '_cons',  'cons',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cons') then
                                                      trampCall(@_cons)
                                                    else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(__sym)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:599"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    begin
                                                        trampCall(__src)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:599"] + __e.backtrace ) ; raise __e
                                                    end
                                              ]
                                                           )
                                          end
                                      end
                                  } ; ___lambda.call(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 585 );
                                            _reverse(
                                                begin
                                                    trampCall(_defs)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:585"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 586 );
                                            _reverse(
                                                begin
                                                    trampCall(_rest)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:586"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                             )
                                end
                            end
                        end
                    } ; ___lambda.call(
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 572 );
                              _cdr(
                                  begin
                                      trampCall(__src)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:572"] + __e.backtrace ) ; raise __e
                                  end
                              )
                          end                        ,
                        Cell.new()                        ,
                        Cell.new()
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARKfor_MIMARKeach_MIMARKoriginal_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKfor_MIMARKeach_MIMARKoriginal', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKfor_MIMARKeach_MIMARKoriginal'] = self.method( :__PAMARKfor_MIMARKeach_MIMARKoriginal_METHOD )
    @__PAMARKfor_MIMARKeach_MIMARKoriginal = 
    trampCall(
          Proc.new { |_proc,*__rest__| _lists = __rest__[0] ;  
              begin #makeLetrec
                ___lambda = lambda { |__PAMARKfor_MIMARKeach_MIMARKarg1| 
                    __PAMARKfor_MIMARKeach_MIMARKarg1                     = 
                      Proc.new { |_proc,_lst| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 604 );
                                _null_QUMARK(
                                    begin
                                        trampCall(_lst)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:604"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                           ) then
                            true
                          else
                              begin  #makeBegin
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 607 );
                                      trampCall( callProcedure(  '_proc',  'proc',
                                          begin
                                              trampCall(_proc)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:607"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 607 );
                                                _car(
                                                    begin
                                                        trampCall(_lst)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:607"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                      ]
                                                   ))
                                  end
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 608 );
                                      delayCall( '__PAMARKfor_MIMARKeach_MIMARKarg1',  '%for-each-arg1',
                                          begin
                                              trampCall(__PAMARKfor_MIMARKeach_MIMARKarg1)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:608"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_proc)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:608"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 608 );
                                                _cdr(
                                                    begin
                                                        trampCall(_lst)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:608"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                      ]
                                                   )
                                  end
                              end
                          end
                      }
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 610 );
                          _null_QUMARK(
                              begin
                                  trampCall(_lists)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:610"] + __e.backtrace ) ; raise __e
                              end
                          )
                      end
                     ) then
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 611 );
                              delayCall( '_apply',  'apply',
                                  begin
                                    if @global_lisp_binding.has_key?('_apply') then
                                      trampCall(@_apply)
                                    else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:611"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_proc)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:611"] + __e.backtrace ) ; raise __e
                                    end
                              ]
                                           )
                          end
                    else
                        if ( 
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 612 );
                              _eq_QUMARK(
                                1                                ,
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 612 );
                                      _length(
                                          begin
                                              trampCall(_lists)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:612"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                              )
                          end
                         ) then
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 613 );
                                  delayCall( '__PAMARKfor_MIMARKeach_MIMARKarg1',  '%for-each-arg1',
                                      begin
                                          trampCall(__PAMARKfor_MIMARKeach_MIMARKarg1)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:613"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_proc)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:613"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 613 );
                                            _car(
                                                begin
                                                    trampCall(_lists)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:613"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                  ]
                                               )
                              end
                        else
                            if ( 
                            true
                             ) then
                                  if ( 
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 615 );
                                        _null_QUMARK(
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 615 );
                                                _car(
                                                    begin
                                                        trampCall(_lists)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:615"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                        )
                                    end
                                   ) then
                                    true
                                  else
                                      begin #makeLet
                                        ___lambda = lambda { |_unz| 
                                            begin #makeLet
                                              ___lambda = lambda { |_cars,_cdrs| 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 620 );
                                                      trampCall( self._apply_METHOD(  'apply',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_apply') then
                                                              trampCall(@_apply)
                                                            else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:620"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_proc)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:620"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            begin
                                                                trampCall(_cars)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:620"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                                  if ( 
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 621 );
                                                        _null_QUMARK(
                                                            begin
                                                                trampCall(_cdrs)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:621"] + __e.backtrace ) ; raise __e
                                                            end
                                                        )
                                                    end
                                                   ) then
                                                    Cell.new()
                                                  else
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 623 );
                                                          delayCall( '_apply',  'apply',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_apply') then
                                                                  trampCall(@_apply)
                                                                else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:623"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                          [
                                                                begin
                                                                  if @global_lisp_binding.has_key?('__PAMARKfor_MIMARKeach_MIMARKoriginal') then
                                                                    trampCall(@__PAMARKfor_MIMARKeach_MIMARKoriginal)
                                                                  else raise NameError.new( "Error: undefined variable %for-each-original", "%for-each-original" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:623"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 623 );
                                                                    _cons(
                                                                        begin
                                                                            trampCall(_proc)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:623"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        begin
                                                                            trampCall(_cdrs)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:623"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    )
                                                                end
                                                          ]
                                                                       )
                                                      end
                                                  end
                                              } ; ___lambda.call(
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 618 );
                                                        _car(
                                                            begin
                                                                trampCall(_unz)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:618"] + __e.backtrace ) ; raise __e
                                                            end
                                                        )
                                                    end                                                  ,
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 619 );
                                                        _cdr(
                                                            begin
                                                                trampCall(_unz)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:619"] + __e.backtrace ) ; raise __e
                                                            end
                                                        )
                                                    end
                                                         )
                                            end
                                        } ; ___lambda.call(
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 617 );
                                                  trampCall( self._apply_METHOD(  'apply',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_apply') then
                                                          trampCall(@_apply)
                                                        else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:617"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                        begin
                                                          if @global_lisp_binding.has_key?('_unzip1_MIMARKwith_MIMARKcdr') then
                                                            trampCall(@_unzip1_MIMARKwith_MIMARKcdr)
                                                          else raise NameError.new( "Error: undefined variable unzip1-with-cdr", "unzip1-with-cdr" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:617"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        begin
                                                            trampCall(_lists)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:617"] + __e.backtrace ) ; raise __e
                                                        end
                                                  ]
                                                               ))
                                              end
                                                   )
                                      end
                                  end
                            else
                                Cell.new()
                            end
                        end
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARKfor_MIMARKeach_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKfor_MIMARKeach', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKfor_MIMARKeach'] = self.method( :__PAMARKfor_MIMARKeach_METHOD )
    @__PAMARKfor_MIMARKeach = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('__PAMARKfor_MIMARKeach_MIMARKoriginal') then
              trampCall(@__PAMARKfor_MIMARKeach_MIMARKoriginal)
            else raise NameError.new( "Error: undefined variable %for-each-original", "%for-each-original" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:624"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARKfilter_MIMARKoriginal_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKfilter_MIMARKoriginal', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKfilter_MIMARKoriginal'] = self.method( :__PAMARKfilter_MIMARKoriginal_METHOD )
    @__PAMARKfilter_MIMARKoriginal = 
    trampCall(
          Proc.new { |_pred,_lst| 
              begin #makeLetrec
                ___lambda = lambda { |_result,__PAMARKfilter_MIMARKarg1| 
                    _result                     = 
                    Cell.new()
                    __PAMARKfilter_MIMARKarg1                     = 
                      Proc.new { |_proc,_lst| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 629 );
                                _null_QUMARK(
                                    begin
                                        trampCall(_lst)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:629"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                           ) then
                            Cell.new()
                          else
                              begin #makeLet
                                ___lambda = lambda { |_v| 
                                    if ( 
                                      begin
                                          trampCall(_v)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:632"] + __e.backtrace ) ; raise __e
                                      end
                                     ) then
                                          begin #execFunc
                                            
                                            _result = 
                                            trampCall(
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 633 );
                                                      _cons(
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 633 );
                                                              _car(
                                                                  begin
                                                                      trampCall(_lst)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:633"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              )
                                                          end                                                        ,
                                                          begin
                                                              trampCall(_result)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:633"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                            )
                                          end
                                    end
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 634 );
                                        delayCall( '__PAMARKfilter_MIMARKarg1',  '%filter-arg1',
                                            begin
                                                trampCall(__PAMARKfilter_MIMARKarg1)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:634"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_proc)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:634"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 634 );
                                                  _cdr(
                                                      begin
                                                          trampCall(_lst)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:634"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end
                                        ]
                                                     )
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 631 );
                                          trampCall( callProcedure(  '_proc',  'proc',
                                              begin
                                                  trampCall(_proc)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:631"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 631 );
                                                    _car(
                                                        begin
                                                            trampCall(_lst)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:631"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end
                                          ]
                                                       ))
                                      end
                                           )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 636 );
                        trampCall( callProcedure(  '__PAMARKfilter_MIMARKarg1',  '%filter-arg1',
                            begin
                                trampCall(__PAMARKfilter_MIMARKarg1)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:636"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_pred)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:636"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                  trampCall(_lst)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:636"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     ))
                    end
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 637 );
                        delayCall( '_reverse',  'reverse',
                            begin
                              if @global_lisp_binding.has_key?('_reverse') then
                                trampCall(@_reverse)
                              else raise NameError.new( "Error: undefined variable reverse", "reverse" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:637"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_result)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:637"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil,nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARKfilter_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKfilter', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKfilter'] = self.method( :__PAMARKfilter_METHOD )
    @__PAMARKfilter = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('__PAMARKfilter_MIMARKoriginal') then
              trampCall(@__PAMARKfilter_MIMARKoriginal)
            else raise NameError.new( "Error: undefined variable %filter-original", "%filter-original" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:638"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARKfilter_MIMARKmap_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKfilter_MIMARKmap', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKfilter_MIMARKmap'] = self.method( :__PAMARKfilter_MIMARKmap_METHOD )
    @__PAMARKfilter_MIMARKmap = 
    trampCall(
          Proc.new { |_pred,_lst| 
              begin #makeLetrec
                ___lambda = lambda { |_result,__PAMARKfilter_MIMARKmap_MIMARKarg1| 
                    _result                     = 
                    Cell.new()
                    __PAMARKfilter_MIMARKmap_MIMARKarg1                     = 
                      Proc.new { |_proc,_lst| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 643 );
                                _null_QUMARK(
                                    begin
                                        trampCall(_lst)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:643"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                           ) then
                            Cell.new()
                          else
                              begin #makeLet
                                ___lambda = lambda { |_v| 
                                    if ( 
                                      begin
                                          trampCall(_v)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:646"] + __e.backtrace ) ; raise __e
                                      end
                                     ) then
                                          begin #execFunc
                                            
                                            _result = 
                                            trampCall(
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 647 );
                                                      _cons(
                                                          begin
                                                              trampCall(_v)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:647"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          begin
                                                              trampCall(_result)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:647"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                            )
                                          end
                                    end
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 648 );
                                        delayCall( '__PAMARKfilter_MIMARKmap_MIMARKarg1',  '%filter-map-arg1',
                                            begin
                                                trampCall(__PAMARKfilter_MIMARKmap_MIMARKarg1)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:648"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_proc)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:648"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 648 );
                                                  _cdr(
                                                      begin
                                                          trampCall(_lst)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:648"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end
                                        ]
                                                     )
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 645 );
                                          trampCall( callProcedure(  '_proc',  'proc',
                                              begin
                                                  trampCall(_proc)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:645"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 645 );
                                                    _car(
                                                        begin
                                                            trampCall(_lst)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:645"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end
                                          ]
                                                       ))
                                      end
                                           )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 650 );
                        trampCall( callProcedure(  '__PAMARKfilter_MIMARKmap_MIMARKarg1',  '%filter-map-arg1',
                            begin
                                trampCall(__PAMARKfilter_MIMARKmap_MIMARKarg1)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:650"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_pred)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:650"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                  trampCall(_lst)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:650"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     ))
                    end
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 651 );
                        delayCall( '_reverse',  'reverse',
                            begin
                              if @global_lisp_binding.has_key?('_reverse') then
                                trampCall(@_reverse)
                              else raise NameError.new( "Error: undefined variable reverse", "reverse" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:651"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_result)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:651"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil,nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._find_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_find', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_find'] = self.method( :_find_METHOD )
    @_find = 
    trampCall(
          Proc.new { |_pred,_lst| 
              begin #makeLet
                ___lambda = lambda { |_result| 
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 656 );
                          _null_QUMARK(
                              begin
                                  trampCall(_result)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:656"] + __e.backtrace ) ; raise __e
                              end
                          )
                      end
                     ) then
                      false
                    else
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 658 );
                            delayCall( '_car',  'car',
                                begin
                                  if @global_lisp_binding.has_key?('_car') then
                                    trampCall(@_car)
                                  else raise NameError.new( "Error: undefined variable car", "car" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:658"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_result)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:658"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         )
                        end
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 655 );
                          trampCall( self.__PAMARKfilter_METHOD(  '%filter',
                              begin
                                if @global_lisp_binding.has_key?('__PAMARKfilter') then
                                  trampCall(@__PAMARKfilter)
                                else raise NameError.new( "Error: undefined variable %filter", "%filter" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:655"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                begin
                                    trampCall(_pred)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:655"] + __e.backtrace ) ; raise __e
                                end                              ,
                                begin
                                    trampCall(_lst)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:655"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       ))
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._any_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_any', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_any'] = self.method( :_any_METHOD )
    @_any = 
    trampCall(
          Proc.new { |_pred,_lst| 
              begin #makeLet
                ___lambda = lambda { |_result| 
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 662 );
                          _null_QUMARK(
                              begin
                                  trampCall(_result)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:662"] + __e.backtrace ) ; raise __e
                              end
                          )
                      end
                     ) then
                      false
                    else
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 664 );
                            delayCall( '_car',  'car',
                                begin
                                  if @global_lisp_binding.has_key?('_car') then
                                    trampCall(@_car)
                                  else raise NameError.new( "Error: undefined variable car", "car" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:664"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_result)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:664"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         )
                        end
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 661 );
                          trampCall( self.__PAMARKfilter_MIMARKmap_METHOD(  '%filter-map',
                              begin
                                if @global_lisp_binding.has_key?('__PAMARKfilter_MIMARKmap') then
                                  trampCall(@__PAMARKfilter_MIMARKmap)
                                else raise NameError.new( "Error: undefined variable %filter-map", "%filter-map" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:661"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                begin
                                    trampCall(_pred)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:661"] + __e.backtrace ) ; raise __e
                                end                              ,
                                begin
                                    trampCall(_lst)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:661"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       ))
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._map_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_map', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_map'] = self.method( :_map_METHOD )
    @_map = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('__PAMARKmap') then
              trampCall(@__PAMARKmap)
            else raise NameError.new( "Error: undefined variable %map", "%map" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:666"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._for_MIMARKeach_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_for_MIMARKeach', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_for_MIMARKeach'] = self.method( :_for_MIMARKeach_METHOD )
    @_for_MIMARKeach = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('__PAMARKfor_MIMARKeach') then
              trampCall(@__PAMARKfor_MIMARKeach)
            else raise NameError.new( "Error: undefined variable %for-each", "%for-each" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:667"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._filter_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_filter', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_filter'] = self.method( :_filter_METHOD )
    @_filter = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('__PAMARKfilter') then
              trampCall(@__PAMARKfilter)
            else raise NameError.new( "Error: undefined variable %filter", "%filter" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:668"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._filter_MIMARKmap_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_filter_MIMARKmap', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_filter_MIMARKmap'] = self.method( :_filter_MIMARKmap_METHOD )
    @_filter_MIMARKmap = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('__PAMARKfilter_MIMARKmap') then
              trampCall(@__PAMARKfilter_MIMARKmap)
            else raise NameError.new( "Error: undefined variable %filter-map", "%filter-map" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:669"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARK_PAMARKoptional_MIMARKargument_MIMARKcheck_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARK_PAMARKoptional_MIMARKargument_MIMARKcheck', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARK_PAMARKoptional_MIMARKargument_MIMARKcheck'] = self.method( :__PAMARK_PAMARKoptional_MIMARKargument_MIMARKcheck_METHOD )
    @__PAMARK_PAMARKoptional_MIMARKargument_MIMARKcheck = 
    trampCall(
          Proc.new { |_target,_arg_MIMARKand_MIMARKbody| 
              begin #makeLet
                ___lambda = lambda { |_arg_MIMARKlist| 
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 679 );
                          trampCall( self._list_QUMARK_METHOD(  'list?',
                              begin
                                if @global_lisp_binding.has_key?('_list_QUMARK') then
                                  trampCall(@_list_QUMARK)
                                else raise NameError.new( "Error: undefined variable list?", "list?" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:679"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                begin
                                    trampCall(_arg_MIMARKlist)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:679"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       ))
                      end
                     ) then
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 680 );
                                trampCall( self._any_METHOD(  'any',
                                    begin
                                      if @global_lisp_binding.has_key?('_any') then
                                        trampCall(@_any)
                                      else raise NameError.new( "Error: undefined variable any", "any" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:680"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      Proc.new { |_x| 
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 680 );
                                              _keyword_QUMARK(
                                                  begin
                                                      trampCall(_x)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:680"] + __e.backtrace ) ; raise __e
                                                  end
                                              )
                                          end
                                      }                                    ,
                                      begin
                                          trampCall(_arg_MIMARKlist)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:680"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                           ) then
                                begin raise RuntimeError, 
                                  begin
                                    embedBacktraceInfo( "", 1 );
                                      trampCall( self._sprintf_METHOD(  'sprintf',
                                          begin
                                            if @global_lisp_binding.has_key?('_sprintf') then
                                              trampCall(@_sprintf)
                                            else raise NameError.new( "Error: undefined variable sprintf", "sprintf" ) end
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                          "Error: %s can't handle keyword argument."                                          ,
                                            begin
                                                trampCall(_target)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:681"] + __e.backtrace ) ; raise __e
                                            end
                                      ]
                                                   ))
                                  end
                                rescue => __e 
                                  __e.set_backtrace( [":1"] + __e.backtrace )
                                  raise __e
                                end 
                          end
                    end
                } ; ___lambda.call(
                      if ( 
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 676 );
                            trampCall( self._list_QUMARK_METHOD(  'list?',
                                begin
                                  if @global_lisp_binding.has_key?('_list_QUMARK') then
                                    trampCall(@_list_QUMARK)
                                  else raise NameError.new( "Error: undefined variable list?", "list?" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:676"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_arg_MIMARKand_MIMARKbody)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:676"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         ))
                        end
                       ) then
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 677 );
                              delayCall( '_car',  'car',
                                  begin
                                    if @global_lisp_binding.has_key?('_car') then
                                      trampCall(@_car)
                                    else raise NameError.new( "Error: undefined variable car", "car" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:677"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_arg_MIMARKand_MIMARKbody)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:677"] + __e.backtrace ) ; raise __e
                                    end
                              ]
                                           )
                          end
                      else
                        Cell.new()
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._lambda_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_lambda', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_lambda'] = self.method( :_lambda_METHOD )
    @_lambda = 
    trampCall(
          LispMacro.new { |*__rest__| _src = __rest__[0] ;  
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 685 );
                  trampCall( self.__PAMARK_PAMARKoptional_MIMARKargument_MIMARKcheck_METHOD(  '%%optional-argument-check',
                      begin
                        if @global_lisp_binding.has_key?('__PAMARK_PAMARKoptional_MIMARKargument_MIMARKcheck') then
                          trampCall(@__PAMARK_PAMARKoptional_MIMARKargument_MIMARKcheck)
                        else raise NameError.new( "Error: undefined variable %%optional-argument-check", "%%optional-argument-check" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:685"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                      :"lambda"                      ,
                        begin
                            trampCall(_src)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:685"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               ))
              end
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 686 );
                  trampCall( self.__PAMARKinternal_MIMARKdefine_MIMARKto_MIMARKletrec_METHOD(  '%internal-define-to-letrec',
                      begin
                        if @global_lisp_binding.has_key?('__PAMARKinternal_MIMARKdefine_MIMARKto_MIMARKletrec') then
                          trampCall(@__PAMARKinternal_MIMARKdefine_MIMARKto_MIMARKletrec)
                        else raise NameError.new( "Error: undefined variable %internal-define-to-letrec", "%internal-define-to-letrec" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:686"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                      :"lambda"                      ,
                        begin
                            trampCall(_src)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:686"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               ))
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._macro_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_macro', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_macro'] = self.method( :_macro_METHOD )
    @_macro = 
    trampCall(
          LispMacro.new { |*__rest__| _src = __rest__[0] ;  
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 690 );
                  trampCall( self.__PAMARK_PAMARKoptional_MIMARKargument_MIMARKcheck_METHOD(  '%%optional-argument-check',
                      begin
                        if @global_lisp_binding.has_key?('__PAMARK_PAMARKoptional_MIMARKargument_MIMARKcheck') then
                          trampCall(@__PAMARK_PAMARKoptional_MIMARKargument_MIMARKcheck)
                        else raise NameError.new( "Error: undefined variable %%optional-argument-check", "%%optional-argument-check" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:690"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                      :"macro"                      ,
                        begin
                            trampCall(_src)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:690"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               ))
              end
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 691 );
                  trampCall( self.__PAMARKinternal_MIMARKdefine_MIMARKto_MIMARKletrec_METHOD(  '%internal-define-to-letrec',
                      begin
                        if @global_lisp_binding.has_key?('__PAMARKinternal_MIMARKdefine_MIMARKto_MIMARKletrec') then
                          trampCall(@__PAMARKinternal_MIMARKdefine_MIMARKto_MIMARKletrec)
                        else raise NameError.new( "Error: undefined variable %internal-define-to-letrec", "%internal-define-to-letrec" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:691"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                      :"macro"                      ,
                        begin
                            trampCall(_src)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:691"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               ))
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARKtransform_MIMARKoptional_MIMARKarguments_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKtransform_MIMARKoptional_MIMARKarguments', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKtransform_MIMARKoptional_MIMARKarguments'] = self.method( :__PAMARKtransform_MIMARKoptional_MIMARKarguments_METHOD )
    @__PAMARKtransform_MIMARKoptional_MIMARKarguments = 
    trampCall(
          Proc.new { |_arg,_body_MIMARKlist| 
              begin #makeLet
                ___lambda = lambda { |_rest_MIMARKof_MIMARKopts| 
                    if ( 
                      begin
                          trampCall(_rest_MIMARKof_MIMARKopts)
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:698"] + __e.backtrace ) ; raise __e
                      end
                     ) then
                        begin #makeLet
                          ___lambda = lambda { |_opts,_rest_MIMARKof_MIMARKopts,__rest| 
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 703 );
                                  trampCall( self._for_MIMARKeach_METHOD(  'for-each',
                                      begin
                                        if @global_lisp_binding.has_key?('_for_MIMARKeach') then
                                          trampCall(@_for_MIMARKeach)
                                        else raise NameError.new( "Error: undefined variable for-each", "for-each" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:703"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        Proc.new { |_x| 
                                            begin #makeLet
                                              ___lambda = lambda { |_syntax_MIMARKis_MIMARKok| 
                                                  if ( 
                                                    begin
                                                      embedBacktraceInfo( "", 1 );
                                                        _not(
                                                            begin
                                                                trampCall(_syntax_MIMARKis_MIMARKok)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:708"] + __e.backtrace ) ; raise __e
                                                            end
                                                        )
                                                    end
                                                   ) then
                                                        begin raise RuntimeError, 
                                                          "Error:  :optional format is illegal ... " ' ' + 
                                                          _write_MIMARKto_MIMARKstring(
                                                            begin
                                                                trampCall(_arg)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:709"] + __e.backtrace ) ; raise __e
                                                            end
                                                          )
                                                        rescue => __e 
                                                          __e.set_backtrace( ["./lib/nendo/init.nnd:709"] + __e.backtrace )
                                                          raise __e
                                                        end 
                                                  end
                                              } ; ___lambda.call(
                                                    if ( 
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 705 );
                                                          _pair_QUMARK(
                                                              begin
                                                                  trampCall(_x)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:705"] + __e.backtrace ) ; raise __e
                                                              end
                                                          )
                                                      end
                                                     ) then
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 706 );
                                                            __EQMARK(
                                                              2                                                              ,
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 706 );
                                                                    _length(
                                                                        begin
                                                                            trampCall(_x)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:706"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    )
                                                                end
                                                            )
                                                        end
                                                    else
                                                      false
                                                    end
                                                         )
                                            end
                                        }                                      ,
                                        begin
                                            trampCall(_rest_MIMARKof_MIMARKopts)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:710"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               ))
                              end
                              begin #makeLetrec
                                ___lambda = lambda { |_loop| 
                                    _loop                                     = 
                                      Proc.new { |_arg| 
                                          if ( 
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 712 );
                                                _eq_QUMARK(
                                                  LispKeyword.new( "optional" )                                                  ,
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 712 );
                                                        _car(
                                                            begin
                                                                trampCall(_arg)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:712"] + __e.backtrace ) ; raise __e
                                                            end
                                                        )
                                                    end
                                                )
                                            end
                                           ) then
                                              begin
                                                  trampCall(_arg)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:713"] + __e.backtrace ) ; raise __e
                                              end
                                          else
                                              begin  #makeBegin
                                                  begin #execFunc
                                                    
                                                    _opts = 
                                                    trampCall(
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 715 );
                                                              _cons(
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 715 );
                                                                      _car(
                                                                          begin
                                                                              trampCall(_arg)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:715"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                      )
                                                                  end                                                                ,
                                                                  begin
                                                                      trampCall(_opts)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:715"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              )
                                                          end
                                                    )
                                                  end
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 716 );
                                                      trampCall( callProcedure(  '_loop',  'loop',
                                                          begin
                                                              trampCall(_loop)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:716"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 716 );
                                                                _cdr(
                                                                    begin
                                                                        trampCall(_arg)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:716"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                              end
                                          end
                                      }
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 711 );
                                        trampCall( callProcedure(  '_loop',  'loop',
                                            begin
                                                trampCall(_loop)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:711"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_arg)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:711"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     ))
                                    end
                                } ; ___lambda.call(
                                nil
                                           )
                              end
                              begin #makeLet
                                ___lambda = lambda { |_new_MIMARKarg| 
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 718 );
                                        delayCall( '_list',  'list',
                                            begin
                                              if @global_lisp_binding.has_key?('_list') then
                                                trampCall(@_list)
                                              else raise NameError.new( "Error: undefined variable list", "list" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:718"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                            :"lambda"                                            ,
                                              begin
                                                  trampCall(_new_MIMARKarg)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:719"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              begin
                                                embedBacktraceInfo( "", 1 );
                                                  _cons(
                                                    :"let"                                                    ,
                                                      begin
                                                        embedBacktraceInfo( "", 1 );
                                                          _cons(
                                                              begin
                                                                  trampCall(_rest_MIMARKof_MIMARKopts)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:721"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              begin
                                                                embedBacktraceInfo( "", 1 );
                                                                  trampCall( self._append_METHOD(  'append',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_append') then
                                                                          trampCall(@_append)
                                                                        else raise NameError.new( "Error: undefined variable append", "append" ) end
                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                  [
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 722 );
                                                                            trampCall( self._map_METHOD(  'map',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_map') then
                                                                                    trampCall(@_map)
                                                                                  else raise NameError.new( "Error: undefined variable map", "map" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:722"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  Proc.new { |_k,_n| 
                                                                                      begin
                                                                                        embedBacktraceInfo( "", 1 );
                                                                                          _cons(
                                                                                            :"when"                                                                                            ,
                                                                                              begin
                                                                                                embedBacktraceInfo( "", 1 );
                                                                                                  _cons(
                                                                                                      begin
                                                                                                        embedBacktraceInfo( "", 1 );
                                                                                                          _cons(
                                                                                                            :"<"                                                                                                            ,
                                                                                                              begin
                                                                                                                embedBacktraceInfo( "", 1 );
                                                                                                                  _cons(
                                                                                                                      begin
                                                                                                                          trampCall(_n)
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:724"] + __e.backtrace ) ; raise __e
                                                                                                                      end                                                                                                                    ,
                                                                                                                      begin
                                                                                                                        embedBacktraceInfo( "", 1 );
                                                                                                                          _cons(
                                                                                                                              begin
                                                                                                                                embedBacktraceInfo( "", 1 );
                                                                                                                                  _cons(
                                                                                                                                    :"length"                                                                                                                                    ,
                                                                                                                                      begin
                                                                                                                                        embedBacktraceInfo( "", 1 );
                                                                                                                                          _cons(
                                                                                                                                              begin
                                                                                                                                                  trampCall(__rest)
                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:724"] + __e.backtrace ) ; raise __e
                                                                                                                                              end                                                                                                                                            ,
                                                                                                                                            Cell.new()
                                                                                                                                          )
                                                                                                                                      end
                                                                                                                                  )
                                                                                                                              end                                                                                                                            ,
                                                                                                                            Cell.new()
                                                                                                                          )
                                                                                                                      end
                                                                                                                  )
                                                                                                              end
                                                                                                          )
                                                                                                      end                                                                                                    ,
                                                                                                      begin
                                                                                                        embedBacktraceInfo( "", 1 );
                                                                                                          _cons(
                                                                                                              begin
                                                                                                                embedBacktraceInfo( "", 1 );
                                                                                                                  _cons(
                                                                                                                    :"set!"                                                                                                                    ,
                                                                                                                      begin
                                                                                                                        embedBacktraceInfo( "", 1 );
                                                                                                                          _cons(
                                                                                                                              begin
                                                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 725 );
                                                                                                                                  _car(
                                                                                                                                      begin
                                                                                                                                          trampCall(_k)
                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:725"] + __e.backtrace ) ; raise __e
                                                                                                                                      end
                                                                                                                                  )
                                                                                                                              end                                                                                                                            ,
                                                                                                                              begin
                                                                                                                                embedBacktraceInfo( "", 1 );
                                                                                                                                  _cons(
                                                                                                                                      begin
                                                                                                                                        embedBacktraceInfo( "", 1 );
                                                                                                                                          _cons(
                                                                                                                                            :"nth"                                                                                                                                            ,
                                                                                                                                              begin
                                                                                                                                                embedBacktraceInfo( "", 1 );
                                                                                                                                                  _cons(
                                                                                                                                                      begin
                                                                                                                                                          trampCall(_n)
                                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:725"] + __e.backtrace ) ; raise __e
                                                                                                                                                      end                                                                                                                                                    ,
                                                                                                                                                      begin
                                                                                                                                                        embedBacktraceInfo( "", 1 );
                                                                                                                                                          _cons(
                                                                                                                                                              begin
                                                                                                                                                                  trampCall(__rest)
                                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:725"] + __e.backtrace ) ; raise __e
                                                                                                                                                              end                                                                                                                                                            ,
                                                                                                                                                            Cell.new()
                                                                                                                                                          )
                                                                                                                                                      end
                                                                                                                                                  )
                                                                                                                                              end
                                                                                                                                          )
                                                                                                                                      end                                                                                                                                    ,
                                                                                                                                    Cell.new()
                                                                                                                                  )
                                                                                                                              end
                                                                                                                          )
                                                                                                                      end
                                                                                                                  )
                                                                                                              end                                                                                                            ,
                                                                                                            Cell.new()
                                                                                                          )
                                                                                                      end
                                                                                                  )
                                                                                              end
                                                                                          )
                                                                                      end
                                                                                  }                                                                                ,
                                                                                  begin
                                                                                      trampCall(_rest_MIMARKof_MIMARKopts)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:726"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  begin
                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 727 );
                                                                                      trampCall( self._range_METHOD(  'range',
                                                                                          begin
                                                                                            if @global_lisp_binding.has_key?('_range') then
                                                                                              trampCall(@_range)
                                                                                            else raise NameError.new( "Error: undefined variable range", "range" ) end
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:727"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                      [
                                                                                            begin
                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 727 );
                                                                                                _length(
                                                                                                    begin
                                                                                                        trampCall(_rest_MIMARKof_MIMARKopts)
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:727"] + __e.backtrace ) ; raise __e
                                                                                                    end
                                                                                                )
                                                                                            end
                                                                                      ]
                                                                                                   ))
                                                                                  end
                                                                            ]
                                                                                         ))
                                                                        end                                                                      ,
                                                                        begin
                                                                            trampCall(_body_MIMARKlist)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:728"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                  ]
                                                                               ))
                                                              end
                                                          )
                                                      end
                                                  )
                                              end
                                        ]
                                                     )
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 717 );
                                          trampCall( self._apply_METHOD(  'apply',
                                              begin
                                                if @global_lisp_binding.has_key?('_apply') then
                                                  trampCall(@_apply)
                                                else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:717"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                  if @global_lisp_binding.has_key?('_list_ASMARK') then
                                                    trampCall(@_list_ASMARK)
                                                  else raise NameError.new( "Error: undefined variable list*", "list*" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:717"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 717 );
                                                    trampCall( self._append_METHOD(  'append',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_append') then
                                                            trampCall(@_append)
                                                          else raise NameError.new( "Error: undefined variable append", "append" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:717"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 717 );
                                                              _reverse(
                                                                  begin
                                                                      trampCall(_opts)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:717"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              )
                                                          end                                                        ,
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 717 );
                                                              trampCall( self._list_METHOD(  'list',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_list') then
                                                                      trampCall(@_list)
                                                                    else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:717"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                    begin
                                                                        trampCall(__rest)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:717"] + __e.backtrace ) ; raise __e
                                                                    end
                                                              ]
                                                                           ))
                                                          end
                                                    ]
                                                                 ))
                                                end
                                          ]
                                                       ))
                                      end
                                           )
                              end
                          } ; ___lambda.call(
                              Cell.new()                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 700 );
                                    _cdr(
                                        begin
                                            trampCall(_rest_MIMARKof_MIMARKopts)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:700"] + __e.backtrace ) ; raise __e
                                        end
                                    )
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 701 );
                                    trampCall( self._gensym_METHOD(  'gensym',
                                        begin
                                          if @global_lisp_binding.has_key?('_gensym') then
                                            trampCall(@_gensym)
                                          else raise NameError.new( "Error: undefined variable gensym", "gensym" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:701"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                    ]
                                                 ))
                                end
                                     )
                        end
                    else
                        begin
                          embedBacktraceInfo( "", 1 );
                            delayCall( '_cons',  'cons',
                                begin
                                  if @global_lisp_binding.has_key?('_cons') then
                                    trampCall(@_cons)
                                  else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                :"lambda"                                ,
                                  begin
                                    embedBacktraceInfo( "", 1 );
                                      _cons(
                                          begin
                                              trampCall(_arg)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:729"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          begin
                                              trampCall(_body_MIMARKlist)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:729"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                            ]
                                         )
                        end
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 698 );
                          trampCall( self._memq_METHOD(  'memq',
                              begin
                                if @global_lisp_binding.has_key?('_memq') then
                                  trampCall(@_memq)
                                else raise NameError.new( "Error: undefined variable memq", "memq" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:698"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                              LispKeyword.new( "optional" )                              ,
                                begin
                                    trampCall(_arg)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:698"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       ))
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARKexpand_MIMARKdefine_MIMARKform_MIMARKlambda_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKexpand_MIMARKdefine_MIMARKform_MIMARKlambda', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKexpand_MIMARKdefine_MIMARKform_MIMARKlambda'] = self.method( :__PAMARKexpand_MIMARKdefine_MIMARKform_MIMARKlambda_METHOD )
    @__PAMARKexpand_MIMARKdefine_MIMARKform_MIMARKlambda = 
    trampCall(
          Proc.new { |_arg,_body_MIMARKlist| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 734 );
                    _pair_QUMARK(
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 734 );
                            _cdr(
                                begin
                                    trampCall(_arg)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:734"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                    )
                end
               ) then
                  if ( 
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 735 );
                        _pair_QUMARK(
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 735 );
                                _car(
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 735 );
                                        _cdr(
                                            begin
                                                trampCall(_arg)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:735"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    end
                                )
                            end
                        )
                    end
                   ) then
                      begin raise RuntimeError, 
                      "Error: define syntax error."
                      rescue => __e 
                        __e.set_backtrace( ["./lib/nendo/init.nnd:736"] + __e.backtrace )
                        raise __e
                      end 
                  end
              end
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 737 );
                  delayCall( '_cons',  'cons',
                      begin
                        if @global_lisp_binding.has_key?('_cons') then
                          trampCall(@_cons)
                        else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:737"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                      :"define"                      ,
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 738 );
                            trampCall( self._list_METHOD(  'list',
                                begin
                                  if @global_lisp_binding.has_key?('_list') then
                                    trampCall(@_list)
                                  else raise NameError.new( "Error: undefined variable list", "list" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:738"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 738 );
                                      _car(
                                          begin
                                              trampCall(_arg)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:738"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end                                ,
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 739 );
                                      trampCall( self.__PAMARKtransform_MIMARKoptional_MIMARKarguments_METHOD(  '%transform-optional-arguments',
                                          begin
                                            if @global_lisp_binding.has_key?('__PAMARKtransform_MIMARKoptional_MIMARKarguments') then
                                              trampCall(@__PAMARKtransform_MIMARKoptional_MIMARKarguments)
                                            else raise NameError.new( "Error: undefined variable %transform-optional-arguments", "%transform-optional-arguments" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:739"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 739 );
                                                _cdr(
                                                    begin
                                                        trampCall(_arg)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:739"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end                                          ,
                                            begin
                                                trampCall(_body_MIMARKlist)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:739"] + __e.backtrace ) ; raise __e
                                            end
                                      ]
                                                   ))
                                  end
                            ]
                                         ))
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._case_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_case', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_case'] = self.method( :_case_METHOD )
    @_case = 
    trampCall(
          LispMacro.new { |_cond_MIMARKexp,*__rest__| _body = __rest__[0] ;  
              begin #makeLetrec
                ___lambda = lambda { |_case_MIMARKblock,_case_MIMARKiter| 
                    _case_MIMARKblock                     = 
                      Proc.new { |_val,*__rest__| _elem = __rest__[0] ;  
                          begin #makeLet
                            ___lambda = lambda { |_block| 
                                begin #makeLet
                                  ___lambda = lambda { |_cond_MIMARKvals,_body| 
                                      begin #makeLet
                                        ___lambda = lambda { |_v| 
                                            begin
                                              embedBacktraceInfo( "", 1 );
                                                _cons(
                                                    begin
                                                      embedBacktraceInfo( "", 1 );
                                                        _cons(
                                                            begin
                                                                trampCall(_v)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:760"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            begin
                                                                trampCall(_body)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:761"] + __e.backtrace ) ; raise __e
                                                            end
                                                        )
                                                    end                                                  ,
                                                  Cell.new()
                                                )
                                            end
                                        } ; ___lambda.call(
                                              if ( 
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 753 );
                                                    _eq_QUMARK(
                                                      :"else"                                                      ,
                                                        begin
                                                            trampCall(_cond_MIMARKvals)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:753"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end
                                               ) then
                                                  begin
                                                      trampCall(_cond_MIMARKvals)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:754"] + __e.backtrace ) ; raise __e
                                                  end
                                              else
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 755 );
                                                      _cons(
                                                        :"or"                                                        ,
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 756 );
                                                              trampCall( self._map_METHOD(  'map',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_map') then
                                                                      trampCall(@_map)
                                                                    else raise NameError.new( "Error: undefined variable map", "map" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:756"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                    Proc.new { |_x| 
                                                                        begin
                                                                          embedBacktraceInfo( "", 1 );
                                                                            _cons(
                                                                              :"eqv?"                                                                              ,
                                                                                begin
                                                                                  embedBacktraceInfo( "", 1 );
                                                                                    _cons(
                                                                                        begin
                                                                                          embedBacktraceInfo( "", 1 );
                                                                                            _cons(
                                                                                              :"quote"                                                                                              ,
                                                                                                begin
                                                                                                  embedBacktraceInfo( "", 1 );
                                                                                                    _cons(
                                                                                                        begin
                                                                                                            trampCall(_x)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:758"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                      Cell.new()
                                                                                                    )
                                                                                                end
                                                                                            )
                                                                                        end                                                                                      ,
                                                                                        begin
                                                                                          embedBacktraceInfo( "", 1 );
                                                                                            _cons(
                                                                                                begin
                                                                                                    trampCall(_val)
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:758"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,
                                                                                              Cell.new()
                                                                                            )
                                                                                        end
                                                                                    )
                                                                                end
                                                                            )
                                                                        end
                                                                    }                                                                  ,
                                                                    begin
                                                                        trampCall(_cond_MIMARKvals)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:759"] + __e.backtrace ) ; raise __e
                                                                    end
                                                              ]
                                                                           ))
                                                          end
                                                      )
                                                  end
                                              end
                                                   )
                                      end
                                  } ; ___lambda.call(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 750 );
                                            _car(
                                                begin
                                                    trampCall(_block)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:750"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 751 );
                                            _cdr(
                                                begin
                                                    trampCall(_block)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:751"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                             )
                                end
                            } ; ___lambda.call(
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 749 );
                                      _car(
                                          begin
                                              trampCall(_elem)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:749"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                                       )
                          end
                      }
                    _case_MIMARKiter                     = 
                      Proc.new { |_val,_lst| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 765 );
                                _null_QUMARK(
                                    begin
                                        trampCall(_lst)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:765"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                           ) then
                              Cell.new()
                          else
                              if ( 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 767 );
                                    _eq_QUMARK(
                                      1                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 767 );
                                            _length(
                                                begin
                                                    trampCall(_lst)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:767"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                end
                               ) then
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 768 );
                                        trampCall( callProcedure(  '_case_MIMARKblock',  'case-block',
                                            begin
                                                trampCall(_case_MIMARKblock)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:768"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_val)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:768"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 768 );
                                                  _car(
                                                      begin
                                                          trampCall(_lst)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:768"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end
                                        ]
                                                     ))
                                    end
                              else
                                  if ( 
                                  true
                                   ) then
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 770 );
                                            trampCall( self._append_METHOD(  'append',
                                                begin
                                                  if @global_lisp_binding.has_key?('_append') then
                                                    trampCall(@_append)
                                                  else raise NameError.new( "Error: undefined variable append", "append" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:770"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 770 );
                                                      trampCall( callProcedure(  '_case_MIMARKblock',  'case-block',
                                                          begin
                                                              trampCall(_case_MIMARKblock)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:770"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_val)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:770"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 770 );
                                                                _car(
                                                                    begin
                                                                        trampCall(_lst)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:770"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                      ]
                                                                   ))
                                                  end                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 771 );
                                                      trampCall( callProcedure(  '_case_MIMARKiter',  'case-iter',
                                                          begin
                                                              trampCall(_case_MIMARKiter)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:771"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_val)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:771"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 771 );
                                                                _cdr(
                                                                    begin
                                                                        trampCall(_lst)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:771"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                            ]
                                                         ))
                                        end
                                  else
                                      Cell.new()
                                  end
                              end
                          end
                      }
                    begin #makeLet
                      ___lambda = lambda { |_sym| 
                          begin
                            embedBacktraceInfo( "", 1 );
                              _cons(
                                :"let1"                                ,
                                  begin
                                    embedBacktraceInfo( "", 1 );
                                      _cons(
                                          begin
                                              trampCall(_sym)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:774"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          begin
                                            embedBacktraceInfo( "", 1 );
                                              _cons(
                                                  begin
                                                      trampCall(_cond_MIMARKexp)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:774"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  begin
                                                    embedBacktraceInfo( "", 1 );
                                                      _cons(
                                                          begin
                                                            embedBacktraceInfo( "", 1 );
                                                              _cons(
                                                                :"cond"                                                                ,
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 776 );
                                                                      trampCall( callProcedure(  '_case_MIMARKiter',  'case-iter',
                                                                          begin
                                                                              trampCall(_case_MIMARKiter)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:776"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                      [
                                                                            begin
                                                                                trampCall(_sym)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:776"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            begin
                                                                                trampCall(_body)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:776"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                      ]
                                                                                   ))
                                                                  end
                                                              )
                                                          end                                                        ,
                                                        Cell.new()
                                                      )
                                                  end
                                              )
                                          end
                                      )
                                  end
                              )
                          end
                      } ; ___lambda.call(
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 773 );
                                trampCall( self._gensym_METHOD(  'gensym',
                                    begin
                                      if @global_lisp_binding.has_key?('_gensym') then
                                        trampCall(@_gensym)
                                      else raise NameError.new( "Error: undefined variable gensym", "gensym" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:773"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                ]
                                             ))
                            end
                                 )
                    end
                } ; ___lambda.call(
                nil,nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._let_ASMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_let_ASMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_let_ASMARK'] = self.method( :_let_ASMARK_METHOD )
    @_let_ASMARK = 
    trampCall(
          LispMacro.new { |_exps,*__rest__| _body = __rest__[0] ;  
              begin #makeLetrec
                ___lambda = lambda { |_let_ASMARK_MIMARKexpand| 
                    _let_ASMARK_MIMARKexpand                     = 
                      Proc.new { |_rest,_body| 
                          begin #makeLet
                            ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30423| 
                                if ( 
                                  begin #makeLet
                                    ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30427| 
                                        if ( 
                                          begin
                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30427)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                         ) then
                                            begin
                                                trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30427)
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end
                                        else
                                          false
                                        end
                                    } ; ___lambda.call(
                                          begin
                                            embedBacktraceInfo( "", 1 );
                                              trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                      trampCall(@_eqv_QUMARK)
                                                    else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                  0                                                  ,
                                                    begin
                                                        trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30423)
                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                    end
                                              ]
                                                           ))
                                          end
                                               )
                                  end
                                 ) then
                                    Cell.new()
                                else
                                    if ( 
                                      begin #makeLet
                                        ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30428| 
                                            if ( 
                                              begin
                                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30428)
                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                              end
                                             ) then
                                                begin
                                                    trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30428)
                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                end
                                            else
                                              false
                                            end
                                        } ; ___lambda.call(
                                              begin
                                                embedBacktraceInfo( "", 1 );
                                                  trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                          trampCall(@_eqv_QUMARK)
                                                        else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                      1                                                      ,
                                                        begin
                                                            trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30423)
                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                        end
                                                  ]
                                                               ))
                                              end
                                                   )
                                      end
                                     ) then
                                          begin
                                            embedBacktraceInfo( "", 1 );
                                              _cons(
                                                :"let"                                                ,
                                                  begin
                                                    embedBacktraceInfo( "", 1 );
                                                      _cons(
                                                          begin
                                                            embedBacktraceInfo( "", 1 );
                                                              _cons(
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 786 );
                                                                      _car(
                                                                          begin
                                                                              trampCall(_rest)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:786"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                      )
                                                                  end                                                                ,
                                                                Cell.new()
                                                              )
                                                          end                                                        ,
                                                          begin
                                                              trampCall(_body)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:787"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                              )
                                          end
                                    else
                                        if ( 
                                        true
                                         ) then
                                              begin
                                                embedBacktraceInfo( "", 1 );
                                                  _cons(
                                                    :"let"                                                    ,
                                                      begin
                                                        embedBacktraceInfo( "", 1 );
                                                          _cons(
                                                              begin
                                                                embedBacktraceInfo( "", 1 );
                                                                  _cons(
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 789 );
                                                                          _car(
                                                                              begin
                                                                                  trampCall(_rest)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:789"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          )
                                                                      end                                                                    ,
                                                                    Cell.new()
                                                                  )
                                                              end                                                            ,
                                                              begin
                                                                embedBacktraceInfo( "", 1 );
                                                                  _cons(
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 790 );
                                                                          trampCall( callProcedure(  '_let_ASMARK_MIMARKexpand',  'let*-expand',
                                                                              begin
                                                                                  trampCall(_let_ASMARK_MIMARKexpand)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:790"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                                begin
                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 790 );
                                                                                    _cdr(
                                                                                        begin
                                                                                            trampCall(_rest)
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:790"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                    )
                                                                                end                                                                              ,
                                                                                begin
                                                                                    trampCall(_body)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:790"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                          ]
                                                                                       ))
                                                                      end                                                                    ,
                                                                    Cell.new()
                                                                  )
                                                              end
                                                          )
                                                      end
                                                  )
                                              end
                                        else
                                            Cell.new()
                                        end
                                    end
                                end
                            } ; ___lambda.call(
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 782 );
                                      _length(
                                          begin
                                              trampCall(_rest)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:782"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                                       )
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 791 );
                        trampCall( callProcedure(  '_let_ASMARK_MIMARKexpand',  'let*-expand',
                            begin
                                trampCall(_let_ASMARK_MIMARKexpand)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:791"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_exps)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:791"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                  trampCall(_body)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:791"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     ))
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._begin0_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_begin0', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_begin0'] = self.method( :_begin0_METHOD )
    @_begin0 = 
    trampCall(
          LispMacro.new { |*__rest__| _body = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 796 );
                    _null_QUMARK(
                        begin
                            trampCall(_body)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:796"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                Cell.new(:"begin",Cell.new(false))
              else
                  begin #makeLet
                    ___lambda = lambda { |_result| 
                        begin
                          embedBacktraceInfo( "", 1 );
                            _cons(
                              :"receive"                              ,
                                begin
                                  embedBacktraceInfo( "", 1 );
                                    _cons(
                                        begin
                                            trampCall(_result)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:800"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "", 1 );
                                            _cons(
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 800 );
                                                    _car(
                                                        begin
                                                            trampCall(_body)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:800"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end                                              ,
                                                begin
                                                  embedBacktraceInfo( "", 1 );
                                                    trampCall( self._append_METHOD(  'append',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_append') then
                                                            trampCall(@_append)
                                                          else raise NameError.new( "Error: undefined variable append", "append" ) end
                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 801 );
                                                              _cdr(
                                                                  begin
                                                                      trampCall(_body)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:801"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              )
                                                          end                                                        ,
                                                          begin
                                                            embedBacktraceInfo( "", 1 );
                                                              _cons(
                                                                  begin
                                                                    embedBacktraceInfo( "", 1 );
                                                                      _cons(
                                                                        :"apply"                                                                        ,
                                                                          begin
                                                                            embedBacktraceInfo( "", 1 );
                                                                              _cons(
                                                                                :"values"                                                                                ,
                                                                                  begin
                                                                                    embedBacktraceInfo( "", 1 );
                                                                                      _cons(
                                                                                          begin
                                                                                              trampCall(_result)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:802"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                        Cell.new()
                                                                                      )
                                                                                  end
                                                                              )
                                                                          end
                                                                      )
                                                                  end                                                                ,
                                                                Cell.new()
                                                              )
                                                          end
                                                    ]
                                                                 ))
                                                end
                                            )
                                        end
                                    )
                                end
                            )
                        end
                    } ; ___lambda.call(
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 799 );
                              trampCall( self._gensym_METHOD(  'gensym',
                                  begin
                                    if @global_lisp_binding.has_key?('_gensym') then
                                      trampCall(@_gensym)
                                    else raise NameError.new( "Error: undefined variable gensym", "gensym" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:799"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                              ]
                                           ))
                          end
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._values_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_values', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_values'] = self.method( :_values_METHOD )
    @_values = 
    trampCall(
          Proc.new { |*__rest__| _args = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30429| 
                    if ( 
                      begin #makeLet
                        ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30432| 
                            if ( 
                              begin
                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30432)
                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                              end
                             ) then
                                begin
                                    trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30432)
                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                end
                            else
                              false
                            end
                        } ; ___lambda.call(
                              begin
                                embedBacktraceInfo( "", 1 );
                                  trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                      begin
                                        if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                          trampCall(@_eqv_QUMARK)
                                        else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                      1                                      ,
                                        begin
                                            trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30429)
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               ))
                              end
                                   )
                      end
                     ) then
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 811 );
                              delayCall( '_car',  'car',
                                  begin
                                    if @global_lisp_binding.has_key?('_car') then
                                      trampCall(@_car)
                                    else raise NameError.new( "Error: undefined variable car", "car" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:811"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_args)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:811"] + __e.backtrace ) ; raise __e
                                    end
                              ]
                                           )
                          end
                    else
                        if ( 
                        true
                         ) then
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 813 );
                                  delayCall( '_make_MIMARKvalues',  'make-values',
                                      begin
                                        if @global_lisp_binding.has_key?('_make_MIMARKvalues') then
                                          trampCall(@_make_MIMARKvalues)
                                        else raise NameError.new( "Error: undefined variable make-values", "make-values" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:813"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_args)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:813"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               )
                              end
                        else
                            Cell.new()
                        end
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 809 );
                          _length(
                              begin
                                  trampCall(_args)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:809"] + __e.backtrace ) ; raise __e
                              end
                          )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._call_MIMARKwith_MIMARKvalues_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_call_MIMARKwith_MIMARKvalues', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_call_MIMARKwith_MIMARKvalues'] = self.method( :_call_MIMARKwith_MIMARKvalues_METHOD )
    @_call_MIMARKwith_MIMARKvalues = 
    trampCall(
          Proc.new { |_producer,_consumer| 
              begin #makeLet
                ___lambda = lambda { |_v| 
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 818 );
                          trampCall( self._values_QUMARK_METHOD(  'values?',
                              begin
                                if @global_lisp_binding.has_key?('_values_QUMARK') then
                                  trampCall(@_values_QUMARK)
                                else raise NameError.new( "Error: undefined variable values?", "values?" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:818"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                begin
                                    trampCall(_v)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:818"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       ))
                      end
                     ) then
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 819 );
                            delayCall( '_apply',  'apply',
                                begin
                                  if @global_lisp_binding.has_key?('_apply') then
                                    trampCall(@_apply)
                                  else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:819"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_consumer)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:819"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 819 );
                                      trampCall( self._values_MIMARKvalues_METHOD(  'values-values',
                                          begin
                                            if @global_lisp_binding.has_key?('_values_MIMARKvalues') then
                                              trampCall(@_values_MIMARKvalues)
                                            else raise NameError.new( "Error: undefined variable values-values", "values-values" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:819"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_v)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:819"] + __e.backtrace ) ; raise __e
                                            end
                                      ]
                                                   ))
                                  end
                            ]
                                         )
                        end
                    else
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 820 );
                            delayCall( '_consumer',  'consumer',
                                begin
                                    trampCall(_consumer)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:820"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_v)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:820"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         )
                        end
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 817 );
                          trampCall( callProcedure(  '_producer',  'producer',
                              begin
                                  trampCall(_producer)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:817"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                          ]
                                       ))
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._receive_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_receive', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_receive'] = self.method( :_receive_METHOD )
    @_receive = 
    trampCall(
          LispMacro.new { |_vars,_expr,*__rest__| _body = __rest__[0] ;  
              begin
                embedBacktraceInfo( "", 1 );
                  _cons(
                    :"call-with-values"                    ,
                      begin
                        embedBacktraceInfo( "", 1 );
                          _cons(
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _cons(
                                    :"lambda"                                    ,
                                      begin
                                        embedBacktraceInfo( "", 1 );
                                          _cons(
                                            Cell.new()                                            ,
                                              begin
                                                embedBacktraceInfo( "", 1 );
                                                  _cons(
                                                      begin
                                                          trampCall(_expr)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:826"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                    Cell.new()
                                                  )
                                              end
                                          )
                                      end
                                  )
                              end                            ,
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _cons(
                                      begin
                                        embedBacktraceInfo( "", 1 );
                                          _cons(
                                            :"lambda"                                            ,
                                              begin
                                                embedBacktraceInfo( "", 1 );
                                                  _cons(
                                                      begin
                                                          trampCall(_vars)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:827"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      begin
                                                          trampCall(_body)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:827"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end
                                          )
                                      end                                    ,
                                    Cell.new()
                                  )
                              end
                          )
                      end
                  )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._get_MIMARKkeyword_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_get_MIMARKkeyword', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_get_MIMARKkeyword'] = self.method( :_get_MIMARKkeyword_METHOD )
    @_get_MIMARKkeyword = 
    trampCall(
          Proc.new { |_key,_kv_MIMARKlist,*__rest__| _fallback = __rest__[0] ;  
              if ( 
                begin #makeLet
                  ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30435| 
                      if ( 
                        begin
                            trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30435)
                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                        end
                       ) then
                          begin
                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30435)
                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                          end
                      else
                          begin #makeLet
                            ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30436| 
                                if ( 
                                  begin
                                      trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30436)
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                                 ) then
                                    begin
                                        trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30436)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                else
                                  false
                                end
                            } ; ___lambda.call(
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 835 );
                                      ( 
                                      2                                      >=
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 835 );
                                            _length(
                                                begin
                                                    trampCall(_kv_MIMARKlist)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:835"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                       ) 
                                  end
                                       )
                          end
                      end
                  } ; ___lambda.call(
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 835 );
                            _not(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 835 );
                                    trampCall( self._list_QUMARK_METHOD(  'list?',
                                        begin
                                          if @global_lisp_binding.has_key?('_list_QUMARK') then
                                            trampCall(@_list_QUMARK)
                                          else raise NameError.new( "Error: undefined variable list?", "list?" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:835"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(_kv_MIMARKlist)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:835"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 ))
                                end
                            )
                        end
                             )
                end
               ) then
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 836 );
                          _null_QUMARK(
                              begin
                                  trampCall(_fallback)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:836"] + __e.backtrace ) ; raise __e
                              end
                          )
                      end
                     ) then
                        begin raise RuntimeError, 
                          begin
                            embedBacktraceInfo( "", 1 );
                              trampCall( self._sprintf_METHOD(  'sprintf',
                                  begin
                                    if @global_lisp_binding.has_key?('_sprintf') then
                                      trampCall(@_sprintf)
                                    else raise NameError.new( "Error: undefined variable sprintf", "sprintf" ) end
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                  "Error: imcomplete key list: %s
"                                  ,
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 837 );
                                        _write_MIMARKto_MIMARKstring(
                                            begin
                                                trampCall(_kv_MIMARKlist)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:837"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    end
                              ]
                                           ))
                          end
                        rescue => __e 
                          __e.set_backtrace( [":1"] + __e.backtrace )
                          raise __e
                        end 
                    else
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 838 );
                            delayCall( '_car',  'car',
                                begin
                                  if @global_lisp_binding.has_key?('_car') then
                                    trampCall(@_car)
                                  else raise NameError.new( "Error: undefined variable car", "car" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:838"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_fallback)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:838"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         )
                        end
                    end
              else
                  if ( 
                  true
                   ) then
                        begin #makeLetrec
                          ___lambda = lambda { |_loop| 
                              _loop                               = 
                                Proc.new { |_k,_v,_rest| 
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 843 );
                                          _eq_QUMARK(
                                              begin
                                                  trampCall(_k)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:843"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              begin
                                                  trampCall(_key)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:843"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                     ) then
                                        begin
                                            trampCall(_v)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:844"] + __e.backtrace ) ; raise __e
                                        end
                                    else
                                        begin #makeLet
                                          ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30437| 
                                              if ( 
                                                begin #makeLet
                                                  ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30441| 
                                                      if ( 
                                                        begin
                                                            trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30441)
                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                        end
                                                       ) then
                                                          begin
                                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30441)
                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                          end
                                                      else
                                                        false
                                                      end
                                                  } ; ___lambda.call(
                                                        begin
                                                          embedBacktraceInfo( "", 1 );
                                                            trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                    trampCall(@_eqv_QUMARK)
                                                                  else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                0                                                                ,
                                                                  begin
                                                                      trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30437)
                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                  end
                                                            ]
                                                                         ))
                                                        end
                                                             )
                                                end
                                               ) then
                                                    if ( 
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 847 );
                                                          _null_QUMARK(
                                                              begin
                                                                  trampCall(_fallback)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:847"] + __e.backtrace ) ; raise __e
                                                              end
                                                          )
                                                      end
                                                     ) then
                                                        begin raise RuntimeError, 
                                                          begin
                                                            embedBacktraceInfo( "", 1 );
                                                              trampCall( self._sprintf_METHOD(  'sprintf',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_sprintf') then
                                                                      trampCall(@_sprintf)
                                                                    else raise NameError.new( "Error: undefined variable sprintf", "sprintf" ) end
                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                  "Error: value for key %s is not provided : %s
"                                                                  ,
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 848 );
                                                                        _write_MIMARKto_MIMARKstring(
                                                                            begin
                                                                                trampCall(_key)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:848"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                        )
                                                                    end                                                                  ,
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 848 );
                                                                        _write_MIMARKto_MIMARKstring(
                                                                            begin
                                                                                trampCall(_kv_MIMARKlist)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:848"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                        )
                                                                    end
                                                              ]
                                                                           ))
                                                          end
                                                        rescue => __e 
                                                          __e.set_backtrace( [":1"] + __e.backtrace )
                                                          raise __e
                                                        end 
                                                    else
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 849 );
                                                            delayCall( '_car',  'car',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_car') then
                                                                    trampCall(@_car)
                                                                  else raise NameError.new( "Error: undefined variable car", "car" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:849"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  begin
                                                                      trampCall(_fallback)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:849"] + __e.backtrace ) ; raise __e
                                                                  end
                                                            ]
                                                                         )
                                                        end
                                                    end
                                              else
                                                  if ( 
                                                    begin #makeLet
                                                      ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30442| 
                                                          if ( 
                                                            begin
                                                                trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30442)
                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                            end
                                                           ) then
                                                              begin
                                                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30442)
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end
                                                          else
                                                            false
                                                          end
                                                      } ; ___lambda.call(
                                                            begin
                                                              embedBacktraceInfo( "", 1 );
                                                                trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                        trampCall(@_eqv_QUMARK)
                                                                      else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                    1                                                                    ,
                                                                      begin
                                                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30437)
                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                ]
                                                                             ))
                                                            end
                                                                 )
                                                    end
                                                   ) then
                                                        begin raise RuntimeError, 
                                                          begin
                                                            embedBacktraceInfo( "", 1 );
                                                              trampCall( self._sprintf_METHOD(  'sprintf',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_sprintf') then
                                                                      trampCall(@_sprintf)
                                                                    else raise NameError.new( "Error: undefined variable sprintf", "sprintf" ) end
                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                  "Error: incomplete key list: %s
"                                                                  ,
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 851 );
                                                                        _write_MIMARKto_MIMARKstring(
                                                                            begin
                                                                                trampCall(_kv_MIMARKlist)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:851"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                        )
                                                                    end
                                                              ]
                                                                           ))
                                                          end
                                                        rescue => __e 
                                                          __e.set_backtrace( [":1"] + __e.backtrace )
                                                          raise __e
                                                        end 
                                                  else
                                                      if ( 
                                                      true
                                                       ) then
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 853 );
                                                                delayCall( '_loop',  'loop',
                                                                    begin
                                                                        trampCall(_loop)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:853"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 853 );
                                                                          _car(
                                                                              begin
                                                                                  trampCall(_rest)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:853"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          )
                                                                      end                                                                    ,
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 854 );
                                                                          trampCall( self._cadr_METHOD(  'cadr',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_cadr') then
                                                                                  trampCall(@_cadr)
                                                                                else raise NameError.new( "Error: undefined variable cadr", "cadr" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:854"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                                begin
                                                                                    trampCall(_rest)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:854"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                          ]
                                                                                       ))
                                                                      end                                                                    ,
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 855 );
                                                                          trampCall( self._cddr_METHOD(  'cddr',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_cddr') then
                                                                                  trampCall(@_cddr)
                                                                                else raise NameError.new( "Error: undefined variable cddr", "cddr" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:855"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                                begin
                                                                                    trampCall(_rest)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:855"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                          ]
                                                                                       ))
                                                                      end
                                                                ]
                                                                             )
                                                            end
                                                      else
                                                          Cell.new()
                                                      end
                                                  end
                                              end
                                          } ; ___lambda.call(
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 845 );
                                                    _length(
                                                        begin
                                                            trampCall(_rest)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:845"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end
                                                     )
                                        end
                                    end
                                }
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 840 );
                                  delayCall( '_loop',  'loop',
                                      begin
                                          trampCall(_loop)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:840"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 840 );
                                            _car(
                                                begin
                                                    trampCall(_kv_MIMARKlist)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:840"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 841 );
                                            trampCall( self._cadr_METHOD(  'cadr',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cadr') then
                                                    trampCall(@_cadr)
                                                  else raise NameError.new( "Error: undefined variable cadr", "cadr" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:841"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_kv_MIMARKlist)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:841"] + __e.backtrace ) ; raise __e
                                                  end
                                            ]
                                                         ))
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 842 );
                                            trampCall( self._cddr_METHOD(  'cddr',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cddr') then
                                                    trampCall(@_cddr)
                                                  else raise NameError.new( "Error: undefined variable cddr", "cddr" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:842"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_kv_MIMARKlist)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:842"] + __e.backtrace ) ; raise __e
                                                  end
                                            ]
                                                         ))
                                        end
                                  ]
                                               )
                              end
                          } ; ___lambda.call(
                          nil
                                     )
                        end
                  else
                      Cell.new()
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._keyword_MIMARK_GTMARKsymbol_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_keyword_MIMARK_GTMARKsymbol', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_keyword_MIMARK_GTMARKsymbol'] = self.method( :_keyword_MIMARK_GTMARKsymbol_METHOD )
    @_keyword_MIMARK_GTMARKsymbol = 
    trampCall(
          Proc.new { |_kw| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 858 );
                  delayCall( '_string_MIMARK_GTMARKsymbol',  'string->symbol',
                      begin
                        if @global_lisp_binding.has_key?('_string_MIMARK_GTMARKsymbol') then
                          trampCall(@_string_MIMARK_GTMARKsymbol)
                        else raise NameError.new( "Error: undefined variable string->symbol", "string->symbol" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:858"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 859 );
                            trampCall( self._keyword_MIMARK_GTMARKstring_METHOD(  'keyword->string',
                                begin
                                  if @global_lisp_binding.has_key?('_keyword_MIMARK_GTMARKstring') then
                                    trampCall(@_keyword_MIMARK_GTMARKstring)
                                  else raise NameError.new( "Error: undefined variable keyword->string", "keyword->string" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:859"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(_kw)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:859"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         ))
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._dot_MIMARKoperator_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_dot_MIMARKoperator', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_dot_MIMARKoperator'] = self.method( :_dot_MIMARKoperator_METHOD )
    @_dot_MIMARKoperator = 
    trampCall(
          LispMacro.new { |*__rest__| _lst = __rest__[0] ;  
              begin #makeLetrec
                ___lambda = lambda { |_generate_MIMARKmethod_MIMARKcall_MIMARKform| 
                    _generate_MIMARKmethod_MIMARKcall_MIMARKform                     = 
                      Proc.new { |_lst| 
                          begin #makeLet
                            ___lambda = lambda { |_tmp| 
                                if ( 
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 869 );
                                      _symbol_QUMARK(
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 869 );
                                              trampCall( self._first_METHOD(  'first',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_first') then
                                                      trampCall(@_first)
                                                    else raise NameError.new( "Error: undefined variable first", "first" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:869"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(_lst)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:869"] + __e.backtrace ) ; raise __e
                                                    end
                                              ]
                                                           ))
                                          end
                                      )
                                  end
                                 ) then
                                    begin
                                      embedBacktraceInfo( "", 1 );
                                        _cons(
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 870 );
                                                _string_MIMARK_GTMARKsymbol(
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 870 );
                                                        ( 
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 870 );
                                                              _to_MIMARKs(
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 870 );
                                                                      trampCall( self._first_METHOD(  'first',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_first') then
                                                                              trampCall(@_first)
                                                                            else raise NameError.new( "Error: undefined variable first", "first" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:870"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                      [
                                                                            begin
                                                                                trampCall(_lst)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:870"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                      ]
                                                                                   ))
                                                                  end
                                                              )
                                                          end                                                        +
                                                        "."                                                        +
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 870 );
                                                              _to_MIMARKs(
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 870 );
                                                                      trampCall( self._second_METHOD(  'second',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_second') then
                                                                              trampCall(@_second)
                                                                            else raise NameError.new( "Error: undefined variable second", "second" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:870"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                      [
                                                                            begin
                                                                                trampCall(_lst)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:870"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                      ]
                                                                                   ))
                                                                  end
                                                              )
                                                          end
                                                         ) 
                                                    end
                                                )
                                            end                                          ,
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 871 );
                                                trampCall( self._cddr_METHOD(  'cddr',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cddr') then
                                                        trampCall(@_cddr)
                                                      else raise NameError.new( "Error: undefined variable cddr", "cddr" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:871"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_lst)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:871"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end
                                        )
                                    end
                                else
                                    begin
                                      embedBacktraceInfo( "", 1 );
                                        _cons(
                                          :"let"                                          ,
                                            begin
                                              embedBacktraceInfo( "", 1 );
                                                _cons(
                                                    begin
                                                      embedBacktraceInfo( "", 1 );
                                                        _cons(
                                                            begin
                                                              embedBacktraceInfo( "", 1 );
                                                                _cons(
                                                                    begin
                                                                        trampCall(_tmp)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    begin
                                                                      embedBacktraceInfo( "", 1 );
                                                                        _cons(
                                                                            begin
                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 872 );
                                                                                trampCall( self._first_METHOD(  'first',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_first') then
                                                                                        trampCall(@_first)
                                                                                      else raise NameError.new( "Error: undefined variable first", "first" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                [
                                                                                      begin
                                                                                          trampCall(_lst)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                ]
                                                                                             ))
                                                                            end                                                                          ,
                                                                          Cell.new()
                                                                        )
                                                                    end
                                                                )
                                                            end                                                          ,
                                                          Cell.new()
                                                        )
                                                    end                                                  ,
                                                    begin
                                                      embedBacktraceInfo( "", 1 );
                                                        _cons(
                                                            begin
                                                              embedBacktraceInfo( "", 1 );
                                                                _cons(
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 873 );
                                                                        _string_MIMARK_GTMARKsymbol(
                                                                            begin
                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 873 );
                                                                                ( 
                                                                                  begin
                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 873 );
                                                                                      _to_MIMARKs(
                                                                                          begin
                                                                                              trampCall(_tmp)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:873"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                      )
                                                                                  end                                                                                +
                                                                                "."                                                                                +
                                                                                  begin
                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 873 );
                                                                                      _to_MIMARKs(
                                                                                          begin
                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 873 );
                                                                                              trampCall( self._second_METHOD(  'second',
                                                                                                  begin
                                                                                                    if @global_lisp_binding.has_key?('_second') then
                                                                                                      trampCall(@_second)
                                                                                                    else raise NameError.new( "Error: undefined variable second", "second" ) end
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:873"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,
                                                                                              [
                                                                                                    begin
                                                                                                        trampCall(_lst)
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:873"] + __e.backtrace ) ; raise __e
                                                                                                    end
                                                                                              ]
                                                                                                           ))
                                                                                          end
                                                                                      )
                                                                                  end
                                                                                 ) 
                                                                            end
                                                                        )
                                                                    end                                                                  ,
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 874 );
                                                                        trampCall( self._cddr_METHOD(  'cddr',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_cddr') then
                                                                                trampCall(@_cddr)
                                                                              else raise NameError.new( "Error: undefined variable cddr", "cddr" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:874"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                  trampCall(_lst)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:874"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end
                                                                )
                                                            end                                                          ,
                                                          Cell.new()
                                                        )
                                                    end
                                                )
                                            end
                                        )
                                    end
                                end
                            } ; ___lambda.call(
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 868 );
                                      trampCall( self._gensym_METHOD(  'gensym',
                                          begin
                                            if @global_lisp_binding.has_key?('_gensym') then
                                              trampCall(@_gensym)
                                            else raise NameError.new( "Error: undefined variable gensym", "gensym" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:868"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                      ]
                                                   ))
                                  end
                                       )
                          end
                      }
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 876 );
                          ( 
                          2                          >
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 876 );
                                _length(
                                    begin
                                        trampCall(_lst)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:876"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                           ) 
                      end
                     ) then
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 877 );
                              trampCall( self.__PAMARKraise_METHOD(  '%raise',
                                  begin
                                    if @global_lisp_binding.has_key?('__PAMARKraise') then
                                      trampCall(@__PAMARKraise)
                                    else raise NameError.new( "Error: undefined variable %raise", "%raise" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:877"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(ArgumentError)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:877"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                  ". dot-operator requires 2+ arguments."                                  ,
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 877 );
                                        trampCall( self._sprintf_METHOD(  'sprintf',
                                            begin
                                              if @global_lisp_binding.has_key?('_sprintf') then
                                                trampCall(@_sprintf)
                                              else raise NameError.new( "Error: undefined variable sprintf", "sprintf" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:877"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                            "%s:%s in dot-operator"                                            ,
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 877 );
                                                  trampCall( self.__ASMARKFILE_ASMARK_METHOD(  '*FILE*',
                                                      begin
                                                        if @global_lisp_binding.has_key?('__ASMARKFILE_ASMARK') then
                                                          trampCall(@__ASMARKFILE_ASMARK)
                                                        else raise NameError.new( "Error: undefined variable *FILE*", "*FILE*" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:877"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                  ]
                                                               ))
                                              end                                            ,
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 877 );
                                                  trampCall( self.__ASMARKLINE_ASMARK_METHOD(  '*LINE*',
                                                      begin
                                                        if @global_lisp_binding.has_key?('__ASMARKLINE_ASMARK') then
                                                          trampCall(@__ASMARKLINE_ASMARK)
                                                        else raise NameError.new( "Error: undefined variable *LINE*", "*LINE*" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:877"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                  ]
                                                               ))
                                              end
                                        ]
                                                     ))
                                    end
                              ]
                                           ))
                          end
                    else
                        if ( 
                        true
                         ) then
                              if ( 
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 879 );
                                    _symbol_QUMARK(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 879 );
                                            trampCall( self._second_METHOD(  'second',
                                                begin
                                                  if @global_lisp_binding.has_key?('_second') then
                                                    trampCall(@_second)
                                                  else raise NameError.new( "Error: undefined variable second", "second" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:879"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_lst)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:879"] + __e.backtrace ) ; raise __e
                                                  end
                                            ]
                                                         ))
                                        end
                                    )
                                end
                               ) then
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 880 );
                                      trampCall( callProcedure(  '_generate_MIMARKmethod_MIMARKcall_MIMARKform',  'generate-method-call-form',
                                          begin
                                              trampCall(_generate_MIMARKmethod_MIMARKcall_MIMARKform)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:880"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_lst)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:880"] + __e.backtrace ) ; raise __e
                                            end
                                      ]
                                                   ))
                                  end
                              else
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 881 );
                                      trampCall( self.__PAMARKraise_METHOD(  '%raise',
                                          begin
                                            if @global_lisp_binding.has_key?('__PAMARKraise') then
                                              trampCall(@__PAMARKraise)
                                            else raise NameError.new( "Error: undefined variable %raise", "%raise" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:881"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(TypeError)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:881"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                          ". dot-operator requires method name as symbol."                                          ,
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 881 );
                                                trampCall( self._sprintf_METHOD(  'sprintf',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_sprintf') then
                                                        trampCall(@_sprintf)
                                                      else raise NameError.new( "Error: undefined variable sprintf", "sprintf" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:881"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                    "%s:%s in dot-operator"                                                    ,
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 881 );
                                                          trampCall( self.__ASMARKFILE_ASMARK_METHOD(  '*FILE*',
                                                              begin
                                                                if @global_lisp_binding.has_key?('__ASMARKFILE_ASMARK') then
                                                                  trampCall(@__ASMARKFILE_ASMARK)
                                                                else raise NameError.new( "Error: undefined variable *FILE*", "*FILE*" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:881"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                          [
                                                          ]
                                                                       ))
                                                      end                                                    ,
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 881 );
                                                          trampCall( self.__ASMARKLINE_ASMARK_METHOD(  '*LINE*',
                                                              begin
                                                                if @global_lisp_binding.has_key?('__ASMARKLINE_ASMARK') then
                                                                  trampCall(@__ASMARKLINE_ASMARK)
                                                                else raise NameError.new( "Error: undefined variable *LINE*", "*LINE*" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:881"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                          [
                                                          ]
                                                                       ))
                                                      end
                                                ]
                                                             ))
                                            end
                                      ]
                                                   ))
                                  end
                              end
                        else
                            Cell.new()
                        end
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._with_MIMARKopen_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_with_MIMARKopen', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_with_MIMARKopen'] = self.method( :_with_MIMARKopen_METHOD )
    @_with_MIMARKopen = 
    trampCall(
          Proc.new { |_filename,_pred,*__rest__| _lst = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |_opt| 
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 886 );
                          ( 
                          1                          <
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 886 );
                                _length(
                                    begin
                                        trampCall(_lst)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:886"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                           ) 
                      end
                     ) then
                          begin raise RuntimeError, 
                          "with-open requires 2 or 3 arguments."
                          rescue => __e 
                            __e.set_backtrace( ["./lib/nendo/init.nnd:887"] + __e.backtrace )
                            raise __e
                          end 
                    end
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 888 );
                          _not(
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 888 );
                                  _procedure_QUMARK(
                                      begin
                                          trampCall(_pred)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:888"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                          )
                      end
                     ) then
                          begin raise RuntimeError, 
                          "with-open requires procedure as pred argument."
                          rescue => __e 
                            __e.set_backtrace( ["./lib/nendo/init.nnd:889"] + __e.backtrace )
                            raise __e
                          end 
                    end
                    if ( 
                      begin
                          trampCall(_opt)
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:890"] + __e.backtrace ) ; raise __e
                      end
                     ) then
                        begin
                            trampCall(Kernel).open(
                                  begin
                                      trampCall(_filename)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:891"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  begin
                                      trampCall(_opt)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:891"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  &Proc.new { |_f| 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 891 );
                                          trampCall( callProcedure(  '_pred',  'pred',
                                              begin
                                                  trampCall(_pred)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:891"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                    trampCall(_f)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:891"] + __e.backtrace ) ; raise __e
                                                end
                                          ]
                                                       ))
                                      end
                                  }
                              )
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:891"] + __e.backtrace ) ; raise __e
                        end
                    else
                        begin
                            trampCall(Kernel).open(
                                  begin
                                      trampCall(_filename)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:892"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  &Proc.new { |_f| 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 892 );
                                          trampCall( callProcedure(  '_pred',  'pred',
                                              begin
                                                  trampCall(_pred)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:892"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                    trampCall(_f)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:892"] + __e.backtrace ) ; raise __e
                                                end
                                          ]
                                                       ))
                                      end
                                  }
                              )
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:892"] + __e.backtrace ) ; raise __e
                        end
                    end
                } ; ___lambda.call(
                      begin #makeLet
                        ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30445| 
                            if ( 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _null_QUMARK(
                                      begin
                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30445)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                             ) then
                              false
                            else
                                begin
                                  embedBacktraceInfo( "", 1 );
                                    delayCall( '_car',  'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable car", "car" ) end
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30445)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 )
                                end
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_lst)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:885"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._last_MIMARKpair_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_last_MIMARKpair', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_last_MIMARKpair'] = self.method( :_last_MIMARKpair_METHOD )
    @_last_MIMARKpair = 
    trampCall(
          Proc.new { |_x| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 899 );
                    _pair_QUMARK(
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 899 );
                            _cdr(
                                begin
                                    trampCall(_x)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:899"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                    )
                end
               ) then
                  begin
                    embedBacktraceInfo( "./lib/nendo/init.nnd", 900 );
                      delayCall( '_last_MIMARKpair',  'last-pair',
                          begin
                            if @global_lisp_binding.has_key?('_last_MIMARKpair') then
                              trampCall(@_last_MIMARKpair)
                            else raise NameError.new( "Error: undefined variable last-pair", "last-pair" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:900"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 900 );
                                _cdr(
                                    begin
                                        trampCall(_x)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:900"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                      ]
                                   )
                  end
              else
                  begin
                      trampCall(_x)
                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:901"] + __e.backtrace ) ; raise __e
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._cons_ASMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_cons_ASMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_cons_ASMARK'] = self.method( :_cons_ASMARK_METHOD )
    @_cons_ASMARK = 
    trampCall(
          Proc.new { |_arg,*__rest__| _args = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 905 );
                    _null_QUMARK(
                        begin
                            trampCall(_args)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:905"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin
                      trampCall(_arg)
                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:906"] + __e.backtrace ) ; raise __e
                  end
              else
                  begin
                    embedBacktraceInfo( "./lib/nendo/init.nnd", 907 );
                      delayCall( '_cons',  'cons',
                          begin
                            if @global_lisp_binding.has_key?('_cons') then
                              trampCall(@_cons)
                            else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:907"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                                trampCall(_arg)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:907"] + __e.backtrace ) ; raise __e
                            end                          ,
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 907 );
                                trampCall( self._apply_METHOD(  'apply',
                                    begin
                                      if @global_lisp_binding.has_key?('_apply') then
                                        trampCall(@_apply)
                                      else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:907"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                        if @global_lisp_binding.has_key?('_cons_ASMARK') then
                                          trampCall(@_cons_ASMARK)
                                        else raise NameError.new( "Error: undefined variable cons*", "cons*" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:907"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      begin
                                          trampCall(_args)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:907"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                      ]
                                   )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._list_ASMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_list_ASMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_list_ASMARK'] = self.method( :_list_ASMARK_METHOD )
    @_list_ASMARK = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('_cons_ASMARK') then
              trampCall(@_cons_ASMARK)
            else raise NameError.new( "Error: undefined variable cons*", "cons*" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:908"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._make_MIMARKhash_MIMARKtable_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_make_MIMARKhash_MIMARKtable', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_make_MIMARKhash_MIMARKtable'] = self.method( :_make_MIMARKhash_MIMARKtable_METHOD )
    @_make_MIMARKhash_MIMARKtable = 
    trampCall(
          Proc.new { |*__rest__| _eq = __rest__[0] ;  
              begin
                  trampCall(Hash).new(
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:915"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._hash_MIMARKtable_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_hash_MIMARKtable_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_hash_MIMARKtable_QUMARK'] = self.method( :_hash_MIMARKtable_QUMARK_METHOD )
    @_hash_MIMARKtable_QUMARK = 
    trampCall(
          Proc.new { |_h| 
              begin
                  trampCall(_h).is_a?(
                        begin
                            trampCall(Hash)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:918"] + __e.backtrace ) ; raise __e
                        end
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:918"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._hash_MIMARKtable_MIMARKnum_MIMARKentries_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_hash_MIMARKtable_MIMARKnum_MIMARKentries', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_hash_MIMARKtable_MIMARKnum_MIMARKentries'] = self.method( :_hash_MIMARKtable_MIMARKnum_MIMARKentries_METHOD )
    @_hash_MIMARKtable_MIMARKnum_MIMARKentries = 
    trampCall(
          Proc.new { |_h| 
              begin
                  trampCall(_h).length(
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:921"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._hash_MIMARKtable_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_hash_MIMARKtable', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_hash_MIMARKtable'] = self.method( :_hash_MIMARKtable_METHOD )
    @_hash_MIMARKtable = 
    trampCall(
          Proc.new { |_type,*__rest__| _kv_MIMARKlist = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "", 1 );
                    _not(
                        begin #makeLet
                          ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30446| 
                              if ( 
                                begin
                                    trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30446)
                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                end
                               ) then
                                  begin
                                      trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30446)
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  begin #makeLet
                                    ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30447| 
                                        if ( 
                                          begin
                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30447)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                         ) then
                                            begin
                                                trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30447)
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end
                                        else
                                          false
                                        end
                                    } ; ___lambda.call(
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 925 );
                                              _eq_QUMARK(
                                                  begin
                                                      trampCall(_type)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:925"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  begin
                                                    if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                      trampCall(@_eqv_QUMARK)
                                                    else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:925"] + __e.backtrace ) ; raise __e
                                                  end
                                              )
                                          end
                                               )
                                  end
                              end
                          } ; ___lambda.call(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 924 );
                                    _eq_QUMARK(
                                        begin
                                            trampCall(_type)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:924"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                          if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                            trampCall(@_eq_QUMARK)
                                          else raise NameError.new( "Error: undefined variable eq?", "eq?" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:924"] + __e.backtrace ) ; raise __e
                                        end
                                    )
                                end
                                     )
                        end
                    )
                end
               ) then
                    begin raise RuntimeError, 
                    "Error: hash-table got eq? or eqv? as type"
                    rescue => __e 
                      __e.set_backtrace( ["./lib/nendo/init.nnd:926"] + __e.backtrace )
                      raise __e
                    end 
              end
              begin #makeLet
                ___lambda = lambda { |_h| 
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 928 );
                        trampCall( self._for_MIMARKeach_METHOD(  'for-each',
                            begin
                              if @global_lisp_binding.has_key?('_for_MIMARKeach') then
                                trampCall(@_for_MIMARKeach)
                              else raise NameError.new( "Error: undefined variable for-each", "for-each" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:928"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              Proc.new { |_entry| 
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 930 );
                                      trampCall( self._hash_MIMARKtable_MIMARKput_EXMARK_METHOD(  'hash-table-put!',
                                          begin
                                            if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKput_EXMARK') then
                                              trampCall(@_hash_MIMARKtable_MIMARKput_EXMARK)
                                            else raise NameError.new( "Error: undefined variable hash-table-put!", "hash-table-put!" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:930"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_h)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:930"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 930 );
                                                _car(
                                                    begin
                                                        trampCall(_entry)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:930"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end                                          ,
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 930 );
                                                _cdr(
                                                    begin
                                                        trampCall(_entry)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:930"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                      ]
                                                   ))
                                  end
                              }                            ,
                              begin
                                  trampCall(_kv_MIMARKlist)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:931"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     ))
                    end
                    begin
                        trampCall(_h)
                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:932"] + __e.backtrace ) ; raise __e
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 927 );
                          trampCall( self._make_MIMARKhash_MIMARKtable_METHOD(  'make-hash-table',
                              begin
                                if @global_lisp_binding.has_key?('_make_MIMARKhash_MIMARKtable') then
                                  trampCall(@_make_MIMARKhash_MIMARKtable)
                                else raise NameError.new( "Error: undefined variable make-hash-table", "make-hash-table" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:927"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                          ]
                                       ))
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._hash_MIMARKtable_MIMARKclear_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_hash_MIMARKtable_MIMARKclear_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_hash_MIMARKtable_MIMARKclear_EXMARK'] = self.method( :_hash_MIMARKtable_MIMARKclear_EXMARK_METHOD )
    @_hash_MIMARKtable_MIMARKclear_EXMARK = 
    trampCall(
          Proc.new { |_h| 
              begin
                  trampCall(_h).clear(
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:935"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._hash_MIMARKtable_MIMARKdelete_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_hash_MIMARKtable_MIMARKdelete_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_hash_MIMARKtable_MIMARKdelete_EXMARK'] = self.method( :_hash_MIMARKtable_MIMARKdelete_EXMARK_METHOD )
    @_hash_MIMARKtable_MIMARKdelete_EXMARK = 
    trampCall(
          Proc.new { |_h,_key| 
              begin
                  trampCall(_h).delete(
                        begin
                            trampCall(_key)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:938"] + __e.backtrace ) ; raise __e
                        end
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:938"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._hash_MIMARKtable_MIMARKpush_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_hash_MIMARKtable_MIMARKpush_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_hash_MIMARKtable_MIMARKpush_EXMARK'] = self.method( :_hash_MIMARKtable_MIMARKpush_EXMARK_METHOD )
    @_hash_MIMARKtable_MIMARKpush_EXMARK = 
    trampCall(
          Proc.new { |_ht,_key,_value| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 941 );
                  delayCall( '_hash_MIMARKtable_MIMARKput_EXMARK',  'hash-table-put!',
                      begin
                        if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKput_EXMARK') then
                          trampCall(@_hash_MIMARKtable_MIMARKput_EXMARK)
                        else raise NameError.new( "Error: undefined variable hash-table-put!", "hash-table-put!" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:941"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                            trampCall(_ht)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:942"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_key)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:943"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 944 );
                            _cons(
                                begin
                                    trampCall(_value)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:944"] + __e.backtrace ) ; raise __e
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 944 );
                                    trampCall( self._hash_MIMARKtable_MIMARKget_METHOD(  'hash-table-get',
                                        begin
                                          if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKget') then
                                            trampCall(@_hash_MIMARKtable_MIMARKget)
                                          else raise NameError.new( "Error: undefined variable hash-table-get", "hash-table-get" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:944"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(_ht)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:944"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          begin
                                              trampCall(_key)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:944"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                        Cell.new()
                                    ]
                                                 ))
                                end
                            )
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._hash_MIMARKtable_MIMARKkeys_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_hash_MIMARKtable_MIMARKkeys', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_hash_MIMARKtable_MIMARKkeys'] = self.method( :_hash_MIMARKtable_MIMARKkeys_METHOD )
    @_hash_MIMARKtable_MIMARKkeys = 
    trampCall(
          Proc.new { |_h| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 947 );
                  delayCall( '_to_MIMARKlist',  'to-list',
                      begin
                        if @global_lisp_binding.has_key?('_to_MIMARKlist') then
                          trampCall(@_to_MIMARKlist)
                        else raise NameError.new( "Error: undefined variable to-list", "to-list" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:947"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                            trampCall(_h).keys(
                              )
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:947"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._hash_MIMARKtable_MIMARKvalues_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_hash_MIMARKtable_MIMARKvalues', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_hash_MIMARKtable_MIMARKvalues'] = self.method( :_hash_MIMARKtable_MIMARKvalues_METHOD )
    @_hash_MIMARKtable_MIMARKvalues = 
    trampCall(
          Proc.new { |_h| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 950 );
                  delayCall( '_to_MIMARKlist',  'to-list',
                      begin
                        if @global_lisp_binding.has_key?('_to_MIMARKlist') then
                          trampCall(@_to_MIMARKlist)
                        else raise NameError.new( "Error: undefined variable to-list", "to-list" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:950"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                            trampCall(_h).values(
                              )
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:950"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._hash_MIMARKtable_MIMARKmap_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_hash_MIMARKtable_MIMARKmap', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_hash_MIMARKtable_MIMARKmap'] = self.method( :_hash_MIMARKtable_MIMARKmap_METHOD )
    @_hash_MIMARKtable_MIMARKmap = 
    trampCall(
          Proc.new { |_h,_pred| 
              begin #makeLet
                ___lambda = lambda { |_keys| 
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 954 );
                        delayCall( '_map',  'map',
                            begin
                              if @global_lisp_binding.has_key?('_map') then
                                trampCall(@_map)
                              else raise NameError.new( "Error: undefined variable map", "map" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:954"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              Proc.new { |_key| 
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 956 );
                                      trampCall( callProcedure(  '_pred',  'pred',
                                          begin
                                              trampCall(_pred)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:956"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_key)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:956"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 956 );
                                                trampCall( self._hash_MIMARKtable_MIMARKget_METHOD(  'hash-table-get',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKget') then
                                                        trampCall(@_hash_MIMARKtable_MIMARKget)
                                                      else raise NameError.new( "Error: undefined variable hash-table-get", "hash-table-get" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:956"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_h)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:956"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      begin
                                                          trampCall(_key)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:956"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end
                                      ]
                                                   ))
                                  end
                              }                            ,
                              begin
                                  trampCall(_keys)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:957"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 953 );
                          trampCall( self._hash_MIMARKtable_MIMARKkeys_METHOD(  'hash-table-keys',
                              begin
                                if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKkeys') then
                                  trampCall(@_hash_MIMARKtable_MIMARKkeys)
                                else raise NameError.new( "Error: undefined variable hash-table-keys", "hash-table-keys" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:953"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                begin
                                    trampCall(_h)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:953"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       ))
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._hash_MIMARKtable_MIMARKfor_MIMARKeach_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_hash_MIMARKtable_MIMARKfor_MIMARKeach', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_hash_MIMARKtable_MIMARKfor_MIMARKeach'] = self.method( :_hash_MIMARKtable_MIMARKfor_MIMARKeach_METHOD )
    @_hash_MIMARKtable_MIMARKfor_MIMARKeach = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKmap') then
              trampCall(@_hash_MIMARKtable_MIMARKmap)
            else raise NameError.new( "Error: undefined variable hash-table-map", "hash-table-map" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:958"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._vector_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_vector_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_vector_QUMARK'] = self.method( :_vector_QUMARK_METHOD )
    @_vector_QUMARK = 
    trampCall(
          Proc.new { |_v| 
              begin
                  trampCall(_v).is_a?(
                        begin
                            trampCall(Array)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:965"] + __e.backtrace ) ; raise __e
                        end
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:965"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._make_MIMARKvector_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_make_MIMARKvector', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_make_MIMARKvector'] = self.method( :_make_MIMARKvector_METHOD )
    @_make_MIMARKvector = 
    trampCall(
          Proc.new { |_k,*__rest__| _rest = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 968 );
                    _null_QUMARK(
                        begin
                            trampCall(_rest)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:968"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin
                      trampCall(Array).new(
                            begin
                                trampCall(_k)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:969"] + __e.backtrace ) ; raise __e
                            end
                        )
                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:969"] + __e.backtrace ) ; raise __e
                  end
              else
                  begin
                      trampCall(Array).new(
                            begin
                                trampCall(_k)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:970"] + __e.backtrace ) ; raise __e
                            end                          ,
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 970 );
                                _car(
                                    begin
                                        trampCall(_rest)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:970"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                        )
                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:970"] + __e.backtrace ) ; raise __e
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._vector_MIMARKlength_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_vector_MIMARKlength', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_vector_MIMARKlength'] = self.method( :_vector_MIMARKlength_METHOD )
    @_vector_MIMARKlength = 
    trampCall(
          Proc.new { |_v| 
              begin
                  trampCall(_v).size(
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:973"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._vector_MIMARKcopy_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_vector_MIMARKcopy', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_vector_MIMARKcopy'] = self.method( :_vector_MIMARKcopy_METHOD )
    @_vector_MIMARKcopy = 
    trampCall(
          Proc.new { |_v| 
              begin
                  trampCall(_v).clone(
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:976"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._vector_MIMARKref_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_vector_MIMARKref', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_vector_MIMARKref'] = self.method( :_vector_MIMARKref_METHOD )
    @_vector_MIMARKref = 
    trampCall(
          Proc.new { |_v,_index,*__rest__| _fallback = __rest__[0] ;  
              if ( 
                if ( 
                  begin
                    embedBacktraceInfo( "", 1 );
                      _not(
                          begin
                            embedBacktraceInfo( "", 1 );
                              _eq_QUMARK(
                                false                                ,
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 979 );
                                      ( 
                                      0                                      <=
                                        begin
                                            trampCall(_index)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:979"] + __e.backtrace ) ; raise __e
                                        end
                                       ) 
                                  end
                              )
                          end
                      )
                  end
                 ) then
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 979 );
                        ( 
                          begin
                              trampCall(_index)
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:979"] + __e.backtrace ) ; raise __e
                          end                        <
                          begin
                              trampCall(_v).size
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:979"] + __e.backtrace ) ; raise __e
                          end
                         ) 
                    end
                else
                  false
                end
               ) then
                  begin
                      trampCall(_v).fetch(
                            begin
                                trampCall(_index)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:980"] + __e.backtrace ) ; raise __e
                            end
                        )
                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:980"] + __e.backtrace ) ; raise __e
                  end
              else
                  if ( 
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 981 );
                        _null_QUMARK(
                            begin
                                trampCall(_fallback)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:981"] + __e.backtrace ) ; raise __e
                            end
                        )
                    end
                   ) then
                      begin raise RuntimeError, 
                        begin
                          embedBacktraceInfo( "", 1 );
                            trampCall( self._sprintf_METHOD(  'sprintf',
                                begin
                                  if @global_lisp_binding.has_key?('_sprintf') then
                                    trampCall(@_sprintf)
                                  else raise NameError.new( "Error: undefined variable sprintf", "sprintf" ) end
                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                "Error: vector-ref  index value is overflow: %s
"                                ,
                                  begin
                                      trampCall(_index)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:982"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         ))
                        end
                      rescue => __e 
                        __e.set_backtrace( [":1"] + __e.backtrace )
                        raise __e
                      end 
                  else
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 983 );
                          delayCall( '_car',  'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  trampCall(@_car)
                                else raise NameError.new( "Error: undefined variable car", "car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:983"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                begin
                                    trampCall(_fallback)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:983"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       )
                      end
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._vector_MIMARKequal_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_vector_MIMARKequal_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_vector_MIMARKequal_QUMARK'] = self.method( :_vector_MIMARKequal_QUMARK_METHOD )
    @_vector_MIMARKequal_QUMARK = 
    trampCall(
          Proc.new { |_x,_y| 
              if ( 
                begin
                  embedBacktraceInfo( "", 1 );
                    _not(
                        begin
                          embedBacktraceInfo( "", 1 );
                            _eq_QUMARK(
                              false                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 989 );
                                    trampCall( self._vector_QUMARK_METHOD(  'vector?',
                                        begin
                                          if @global_lisp_binding.has_key?('_vector_QUMARK') then
                                            trampCall(@_vector_QUMARK)
                                          else raise NameError.new( "Error: undefined variable vector?", "vector?" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:989"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(_x)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:989"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 ))
                                end
                            )
                        end
                    )
                end
               ) then
                  if ( 
                    begin
                      embedBacktraceInfo( "", 1 );
                        _not(
                            begin
                              embedBacktraceInfo( "", 1 );
                                _eq_QUMARK(
                                  false                                  ,
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 989 );
                                        trampCall( self._vector_QUMARK_METHOD(  'vector?',
                                            begin
                                              if @global_lisp_binding.has_key?('_vector_QUMARK') then
                                                trampCall(@_vector_QUMARK)
                                              else raise NameError.new( "Error: undefined variable vector?", "vector?" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:989"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_y)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:989"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     ))
                                    end
                                )
                            end
                        )
                    end
                   ) then
                      if ( 
                        begin
                          embedBacktraceInfo( "", 1 );
                            _not(
                                begin
                                  embedBacktraceInfo( "", 1 );
                                    _eq_QUMARK(
                                      false                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 989 );
                                            __EQMARK(
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 989 );
                                                    trampCall( self._vector_MIMARKlength_METHOD(  'vector-length',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_vector_MIMARKlength') then
                                                            trampCall(@_vector_MIMARKlength)
                                                          else raise NameError.new( "Error: undefined variable vector-length", "vector-length" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:989"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                              trampCall(_x)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:989"] + __e.backtrace ) ; raise __e
                                                          end
                                                    ]
                                                                 ))
                                                end                                              ,
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 989 );
                                                    trampCall( self._vector_MIMARKlength_METHOD(  'vector-length',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_vector_MIMARKlength') then
                                                            trampCall(@_vector_MIMARKlength)
                                                          else raise NameError.new( "Error: undefined variable vector-length", "vector-length" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:989"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                              trampCall(_y)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:989"] + __e.backtrace ) ; raise __e
                                                          end
                                                    ]
                                                                 ))
                                                end
                                            )
                                        end
                                    )
                                end
                            )
                        end
                       ) then
                          begin #makeLet
                            ___lambda = lambda { |_n| 
                                begin #makeLetrec
                                  ___lambda = lambda { |_loop| 
                                      _loop                                       = 
                                        Proc.new { |_i| 
                                            if ( 
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 992 );
                                                  __EQMARK(
                                                      begin
                                                          trampCall(_i)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:992"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      begin
                                                          trampCall(_n)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:992"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end
                                             ) then
                                              true
                                            else
                                                if ( 
                                                  begin
                                                    embedBacktraceInfo( "", 1 );
                                                      _not(
                                                          begin
                                                            embedBacktraceInfo( "", 1 );
                                                              _eq_QUMARK(
                                                                false                                                                ,
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 994 );
                                                                      _equal_QUMARK(
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 994 );
                                                                              trampCall( self._vector_MIMARKref_METHOD(  'vector-ref',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_vector_MIMARKref') then
                                                                                      trampCall(@_vector_MIMARKref)
                                                                                    else raise NameError.new( "Error: undefined variable vector-ref", "vector-ref" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:994"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                              [
                                                                                    begin
                                                                                        trampCall(_x)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:994"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    begin
                                                                                        trampCall(_i)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:994"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                              ]
                                                                                           ))
                                                                          end                                                                        ,
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 994 );
                                                                              trampCall( self._vector_MIMARKref_METHOD(  'vector-ref',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_vector_MIMARKref') then
                                                                                      trampCall(@_vector_MIMARKref)
                                                                                    else raise NameError.new( "Error: undefined variable vector-ref", "vector-ref" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:994"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                              [
                                                                                    begin
                                                                                        trampCall(_y)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:994"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    begin
                                                                                        trampCall(_i)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:994"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                              ]
                                                                                           ))
                                                                          end
                                                                      )
                                                                  end
                                                              )
                                                          end
                                                      )
                                                  end
                                                 ) then
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 995 );
                                                        delayCall( '_loop',  'loop',
                                                            begin
                                                                trampCall(_loop)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:995"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                        [
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 995 );
                                                                  trampCall( self._succ_METHOD(  'succ',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_succ') then
                                                                          trampCall(@_succ)
                                                                        else raise NameError.new( "Error: undefined variable succ", "succ" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:995"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                  [
                                                                        begin
                                                                            trampCall(_i)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:995"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                  ]
                                                                               ))
                                                              end
                                                        ]
                                                                     )
                                                    end
                                                else
                                                  false
                                                end
                                            end
                                        }
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 991 );
                                          delayCall( '_loop',  'loop',
                                              begin
                                                  trampCall(_loop)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:991"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                              0
                                          ]
                                                       )
                                      end
                                  } ; ___lambda.call(
                                  nil
                                             )
                                end
                            } ; ___lambda.call(
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 990 );
                                      trampCall( self._vector_MIMARKlength_METHOD(  'vector-length',
                                          begin
                                            if @global_lisp_binding.has_key?('_vector_MIMARKlength') then
                                              trampCall(@_vector_MIMARKlength)
                                            else raise NameError.new( "Error: undefined variable vector-length", "vector-length" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:990"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                      [
                                            begin
                                                trampCall(_x)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:990"] + __e.backtrace ) ; raise __e
                                            end
                                      ]
                                                   ))
                                  end
                                       )
                          end
                      else
                        false
                      end
                  else
                    false
                  end
              else
                false
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._list_MIMARK_GTMARKvector_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_list_MIMARK_GTMARKvector', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_list_MIMARK_GTMARKvector'] = self.method( :_list_MIMARK_GTMARKvector_METHOD )
    @_list_MIMARK_GTMARKvector = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 998 );
                  delayCall( '_apply',  'apply',
                      begin
                        if @global_lisp_binding.has_key?('_apply') then
                          trampCall(@_apply)
                        else raise NameError.new( "Error: undefined variable apply", "apply" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:998"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                          if @global_lisp_binding.has_key?('_vector') then
                            trampCall(@_vector)
                          else raise NameError.new( "Error: undefined variable vector", "vector" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:998"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_x)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:998"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._vector_MIMARKfill_EXMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_vector_MIMARKfill_EXMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_vector_MIMARKfill_EXMARK'] = self.method( :_vector_MIMARKfill_EXMARK_METHOD )
    @_vector_MIMARKfill_EXMARK = 
    trampCall(
          Proc.new { |_v,_e| 
              begin #makeLet
                ___lambda = lambda { |_n| 
                    begin #makeLetrec
                      ___lambda = lambda { |_loop| 
                          _loop                           = 
                            Proc.new { |_i| 
                                if ( 
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1003 );
                                      __EQMARK(
                                          begin
                                              trampCall(_i)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1003"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          begin
                                              trampCall(_n)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1003"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                                 ) then
                                    begin
                                        trampCall(_v)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1004"] + __e.backtrace ) ; raise __e
                                    end
                                else
                                    begin  #makeBegin
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1005 );
                                            trampCall( self._vector_MIMARKset_EXMARK_METHOD(  'vector-set!',
                                                begin
                                                  if @global_lisp_binding.has_key?('_vector_MIMARKset_EXMARK') then
                                                    trampCall(@_vector_MIMARKset_EXMARK)
                                                  else raise NameError.new( "Error: undefined variable vector-set!", "vector-set!" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1005"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_v)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1005"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  begin
                                                      trampCall(_i)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1005"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  begin
                                                      trampCall(_e)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1005"] + __e.backtrace ) ; raise __e
                                                  end
                                            ]
                                                         ))
                                        end
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1005 );
                                            delayCall( '_loop',  'loop',
                                                begin
                                                    trampCall(_loop)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1005"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1005 );
                                                      trampCall( self._succ_METHOD(  'succ',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_succ') then
                                                              trampCall(@_succ)
                                                            else raise NameError.new( "Error: undefined variable succ", "succ" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1005"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_i)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1005"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                            ]
                                                         )
                                        end
                                    end
                                end
                            }
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1002 );
                              delayCall( '_loop',  'loop',
                                  begin
                                      trampCall(_loop)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1002"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                  0
                              ]
                                           )
                          end
                      } ; ___lambda.call(
                      nil
                                 )
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1001 );
                          trampCall( self._vector_MIMARKlength_METHOD(  'vector-length',
                              begin
                                if @global_lisp_binding.has_key?('_vector_MIMARKlength') then
                                  trampCall(@_vector_MIMARKlength)
                                else raise NameError.new( "Error: undefined variable vector-length", "vector-length" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1001"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                begin
                                    trampCall(_v)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1001"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       ))
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._vector_MIMARK_GTMARKlist_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_vector_MIMARK_GTMARKlist', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_vector_MIMARK_GTMARKlist'] = self.method( :_vector_MIMARK_GTMARKlist_METHOD )
    @_vector_MIMARK_GTMARKlist = 
    trampCall(
          Proc.new { |_v| 
              begin #makeLetrec
                ___lambda = lambda { |_loop| 
                    _loop                     = 
                      Proc.new { |_n,_l| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1009 );
                                __EQMARK(
                                    begin
                                        trampCall(_n)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1009"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                  -1
                                )
                            end
                           ) then
                              begin
                                  trampCall(_l)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1010"] + __e.backtrace ) ; raise __e
                              end
                          else
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1011 );
                                  delayCall( '_loop',  'loop',
                                      begin
                                          trampCall(_loop)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1011"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1011 );
                                            trampCall( self._pred_METHOD(  'pred',
                                                begin
                                                  if @global_lisp_binding.has_key?('_pred') then
                                                    trampCall(@_pred)
                                                  else raise NameError.new( "Error: undefined variable pred", "pred" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1011"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_n)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1011"] + __e.backtrace ) ; raise __e
                                                  end
                                            ]
                                                         ))
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1011 );
                                            _cons(
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1011 );
                                                    trampCall( self._vector_MIMARKref_METHOD(  'vector-ref',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_vector_MIMARKref') then
                                                            trampCall(@_vector_MIMARKref)
                                                          else raise NameError.new( "Error: undefined variable vector-ref", "vector-ref" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1011"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                              trampCall(_v)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1011"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          begin
                                                              trampCall(_n)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1011"] + __e.backtrace ) ; raise __e
                                                          end
                                                    ]
                                                                 ))
                                                end                                              ,
                                                begin
                                                    trampCall(_l)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1011"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                  ]
                                               )
                              end
                          end
                      }
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1008 );
                        delayCall( '_loop',  'loop',
                            begin
                                trampCall(_loop)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1008"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1008 );
                                  trampCall( self._pred_METHOD(  'pred',
                                      begin
                                        if @global_lisp_binding.has_key?('_pred') then
                                          trampCall(@_pred)
                                        else raise NameError.new( "Error: undefined variable pred", "pred" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1008"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1008 );
                                            trampCall( self._vector_MIMARKlength_METHOD(  'vector-length',
                                                begin
                                                  if @global_lisp_binding.has_key?('_vector_MIMARKlength') then
                                                    trampCall(@_vector_MIMARKlength)
                                                  else raise NameError.new( "Error: undefined variable vector-length", "vector-length" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1008"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_v)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1008"] + __e.backtrace ) ; raise __e
                                                  end
                                            ]
                                                         ))
                                        end
                                  ]
                                               ))
                              end                            ,
                            Cell.new()
                        ]
                                     )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__ASMARKdebug_MIMARKprint_MIMARKlength_ASMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__ASMARKdebug_MIMARKprint_MIMARKlength_ASMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__ASMARKdebug_MIMARKprint_MIMARKlength_ASMARK'] = self.method( :__ASMARKdebug_MIMARKprint_MIMARKlength_ASMARK_METHOD )
    @__ASMARKdebug_MIMARKprint_MIMARKlength_ASMARK = 
    trampCall(
        63
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._debug_MIMARKprint_MIMARKlength_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_debug_MIMARKprint_MIMARKlength', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_debug_MIMARKprint_MIMARKlength'] = self.method( :_debug_MIMARKprint_MIMARKlength_METHOD )
    @_debug_MIMARKprint_MIMARKlength = 
    trampCall(
          Proc.new { |*__rest__| _len = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |_len| 
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1021 );
                          _eq_QUMARK(
                              begin
                                  trampCall(_len)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1021"] + __e.backtrace ) ; raise __e
                              end                            ,
                            :"none"
                          )
                      end
                     ) then
                        begin
                          if @global_lisp_binding.has_key?('__ASMARKdebug_MIMARKprint_MIMARKlength_ASMARK') then
                            trampCall(@__ASMARKdebug_MIMARKprint_MIMARKlength_ASMARK)
                          else raise NameError.new( "Error: undefined variable *debug-print-length*", "*debug-print-length*" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1022"] + __e.backtrace ) ; raise __e
                        end
                    else
                        begin #execFunc
                            def self.__ASMARKdebug_MIMARKprint_MIMARKlength_ASMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__ASMARKdebug_MIMARKprint_MIMARKlength_ASMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                            @global_lisp_binding['__ASMARKdebug_MIMARKprint_MIMARKlength_ASMARK'] = self.method( :__ASMARKdebug_MIMARKprint_MIMARKlength_ASMARK_METHOD )
                          @__ASMARKdebug_MIMARKprint_MIMARKlength_ASMARK = 
                          trampCall(
                                begin
                                    trampCall(_len)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1023"] + __e.backtrace ) ; raise __e
                                end
                          )
                        end
                    end
                } ; ___lambda.call(
                      begin #makeLet
                        ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30448| 
                            if ( 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _null_QUMARK(
                                      begin
                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30448)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                             ) then
                              :"none"
                            else
                                begin
                                  embedBacktraceInfo( "", 1 );
                                    delayCall( '_car',  'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable car", "car" ) end
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30448)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 )
                                end
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_len)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1020"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._debug_MIMARKprint_MIMARKoutput_MIMARKfunc_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_debug_MIMARKprint_MIMARKoutput_MIMARKfunc', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_debug_MIMARKprint_MIMARKoutput_MIMARKfunc'] = self.method( :_debug_MIMARKprint_MIMARKoutput_MIMARKfunc_METHOD )
    @_debug_MIMARKprint_MIMARKoutput_MIMARKfunc = 
    trampCall(
          Proc.new { |_str| 
              begin
                  trampCall(STDERR).print(
                        begin
                            trampCall(_str)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1025"] + __e.backtrace ) ; raise __e
                        end
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1025"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._debug_MIMARKlimit_MIMARKlength_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_debug_MIMARKlimit_MIMARKlength', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_debug_MIMARKlimit_MIMARKlength'] = self.method( :_debug_MIMARKlimit_MIMARKlength_METHOD )
    @_debug_MIMARKlimit_MIMARKlength = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 1027 );
                  delayCall( '__PLMARK',  '+',
                      begin
                        if @global_lisp_binding.has_key?('__PLMARK') then
                          trampCall(@__PLMARK)
                        else raise NameError.new( "Error: undefined variable +", "+" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1027"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        if ( 
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1029 );
                              _not(
                                  begin
                                    if @global_lisp_binding.has_key?('__ASMARKdebug_MIMARKprint_MIMARKlength_ASMARK') then
                                      trampCall(@__ASMARKdebug_MIMARKprint_MIMARKlength_ASMARK)
                                    else raise NameError.new( "Error: undefined variable *debug-print-length*", "*debug-print-length*" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1029"] + __e.backtrace ) ; raise __e
                                  end
                              )
                          end
                         ) then
                              begin
                                  trampCall(_x)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1030"] + __e.backtrace ) ; raise __e
                              end
                        else
                            if ( 
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1031 );
                                  ( 
                                    begin
                                      if @global_lisp_binding.has_key?('__ASMARKdebug_MIMARKprint_MIMARKlength_ASMARK') then
                                        trampCall(@__ASMARKdebug_MIMARKprint_MIMARKlength_ASMARK)
                                      else raise NameError.new( "Error: undefined variable *debug-print-length*", "*debug-print-length*" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1031"] + __e.backtrace ) ; raise __e
                                    end                                  <
                                    begin
                                        trampCall(_x).length
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1031"] + __e.backtrace ) ; raise __e
                                    end
                                   ) 
                              end
                             ) then
                                  begin #makeLet
                                    ___lambda = lambda { |_n| 
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1033 );
                                            trampCall( self._sprintf_METHOD(  'sprintf',
                                                begin
                                                  if @global_lisp_binding.has_key?('_sprintf') then
                                                    trampCall(@_sprintf)
                                                  else raise NameError.new( "Error: undefined variable sprintf", "sprintf" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1033"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1033 );
                                                      trampCall( self.__PLMARK_METHOD(  '+',
                                                          begin
                                                            if @global_lisp_binding.has_key?('__PLMARK') then
                                                              trampCall(@__PLMARK)
                                                            else raise NameError.new( "Error: undefined variable +", "+" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1033"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                          "%"                                                          ,
                                                            begin
                                                                trampCall(_n)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1033"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                          "."                                                          ,
                                                            begin
                                                                trampCall(_n)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1033"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                          "s ..."
                                                      ]
                                                                   ))
                                                  end                                                ,
                                                  begin
                                                      trampCall(_x)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1033"] + __e.backtrace ) ; raise __e
                                                  end
                                            ]
                                                         ))
                                        end
                                    } ; ___lambda.call(
                                          begin
                                            if @global_lisp_binding.has_key?('__ASMARKdebug_MIMARKprint_MIMARKlength_ASMARK') then
                                              trampCall(@__ASMARKdebug_MIMARKprint_MIMARKlength_ASMARK).to_s
                                            else raise NameError.new( "Error: undefined variable *debug-print-length*", "*debug-print-length*" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1032"] + __e.backtrace ) ; raise __e
                                          end
                                               )
                                  end
                            else
                                if ( 
                                true
                                 ) then
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1035"] + __e.backtrace ) ; raise __e
                                      end
                                else
                                    Cell.new()
                                end
                            end
                        end                      ,
                      "
"
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._debug_MIMARKprint_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_debug_MIMARKprint', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_debug_MIMARKprint'] = self.method( :_debug_MIMARKprint_METHOD )
    @_debug_MIMARKprint = 
    trampCall(
          LispMacro.new { |__form,_sourcefile,_lineno,_sourcesexp| 
              begin #makeLet
                ___lambda = lambda { |_val| 
                    begin
                      embedBacktraceInfo( "", 1 );
                        _cons(
                          :"let"                          ,
                            begin
                              embedBacktraceInfo( "", 1 );
                                _cons(
                                    begin
                                      embedBacktraceInfo( "", 1 );
                                        _cons(
                                            begin
                                              embedBacktraceInfo( "", 1 );
                                                _cons(
                                                    begin
                                                        trampCall(_val)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1041"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    begin
                                                      embedBacktraceInfo( "", 1 );
                                                        _cons(
                                                          nil                                                          ,
                                                          Cell.new()
                                                        )
                                                    end
                                                )
                                            end                                          ,
                                          Cell.new()
                                        )
                                    end                                  ,
                                    begin
                                      embedBacktraceInfo( "", 1 );
                                        _cons(
                                            begin
                                              embedBacktraceInfo( "", 1 );
                                                _cons(
                                                  :"debug-print-output-func"                                                  ,
                                                    begin
                                                      embedBacktraceInfo( "", 1 );
                                                        _cons(
                                                            begin
                                                              embedBacktraceInfo( "", 1 );
                                                                _cons(
                                                                  :"debug-limit-length"                                                                  ,
                                                                    begin
                                                                      embedBacktraceInfo( "", 1 );
                                                                        _cons(
                                                                            begin
                                                                              embedBacktraceInfo( "", 1 );
                                                                                _cons(
                                                                                  :"sprintf"                                                                                  ,
                                                                                    begin
                                                                                      embedBacktraceInfo( "", 1 );
                                                                                        _cons(
                                                                                          "#?=\"%s\":%s:%s"                                                                                          ,
                                                                                            begin
                                                                                              embedBacktraceInfo( "", 1 );
                                                                                                _cons(
                                                                                                    begin
                                                                                                        trampCall(_sourcefile)
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1042"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                    begin
                                                                                                      embedBacktraceInfo( "", 1 );
                                                                                                        _cons(
                                                                                                            begin
                                                                                                                trampCall(_lineno)
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1042"] + __e.backtrace ) ; raise __e
                                                                                                            end                                                                                                          ,
                                                                                                            begin
                                                                                                              embedBacktraceInfo( "", 1 );
                                                                                                                _cons(
                                                                                                                    begin
                                                                                                                      embedBacktraceInfo( "", 1 );
                                                                                                                        _cons(
                                                                                                                          :"write-to-string"                                                                                                                          ,
                                                                                                                            begin
                                                                                                                              embedBacktraceInfo( "", 1 );
                                                                                                                                _cons(
                                                                                                                                    begin
                                                                                                                                        trampCall(_sourcesexp)
                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1042"] + __e.backtrace ) ; raise __e
                                                                                                                                    end                                                                                                                                  ,
                                                                                                                                  Cell.new()
                                                                                                                                )
                                                                                                                            end
                                                                                                                        )
                                                                                                                    end                                                                                                                  ,
                                                                                                                  Cell.new()
                                                                                                                )
                                                                                                            end
                                                                                                        )
                                                                                                    end
                                                                                                )
                                                                                            end
                                                                                        )
                                                                                    end
                                                                                )
                                                                            end                                                                          ,
                                                                          Cell.new()
                                                                        )
                                                                    end
                                                                )
                                                            end                                                          ,
                                                          Cell.new()
                                                        )
                                                    end
                                                )
                                            end                                          ,
                                            begin
                                              embedBacktraceInfo( "", 1 );
                                                _cons(
                                                    begin
                                                      embedBacktraceInfo( "", 1 );
                                                        _cons(
                                                          :"set!"                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "", 1 );
                                                                _cons(
                                                                    begin
                                                                        trampCall(_val)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1043"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    begin
                                                                      embedBacktraceInfo( "", 1 );
                                                                        _cons(
                                                                            begin
                                                                                trampCall(__form)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1043"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                          Cell.new()
                                                                        )
                                                                    end
                                                                )
                                                            end
                                                        )
                                                    end                                                  ,
                                                    begin
                                                      embedBacktraceInfo( "", 1 );
                                                        _cons(
                                                            begin
                                                              embedBacktraceInfo( "", 1 );
                                                                _cons(
                                                                  :"debug-print-output-func"                                                                  ,
                                                                    begin
                                                                      embedBacktraceInfo( "", 1 );
                                                                        _cons(
                                                                            begin
                                                                              embedBacktraceInfo( "", 1 );
                                                                                _cons(
                                                                                  :"debug-limit-length"                                                                                  ,
                                                                                    begin
                                                                                      embedBacktraceInfo( "", 1 );
                                                                                        _cons(
                                                                                            begin
                                                                                              embedBacktraceInfo( "", 1 );
                                                                                                _cons(
                                                                                                  :"+"                                                                                                  ,
                                                                                                    begin
                                                                                                      embedBacktraceInfo( "", 1 );
                                                                                                        _cons(
                                                                                                          "#?-    "                                                                                                          ,
                                                                                                            begin
                                                                                                              embedBacktraceInfo( "", 1 );
                                                                                                                _cons(
                                                                                                                    begin
                                                                                                                      embedBacktraceInfo( "", 1 );
                                                                                                                        _cons(
                                                                                                                          :"write-to-string"                                                                                                                          ,
                                                                                                                            begin
                                                                                                                              embedBacktraceInfo( "", 1 );
                                                                                                                                _cons(
                                                                                                                                    begin
                                                                                                                                        trampCall(_val)
                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1044"] + __e.backtrace ) ; raise __e
                                                                                                                                    end                                                                                                                                  ,
                                                                                                                                  Cell.new()
                                                                                                                                )
                                                                                                                            end
                                                                                                                        )
                                                                                                                    end                                                                                                                  ,
                                                                                                                  Cell.new()
                                                                                                                )
                                                                                                            end
                                                                                                        )
                                                                                                    end
                                                                                                )
                                                                                            end                                                                                          ,
                                                                                          Cell.new()
                                                                                        )
                                                                                    end
                                                                                )
                                                                            end                                                                          ,
                                                                          Cell.new()
                                                                        )
                                                                    end
                                                                )
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "", 1 );
                                                                _cons(
                                                                    begin
                                                                        trampCall(_val)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1045"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                  Cell.new()
                                                                )
                                                            end
                                                        )
                                                    end
                                                )
                                            end
                                        )
                                    end
                                )
                            end
                        )
                    end
                } ; ___lambda.call(
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1040 );
                          trampCall( self._gensym_METHOD(  'gensym',
                              begin
                                if @global_lisp_binding.has_key?('_gensym') then
                                  trampCall(@_gensym)
                                else raise NameError.new( "Error: undefined variable gensym", "gensym" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1040"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                          ]
                                       ))
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._pretty_MIMARKprint_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_pretty_MIMARKprint', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_pretty_MIMARKprint'] = self.method( :_pretty_MIMARKprint_METHOD )
    @_pretty_MIMARKprint = 
    trampCall(
          Proc.new { |_s,*__rest__| _f = __rest__[0] ;  
              begin #makeLetrec
                ___lambda = lambda { |_do_MIMARKindent,_pp_MIMARKparenl,_pp_MIMARKparenr,_pp_MIMARKatom,_pp_MIMARKlist| 
                    _do_MIMARKindent                     = 
                      Proc.new { |_f,_level| 
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1055 );
                              delayCall( '_for_MIMARKeach',  'for-each',
                                  begin
                                    if @global_lisp_binding.has_key?('_for_MIMARKeach') then
                                      trampCall(@_for_MIMARKeach)
                                    else raise NameError.new( "Error: undefined variable for-each", "for-each" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1055"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    Proc.new { |_x| 
                                        begin
                                            trampCall(_f).print(
                                                " "
                                              )
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1055"] + __e.backtrace ) ; raise __e
                                        end
                                    }                                  ,
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1055 );
                                        trampCall( self._range_METHOD(  'range',
                                            begin
                                              if @global_lisp_binding.has_key?('_range') then
                                                trampCall(@_range)
                                              else raise NameError.new( "Error: undefined variable range", "range" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1055"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_level)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1055"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     ))
                                    end
                              ]
                                           )
                          end
                      }
                    _pp_MIMARKparenl                     = 
                      Proc.new { |_f| 
                          begin
                              trampCall(_f).print(
                                  "("
                                )
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1057"] + __e.backtrace ) ; raise __e
                          end
                      }
                    _pp_MIMARKparenr                     = 
                      Proc.new { |_f| 
                          begin
                              trampCall(_f).print(
                                  ")"
                                )
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1059"] + __e.backtrace ) ; raise __e
                          end
                      }
                    _pp_MIMARKatom                     = 
                      Proc.new { |_f,_e,_prefix| 
                          if ( 
                            begin
                                trampCall(_prefix)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1061"] + __e.backtrace ) ; raise __e
                            end
                           ) then
                                begin
                                    trampCall(_f).print(
                                        " "
                                      )
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1061"] + __e.backtrace ) ; raise __e
                                end
                          end
                          begin
                              trampCall(_f).print(
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1062 );
                                        _write_MIMARKto_MIMARKstring(
                                            begin
                                                trampCall(_e)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1062"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    end
                                )
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1062"] + __e.backtrace ) ; raise __e
                          end
                      }
                    _pp_MIMARKlist                     = 
                      Proc.new { |_f,_s,_level,_prefix| 
                          if ( 
                            begin
                              embedBacktraceInfo( "", 1 );
                                _not(
                                    begin
                                      embedBacktraceInfo( "", 1 );
                                        _eq_QUMARK(
                                          false                                          ,
                                            begin
                                                trampCall(_prefix)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1064"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    end
                                )
                            end
                           ) then
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1064 );
                                  trampCall( callProcedure(  '_do_MIMARKindent',  'do-indent',
                                      begin
                                          trampCall(_do_MIMARKindent)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1064"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_f)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1064"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_level)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1064"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               ))
                              end
                          else
                            false
                          end
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1065 );
                              trampCall( callProcedure(  '_pp_MIMARKparenl',  'pp-parenl',
                                  begin
                                      trampCall(_pp_MIMARKparenl)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1065"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_f)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1065"] + __e.backtrace ) ; raise __e
                                    end
                              ]
                                           ))
                          end
                          begin #makeLetrec
                            ___lambda = lambda { |_loop| 
                                _loop                                 = 
                                  Proc.new { |_s,_prefix| 
                                      if ( 
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1068 );
                                            _null_QUMARK(
                                                begin
                                                    trampCall(_s)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1068"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                       ) then
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1069 );
                                              delayCall( '_pp_MIMARKparenr',  'pp-parenr',
                                                  begin
                                                      trampCall(_pp_MIMARKparenr)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1069"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(_f)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1069"] + __e.backtrace ) ; raise __e
                                                    end
                                              ]
                                                           )
                                          end
                                      else
                                          begin #makeLet
                                            ___lambda = lambda { |_e| 
                                                if ( 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1071 );
                                                      trampCall( self._list_QUMARK_METHOD(  'list?',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                              trampCall(@_list_QUMARK)
                                                            else raise NameError.new( "Error: undefined variable list?", "list?" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1071"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_e)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1071"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                                 ) then
                                                    begin  #makeBegin
                                                        if ( 
                                                          begin
                                                            embedBacktraceInfo( "", 1 );
                                                              _not(
                                                                  begin
                                                                    embedBacktraceInfo( "", 1 );
                                                                      _eq_QUMARK(
                                                                        false                                                                        ,
                                                                          begin
                                                                              trampCall(_prefix)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1072"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                      )
                                                                  end
                                                              )
                                                          end
                                                         ) then
                                                            begin
                                                                trampCall(_f).print(
                                                                    "
"
                                                                  )
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1072"] + __e.backtrace ) ; raise __e
                                                            end
                                                        else
                                                          false
                                                        end
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1073 );
                                                            trampCall( callProcedure(  '_pp_MIMARKlist',  'pp-list',
                                                                begin
                                                                    trampCall(_pp_MIMARKlist)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1073"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  begin
                                                                      trampCall(_f)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1073"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  begin
                                                                      trampCall(_e)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1073"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1073 );
                                                                      ( 
                                                                        begin
                                                                            trampCall(_level)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1073"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      +
                                                                      1
                                                                       ) 
                                                                  end                                                                ,
                                                                  begin
                                                                      trampCall(_prefix)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1073"] + __e.backtrace ) ; raise __e
                                                                  end
                                                            ]
                                                                         ))
                                                        end
                                                    end
                                                else
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1074 );
                                                        trampCall( callProcedure(  '_pp_MIMARKatom',  'pp-atom',
                                                            begin
                                                                trampCall(_pp_MIMARKatom)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1074"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                        [
                                                              begin
                                                                  trampCall(_f)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1074"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              begin
                                                                  trampCall(_e)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1074"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              begin
                                                                  trampCall(_prefix)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1074"] + __e.backtrace ) ; raise __e
                                                              end
                                                        ]
                                                                     ))
                                                    end
                                                end
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1075 );
                                                    delayCall( '_loop',  'loop',
                                                        begin
                                                            trampCall(_loop)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1075"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1075 );
                                                              _cdr(
                                                                  begin
                                                                      trampCall(_s)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1075"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              )
                                                          end                                                        ,
                                                        true
                                                    ]
                                                                 )
                                                end
                                            } ; ___lambda.call(
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1070 );
                                                      _car(
                                                          begin
                                                              trampCall(_s)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1070"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                                       )
                                          end
                                      end
                                  }
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1066 );
                                    delayCall( '_loop',  'loop',
                                        begin
                                            trampCall(_loop)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1066"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(_s)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1066"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                        false
                                    ]
                                                 )
                                end
                            } ; ___lambda.call(
                            nil
                                       )
                          end
                      }
                    begin #makeLet
                      ___lambda = lambda { |_f| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1077 );
                                trampCall( self._list_QUMARK_METHOD(  'list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_list_QUMARK') then
                                        trampCall(@_list_QUMARK)
                                      else raise NameError.new( "Error: undefined variable list?", "list?" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1077"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_s)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1077"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                           ) then
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1078 );
                                  trampCall( callProcedure(  '_pp_MIMARKlist',  'pp-list',
                                      begin
                                          trampCall(_pp_MIMARKlist)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1078"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_f)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1078"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_s)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1078"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                      0                                      ,
                                      false
                                  ]
                                               ))
                              end
                          else
                              begin
                                  trampCall(_f).print(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1079 );
                                            _write_MIMARKto_MIMARKstring(
                                                begin
                                                    trampCall(_s)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1079"] + __e.backtrace ) ; raise __e
                                                end
                                            )
                                        end
                                    )
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1079"] + __e.backtrace ) ; raise __e
                              end
                          end
                          begin
                              trampCall(_f).print(
                                  "
"
                                )
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1080"] + __e.backtrace ) ; raise __e
                          end
                      } ; ___lambda.call(
                            begin #makeLet
                              ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30452| 
                                  if ( 
                                    begin
                                      embedBacktraceInfo( "", 1 );
                                        _null_QUMARK(
                                            begin
                                                trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30452)
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    end
                                   ) then
                                      begin
                                          trampCall(STDOUT)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1076"] + __e.backtrace ) ; raise __e
                                      end
                                  else
                                      begin
                                        embedBacktraceInfo( "", 1 );
                                          delayCall( '_car',  'car',
                                              begin
                                                if @global_lisp_binding.has_key?('_car') then
                                                  trampCall(@_car)
                                                else raise NameError.new( "Error: undefined variable car", "car" ) end
                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                    trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30452)
                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                end
                                          ]
                                                       )
                                      end
                                  end
                              } ; ___lambda.call(
                                    begin
                                        trampCall(_f)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1076"] + __e.backtrace ) ; raise __e
                                    end
                                         )
                            end
                                 )
                    end
                } ; ___lambda.call(
                nil,nil,nil,nil,nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._pretty_MIMARKprint_MIMARKto_MIMARKstring_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_pretty_MIMARKprint_MIMARKto_MIMARKstring', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_pretty_MIMARKprint_MIMARKto_MIMARKstring'] = self.method( :_pretty_MIMARKprint_MIMARKto_MIMARKstring_METHOD )
    @_pretty_MIMARKprint_MIMARKto_MIMARKstring = 
    trampCall(
          Proc.new { |_s| 
              begin #makeLet
                ___lambda = lambda { |_io| 
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1085 );
                        trampCall( self._pretty_MIMARKprint_METHOD(  'pretty-print',
                            begin
                              if @global_lisp_binding.has_key?('_pretty_MIMARKprint') then
                                trampCall(@_pretty_MIMARKprint)
                              else raise NameError.new( "Error: undefined variable pretty-print", "pretty-print" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1085"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_s)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1085"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                  trampCall(_io)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1085"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     ))
                    end
                    begin
                        trampCall(_io).rewind(
                          )
                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1086"] + __e.backtrace ) ; raise __e
                    end
                    begin
                        trampCall(_io).read(
                          )
                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1087"] + __e.backtrace ) ; raise __e
                    end
                } ; ___lambda.call(
                      begin
                          trampCall(StringIO).new(
                            )
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1084"] + __e.backtrace ) ; raise __e
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._sort_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_sort', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_sort'] = self.method( :_sort_METHOD )
    @_sort = 
    trampCall(
          Proc.new { |_lst,*__rest__| _cmpfn = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1093 );
                    _null_QUMARK(
                        begin
                            trampCall(_lst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1093"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                Cell.new()
              else
                  begin #makeLet
                    ___lambda = lambda { |_cmpfn| 
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1096 );
                            delayCall( '_to_MIMARKlist',  'to-list',
                                begin
                                  if @global_lisp_binding.has_key?('_to_MIMARKlist') then
                                    trampCall(@_to_MIMARKlist)
                                  else raise NameError.new( "Error: undefined variable to-list", "to-list" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1096"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  if ( 
                                    begin
                                        trampCall(_cmpfn)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1097"] + __e.backtrace ) ; raise __e
                                    end
                                   ) then
                                      begin
                                          trampCall(_lst).to_arr.sort(
                                                &Proc.new { |_a,_b| 
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1098 );
                                                        trampCall( callProcedure(  '_cmpfn',  'cmpfn',
                                                            begin
                                                                trampCall(_cmpfn)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1098"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                        [
                                                              begin
                                                                  trampCall(_a)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1098"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              begin
                                                                  trampCall(_b)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1098"] + __e.backtrace ) ; raise __e
                                                              end
                                                        ]
                                                                     ))
                                                    end
                                                }
                                            )
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1098"] + __e.backtrace ) ; raise __e
                                      end
                                  else
                                      begin
                                          trampCall(_lst).to_arr.sort(
                                            )
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1099"] + __e.backtrace ) ; raise __e
                                      end
                                  end
                            ]
                                         )
                        end
                    } ; ___lambda.call(
                          begin #makeLet
                            ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30453| 
                                if ( 
                                  begin
                                    embedBacktraceInfo( "", 1 );
                                      _null_QUMARK(
                                          begin
                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30453)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                                 ) then
                                  false
                                else
                                    begin
                                      embedBacktraceInfo( "", 1 );
                                        delayCall( '_car',  'car',
                                            begin
                                              if @global_lisp_binding.has_key?('_car') then
                                                trampCall(@_car)
                                              else raise NameError.new( "Error: undefined variable car", "car" ) end
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30453)
                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     )
                                    end
                                end
                            } ; ___lambda.call(
                                  begin
                                      trampCall(_cmpfn)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1095"] + __e.backtrace ) ; raise __e
                                  end
                                       )
                          end
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._sort_MIMARKby_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_sort_MIMARKby', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_sort_MIMARKby'] = self.method( :_sort_MIMARKby_METHOD )
    @_sort_MIMARKby = 
    trampCall(
          Proc.new { |_lst,_keyfn| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1103 );
                    _null_QUMARK(
                        begin
                            trampCall(_lst)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1103"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                Cell.new()
              else
                  begin
                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1105 );
                      delayCall( '_to_MIMARKlist',  'to-list',
                          begin
                            if @global_lisp_binding.has_key?('_to_MIMARKlist') then
                              trampCall(@_to_MIMARKlist)
                            else raise NameError.new( "Error: undefined variable to-list", "to-list" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1105"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                                trampCall(_lst).to_arr.sort_by(
                                      &Proc.new { |_item| 
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1106 );
                                              trampCall( callProcedure(  '_keyfn',  'keyfn',
                                                  begin
                                                      trampCall(_keyfn)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1106"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(_item)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1106"] + __e.backtrace ) ; raise __e
                                                    end
                                              ]
                                                           ))
                                          end
                                      }
                                  )
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1106"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._string_MIMARKlength_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_string_MIMARKlength', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_string_MIMARKlength'] = self.method( :_string_MIMARKlength_METHOD )
    @_string_MIMARKlength = 
    trampCall(
          Proc.new { |_str| 
              begin
                  trampCall(_str).size(
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1112"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._string_MIMARK_GTMARKregexp_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_string_MIMARK_GTMARKregexp', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_string_MIMARK_GTMARKregexp'] = self.method( :_string_MIMARK_GTMARKregexp_METHOD )
    @_string_MIMARK_GTMARKregexp = 
    trampCall(
          Proc.new { |_str,*__rest__| _casefold = __rest__[0] ;  
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1119 );
                    _not(
                        begin
                            trampCall(_str).is_a?(
                                  begin
                                      trampCall(String)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1119"] + __e.backtrace ) ; raise __e
                                  end
                              )
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1119"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin raise RuntimeError, 
                  "Error: string->regexp requires a String argument."
                  rescue => __e 
                    __e.set_backtrace( ["./lib/nendo/init.nnd:1120"] + __e.backtrace )
                    raise __e
                  end 
              else
                  if ( 
                    begin #makeLet
                      ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30454| 
                          if ( 
                            begin
                              embedBacktraceInfo( "", 1 );
                                _null_QUMARK(
                                    begin
                                        trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30454)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                           ) then
                            false
                          else
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _car(
                                      begin
                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30454)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                          end
                      } ; ___lambda.call(
                            begin
                                trampCall(_casefold)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1121"] + __e.backtrace ) ; raise __e
                            end
                                 )
                    end
                   ) then
                      begin
                          trampCall(Regexp).new(
                                begin
                                    trampCall(_str)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1122"] + __e.backtrace ) ; raise __e
                                end                              ,
                                begin
                                    trampCall(Regexp::IGNORECASE)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1122"] + __e.backtrace ) ; raise __e
                                end
                            )
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1122"] + __e.backtrace ) ; raise __e
                      end
                  else
                      begin
                          trampCall(Regexp).new(
                                begin
                                    trampCall(_str)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1123"] + __e.backtrace ) ; raise __e
                                end
                            )
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1123"] + __e.backtrace ) ; raise __e
                      end
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._regexp_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_regexp_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_regexp_QUMARK'] = self.method( :_regexp_QUMARK_METHOD )
    @_regexp_QUMARK = 
    trampCall(
          Proc.new { |_obj| 
              begin
                  trampCall(_obj).is_a?(
                        begin
                            trampCall(Regexp)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1126"] + __e.backtrace ) ; raise __e
                        end
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1126"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._regexp_MIMARK_GTMARKstring_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_regexp_MIMARK_GTMARKstring', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_regexp_MIMARK_GTMARKstring'] = self.method( :_regexp_MIMARK_GTMARKstring_METHOD )
    @_regexp_MIMARK_GTMARKstring = 
    trampCall(
          Proc.new { |_regexp| 
              begin
                  trampCall(_regexp).source(
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1129"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._rxmatch_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_rxmatch', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_rxmatch'] = self.method( :_rxmatch_METHOD )
    @_rxmatch = 
    trampCall(
          Proc.new { |_regexp,_str| 
              begin #makeLet
                ___lambda = lambda { |_m| 
                    if ( 
                      begin
                          trampCall(_m)
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1134"] + __e.backtrace ) ; raise __e
                      end
                     ) then
                        begin
                            trampCall(_m)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1134"] + __e.backtrace ) ; raise __e
                        end
                    else
                      false
                    end
                } ; ___lambda.call(
                      begin
                          trampCall(_regexp).match(
                                begin
                                    trampCall(_str)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1133"] + __e.backtrace ) ; raise __e
                                end
                            )
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1133"] + __e.backtrace ) ; raise __e
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._rxmatch_MIMARKstart_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_rxmatch_MIMARKstart', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_rxmatch_MIMARKstart'] = self.method( :_rxmatch_MIMARKstart_METHOD )
    @_rxmatch_MIMARKstart = 
    trampCall(
          Proc.new { |_match,*__rest__| _index = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |_index| 
                    begin
                        trampCall(_match).begin(
                              begin
                                  trampCall(_index)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1138"] + __e.backtrace ) ; raise __e
                              end
                          )
                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1138"] + __e.backtrace ) ; raise __e
                    end
                } ; ___lambda.call(
                      begin #makeLet
                        ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30455| 
                            if ( 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _null_QUMARK(
                                      begin
                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30455)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                             ) then
                              0
                            else
                                begin
                                  embedBacktraceInfo( "", 1 );
                                    delayCall( '_car',  'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable car", "car" ) end
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30455)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 )
                                end
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_index)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1137"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._rxmatch_MIMARKend_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_rxmatch_MIMARKend', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_rxmatch_MIMARKend'] = self.method( :_rxmatch_MIMARKend_METHOD )
    @_rxmatch_MIMARKend = 
    trampCall(
          Proc.new { |_match,*__rest__| _index = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |_index| 
                    begin
                        trampCall(_match).end(
                              begin
                                  trampCall(_index)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1142"] + __e.backtrace ) ; raise __e
                              end
                          )
                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1142"] + __e.backtrace ) ; raise __e
                    end
                } ; ___lambda.call(
                      begin #makeLet
                        ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30456| 
                            if ( 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _null_QUMARK(
                                      begin
                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30456)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                             ) then
                              0
                            else
                                begin
                                  embedBacktraceInfo( "", 1 );
                                    delayCall( '_car',  'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable car", "car" ) end
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30456)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 )
                                end
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_index)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1141"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._rxmatch_MIMARKsubstring_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_rxmatch_MIMARKsubstring', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_rxmatch_MIMARKsubstring'] = self.method( :_rxmatch_MIMARKsubstring_METHOD )
    @_rxmatch_MIMARKsubstring = 
    trampCall(
          Proc.new { |_match,*__rest__| _index = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |_index| 
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1146 );
                        delayCall( '_nth',  'nth',
                            begin
                              if @global_lisp_binding.has_key?('_nth') then
                                trampCall(@_nth)
                              else raise NameError.new( "Error: undefined variable nth", "nth" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1146"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_index)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1146"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                  trampCall(_match).to_a.to_list(
                                    )
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1146"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     )
                    end
                } ; ___lambda.call(
                      begin #makeLet
                        ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30457| 
                            if ( 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _null_QUMARK(
                                      begin
                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30457)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                             ) then
                              0
                            else
                                begin
                                  embedBacktraceInfo( "", 1 );
                                    delayCall( '_car',  'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable car", "car" ) end
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30457)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 )
                                end
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_index)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1145"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._rxmatch_MIMARKnum_MIMARKmatches_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_rxmatch_MIMARKnum_MIMARKmatches', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_rxmatch_MIMARKnum_MIMARKmatches'] = self.method( :_rxmatch_MIMARKnum_MIMARKmatches_METHOD )
    @_rxmatch_MIMARKnum_MIMARKmatches = 
    trampCall(
          Proc.new { |_match| 
              begin
                  trampCall(_match).size(
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1149"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._rxmatch_MIMARK_GTMARKstring_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_rxmatch_MIMARK_GTMARKstring', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_rxmatch_MIMARK_GTMARKstring'] = self.method( :_rxmatch_MIMARK_GTMARKstring_METHOD )
    @_rxmatch_MIMARK_GTMARKstring = 
    trampCall(
          Proc.new { |_regexp,_str,*__rest__| _index = __rest__[0] ;  
              begin #makeLet
                ___lambda = lambda { |_index| 
                    begin #makeLet
                      ___lambda = lambda { |_m| 
                          if ( 
                            begin
                                trampCall(_m)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1154"] + __e.backtrace ) ; raise __e
                            end
                           ) then
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1155 );
                                  delayCall( '_rxmatch_MIMARKsubstring',  'rxmatch-substring',
                                      begin
                                        if @global_lisp_binding.has_key?('_rxmatch_MIMARKsubstring') then
                                          trampCall(@_rxmatch_MIMARKsubstring)
                                        else raise NameError.new( "Error: undefined variable rxmatch-substring", "rxmatch-substring" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1155"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_m)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1155"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_index)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1155"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               )
                              end
                          else
                            false
                          end
                      } ; ___lambda.call(
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1153 );
                                trampCall( self._rxmatch_METHOD(  'rxmatch',
                                    begin
                                      if @global_lisp_binding.has_key?('_rxmatch') then
                                        trampCall(@_rxmatch)
                                      else raise NameError.new( "Error: undefined variable rxmatch", "rxmatch" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1153"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_regexp)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1153"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      begin
                                          trampCall(_str)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1153"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end
                                 )
                    end
                } ; ___lambda.call(
                      begin #makeLet
                        ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30458| 
                            if ( 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _null_QUMARK(
                                      begin
                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30458)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                             ) then
                              0
                            else
                                begin
                                  embedBacktraceInfo( "", 1 );
                                    delayCall( '_car',  'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable car", "car" ) end
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30458)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 )
                                end
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_index)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1152"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._export_MIMARKto_MIMARKruby_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_export_MIMARKto_MIMARKruby', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_export_MIMARKto_MIMARKruby'] = self.method( :_export_MIMARKto_MIMARKruby_METHOD )
    @_export_MIMARKto_MIMARKruby = 
    trampCall(
          LispMacro.new { |_funcname| 
              begin
                embedBacktraceInfo( "", 1 );
                  _cons(
                    :"%export-to-ruby"                    ,
                      begin
                        embedBacktraceInfo( "", 1 );
                          _cons(
                              begin
                                  trampCall(_funcname).to_s
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1166"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _cons(
                                      begin
                                          trampCall(_funcname)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1166"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                    Cell.new()
                                  )
                              end
                          )
                      end
                  )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._load_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_load', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_load'] = self.method( :_load_METHOD )
    @_load = 
    trampCall(
          Proc.new { |_path| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1169 );
                    trampCall( self._rxmatch_METHOD(  'rxmatch',
                        begin
                          if @global_lisp_binding.has_key?('_rxmatch') then
                            trampCall(@_rxmatch)
                          else raise NameError.new( "Error: undefined variable rxmatch", "rxmatch" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1169"] + __e.backtrace ) ; raise __e
                        end                      ,
                    [
                        Regexp.new( "^([.]\\/|[.][.]\\/|\\/)")                        ,
                          begin
                              trampCall(_path)
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1169"] + __e.backtrace ) ; raise __e
                          end
                    ]
                                 ))
                end
               ) then
                  begin
                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1170 );
                      delayCall( '__PAMARKload',  '%load',
                          begin
                            if @global_lisp_binding.has_key?('__PAMARKload') then
                              trampCall(@__PAMARKload)
                            else raise NameError.new( "Error: undefined variable %load", "%load" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1170"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                                trampCall(_path)
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1170"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   )
                  end
              else
                  begin #makeLet
                    ___lambda = lambda { |_lp| 
                        begin #makeLetrec
                          ___lambda = lambda { |_loop| 
                              _loop                               = 
                                Proc.new { |_load_MIMARKpath| 
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1174 );
                                          _null_QUMARK(
                                              begin
                                                  trampCall(_load_MIMARKpath)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1174"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                     ) then
                                          begin raise RuntimeError, 
                                            begin
                                              embedBacktraceInfo( "", 1 );
                                                trampCall( self._sprintf_METHOD(  'sprintf',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_sprintf') then
                                                        trampCall(@_sprintf)
                                                      else raise NameError.new( "Error: undefined variable sprintf", "sprintf" ) end
                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                    "Error: can't load file [%s]
"                                                    ,
                                                      begin
                                                          trampCall(_path)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1175"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end
                                          rescue => __e 
                                            __e.set_backtrace( [":1"] + __e.backtrace )
                                            raise __e
                                          end 
                                    else
                                        if ( 
                                        true
                                         ) then
                                              begin #makeLet
                                                ___lambda = lambda { |_full_MIMARKpath| 
                                                    if ( 
                                                      begin
                                                          trampCall(File).exist?(
                                                                begin
                                                                    trampCall(_full_MIMARKpath)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1179"] + __e.backtrace ) ; raise __e
                                                                end
                                                            )
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1179"] + __e.backtrace ) ; raise __e
                                                      end
                                                     ) then
                                                          if ( 
                                                            if ( 
                                                              begin
                                                                embedBacktraceInfo( "", 1 );
                                                                  _not(
                                                                      begin
                                                                        embedBacktraceInfo( "", 1 );
                                                                          _eq_QUMARK(
                                                                            false                                                                            ,
                                                                              begin
                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1182 );
                                                                                  trampCall( self._rxmatch_METHOD(  'rxmatch',
                                                                                      begin
                                                                                        if @global_lisp_binding.has_key?('_rxmatch') then
                                                                                          trampCall(@_rxmatch)
                                                                                        else raise NameError.new( "Error: undefined variable rxmatch", "rxmatch" ) end
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1182"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                  [
                                                                                      Regexp.new( "[.]nndc.nc$")                                                                                      ,
                                                                                        begin
                                                                                            trampCall(_full_MIMARKpath)
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1182"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                  ]
                                                                                               ))
                                                                              end
                                                                          )
                                                                      end
                                                                  )
                                                              end
                                                             ) then
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1183 );
                                                                    _not(
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1183 );
                                                                            trampCall( self.__ASMARKruntime_MIMARKcheck_ASMARK_METHOD(  '*runtime-check*',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('__ASMARKruntime_MIMARKcheck_ASMARK') then
                                                                                    trampCall(@__ASMARKruntime_MIMARKcheck_ASMARK)
                                                                                  else raise NameError.new( "Error: undefined variable *runtime-check*", "*runtime-check*" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1183"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                            ]
                                                                                         ))
                                                                        end
                                                                    )
                                                                end
                                                            else
                                                              false
                                                            end
                                                           ) then
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1184 );
                                                                    delayCall( '__PAMARKload_MIMARKcompiled_MIMARKcode',  '%load-compiled-code',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('__PAMARKload_MIMARKcompiled_MIMARKcode') then
                                                                            trampCall(@__PAMARKload_MIMARKcompiled_MIMARKcode)
                                                                          else raise NameError.new( "Error: undefined variable %load-compiled-code", "%load-compiled-code" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1184"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                    [
                                                                          begin
                                                                              trampCall(_full_MIMARKpath)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1184"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                    ]
                                                                                 )
                                                                end
                                                          else
                                                              if ( 
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1185 );
                                                                    trampCall( self._rxmatch_METHOD(  'rxmatch',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_rxmatch') then
                                                                            trampCall(@_rxmatch)
                                                                          else raise NameError.new( "Error: undefined variable rxmatch", "rxmatch" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1185"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                    [
                                                                        Regexp.new( "[.]nndc$")                                                                        ,
                                                                          begin
                                                                              trampCall(_full_MIMARKpath)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1185"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                    ]
                                                                                 ))
                                                                end
                                                               ) then
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1186 );
                                                                        delayCall( '__PAMARKload_MIMARKcompiled_MIMARKcode',  '%load-compiled-code',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('__PAMARKload_MIMARKcompiled_MIMARKcode') then
                                                                                trampCall(@__PAMARKload_MIMARKcompiled_MIMARKcode)
                                                                              else raise NameError.new( "Error: undefined variable %load-compiled-code", "%load-compiled-code" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1186"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                  trampCall(_full_MIMARKpath)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1186"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                        ]
                                                                                     )
                                                                    end
                                                              else
                                                                  if ( 
                                                                  true
                                                                   ) then
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1188 );
                                                                            delayCall( '__PAMARKload',  '%load',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('__PAMARKload') then
                                                                                    trampCall(@__PAMARKload)
                                                                                  else raise NameError.new( "Error: undefined variable %load", "%load" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1188"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  begin
                                                                                      trampCall(_full_MIMARKpath)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1188"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                            ]
                                                                                         )
                                                                        end
                                                                  else
                                                                      Cell.new()
                                                                  end
                                                              end
                                                          end
                                                    else
                                                        if ( 
                                                          if ( 
                                                            begin
                                                              embedBacktraceInfo( "", 1 );
                                                                _not(
                                                                    begin
                                                                      embedBacktraceInfo( "", 1 );
                                                                        _eq_QUMARK(
                                                                          false                                                                          ,
                                                                            begin
                                                                                trampCall(File).exist?(
                                                                                      begin
                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1190 );
                                                                                          ( 
                                                                                            begin
                                                                                                trampCall(_full_MIMARKpath)
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1190"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          +
                                                                                          ".nndc.nc"
                                                                                           ) 
                                                                                      end
                                                                                  )
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1190"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                        )
                                                                    end
                                                                )
                                                            end
                                                           ) then
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1191 );
                                                                  _not(
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1191 );
                                                                          trampCall( self.__ASMARKruntime_MIMARKcheck_ASMARK_METHOD(  '*runtime-check*',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('__ASMARKruntime_MIMARKcheck_ASMARK') then
                                                                                  trampCall(@__ASMARKruntime_MIMARKcheck_ASMARK)
                                                                                else raise NameError.new( "Error: undefined variable *runtime-check*", "*runtime-check*" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1191"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                          ]
                                                                                       ))
                                                                      end
                                                                  )
                                                              end
                                                          else
                                                            false
                                                          end
                                                         ) then
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1192 );
                                                                  delayCall( '__PAMARKload_MIMARKcompiled_MIMARKcode',  '%load-compiled-code',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('__PAMARKload_MIMARKcompiled_MIMARKcode') then
                                                                          trampCall(@__PAMARKload_MIMARKcompiled_MIMARKcode)
                                                                        else raise NameError.new( "Error: undefined variable %load-compiled-code", "%load-compiled-code" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1192"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                  [
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1192 );
                                                                            ( 
                                                                              begin
                                                                                  trampCall(_full_MIMARKpath)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1192"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            +
                                                                            ".nndc.nc"
                                                                             ) 
                                                                        end
                                                                  ]
                                                                               )
                                                              end
                                                        else
                                                            if ( 
                                                              begin
                                                                  trampCall(File).exist?(
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1193 );
                                                                            ( 
                                                                              begin
                                                                                  trampCall(_full_MIMARKpath)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1193"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            +
                                                                            ".nndc"
                                                                             ) 
                                                                        end
                                                                    )
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1193"] + __e.backtrace ) ; raise __e
                                                              end
                                                             ) then
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1194 );
                                                                      delayCall( '__PAMARKload_MIMARKcompiled_MIMARKcode',  '%load-compiled-code',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('__PAMARKload_MIMARKcompiled_MIMARKcode') then
                                                                              trampCall(@__PAMARKload_MIMARKcompiled_MIMARKcode)
                                                                            else raise NameError.new( "Error: undefined variable %load-compiled-code", "%load-compiled-code" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1194"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                      [
                                                                            begin
                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1194 );
                                                                                ( 
                                                                                  begin
                                                                                      trampCall(_full_MIMARKpath)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1194"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                +
                                                                                ".nndc"
                                                                                 ) 
                                                                            end
                                                                      ]
                                                                                   )
                                                                  end
                                                            else
                                                                if ( 
                                                                  begin
                                                                      trampCall(File).exist?(
                                                                            begin
                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1195 );
                                                                                ( 
                                                                                  begin
                                                                                      trampCall(_full_MIMARKpath)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1195"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                +
                                                                                ".nnd"
                                                                                 ) 
                                                                            end
                                                                        )
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1195"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                 ) then
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1196 );
                                                                          delayCall( '__PAMARKload',  '%load',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('__PAMARKload') then
                                                                                  trampCall(@__PAMARKload)
                                                                                else raise NameError.new( "Error: undefined variable %load", "%load" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1196"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                                begin
                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1196 );
                                                                                    ( 
                                                                                      begin
                                                                                          trampCall(_full_MIMARKpath)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1196"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    +
                                                                                    ".nnd"
                                                                                     ) 
                                                                                end
                                                                          ]
                                                                                       )
                                                                      end
                                                                else
                                                                    if ( 
                                                                    true
                                                                     ) then
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1198 );
                                                                              delayCall( '_loop',  'loop',
                                                                                  begin
                                                                                      trampCall(_loop)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1198"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                              [
                                                                                    begin
                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1198 );
                                                                                        _cdr(
                                                                                            begin
                                                                                                trampCall(_load_MIMARKpath)
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1198"] + __e.backtrace ) ; raise __e
                                                                                            end
                                                                                        )
                                                                                    end
                                                                              ]
                                                                                           )
                                                                          end
                                                                    else
                                                                        Cell.new()
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                } ; ___lambda.call(
                                                      begin
                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1177 );
                                                          ( 
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1177 );
                                                                _car(
                                                                    begin
                                                                        trampCall(_load_MIMARKpath)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1177"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end                                                          +
                                                          "/"                                                          +
                                                            begin
                                                                trampCall(_path)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1177"] + __e.backtrace ) ; raise __e
                                                            end
                                                           ) 
                                                      end
                                                           )
                                              end
                                        else
                                            Cell.new()
                                        end
                                    end
                                }
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1173 );
                                  delayCall( '_loop',  'loop',
                                      begin
                                          trampCall(_loop)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1173"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_lp)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1173"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               )
                              end
                          } ; ___lambda.call(
                          nil
                                     )
                        end
                    } ; ___lambda.call(
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1171 );
                              trampCall( self._append_METHOD(  'append',
                                  begin
                                    if @global_lisp_binding.has_key?('_append') then
                                      trampCall(@_append)
                                    else raise NameError.new( "Error: undefined variable append", "append" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1171"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1171 );
                                        trampCall( self._map_METHOD(  'map',
                                            begin
                                              if @global_lisp_binding.has_key?('_map') then
                                                trampCall(@_map)
                                              else raise NameError.new( "Error: undefined variable map", "map" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1171"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              Proc.new { |_x| 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1171 );
                                                      ( 
                                                        begin
                                                            trampCall(_x)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1171"] + __e.backtrace ) ; raise __e
                                                        end                                                      +
                                                      "/nendo"
                                                       ) 
                                                  end
                                              }                                            ,
                                              begin
                                                if @global_lisp_binding.has_key?('__ASMARKload_MIMARKpath_ASMARK') then
                                                  trampCall(@__ASMARKload_MIMARKpath_ASMARK)
                                                else raise NameError.new( "Error: undefined variable *load-path*", "*load-path*" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1171"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     ))
                                    end                                  ,
                                    begin
                                      if @global_lisp_binding.has_key?('__ASMARKload_MIMARKpath_ASMARK') then
                                        trampCall(@__ASMARKload_MIMARKpath_ASMARK)
                                      else raise NameError.new( "Error: undefined variable *load-path*", "*load-path*" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1172"] + __e.backtrace ) ; raise __e
                                    end
                              ]
                                           ))
                          end
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._add_MIMARKload_MIMARKpath_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_add_MIMARKload_MIMARKpath', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_add_MIMARKload_MIMARKpath'] = self.method( :_add_MIMARKload_MIMARKpath_METHOD )
    @_add_MIMARKload_MIMARKpath = 
    trampCall(
          Proc.new { |_path,*__rest__| _afterp = __rest__[0] ;  
              begin #execFunc
                  def self.__ASMARKload_MIMARKpath_ASMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__ASMARKload_MIMARKpath_ASMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                  @global_lisp_binding['__ASMARKload_MIMARKpath_ASMARK'] = self.method( :__ASMARKload_MIMARKpath_ASMARK_METHOD )
                @__ASMARKload_MIMARKpath_ASMARK = 
                trampCall(
                      if ( 
                        begin #makeLet
                          ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30469| 
                              if ( 
                                begin
                                  embedBacktraceInfo( "", 1 );
                                    _null_QUMARK(
                                        begin
                                            trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30469)
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end
                                    )
                                end
                               ) then
                                false
                              else
                                  begin
                                    embedBacktraceInfo( "", 1 );
                                      _car(
                                          begin
                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30469)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                              end
                          } ; ___lambda.call(
                                begin
                                    trampCall(_afterp)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1202"] + __e.backtrace ) ; raise __e
                                end
                                     )
                        end
                       ) then
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1203 );
                              trampCall( self._append_METHOD(  'append',
                                  begin
                                    if @global_lisp_binding.has_key?('_append') then
                                      trampCall(@_append)
                                    else raise NameError.new( "Error: undefined variable append", "append" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1203"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                      if @global_lisp_binding.has_key?('__ASMARKload_MIMARKpath_ASMARK') then
                                        trampCall(@__ASMARKload_MIMARKpath_ASMARK)
                                      else raise NameError.new( "Error: undefined variable *load-path*", "*load-path*" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1203"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1203 );
                                        trampCall( self._list_METHOD(  'list',
                                            begin
                                              if @global_lisp_binding.has_key?('_list') then
                                                trampCall(@_list)
                                              else raise NameError.new( "Error: undefined variable list", "list" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1203"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_path)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1203"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     ))
                                    end
                              ]
                                           ))
                          end
                      else
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1204 );
                              _cons(
                                  begin
                                      trampCall(_path)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1204"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  begin
                                    if @global_lisp_binding.has_key?('__ASMARKload_MIMARKpath_ASMARK') then
                                      trampCall(@__ASMARKload_MIMARKpath_ASMARK)
                                    else raise NameError.new( "Error: undefined variable *load-path*", "*load-path*" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1204"] + __e.backtrace ) ; raise __e
                                  end
                              )
                          end
                      end
                )
              end
              begin
                if @global_lisp_binding.has_key?('__ASMARKload_MIMARKpath_ASMARK') then
                  trampCall(@__ASMARKload_MIMARKpath_ASMARK)
                else raise NameError.new( "Error: undefined variable *load-path*", "*load-path*" ) end
                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1205"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._use_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_use', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_use'] = self.method( :_use_METHOD )
    @_use = 
    trampCall(
          LispMacro.new { |_sym| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1210 );
                    _symbol_QUMARK(
                        begin
                            trampCall(_sym)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1210"] + __e.backtrace ) ; raise __e
                        end
                    )
                end
               ) then
                  begin #makeLet
                    ___lambda = lambda { |_str| 
                        begin #makeLet
                          ___lambda = lambda { |_pathname| 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _cons(
                                    :"load"                                    ,
                                      begin
                                        embedBacktraceInfo( "", 1 );
                                          _cons(
                                              begin
                                                  trampCall(_pathname)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1214"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                            Cell.new()
                                          )
                                      end
                                  )
                              end
                          } ; ___lambda.call(
                                begin
                                    trampCall(_str).gsub(
                                        "."                                        ,
                                        "/"
                                      )
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1213"] + __e.backtrace ) ; raise __e
                                end
                                     )
                        end
                    } ; ___lambda.call(
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1212 );
                              _symbol_MIMARK_GTMARKstring(
                                  begin
                                      trampCall(_sym)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1212"] + __e.backtrace ) ; raise __e
                                  end
                              )
                          end
                               )
                  end
              else
                  begin raise RuntimeError, 
                    begin
                      embedBacktraceInfo( "", 1 );
                        trampCall( self._sprintf_METHOD(  'sprintf',
                            begin
                              if @global_lisp_binding.has_key?('_sprintf') then
                                trampCall(@_sprintf)
                              else raise NameError.new( "Error: undefined variable sprintf", "sprintf" ) end
                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                            "Error: use macro requires a symbol argument."
                        ]
                                     ))
                    end
                  rescue => __e 
                    __e.set_backtrace( [":1"] + __e.backtrace )
                    raise __e
                  end 
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._export_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_export', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_export'] = self.method( :_export_METHOD )
    @_export = 
    trampCall(
          LispMacro.new { |_name| 
              begin
                embedBacktraceInfo( "", 1 );
                  _cons(
                    :"define"                    ,
                      begin
                        embedBacktraceInfo( "", 1 );
                          _cons(
                              begin
                                  trampCall(_name)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1220"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _cons(
                                    nil                                    ,
                                    Cell.new()
                                  )
                              end
                          )
                      end
                  )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._global_MIMARKdefined_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_global_MIMARKdefined_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_global_MIMARKdefined_QUMARK'] = self.method( :_global_MIMARKdefined_QUMARK_METHOD )
    @_global_MIMARKdefined_QUMARK = 
    trampCall(
          Proc.new { |_sym| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 1228 );
                  delayCall( '_find',  'find',
                      begin
                        if @global_lisp_binding.has_key?('_find') then
                          trampCall(@_find)
                        else raise NameError.new( "Error: undefined variable find", "find" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1228"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        Proc.new { |_x| 
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1230 );
                                _eq_QUMARK(
                                    begin
                                        trampCall(_sym)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1230"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    begin
                                        trampCall(_x)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1230"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                        }                      ,
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1231 );
                            trampCall( self._global_MIMARKvariables_METHOD(  'global-variables',
                                begin
                                  if @global_lisp_binding.has_key?('_global_MIMARKvariables') then
                                    trampCall(@_global_MIMARKvariables)
                                  else raise NameError.new( "Error: undefined variable global-variables", "global-variables" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1231"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                            ]
                                         ))
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._compiled_MIMARKcode_MIMARKstring_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_compiled_MIMARKcode_MIMARKstring', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_compiled_MIMARKcode_MIMARKstring'] = self.method( :_compiled_MIMARKcode_MIMARKstring_METHOD )
    @_compiled_MIMARKcode_MIMARKstring = 
    trampCall(
          Proc.new { |_compiled_MIMARKcode,_filename| 
              begin #makeLetrec
                ___lambda = lambda { |_compiled_MIMARKbody_MIMARKstring| 
                    _compiled_MIMARKbody_MIMARKstring                     = 
                      Proc.new { |_string_MIMARKlist,_filename| 
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1239 );
                              delayCall( '__PLMARK',  '+',
                                  begin
                                    if @global_lisp_binding.has_key?('__PLMARK') then
                                      trampCall(@__PLMARK)
                                    else raise NameError.new( "Error: undefined variable +", "+" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1239"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1240 );
                                        trampCall( self._string_MIMARKjoin_METHOD(  'string-join',
                                            begin
                                              if @global_lisp_binding.has_key?('_string_MIMARKjoin') then
                                                trampCall(@_string_MIMARKjoin)
                                              else raise NameError.new( "Error: undefined variable string-join", "string-join" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1240"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_string_MIMARKlist)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1241"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                            "
#--------------------
"
                                        ]
                                                     ))
                                    end                                  ,
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1243 );
                                        trampCall( self._string_MIMARKjoin_METHOD(  'string-join',
                                            begin
                                              if @global_lisp_binding.has_key?('_string_MIMARKjoin') then
                                                trampCall(@_string_MIMARKjoin)
                                              else raise NameError.new( "Error: undefined variable string-join", "string-join" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1243"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                embedBacktraceInfo( "", 1 );
                                                  _cons(
                                                    "

"                                                    ,
                                                      begin
                                                        embedBacktraceInfo( "", 1 );
                                                          _cons(
                                                            "# -------------------------------------------------------"                                                            ,
                                                              begin
                                                                embedBacktraceInfo( "", 1 );
                                                                  _cons(
                                                                    "# [EOF]"                                                                    ,
                                                                      begin
                                                                        embedBacktraceInfo( "", 1 );
                                                                          _cons(
                                                                            "# -------------------------------------------------------"                                                                            ,
                                                                            Cell.new()
                                                                          )
                                                                      end
                                                                  )
                                                              end
                                                          )
                                                      end
                                                  )
                                              end                                            ,
                                            "
"
                                        ]
                                                     ))
                                    end
                              ]
                                           )
                          end
                      }
                    begin #makeLet
                      ___lambda = lambda { |_str_MIMARKlist,_script_MIMARKflag| 
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1253 );
                              delayCall( '_values',  'values',
                                  begin
                                    if @global_lisp_binding.has_key?('_values') then
                                      trampCall(@_values)
                                    else raise NameError.new( "Error: undefined variable values", "values" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1253"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_script_MIMARKflag)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1254"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1255 );
                                        trampCall( callProcedure(  '_compiled_MIMARKbody_MIMARKstring',  'compiled-body-string',
                                            begin
                                                trampCall(_compiled_MIMARKbody_MIMARKstring)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1255"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                        [
                                              begin
                                                  trampCall(_str_MIMARKlist)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1255"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              begin
                                                  trampCall(_filename)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1255"] + __e.backtrace ) ; raise __e
                                              end
                                        ]
                                                     ))
                                    end
                              ]
                                           )
                          end
                      } ; ___lambda.call(
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1250 );
                                trampCall( self._assv_MIMARKref_METHOD(  'assv-ref',
                                    begin
                                      if @global_lisp_binding.has_key?('_assv_MIMARKref') then
                                        trampCall(@_assv_MIMARKref)
                                      else raise NameError.new( "Error: undefined variable assv-ref", "assv-ref" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1250"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                      begin
                                          trampCall(_filename)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1250"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      begin
                                          trampCall(_compiled_MIMARKcode)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1250"] + __e.backtrace ) ; raise __e
                                      end
                                ]
                                             ))
                            end                          ,
                            if ( 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  _not(
                                      begin
                                        embedBacktraceInfo( "", 1 );
                                          _eq_QUMARK(
                                            false                                            ,
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1251 );
                                                  trampCall( self._global_MIMARKdefined_QUMARK_METHOD(  'global-defined?',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_global_MIMARKdefined_QUMARK') then
                                                          trampCall(@_global_MIMARKdefined_QUMARK)
                                                        else raise NameError.new( "Error: undefined variable global-defined?", "global-defined?" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1251"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                      :"main"
                                                  ]
                                                               ))
                                              end
                                          )
                                      end
                                  )
                              end
                             ) then
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1252 );
                                    delayCall( '_procedure_QUMARK',  'procedure?',
                                        begin
                                          if @global_lisp_binding.has_key?('_procedure_QUMARK') then
                                            trampCall(@_procedure_QUMARK)
                                          else raise NameError.new( "Error: undefined variable procedure?", "procedure?" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1252"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                            if @global_lisp_binding.has_key?('_main') then
                                              trampCall(@_main)
                                            else raise NameError.new( "Error: undefined variable main", "main" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1252"] + __e.backtrace ) ; raise __e
                                          end
                                    ]
                                                 )
                                end
                            else
                              false
                            end
                                 )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._print_MIMARKcompiled_MIMARKcode_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_print_MIMARKcompiled_MIMARKcode', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_print_MIMARKcompiled_MIMARKcode'] = self.method( :_print_MIMARKcompiled_MIMARKcode_METHOD )
    @_print_MIMARKcompiled_MIMARKcode = 
    trampCall(
          Proc.new { |_src,*__rest__| _rest = __rest__[0] ;  
              begin #makeLetrec
                ___lambda = lambda { |_print_MIMARKto_MIMARKfile| 
                    _print_MIMARKto_MIMARKfile                     = 
                      Proc.new { |_f| 
                          begin
                            embedBacktraceInfo( "", 1 );
                              delayCall( '_call_MIMARKwith_MIMARKvalues',  'call-with-values',
                                  begin
                                    if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                      trampCall(@_call_MIMARKwith_MIMARKvalues)
                                    else raise NameError.new( "Error: undefined variable call-with-values", "call-with-values" ) end
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    Proc.new { || 
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1261 );
                                            trampCall( self._compiled_MIMARKcode_MIMARKstring_METHOD(  'compiled-code-string',
                                                begin
                                                  if @global_lisp_binding.has_key?('_compiled_MIMARKcode_MIMARKstring') then
                                                    trampCall(@_compiled_MIMARKcode_MIMARKstring)
                                                  else raise NameError.new( "Error: undefined variable compiled-code-string", "compiled-code-string" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1261"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1261 );
                                                      trampCall( self._get_MIMARKcompiled_MIMARKcode_METHOD(  'get-compiled-code',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_get_MIMARKcompiled_MIMARKcode') then
                                                              trampCall(@_get_MIMARKcompiled_MIMARKcode)
                                                            else raise NameError.new( "Error: undefined variable get-compiled-code", "get-compiled-code" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1261"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                      ]
                                                                   ))
                                                  end                                                ,
                                                  begin
                                                      trampCall(_src)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1261"] + __e.backtrace ) ; raise __e
                                                  end
                                            ]
                                                         ))
                                        end
                                    }                                  ,
                                    Proc.new { |_script_MIMARKflag,_str| 
                                        if ( 
                                          begin
                                              trampCall(_script_MIMARKflag)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1262"] + __e.backtrace ) ; raise __e
                                          end
                                         ) then
                                              begin
                                                  trampCall(_f).puts(
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1263 );
                                                            trampCall( self._string_MIMARKjoin_METHOD(  'string-join',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_string_MIMARKjoin') then
                                                                    trampCall(@_string_MIMARKjoin)
                                                                  else raise NameError.new( "Error: undefined variable string-join", "string-join" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1263"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  begin
                                                                    embedBacktraceInfo( "", 1 );
                                                                      _cons(
                                                                        "#!/usr/local/bin/ruby"                                                                        ,
                                                                          begin
                                                                            embedBacktraceInfo( "", 1 );
                                                                              _cons(
                                                                                "# -*- encoding: utf-8 -*-"                                                                                ,
                                                                                  begin
                                                                                    embedBacktraceInfo( "", 1 );
                                                                                      _cons(
                                                                                        "#"                                                                                        ,
                                                                                          begin
                                                                                            embedBacktraceInfo( "", 1 );
                                                                                              _cons(
                                                                                                "#    This file is nendo's compiled script file. "                                                                                                ,
                                                                                                  begin
                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                      _cons(
                                                                                                        "#    generated  \"nendo -c src\" command. "                                                                                                        ,
                                                                                                          begin
                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                              _cons(
                                                                                                                "#"                                                                                                                ,
                                                                                                                  begin
                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                      _cons(
                                                                                                                        ""                                                                                                                        ,
                                                                                                                          begin
                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                              _cons(
                                                                                                                                "require 'rubygems'"                                                                                                                                ,
                                                                                                                                  begin
                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                      _cons(
                                                                                                                                        "require 'nendo'"                                                                                                                                        ,
                                                                                                                                          begin
                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                              _cons(
                                                                                                                                                ""                                                                                                                                                ,
                                                                                                                                                  begin
                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                      _cons(
                                                                                                                                                        "core = Nendo::Core.new()"                                                                                                                                                        ,
                                                                                                                                                          begin
                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                              _cons(
                                                                                                                                                                "core.loadInitFile()"                                                                                                                                                                ,
                                                                                                                                                                  begin
                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                      _cons(
                                                                                                                                                                        "core.setArgv( ARGV )"                                                                                                                                                                        ,
                                                                                                                                                                          begin
                                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                                              _cons(
                                                                                                                                                                                "core.load_compiled_code_from_string( "                                                                                                                                                                                ,
                                                                                                                                                                                  begin
                                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                                      _cons(
                                                                                                                                                                                          begin
                                                                                                                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1278 );
                                                                                                                                                                                              _write_MIMARKto_MIMARKstring(
                                                                                                                                                                                                  begin
                                                                                                                                                                                                      trampCall(_str)
                                                                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1278"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                  end
                                                                                                                                                                                              )
                                                                                                                                                                                          end                                                                                                                                                                                        ,
                                                                                                                                                                                          begin
                                                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                                                              _cons(
                                                                                                                                                                                                " ) "                                                                                                                                                                                                ,
                                                                                                                                                                                                  begin
                                                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                      _cons(
                                                                                                                                                                                                        "core.evalStr( \"(if (and (global-defined? 'main) (procedure? main)) (main *argv*) #f) \" )"                                                                                                                                                                                                        ,
                                                                                                                                                                                                          begin
                                                                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                              _cons(
                                                                                                                                                                                                                ""                                                                                                                                                                                                                ,
                                                                                                                                                                                                                Cell.new()
                                                                                                                                                                                                              )
                                                                                                                                                                                                          end
                                                                                                                                                                                                      )
                                                                                                                                                                                                  end
                                                                                                                                                                                              )
                                                                                                                                                                                          end
                                                                                                                                                                                      )
                                                                                                                                                                                  end
                                                                                                                                                                              )
                                                                                                                                                                          end
                                                                                                                                                                      )
                                                                                                                                                                  end
                                                                                                                                                              )
                                                                                                                                                          end
                                                                                                                                                      )
                                                                                                                                                  end
                                                                                                                                              )
                                                                                                                                          end
                                                                                                                                      )
                                                                                                                                  end
                                                                                                                              )
                                                                                                                          end
                                                                                                                      )
                                                                                                                  end
                                                                                                              )
                                                                                                          end
                                                                                                      )
                                                                                                  end
                                                                                              )
                                                                                          end
                                                                                      )
                                                                                  end
                                                                              )
                                                                          end
                                                                      )
                                                                  end                                                                ,
                                                                "
"
                                                            ]
                                                                         ))
                                                        end
                                                    )
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1263"] + __e.backtrace ) ; raise __e
                                              end
                                        else
                                            if ( 
                                            true
                                             ) then
                                                  begin
                                                      trampCall(_f).puts(
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1283 );
                                                                ( 
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1283 );
                                                                      trampCall( self._string_MIMARKjoin_METHOD(  'string-join',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_string_MIMARKjoin') then
                                                                              trampCall(@_string_MIMARKjoin)
                                                                            else raise NameError.new( "Error: undefined variable string-join", "string-join" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1283"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                      [
                                                                          Cell.new("#",Cell.new("#    This file is nendo's compiled library file. ",Cell.new("#    generated  \"nendo -c src\" command. ",Cell.new("# "))))                                                                          ,
                                                                          "
"
                                                                      ]
                                                                                   ))
                                                                  end                                                                +
                                                                "
"                                                                +
                                                                  begin
                                                                      trampCall(_str)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1291"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                 ) 
                                                            end
                                                        )
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1283"] + __e.backtrace ) ; raise __e
                                                  end
                                            else
                                                Cell.new()
                                            end
                                        end
                                    }
                              ]
                                           )
                          end
                      }
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1293 );
                          _not(
                              begin
                                  trampCall(File).exist?(
                                        begin
                                            trampCall(_src)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1293"] + __e.backtrace ) ; raise __e
                                        end
                                    )
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1293"] + __e.backtrace ) ; raise __e
                              end
                          )
                      end
                     ) then
                        begin  #makeBegin
                            begin raise RuntimeError, 
                              begin
                                embedBacktraceInfo( "", 1 );
                                  trampCall( self._sprintf_METHOD(  'sprintf',
                                      begin
                                        if @global_lisp_binding.has_key?('_sprintf') then
                                          trampCall(@_sprintf)
                                        else raise NameError.new( "Error: undefined variable sprintf", "sprintf" ) end
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                      "Error: file [%s] not found."                                      ,
                                        begin
                                            trampCall(_src)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1294"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               ))
                              end
                            rescue => __e 
                              __e.set_backtrace( [":1"] + __e.backtrace )
                              raise __e
                            end 
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1295 );
                                trampCall( self._exit_METHOD(  'exit',
                                    begin
                                      if @global_lisp_binding.has_key?('_exit') then
                                        trampCall(@_exit)
                                      else raise NameError.new( "Error: undefined variable exit", "exit" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1295"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                    1
                                ]
                                             ))
                            end
                        end
                    end
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1296 );
                        trampCall( self._clean_MIMARKcompiled_MIMARKcode_METHOD(  'clean-compiled-code',
                            begin
                              if @global_lisp_binding.has_key?('_clean_MIMARKcompiled_MIMARKcode') then
                                trampCall(@_clean_MIMARKcompiled_MIMARKcode)
                              else raise NameError.new( "Error: undefined variable clean-compiled-code", "clean-compiled-code" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1296"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                        ]
                                     ))
                    end
                    begin
                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1297 );
                        trampCall( self._load_METHOD(  'load',
                            begin
                              if @global_lisp_binding.has_key?('_load') then
                                trampCall(@_load)
                              else raise NameError.new( "Error: undefined variable load", "load" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1297"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_src)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1297"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     ))
                    end
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1298 );
                          _null_QUMARK(
                              begin
                                  trampCall(_rest)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1298"] + __e.backtrace ) ; raise __e
                              end
                          )
                      end
                     ) then
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1299 );
                            delayCall( '_print_MIMARKto_MIMARKfile',  'print-to-file',
                                begin
                                    trampCall(_print_MIMARKto_MIMARKfile)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1299"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                      trampCall(STDOUT)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1299"] + __e.backtrace ) ; raise __e
                                  end
                            ]
                                         )
                        end
                    else
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1300 );
                            delayCall( '_with_MIMARKopen',  'with-open',
                                begin
                                  if @global_lisp_binding.has_key?('_with_MIMARKopen') then
                                    trampCall(@_with_MIMARKopen)
                                  else raise NameError.new( "Error: undefined variable with-open", "with-open" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1300"] + __e.backtrace ) ; raise __e
                                end                              ,
                            [
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1300 );
                                      _car(
                                          begin
                                              trampCall(_rest)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1300"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end                                ,
                                  Proc.new { |_f| 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1302 );
                                          trampCall( callProcedure(  '_print_MIMARKto_MIMARKfile',  'print-to-file',
                                              begin
                                                  trampCall(_print_MIMARKto_MIMARKfile)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1302"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                    trampCall(_f)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1302"] + __e.backtrace ) ; raise __e
                                                end
                                          ]
                                                       ))
                                      end
                                  }                                ,
                                "w"
                            ]
                                         )
                        end
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARKcompile_MIMARKphase_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKcompile_MIMARKphase', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKcompile_MIMARKphase'] = self.method( :__PAMARKcompile_MIMARKphase_METHOD )
    @__PAMARKcompile_MIMARKphase = 
    trampCall(
          Proc.new { |_sexp| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1317 );
                    trampCall( self._list_QUMARK_METHOD(  'list?',
                        begin
                          if @global_lisp_binding.has_key?('_list_QUMARK') then
                            trampCall(@_list_QUMARK)
                          else raise NameError.new( "Error: undefined variable list?", "list?" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1317"] + __e.backtrace ) ; raise __e
                        end                      ,
                    [
                          begin
                              trampCall(_sexp)
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1317"] + __e.backtrace ) ; raise __e
                          end
                    ]
                                 ))
                end
               ) then
                  begin  #makeBegin
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1318 );
                          trampCall( self._for_MIMARKeach_METHOD(  'for-each',
                              begin
                                if @global_lisp_binding.has_key?('_for_MIMARKeach') then
                                  trampCall(@_for_MIMARKeach)
                                else raise NameError.new( "Error: undefined variable for-each", "for-each" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1318"] + __e.backtrace ) ; raise __e
                              end                            ,
                          [
                                Proc.new { |_func| 
                                    begin #execFunc
                                      
                                      _sexp = 
                                      trampCall(
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1320 );
                                                trampCall( callProcedure(  '_func',  'func',
                                                    begin
                                                        trampCall(_func)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1320"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_sexp)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1320"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end
                                      )
                                    end
                                }                              ,
                                begin
                                  if @global_lisp_binding.has_key?('__PAMARKcompile_MIMARKphase_MIMARKfunctions') then
                                    trampCall(@__PAMARKcompile_MIMARKphase_MIMARKfunctions)
                                  else raise NameError.new( "Error: undefined variable %compile-phase-functions", "%compile-phase-functions" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1321"] + __e.backtrace ) ; raise __e
                                end
                          ]
                                       ))
                      end
                      begin
                          trampCall(_sexp)
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1322"] + __e.backtrace ) ; raise __e
                      end
                  end
              else
                  if ( 
                  true
                   ) then
                        begin
                            trampCall(_sexp)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1324"] + __e.backtrace ) ; raise __e
                        end
                  else
                      Cell.new()
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark'] = self.method( :__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark_METHOD )
    @__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark = 
    trampCall(
          Proc.new { |_sexp| 
              begin #makeLetrec
                ___lambda = lambda { |_reserved_QUMARK,_setup_MIMARKlet_MIMARKargs,_setup_MIMARKproc,_setup_MIMARKproc_MIMARKbody| 
                    _reserved_QUMARK                     = 
                      Proc.new { |_sym| 
                          begin #makeLet
                            ___lambda = lambda { |_reserved_MIMARKorig| 
                                begin #makeLet
                                  ___lambda = lambda { |_reserved| 
                                      begin #makeLet
                                        ___lambda = lambda { |_cast_MIMARKsym| 
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1342 );
                                                delayCall( '_memq',  'memq',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_memq') then
                                                        trampCall(@_memq)
                                                      else raise NameError.new( "Error: undefined variable memq", "memq" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1342"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_cast_MIMARKsym)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1342"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      begin
                                                          trampCall(_reserved)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1342"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             )
                                            end
                                        } ; ___lambda.call(
                                              if ( 
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1338 );
                                                    _eq_QUMARK(
                                                        begin
                                                            trampCall(_sym).class
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1338"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        begin
                                                            trampCall(ParsedSymbol)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1338"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end
                                               ) then
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1339 );
                                                      delayCall( '_intern',  'intern',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_intern') then
                                                              trampCall(@_intern)
                                                            else raise NameError.new( "Error: undefined variable intern", "intern" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1339"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_sym)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1339"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   )
                                                  end
                                              else
                                                  begin
                                                      trampCall(_sym)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1340"] + __e.backtrace ) ; raise __e
                                                  end
                                              end
                                                   )
                                      end
                                  } ; ___lambda.call(
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1333 );
                                            trampCall( self._append_METHOD(  'append',
                                                begin
                                                  if @global_lisp_binding.has_key?('_append') then
                                                    trampCall(@_append)
                                                  else raise NameError.new( "Error: undefined variable append", "append" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1333"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_reserved_MIMARKorig)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1333"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1334 );
                                                      trampCall( self._map_METHOD(  'map',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_map') then
                                                              trampCall(@_map)
                                                            else raise NameError.new( "Error: undefined variable map", "map" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1334"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            Proc.new { |_orig| 
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1336 );
                                                                    _string_MIMARK_GTMARKsymbol(
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1336 );
                                                                            ( 
                                                                            "/nendo/core/"                                                                            +
                                                                              begin
                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1336 );
                                                                                  _symbol_MIMARK_GTMARKstring(
                                                                                      begin
                                                                                          trampCall(_orig)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1336"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                  )
                                                                              end
                                                                             ) 
                                                                        end
                                                                    )
                                                                end
                                                            }                                                          ,
                                                            begin
                                                                trampCall(_reserved_MIMARKorig)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1337"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                            ]
                                                         ))
                                        end
                                             )
                                end
                            } ; ___lambda.call(
                                Cell.new(:"quote",Cell.new(:"quote",Cell.new(:"macro",Cell.new(:"%syntax",Cell.new(:"begin",Cell.new(:"lambda",Cell.new(:"if",Cell.new(:"%let",Cell.new(:"letrec",Cell.new(:"define",Cell.new(:"define-syntax",Cell.new(:"%guard"))))))))))))
                                       )
                          end
                      }
                    _setup_MIMARKlet_MIMARKargs                     = 
                      Proc.new { |_args| 
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1345 );
                              delayCall( '_map',  'map',
                                  begin
                                    if @global_lisp_binding.has_key?('_map') then
                                      trampCall(@_map)
                                    else raise NameError.new( "Error: undefined variable map", "map" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1345"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    Proc.new { |_arg| 
                                        begin #makeLet
                                          ___lambda = lambda { |_name,_body| 
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1349 );
                                                  trampCall( self._list_METHOD(  'list',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_list') then
                                                          trampCall(@_list)
                                                        else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1349"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                        begin
                                                            trampCall(_name)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1349"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        if ( 
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1350 );
                                                              trampCall( self._list_QUMARK_METHOD(  'list?',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                                      trampCall(@_list_QUMARK)
                                                                    else raise NameError.new( "Error: undefined variable list?", "list?" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1350"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                    begin
                                                                        trampCall(_body)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1350"] + __e.backtrace ) ; raise __e
                                                                    end
                                                              ]
                                                                           ))
                                                          end
                                                         ) then
                                                            if ( 
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1351 );
                                                                  trampCall( callProcedure(  '_reserved_QUMARK',  'reserved?',
                                                                      begin
                                                                          trampCall(_reserved_QUMARK)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1351"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                  [
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1351 );
                                                                            _car(
                                                                                begin
                                                                                    trampCall(_body)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1351"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                            )
                                                                        end
                                                                  ]
                                                                               ))
                                                              end
                                                             ) then
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1352 );
                                                                    trampCall( self.__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark_METHOD(  '%setup-%tailcall-mark',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark') then
                                                                            trampCall(@__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark)
                                                                          else raise NameError.new( "Error: undefined variable %setup-%tailcall-mark", "%setup-%tailcall-mark" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1352"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                    [
                                                                          begin
                                                                              trampCall(_body)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1352"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                    ]
                                                                                 ))
                                                                end
                                                            else
                                                                begin
                                                                    trampCall(_body)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1353"] + __e.backtrace ) ; raise __e
                                                                end
                                                            end
                                                        else
                                                            begin
                                                                trampCall(_body)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1354"] + __e.backtrace ) ; raise __e
                                                            end
                                                        end
                                                  ]
                                                               ))
                                              end
                                          } ; ___lambda.call(
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1347 );
                                                    trampCall( self._first_METHOD(  'first',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_first') then
                                                            trampCall(@_first)
                                                          else raise NameError.new( "Error: undefined variable first", "first" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1347"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                              trampCall(_arg)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1347"] + __e.backtrace ) ; raise __e
                                                          end
                                                    ]
                                                                 ))
                                                end                                              ,
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1348 );
                                                    trampCall( self._second_METHOD(  'second',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_second') then
                                                            trampCall(@_second)
                                                          else raise NameError.new( "Error: undefined variable second", "second" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1348"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                              trampCall(_arg)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1348"] + __e.backtrace ) ; raise __e
                                                          end
                                                    ]
                                                                 ))
                                                end
                                                     )
                                        end
                                    }                                  ,
                                    begin
                                        trampCall(_args)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1355"] + __e.backtrace ) ; raise __e
                                    end
                              ]
                                           )
                          end
                      }
                    _setup_MIMARKproc                     = 
                      Proc.new { |_sexp| 
                          if ( 
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1359 );
                                _null_QUMARK(
                                    begin
                                        trampCall(_sexp)
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1359"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            end
                           ) then
                                begin
                                    trampCall(_sexp)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1360"] + __e.backtrace ) ; raise __e
                                end
                          else
                              if ( 
                                if ( 
                                  begin
                                    embedBacktraceInfo( "", 1 );
                                      _not(
                                          begin
                                            embedBacktraceInfo( "", 1 );
                                              _eq_QUMARK(
                                                false                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1361 );
                                                      trampCall( self._list_QUMARK_METHOD(  'list?',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                              trampCall(@_list_QUMARK)
                                                            else raise NameError.new( "Error: undefined variable list?", "list?" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1361"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_sexp)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1361"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                              )
                                          end
                                      )
                                  end
                                 ) then
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1362 );
                                        ( 
                                        0                                        <
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1362 );
                                              _length(
                                                  begin
                                                      trampCall(_sexp)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1362"] + __e.backtrace ) ; raise __e
                                                  end
                                              )
                                          end
                                         ) 
                                    end
                                else
                                  false
                                end
                               ) then
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1363 );
                                          trampCall( callProcedure(  '_reserved_QUMARK',  'reserved?',
                                              begin
                                                  trampCall(_reserved_QUMARK)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1363"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1363 );
                                                    _car(
                                                        begin
                                                            trampCall(_sexp)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1363"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                end
                                          ]
                                                       ))
                                      end
                                     ) then
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1364 );
                                            delayCall( '__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark',  '%setup-%tailcall-mark',
                                                begin
                                                  if @global_lisp_binding.has_key?('__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark') then
                                                    trampCall(@__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark)
                                                  else raise NameError.new( "Error: undefined variable %setup-%tailcall-mark", "%setup-%tailcall-mark" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1364"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(_sexp)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1364"] + __e.backtrace ) ; raise __e
                                                  end
                                            ]
                                                         )
                                        end
                                    else
                                        if ( 
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1365 );
                                              _pair_QUMARK(
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1365 );
                                                      _car(
                                                          begin
                                                              trampCall(_sexp)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1365"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                              )
                                          end
                                         ) then
                                            begin
                                                trampCall(_sexp)
                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1366"] + __e.backtrace ) ; raise __e
                                            end
                                        else
                                            begin
                                              embedBacktraceInfo( "", 1 );
                                                delayCall( '_cons',  'cons',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cons') then
                                                        trampCall(@_cons)
                                                      else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                    :"%tailcall"                                                    ,
                                                      begin
                                                        embedBacktraceInfo( "", 1 );
                                                          _cons(
                                                              begin
                                                                  trampCall(_sexp)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1367"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                            Cell.new()
                                                          )
                                                      end
                                                ]
                                                             )
                                            end
                                        end
                                    end
                              else
                                  if ( 
                                  true
                                   ) then
                                        begin
                                            trampCall(_sexp)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1369"] + __e.backtrace ) ; raise __e
                                        end
                                  else
                                      Cell.new()
                                  end
                              end
                          end
                      }
                    _setup_MIMARKproc_MIMARKbody                     = 
                      Proc.new { |_sexp| 
                          if ( 
                            begin #makeLet
                              ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30477| 
                                  if ( 
                                    begin
                                        trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30477)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                   ) then
                                      begin
                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30477)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  else
                                      begin #makeLet
                                        ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30478| 
                                            if ( 
                                              begin
                                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30478)
                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                              end
                                             ) then
                                                begin
                                                    trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30478)
                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                end
                                            else
                                              false
                                            end
                                        } ; ___lambda.call(
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1373 );
                                                  _null_QUMARK(
                                                      begin
                                                          trampCall(_sexp)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1373"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end
                                                   )
                                      end
                                  end
                              } ; ___lambda.call(
                                    begin
                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1372 );
                                        _not(
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1372 );
                                                trampCall( self._list_QUMARK_METHOD(  'list?',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                        trampCall(@_list_QUMARK)
                                                      else raise NameError.new( "Error: undefined variable list?", "list?" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1372"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_sexp)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1372"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end
                                        )
                                    end
                                         )
                            end
                           ) then
                              begin
                                  trampCall(_sexp)
                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1374"] + __e.backtrace ) ; raise __e
                              end
                          else
                              begin #makeLet
                                ___lambda = lambda { |_r| 
                                    begin #makeLet
                                      ___lambda = lambda { |_last| 
                                          begin #makeLet
                                            ___lambda = lambda { |_other| 
                                                if ( 
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1378 );
                                                      _not(
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1378 );
                                                              _pair_QUMARK(
                                                                  begin
                                                                      trampCall(_last)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1378"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              )
                                                          end
                                                      )
                                                  end
                                                 ) then
                                                    begin
                                                        trampCall(_sexp)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1379"] + __e.backtrace ) ; raise __e
                                                    end
                                                else
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1380 );
                                                        delayCall( '_reverse',  'reverse',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_reverse') then
                                                                trampCall(@_reverse)
                                                              else raise NameError.new( "Error: undefined variable reverse", "reverse" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1380"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                        [
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1381 );
                                                                  _cons(
                                                                      if ( 
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1382 );
                                                                            trampCall( callProcedure(  '_reserved_QUMARK',  'reserved?',
                                                                                begin
                                                                                    trampCall(_reserved_QUMARK)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1382"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  begin
                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1382 );
                                                                                      _car(
                                                                                          begin
                                                                                              trampCall(_last)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1382"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                      )
                                                                                  end
                                                                            ]
                                                                                         ))
                                                                        end
                                                                       ) then
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1384 );
                                                                              trampCall( self.__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark_METHOD(  '%setup-%tailcall-mark',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark') then
                                                                                      trampCall(@__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark)
                                                                                    else raise NameError.new( "Error: undefined variable %setup-%tailcall-mark", "%setup-%tailcall-mark" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1384"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                              [
                                                                                    begin
                                                                                        trampCall(_last)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1384"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                              ]
                                                                                           ))
                                                                          end
                                                                      else
                                                                          begin
                                                                            embedBacktraceInfo( "", 1 );
                                                                              _cons(
                                                                                :"%tailcall"                                                                                ,
                                                                                  begin
                                                                                    embedBacktraceInfo( "", 1 );
                                                                                      _cons(
                                                                                          begin
                                                                                              trampCall(_last)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1386"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                        Cell.new()
                                                                                      )
                                                                                  end
                                                                              )
                                                                          end
                                                                      end                                                                    ,
                                                                      begin
                                                                          trampCall(_other)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1387"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                  )
                                                              end
                                                        ]
                                                                     )
                                                    end
                                                end
                                            } ; ___lambda.call(
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1377 );
                                                      _cdr(
                                                          begin
                                                              trampCall(_r)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1377"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  end
                                                       )
                                          end
                                      } ; ___lambda.call(
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1376 );
                                                _car(
                                                    begin
                                                        trampCall(_r)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1376"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                                 )
                                    end
                                } ; ___lambda.call(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1375 );
                                          _reverse(
                                              begin
                                                  trampCall(_sexp)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1375"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                           )
                              end
                          end
                      }
                    if ( 
                      begin
                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1390 );
                          _not(
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1390 );
                                  _pair_QUMARK(
                                      begin
                                          trampCall(_sexp)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1390"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              end
                          )
                      end
                     ) then
                          begin
                              trampCall(_sexp)
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1391"] + __e.backtrace ) ; raise __e
                          end
                    else
                        if ( 
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1392 );
                              _null_QUMARK(
                                  begin
                                      trampCall(_sexp)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1392"] + __e.backtrace ) ; raise __e
                                  end
                              )
                          end
                         ) then
                            Cell.new()
                        else
                            if ( 
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1394 );
                                  trampCall( self._list_QUMARK_METHOD(  'list?',
                                      begin
                                        if @global_lisp_binding.has_key?('_list_QUMARK') then
                                          trampCall(@_list_QUMARK)
                                        else raise NameError.new( "Error: undefined variable list?", "list?" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1394"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_sexp)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1394"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               ))
                              end
                             ) then
                                  begin #makeLet
                                    ___lambda = lambda { |__car| 
                                        begin #makeLet
                                          ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483| 
                                              if ( 
                                                begin #makeLet
                                                  ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30497| 
                                                      if ( 
                                                        begin
                                                            trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30497)
                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                        end
                                                       ) then
                                                          begin
                                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30497)
                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                          end
                                                      else
                                                          begin #makeLet
                                                            ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30498| 
                                                                if ( 
                                                                  begin
                                                                      trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30498)
                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                 ) then
                                                                    begin
                                                                        trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30498)
                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                else
                                                                  false
                                                                end
                                                            } ; ___lambda.call(
                                                                  begin
                                                                    embedBacktraceInfo( "", 1 );
                                                                      trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                              trampCall(@_eqv_QUMARK)
                                                                            else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                      [
                                                                          :"/nendo/core/quote"                                                                          ,
                                                                            begin
                                                                                trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                      ]
                                                                                   ))
                                                                  end
                                                                       )
                                                          end
                                                      end
                                                  } ; ___lambda.call(
                                                        begin
                                                          embedBacktraceInfo( "", 1 );
                                                            trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                    trampCall(@_eqv_QUMARK)
                                                                  else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                :"quote"                                                                ,
                                                                  begin
                                                                      trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                  end
                                                            ]
                                                                         ))
                                                        end
                                                             )
                                                end
                                               ) then
                                                    begin
                                                        trampCall(_sexp)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1398"] + __e.backtrace ) ; raise __e
                                                    end
                                              else
                                                  if ( 
                                                    begin #makeLet
                                                      ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30499| 
                                                          if ( 
                                                            begin
                                                                trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30499)
                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                            end
                                                           ) then
                                                              begin
                                                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30499)
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end
                                                          else
                                                              begin #makeLet
                                                                ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30500| 
                                                                    if ( 
                                                                      begin
                                                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30500)
                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                     ) then
                                                                        begin
                                                                            trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30500)
                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    else
                                                                      false
                                                                    end
                                                                } ; ___lambda.call(
                                                                      begin
                                                                        embedBacktraceInfo( "", 1 );
                                                                          trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                  trampCall(@_eqv_QUMARK)
                                                                                else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                              :"quote"                                                                              ,
                                                                                begin
                                                                                    trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                          ]
                                                                                       ))
                                                                      end
                                                                           )
                                                              end
                                                          end
                                                      } ; ___lambda.call(
                                                            begin
                                                              embedBacktraceInfo( "", 1 );
                                                                trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                        trampCall(@_eqv_QUMARK)
                                                                      else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                    :"quote"                                                                    ,
                                                                      begin
                                                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                ]
                                                                             ))
                                                            end
                                                                 )
                                                    end
                                                   ) then
                                                        begin
                                                            trampCall(_sexp)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1400"] + __e.backtrace ) ; raise __e
                                                        end
                                                  else
                                                      if ( 
                                                        begin #makeLet
                                                          ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30501| 
                                                              if ( 
                                                                begin
                                                                    trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30501)
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end
                                                               ) then
                                                                  begin
                                                                      trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30501)
                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              else
                                                                  begin #makeLet
                                                                    ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30502| 
                                                                        if ( 
                                                                          begin
                                                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30502)
                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                         ) then
                                                                            begin
                                                                                trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30502)
                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                        else
                                                                          false
                                                                        end
                                                                    } ; ___lambda.call(
                                                                          begin
                                                                            embedBacktraceInfo( "", 1 );
                                                                              trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                      trampCall(@_eqv_QUMARK)
                                                                                    else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                              [
                                                                                  :"/nendo/core/macro"                                                                                  ,
                                                                                    begin
                                                                                        trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                              ]
                                                                                           ))
                                                                          end
                                                                               )
                                                                  end
                                                              end
                                                          } ; ___lambda.call(
                                                                begin
                                                                  embedBacktraceInfo( "", 1 );
                                                                    trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                            trampCall(@_eqv_QUMARK)
                                                                          else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                    [
                                                                        :"macro"                                                                        ,
                                                                          begin
                                                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                    ]
                                                                                 ))
                                                                end
                                                                     )
                                                        end
                                                       ) then
                                                            begin
                                                                trampCall(_sexp)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1402"] + __e.backtrace ) ; raise __e
                                                            end
                                                      else
                                                          if ( 
                                                            begin #makeLet
                                                              ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30503| 
                                                                  if ( 
                                                                    begin
                                                                        trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30503)
                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                   ) then
                                                                      begin
                                                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30503)
                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                  else
                                                                      begin #makeLet
                                                                        ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30504| 
                                                                            if ( 
                                                                              begin
                                                                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30504)
                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                             ) then
                                                                                begin
                                                                                    trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30504)
                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                            else
                                                                              false
                                                                            end
                                                                        } ; ___lambda.call(
                                                                              begin
                                                                                embedBacktraceInfo( "", 1 );
                                                                                  trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                      begin
                                                                                        if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                          trampCall(@_eqv_QUMARK)
                                                                                        else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                  [
                                                                                      :"/nendo/core/%syntax"                                                                                      ,
                                                                                        begin
                                                                                            trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                  ]
                                                                                               ))
                                                                              end
                                                                                   )
                                                                      end
                                                                  end
                                                              } ; ___lambda.call(
                                                                    begin
                                                                      embedBacktraceInfo( "", 1 );
                                                                        trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                trampCall(@_eqv_QUMARK)
                                                                              else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                            :"%syntax"                                                                            ,
                                                                              begin
                                                                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end
                                                                         )
                                                            end
                                                           ) then
                                                                begin
                                                                    trampCall(_sexp)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1404"] + __e.backtrace ) ; raise __e
                                                                end
                                                          else
                                                              if ( 
                                                                begin #makeLet
                                                                  ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30505| 
                                                                      if ( 
                                                                        begin
                                                                            trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30505)
                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                       ) then
                                                                          begin
                                                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30505)
                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                      else
                                                                          begin #makeLet
                                                                            ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30506| 
                                                                                if ( 
                                                                                  begin
                                                                                      trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30506)
                                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                                 ) then
                                                                                    begin
                                                                                        trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30506)
                                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                else
                                                                                  false
                                                                                end
                                                                            } ; ___lambda.call(
                                                                                  begin
                                                                                    embedBacktraceInfo( "", 1 );
                                                                                      trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                          begin
                                                                                            if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                              trampCall(@_eqv_QUMARK)
                                                                                            else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                      [
                                                                                          :"/nendo/core/%guard"                                                                                          ,
                                                                                            begin
                                                                                                trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                            end
                                                                                      ]
                                                                                                   ))
                                                                                  end
                                                                                       )
                                                                          end
                                                                      end
                                                                  } ; ___lambda.call(
                                                                        begin
                                                                          embedBacktraceInfo( "", 1 );
                                                                            trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                    trampCall(@_eqv_QUMARK)
                                                                                  else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                :"%guard"                                                                                ,
                                                                                  begin
                                                                                      trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                            ]
                                                                                         ))
                                                                        end
                                                                             )
                                                                end
                                                               ) then
                                                                    begin
                                                                        trampCall(_sexp)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1406"] + __e.backtrace ) ; raise __e
                                                                    end
                                                              else
                                                                  if ( 
                                                                    begin #makeLet
                                                                      ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30507| 
                                                                          if ( 
                                                                            begin
                                                                                trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30507)
                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                           ) then
                                                                              begin
                                                                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30507)
                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          else
                                                                              begin #makeLet
                                                                                ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30508| 
                                                                                    if ( 
                                                                                      begin
                                                                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30508)
                                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                     ) then
                                                                                        begin
                                                                                            trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30508)
                                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                    else
                                                                                      false
                                                                                    end
                                                                                } ; ___lambda.call(
                                                                                      begin
                                                                                        embedBacktraceInfo( "", 1 );
                                                                                          trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                                  trampCall(@_eqv_QUMARK)
                                                                                                else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                          [
                                                                                              :"/nendo/core/begin"                                                                                              ,
                                                                                                begin
                                                                                                    trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                end
                                                                                          ]
                                                                                                       ))
                                                                                      end
                                                                                           )
                                                                              end
                                                                          end
                                                                      } ; ___lambda.call(
                                                                            begin
                                                                              embedBacktraceInfo( "", 1 );
                                                                                trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                        trampCall(@_eqv_QUMARK)
                                                                                      else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                [
                                                                                    :"begin"                                                                                    ,
                                                                                      begin
                                                                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                ]
                                                                                             ))
                                                                            end
                                                                                 )
                                                                    end
                                                                   ) then
                                                                        begin
                                                                          embedBacktraceInfo( "", 1 );
                                                                            delayCall( '_cons',  'cons',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                                    trampCall(@_cons)
                                                                                  else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  begin
                                                                                      trampCall(__car)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1408"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  begin
                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1409 );
                                                                                      trampCall( callProcedure(  '_setup_MIMARKproc_MIMARKbody',  'setup-proc-body',
                                                                                          begin
                                                                                              trampCall(_setup_MIMARKproc_MIMARKbody)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1409"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                      [
                                                                                            begin
                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1409 );
                                                                                                _cdr(
                                                                                                    begin
                                                                                                        trampCall(_sexp)
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1409"] + __e.backtrace ) ; raise __e
                                                                                                    end
                                                                                                )
                                                                                            end
                                                                                      ]
                                                                                                   ))
                                                                                  end
                                                                            ]
                                                                                         )
                                                                        end
                                                                  else
                                                                      if ( 
                                                                        begin #makeLet
                                                                          ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30509| 
                                                                              if ( 
                                                                                begin
                                                                                    trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30509)
                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                               ) then
                                                                                  begin
                                                                                      trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30509)
                                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                              else
                                                                                  begin #makeLet
                                                                                    ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30510| 
                                                                                        if ( 
                                                                                          begin
                                                                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30510)
                                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                         ) then
                                                                                            begin
                                                                                                trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30510)
                                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                            end
                                                                                        else
                                                                                          false
                                                                                        end
                                                                                    } ; ___lambda.call(
                                                                                          begin
                                                                                            embedBacktraceInfo( "", 1 );
                                                                                              trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                                  begin
                                                                                                    if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                                      trampCall(@_eqv_QUMARK)
                                                                                                    else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,
                                                                                              [
                                                                                                  :"/nendo/core/lambda"                                                                                                  ,
                                                                                                    begin
                                                                                                        trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                    end
                                                                                              ]
                                                                                                           ))
                                                                                          end
                                                                                               )
                                                                                  end
                                                                              end
                                                                          } ; ___lambda.call(
                                                                                begin
                                                                                  embedBacktraceInfo( "", 1 );
                                                                                    trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                            trampCall(@_eqv_QUMARK)
                                                                                          else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                    [
                                                                                        :"lambda"                                                                                        ,
                                                                                          begin
                                                                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                    ]
                                                                                                 ))
                                                                                end
                                                                                     )
                                                                        end
                                                                       ) then
                                                                            begin
                                                                              embedBacktraceInfo( "", 1 );
                                                                                delayCall( '_cons',  'cons',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                        trampCall(@_cons)
                                                                                      else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                [
                                                                                      begin
                                                                                          trampCall(__car)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1411"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                      begin
                                                                                        embedBacktraceInfo( "", 1 );
                                                                                          _cons(
                                                                                              begin
                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1412 );
                                                                                                  trampCall( self._second_METHOD(  'second',
                                                                                                      begin
                                                                                                        if @global_lisp_binding.has_key?('_second') then
                                                                                                          trampCall(@_second)
                                                                                                        else raise NameError.new( "Error: undefined variable second", "second" ) end
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1412"] + __e.backtrace ) ; raise __e
                                                                                                      end                                                                                                    ,
                                                                                                  [
                                                                                                        begin
                                                                                                            trampCall(_sexp)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1412"] + __e.backtrace ) ; raise __e
                                                                                                        end
                                                                                                  ]
                                                                                                               ))
                                                                                              end                                                                                            ,
                                                                                              begin
                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1413 );
                                                                                                  trampCall( callProcedure(  '_setup_MIMARKproc_MIMARKbody',  'setup-proc-body',
                                                                                                      begin
                                                                                                          trampCall(_setup_MIMARKproc_MIMARKbody)
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1413"] + __e.backtrace ) ; raise __e
                                                                                                      end                                                                                                    ,
                                                                                                  [
                                                                                                        begin
                                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1413 );
                                                                                                            trampCall( self._cddr_METHOD(  'cddr',
                                                                                                                begin
                                                                                                                  if @global_lisp_binding.has_key?('_cddr') then
                                                                                                                    trampCall(@_cddr)
                                                                                                                  else raise NameError.new( "Error: undefined variable cddr", "cddr" ) end
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1413"] + __e.backtrace ) ; raise __e
                                                                                                                end                                                                                                              ,
                                                                                                            [
                                                                                                                  begin
                                                                                                                      trampCall(_sexp)
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1413"] + __e.backtrace ) ; raise __e
                                                                                                                  end
                                                                                                            ]
                                                                                                                         ))
                                                                                                        end
                                                                                                  ]
                                                                                                               ))
                                                                                              end
                                                                                          )
                                                                                      end
                                                                                ]
                                                                                             )
                                                                            end
                                                                      else
                                                                          if ( 
                                                                            begin #makeLet
                                                                              ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30511| 
                                                                                  if ( 
                                                                                    begin
                                                                                        trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30511)
                                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                   ) then
                                                                                      begin
                                                                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30511)
                                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                  else
                                                                                      begin #makeLet
                                                                                        ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30512| 
                                                                                            if ( 
                                                                                              begin
                                                                                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30512)
                                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                              end
                                                                                             ) then
                                                                                                begin
                                                                                                    trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30512)
                                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                end
                                                                                            else
                                                                                              false
                                                                                            end
                                                                                        } ; ___lambda.call(
                                                                                              begin
                                                                                                embedBacktraceInfo( "", 1 );
                                                                                                  trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                                      begin
                                                                                                        if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                                          trampCall(@_eqv_QUMARK)
                                                                                                        else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                      end                                                                                                    ,
                                                                                                  [
                                                                                                      :"/nendo/core/if"                                                                                                      ,
                                                                                                        begin
                                                                                                            trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                        end
                                                                                                  ]
                                                                                                               ))
                                                                                              end
                                                                                                   )
                                                                                      end
                                                                                  end
                                                                              } ; ___lambda.call(
                                                                                    begin
                                                                                      embedBacktraceInfo( "", 1 );
                                                                                        trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                            begin
                                                                                              if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                                trampCall(@_eqv_QUMARK)
                                                                                              else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,
                                                                                        [
                                                                                            :"if"                                                                                            ,
                                                                                              begin
                                                                                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                              end
                                                                                        ]
                                                                                                     ))
                                                                                    end
                                                                                         )
                                                                            end
                                                                           ) then
                                                                                begin #makeLet
                                                                                  ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30513| 
                                                                                      if ( 
                                                                                        begin #makeLet
                                                                                          ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30526| 
                                                                                              if ( 
                                                                                                begin
                                                                                                    trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30526)
                                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                end
                                                                                               ) then
                                                                                                  begin
                                                                                                      trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30526)
                                                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                  end
                                                                                              else
                                                                                                false
                                                                                              end
                                                                                          } ; ___lambda.call(
                                                                                                begin
                                                                                                  embedBacktraceInfo( "", 1 );
                                                                                                    trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                                        begin
                                                                                                          if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                                            trampCall(@_eqv_QUMARK)
                                                                                                          else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                    [
                                                                                                        3                                                                                                        ,
                                                                                                          begin
                                                                                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30513)
                                                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                          end
                                                                                                    ]
                                                                                                                 ))
                                                                                                end
                                                                                                     )
                                                                                        end
                                                                                       ) then
                                                                                            begin
                                                                                              embedBacktraceInfo( "", 1 );
                                                                                                delayCall( '_cons',  'cons',
                                                                                                    begin
                                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                                        trampCall(@_cons)
                                                                                                      else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                [
                                                                                                      begin
                                                                                                          trampCall(__car)
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1417"] + __e.backtrace ) ; raise __e
                                                                                                      end                                                                                                    ,
                                                                                                      begin
                                                                                                        embedBacktraceInfo( "", 1 );
                                                                                                          _cons(
                                                                                                              begin
                                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1418 );
                                                                                                                  trampCall( self._second_METHOD(  'second',
                                                                                                                      begin
                                                                                                                        if @global_lisp_binding.has_key?('_second') then
                                                                                                                          trampCall(@_second)
                                                                                                                        else raise NameError.new( "Error: undefined variable second", "second" ) end
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1418"] + __e.backtrace ) ; raise __e
                                                                                                                      end                                                                                                                    ,
                                                                                                                  [
                                                                                                                        begin
                                                                                                                            trampCall(_sexp)
                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1418"] + __e.backtrace ) ; raise __e
                                                                                                                        end
                                                                                                                  ]
                                                                                                                               ))
                                                                                                              end                                                                                                            ,
                                                                                                              begin
                                                                                                                embedBacktraceInfo( "", 1 );
                                                                                                                  _cons(
                                                                                                                      begin
                                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1419 );
                                                                                                                          trampCall( callProcedure(  '_setup_MIMARKproc',  'setup-proc',
                                                                                                                              begin
                                                                                                                                  trampCall(_setup_MIMARKproc)
                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1419"] + __e.backtrace ) ; raise __e
                                                                                                                              end                                                                                                                            ,
                                                                                                                          [
                                                                                                                                begin
                                                                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1419 );
                                                                                                                                    trampCall( self._third_METHOD(  'third',
                                                                                                                                        begin
                                                                                                                                          if @global_lisp_binding.has_key?('_third') then
                                                                                                                                            trampCall(@_third)
                                                                                                                                          else raise NameError.new( "Error: undefined variable third", "third" ) end
                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1419"] + __e.backtrace ) ; raise __e
                                                                                                                                        end                                                                                                                                      ,
                                                                                                                                    [
                                                                                                                                          begin
                                                                                                                                              trampCall(_sexp)
                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1419"] + __e.backtrace ) ; raise __e
                                                                                                                                          end
                                                                                                                                    ]
                                                                                                                                                 ))
                                                                                                                                end
                                                                                                                          ]
                                                                                                                                       ))
                                                                                                                      end                                                                                                                    ,
                                                                                                                    Cell.new()
                                                                                                                  )
                                                                                                              end
                                                                                                          )
                                                                                                      end
                                                                                                ]
                                                                                                             )
                                                                                            end
                                                                                      else
                                                                                          if ( 
                                                                                            begin #makeLet
                                                                                              ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30527| 
                                                                                                  if ( 
                                                                                                    begin
                                                                                                        trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30527)
                                                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                    end
                                                                                                   ) then
                                                                                                      begin
                                                                                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30527)
                                                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                      end
                                                                                                  else
                                                                                                    false
                                                                                                  end
                                                                                              } ; ___lambda.call(
                                                                                                    begin
                                                                                                      embedBacktraceInfo( "", 1 );
                                                                                                        trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                                            begin
                                                                                                              if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                                                trampCall(@_eqv_QUMARK)
                                                                                                              else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                            end                                                                                                          ,
                                                                                                        [
                                                                                                            4                                                                                                            ,
                                                                                                              begin
                                                                                                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30513)
                                                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                              end
                                                                                                        ]
                                                                                                                     ))
                                                                                                    end
                                                                                                         )
                                                                                            end
                                                                                           ) then
                                                                                                begin
                                                                                                  embedBacktraceInfo( "", 1 );
                                                                                                    delayCall( '_cons',  'cons',
                                                                                                        begin
                                                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                                                            trampCall(@_cons)
                                                                                                          else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                    [
                                                                                                          begin
                                                                                                              trampCall(__car)
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1421"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                          begin
                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                              _cons(
                                                                                                                  begin
                                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1422 );
                                                                                                                      trampCall( self._second_METHOD(  'second',
                                                                                                                          begin
                                                                                                                            if @global_lisp_binding.has_key?('_second') then
                                                                                                                              trampCall(@_second)
                                                                                                                            else raise NameError.new( "Error: undefined variable second", "second" ) end
                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1422"] + __e.backtrace ) ; raise __e
                                                                                                                          end                                                                                                                        ,
                                                                                                                      [
                                                                                                                            begin
                                                                                                                                trampCall(_sexp)
                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1422"] + __e.backtrace ) ; raise __e
                                                                                                                            end
                                                                                                                      ]
                                                                                                                                   ))
                                                                                                                  end                                                                                                                ,
                                                                                                                  begin
                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                      _cons(
                                                                                                                          begin
                                                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1423 );
                                                                                                                              trampCall( callProcedure(  '_setup_MIMARKproc',  'setup-proc',
                                                                                                                                  begin
                                                                                                                                      trampCall(_setup_MIMARKproc)
                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1423"] + __e.backtrace ) ; raise __e
                                                                                                                                  end                                                                                                                                ,
                                                                                                                              [
                                                                                                                                    begin
                                                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1423 );
                                                                                                                                        trampCall( self._third_METHOD(  'third',
                                                                                                                                            begin
                                                                                                                                              if @global_lisp_binding.has_key?('_third') then
                                                                                                                                                trampCall(@_third)
                                                                                                                                              else raise NameError.new( "Error: undefined variable third", "third" ) end
                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1423"] + __e.backtrace ) ; raise __e
                                                                                                                                            end                                                                                                                                          ,
                                                                                                                                        [
                                                                                                                                              begin
                                                                                                                                                  trampCall(_sexp)
                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1423"] + __e.backtrace ) ; raise __e
                                                                                                                                              end
                                                                                                                                        ]
                                                                                                                                                     ))
                                                                                                                                    end
                                                                                                                              ]
                                                                                                                                           ))
                                                                                                                          end                                                                                                                        ,
                                                                                                                          begin
                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                              _cons(
                                                                                                                                  begin
                                                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1424 );
                                                                                                                                      trampCall( callProcedure(  '_setup_MIMARKproc',  'setup-proc',
                                                                                                                                          begin
                                                                                                                                              trampCall(_setup_MIMARKproc)
                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1424"] + __e.backtrace ) ; raise __e
                                                                                                                                          end                                                                                                                                        ,
                                                                                                                                      [
                                                                                                                                            begin
                                                                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1424 );
                                                                                                                                                trampCall( self._fourth_METHOD(  'fourth',
                                                                                                                                                    begin
                                                                                                                                                      if @global_lisp_binding.has_key?('_fourth') then
                                                                                                                                                        trampCall(@_fourth)
                                                                                                                                                      else raise NameError.new( "Error: undefined variable fourth", "fourth" ) end
                                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1424"] + __e.backtrace ) ; raise __e
                                                                                                                                                    end                                                                                                                                                  ,
                                                                                                                                                [
                                                                                                                                                      begin
                                                                                                                                                          trampCall(_sexp)
                                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1424"] + __e.backtrace ) ; raise __e
                                                                                                                                                      end
                                                                                                                                                ]
                                                                                                                                                             ))
                                                                                                                                            end
                                                                                                                                      ]
                                                                                                                                                   ))
                                                                                                                                  end                                                                                                                                ,
                                                                                                                                Cell.new()
                                                                                                                              )
                                                                                                                          end
                                                                                                                      )
                                                                                                                  end
                                                                                                              )
                                                                                                          end
                                                                                                    ]
                                                                                                                 )
                                                                                                end
                                                                                          else
                                                                                              Cell.new()
                                                                                          end
                                                                                      end
                                                                                  } ; ___lambda.call(
                                                                                        begin
                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1415 );
                                                                                            _length(
                                                                                                begin
                                                                                                    trampCall(_sexp)
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1415"] + __e.backtrace ) ; raise __e
                                                                                                end
                                                                                            )
                                                                                        end
                                                                                             )
                                                                                end
                                                                          else
                                                                              if ( 
                                                                                begin #makeLet
                                                                                  ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30514| 
                                                                                      if ( 
                                                                                        begin
                                                                                            trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30514)
                                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                       ) then
                                                                                          begin
                                                                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30514)
                                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                      else
                                                                                          begin #makeLet
                                                                                            ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30515| 
                                                                                                if ( 
                                                                                                  begin
                                                                                                      trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30515)
                                                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                  end
                                                                                                 ) then
                                                                                                    begin
                                                                                                        trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30515)
                                                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                    end
                                                                                                else
                                                                                                  false
                                                                                                end
                                                                                            } ; ___lambda.call(
                                                                                                  begin
                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                      trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                                          begin
                                                                                                            if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                                              trampCall(@_eqv_QUMARK)
                                                                                                            else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                      [
                                                                                                          :"/nendo/core/%let"                                                                                                          ,
                                                                                                            begin
                                                                                                                trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                            end
                                                                                                      ]
                                                                                                                   ))
                                                                                                  end
                                                                                                       )
                                                                                          end
                                                                                      end
                                                                                  } ; ___lambda.call(
                                                                                        begin
                                                                                          embedBacktraceInfo( "", 1 );
                                                                                            trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                                begin
                                                                                                  if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                                    trampCall(@_eqv_QUMARK)
                                                                                                  else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,
                                                                                            [
                                                                                                :"%let"                                                                                                ,
                                                                                                  begin
                                                                                                      trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                  end
                                                                                            ]
                                                                                                         ))
                                                                                        end
                                                                                             )
                                                                                end
                                                                               ) then
                                                                                    begin
                                                                                      embedBacktraceInfo( "", 1 );
                                                                                        delayCall( '_cons',  'cons',
                                                                                            begin
                                                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                                                trampCall(@_cons)
                                                                                              else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,
                                                                                        [
                                                                                              begin
                                                                                                  trampCall(__car)
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1426"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              begin
                                                                                                embedBacktraceInfo( "", 1 );
                                                                                                  _cons(
                                                                                                      begin
                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1427 );
                                                                                                          trampCall( callProcedure(  '_setup_MIMARKlet_MIMARKargs',  'setup-let-args',
                                                                                                              begin
                                                                                                                  trampCall(_setup_MIMARKlet_MIMARKargs)
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1427"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,
                                                                                                          [
                                                                                                                begin
                                                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1427 );
                                                                                                                    trampCall( self._second_METHOD(  'second',
                                                                                                                        begin
                                                                                                                          if @global_lisp_binding.has_key?('_second') then
                                                                                                                            trampCall(@_second)
                                                                                                                          else raise NameError.new( "Error: undefined variable second", "second" ) end
                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1427"] + __e.backtrace ) ; raise __e
                                                                                                                        end                                                                                                                      ,
                                                                                                                    [
                                                                                                                          begin
                                                                                                                              trampCall(_sexp)
                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1427"] + __e.backtrace ) ; raise __e
                                                                                                                          end
                                                                                                                    ]
                                                                                                                                 ))
                                                                                                                end
                                                                                                          ]
                                                                                                                       ))
                                                                                                      end                                                                                                    ,
                                                                                                      begin
                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1428 );
                                                                                                          trampCall( callProcedure(  '_setup_MIMARKproc_MIMARKbody',  'setup-proc-body',
                                                                                                              begin
                                                                                                                  trampCall(_setup_MIMARKproc_MIMARKbody)
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1428"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,
                                                                                                          [
                                                                                                                begin
                                                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1428 );
                                                                                                                    trampCall( self._cddr_METHOD(  'cddr',
                                                                                                                        begin
                                                                                                                          if @global_lisp_binding.has_key?('_cddr') then
                                                                                                                            trampCall(@_cddr)
                                                                                                                          else raise NameError.new( "Error: undefined variable cddr", "cddr" ) end
                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1428"] + __e.backtrace ) ; raise __e
                                                                                                                        end                                                                                                                      ,
                                                                                                                    [
                                                                                                                          begin
                                                                                                                              trampCall(_sexp)
                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1428"] + __e.backtrace ) ; raise __e
                                                                                                                          end
                                                                                                                    ]
                                                                                                                                 ))
                                                                                                                end
                                                                                                          ]
                                                                                                                       ))
                                                                                                      end
                                                                                                  )
                                                                                              end
                                                                                        ]
                                                                                                     )
                                                                                    end
                                                                              else
                                                                                  if ( 
                                                                                    begin #makeLet
                                                                                      ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30516| 
                                                                                          if ( 
                                                                                            begin
                                                                                                trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30516)
                                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                            end
                                                                                           ) then
                                                                                              begin
                                                                                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30516)
                                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                              end
                                                                                          else
                                                                                              begin #makeLet
                                                                                                ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30517| 
                                                                                                    if ( 
                                                                                                      begin
                                                                                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30517)
                                                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                      end
                                                                                                     ) then
                                                                                                        begin
                                                                                                            trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30517)
                                                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                        end
                                                                                                    else
                                                                                                      false
                                                                                                    end
                                                                                                } ; ___lambda.call(
                                                                                                      begin
                                                                                                        embedBacktraceInfo( "", 1 );
                                                                                                          trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                                              begin
                                                                                                                if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                                                  trampCall(@_eqv_QUMARK)
                                                                                                                else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,
                                                                                                          [
                                                                                                              :"/nendo/core/letrec"                                                                                                              ,
                                                                                                                begin
                                                                                                                    trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                                end
                                                                                                          ]
                                                                                                                       ))
                                                                                                      end
                                                                                                           )
                                                                                              end
                                                                                          end
                                                                                      } ; ___lambda.call(
                                                                                            begin
                                                                                              embedBacktraceInfo( "", 1 );
                                                                                                trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                                    begin
                                                                                                      if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                                        trampCall(@_eqv_QUMARK)
                                                                                                      else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                [
                                                                                                    :"letrec"                                                                                                    ,
                                                                                                      begin
                                                                                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                      end
                                                                                                ]
                                                                                                             ))
                                                                                            end
                                                                                                 )
                                                                                    end
                                                                                   ) then
                                                                                        begin
                                                                                          embedBacktraceInfo( "", 1 );
                                                                                            delayCall( '_cons',  'cons',
                                                                                                begin
                                                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                                                    trampCall(@_cons)
                                                                                                  else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,
                                                                                            [
                                                                                                  begin
                                                                                                      trampCall(__car)
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1430"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,
                                                                                                  begin
                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                      _cons(
                                                                                                          begin
                                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1431 );
                                                                                                              trampCall( callProcedure(  '_setup_MIMARKlet_MIMARKargs',  'setup-let-args',
                                                                                                                  begin
                                                                                                                      trampCall(_setup_MIMARKlet_MIMARKargs)
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1431"] + __e.backtrace ) ; raise __e
                                                                                                                  end                                                                                                                ,
                                                                                                              [
                                                                                                                    begin
                                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1431 );
                                                                                                                        trampCall( self._second_METHOD(  'second',
                                                                                                                            begin
                                                                                                                              if @global_lisp_binding.has_key?('_second') then
                                                                                                                                trampCall(@_second)
                                                                                                                              else raise NameError.new( "Error: undefined variable second", "second" ) end
                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1431"] + __e.backtrace ) ; raise __e
                                                                                                                            end                                                                                                                          ,
                                                                                                                        [
                                                                                                                              begin
                                                                                                                                  trampCall(_sexp)
                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1431"] + __e.backtrace ) ; raise __e
                                                                                                                              end
                                                                                                                        ]
                                                                                                                                     ))
                                                                                                                    end
                                                                                                              ]
                                                                                                                           ))
                                                                                                          end                                                                                                        ,
                                                                                                          begin
                                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1432 );
                                                                                                              trampCall( callProcedure(  '_setup_MIMARKproc_MIMARKbody',  'setup-proc-body',
                                                                                                                  begin
                                                                                                                      trampCall(_setup_MIMARKproc_MIMARKbody)
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1432"] + __e.backtrace ) ; raise __e
                                                                                                                  end                                                                                                                ,
                                                                                                              [
                                                                                                                    begin
                                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1432 );
                                                                                                                        trampCall( self._cddr_METHOD(  'cddr',
                                                                                                                            begin
                                                                                                                              if @global_lisp_binding.has_key?('_cddr') then
                                                                                                                                trampCall(@_cddr)
                                                                                                                              else raise NameError.new( "Error: undefined variable cddr", "cddr" ) end
                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1432"] + __e.backtrace ) ; raise __e
                                                                                                                            end                                                                                                                          ,
                                                                                                                        [
                                                                                                                              begin
                                                                                                                                  trampCall(_sexp)
                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1432"] + __e.backtrace ) ; raise __e
                                                                                                                              end
                                                                                                                        ]
                                                                                                                                     ))
                                                                                                                    end
                                                                                                              ]
                                                                                                                           ))
                                                                                                          end
                                                                                                      )
                                                                                                  end
                                                                                            ]
                                                                                                         )
                                                                                        end
                                                                                  else
                                                                                      if ( 
                                                                                        begin #makeLet
                                                                                          ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30518| 
                                                                                              if ( 
                                                                                                begin
                                                                                                    trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30518)
                                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                end
                                                                                               ) then
                                                                                                  begin
                                                                                                      trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30518)
                                                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                  end
                                                                                              else
                                                                                                  begin #makeLet
                                                                                                    ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30519| 
                                                                                                        if ( 
                                                                                                          begin
                                                                                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30519)
                                                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                          end
                                                                                                         ) then
                                                                                                            begin
                                                                                                                trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30519)
                                                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                            end
                                                                                                        else
                                                                                                            begin #makeLet
                                                                                                              ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30520| 
                                                                                                                  if ( 
                                                                                                                    begin
                                                                                                                        trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30520)
                                                                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                                    end
                                                                                                                   ) then
                                                                                                                      begin
                                                                                                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30520)
                                                                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                                      end
                                                                                                                  else
                                                                                                                      begin #makeLet
                                                                                                                        ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30521| 
                                                                                                                            if ( 
                                                                                                                              begin
                                                                                                                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30521)
                                                                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                                              end
                                                                                                                             ) then
                                                                                                                                begin
                                                                                                                                    trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30521)
                                                                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                                                end
                                                                                                                            else
                                                                                                                              false
                                                                                                                            end
                                                                                                                        } ; ___lambda.call(
                                                                                                                              begin
                                                                                                                                embedBacktraceInfo( "", 1 );
                                                                                                                                  trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                                                                      begin
                                                                                                                                        if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                                                                          trampCall(@_eqv_QUMARK)
                                                                                                                                        else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                                                      end                                                                                                                                    ,
                                                                                                                                  [
                                                                                                                                      :"/nendo/core/define-syntax"                                                                                                                                      ,
                                                                                                                                        begin
                                                                                                                                            trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                                                        end
                                                                                                                                  ]
                                                                                                                                               ))
                                                                                                                              end
                                                                                                                                   )
                                                                                                                      end
                                                                                                                  end
                                                                                                              } ; ___lambda.call(
                                                                                                                    begin
                                                                                                                      embedBacktraceInfo( "", 1 );
                                                                                                                        trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                                                            begin
                                                                                                                              if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                                                                trampCall(@_eqv_QUMARK)
                                                                                                                              else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                                            end                                                                                                                          ,
                                                                                                                        [
                                                                                                                            :"define-syntax"                                                                                                                            ,
                                                                                                                              begin
                                                                                                                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                                              end
                                                                                                                        ]
                                                                                                                                     ))
                                                                                                                    end
                                                                                                                         )
                                                                                                            end
                                                                                                        end
                                                                                                    } ; ___lambda.call(
                                                                                                          begin
                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                              trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                                                  begin
                                                                                                                    if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                                                      trampCall(@_eqv_QUMARK)
                                                                                                                    else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                                  end                                                                                                                ,
                                                                                                              [
                                                                                                                  :"/nendo/core/define"                                                                                                                  ,
                                                                                                                    begin
                                                                                                                        trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                                    end
                                                                                                              ]
                                                                                                                           ))
                                                                                                          end
                                                                                                               )
                                                                                                  end
                                                                                              end
                                                                                          } ; ___lambda.call(
                                                                                                begin
                                                                                                  embedBacktraceInfo( "", 1 );
                                                                                                    trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                                        begin
                                                                                                          if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                                            trampCall(@_eqv_QUMARK)
                                                                                                          else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                    [
                                                                                                        :"define"                                                                                                        ,
                                                                                                          begin
                                                                                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                          end
                                                                                                    ]
                                                                                                                 ))
                                                                                                end
                                                                                                     )
                                                                                        end
                                                                                       ) then
                                                                                            begin #makeLet
                                                                                              ___lambda = lambda { |_val| 
                                                                                                  begin
                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                      delayCall( '_cons',  'cons',
                                                                                                          begin
                                                                                                            if @global_lisp_binding.has_key?('_cons') then
                                                                                                              trampCall(@_cons)
                                                                                                            else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                      [
                                                                                                            begin
                                                                                                                trampCall(__car)
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1435"] + __e.backtrace ) ; raise __e
                                                                                                            end                                                                                                          ,
                                                                                                            begin
                                                                                                              embedBacktraceInfo( "", 1 );
                                                                                                                _cons(
                                                                                                                    begin
                                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1436 );
                                                                                                                        trampCall( self._second_METHOD(  'second',
                                                                                                                            begin
                                                                                                                              if @global_lisp_binding.has_key?('_second') then
                                                                                                                                trampCall(@_second)
                                                                                                                              else raise NameError.new( "Error: undefined variable second", "second" ) end
                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1436"] + __e.backtrace ) ; raise __e
                                                                                                                            end                                                                                                                          ,
                                                                                                                        [
                                                                                                                              begin
                                                                                                                                  trampCall(_sexp)
                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1436"] + __e.backtrace ) ; raise __e
                                                                                                                              end
                                                                                                                        ]
                                                                                                                                     ))
                                                                                                                    end                                                                                                                  ,
                                                                                                                    begin
                                                                                                                      embedBacktraceInfo( "", 1 );
                                                                                                                        _cons(
                                                                                                                            if ( 
                                                                                                                              if ( 
                                                                                                                                begin
                                                                                                                                  embedBacktraceInfo( "", 1 );
                                                                                                                                    _not(
                                                                                                                                        begin
                                                                                                                                          embedBacktraceInfo( "", 1 );
                                                                                                                                            _eq_QUMARK(
                                                                                                                                              false                                                                                                                                              ,
                                                                                                                                                begin
                                                                                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1437 );
                                                                                                                                                    trampCall( self._list_QUMARK_METHOD(  'list?',
                                                                                                                                                        begin
                                                                                                                                                          if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                                                                                                                            trampCall(@_list_QUMARK)
                                                                                                                                                          else raise NameError.new( "Error: undefined variable list?", "list?" ) end
                                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1437"] + __e.backtrace ) ; raise __e
                                                                                                                                                        end                                                                                                                                                      ,
                                                                                                                                                    [
                                                                                                                                                          begin
                                                                                                                                                              trampCall(_val)
                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1437"] + __e.backtrace ) ; raise __e
                                                                                                                                                          end
                                                                                                                                                    ]
                                                                                                                                                                 ))
                                                                                                                                                end
                                                                                                                                            )
                                                                                                                                        end
                                                                                                                                    )
                                                                                                                                end
                                                                                                                               ) then
                                                                                                                                  if ( 
                                                                                                                                    begin
                                                                                                                                      embedBacktraceInfo( "", 1 );
                                                                                                                                        _not(
                                                                                                                                            begin
                                                                                                                                              embedBacktraceInfo( "", 1 );
                                                                                                                                                _eq_QUMARK(
                                                                                                                                                  false                                                                                                                                                  ,
                                                                                                                                                    begin
                                                                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1438 );
                                                                                                                                                        _not(
                                                                                                                                                            begin
                                                                                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1438 );
                                                                                                                                                                _null_QUMARK(
                                                                                                                                                                    begin
                                                                                                                                                                        trampCall(_val)
                                                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1438"] + __e.backtrace ) ; raise __e
                                                                                                                                                                    end
                                                                                                                                                                )
                                                                                                                                                            end
                                                                                                                                                        )
                                                                                                                                                    end
                                                                                                                                                )
                                                                                                                                            end
                                                                                                                                        )
                                                                                                                                    end
                                                                                                                                   ) then
                                                                                                                                      begin
                                                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1439 );
                                                                                                                                          trampCall( callProcedure(  '_reserved_QUMARK',  'reserved?',
                                                                                                                                              begin
                                                                                                                                                  trampCall(_reserved_QUMARK)
                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1439"] + __e.backtrace ) ; raise __e
                                                                                                                                              end                                                                                                                                            ,
                                                                                                                                          [
                                                                                                                                                begin
                                                                                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1439 );
                                                                                                                                                    _car(
                                                                                                                                                        begin
                                                                                                                                                            trampCall(_val)
                                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1439"] + __e.backtrace ) ; raise __e
                                                                                                                                                        end
                                                                                                                                                    )
                                                                                                                                                end
                                                                                                                                          ]
                                                                                                                                                       ))
                                                                                                                                      end
                                                                                                                                  else
                                                                                                                                    false
                                                                                                                                  end
                                                                                                                              else
                                                                                                                                false
                                                                                                                              end
                                                                                                                             ) then
                                                                                                                                begin
                                                                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1440 );
                                                                                                                                    trampCall( self.__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark_METHOD(  '%setup-%tailcall-mark',
                                                                                                                                        begin
                                                                                                                                          if @global_lisp_binding.has_key?('__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark') then
                                                                                                                                            trampCall(@__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark)
                                                                                                                                          else raise NameError.new( "Error: undefined variable %setup-%tailcall-mark", "%setup-%tailcall-mark" ) end
                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1440"] + __e.backtrace ) ; raise __e
                                                                                                                                        end                                                                                                                                      ,
                                                                                                                                    [
                                                                                                                                          begin
                                                                                                                                              trampCall(_val)
                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1440"] + __e.backtrace ) ; raise __e
                                                                                                                                          end
                                                                                                                                    ]
                                                                                                                                                 ))
                                                                                                                                end
                                                                                                                            else
                                                                                                                                begin
                                                                                                                                    trampCall(_val)
                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1441"] + __e.backtrace ) ; raise __e
                                                                                                                                end
                                                                                                                            end                                                                                                                          ,
                                                                                                                          Cell.new()
                                                                                                                        )
                                                                                                                    end
                                                                                                                )
                                                                                                            end
                                                                                                      ]
                                                                                                                   )
                                                                                                  end
                                                                                              } ; ___lambda.call(
                                                                                                    begin
                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1434 );
                                                                                                        trampCall( self._third_METHOD(  'third',
                                                                                                            begin
                                                                                                              if @global_lisp_binding.has_key?('_third') then
                                                                                                                trampCall(@_third)
                                                                                                              else raise NameError.new( "Error: undefined variable third", "third" ) end
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1434"] + __e.backtrace ) ; raise __e
                                                                                                            end                                                                                                          ,
                                                                                                        [
                                                                                                              begin
                                                                                                                  trampCall(_sexp)
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1434"] + __e.backtrace ) ; raise __e
                                                                                                              end
                                                                                                        ]
                                                                                                                     ))
                                                                                                    end
                                                                                                         )
                                                                                            end
                                                                                      else
                                                                                          if ( 
                                                                                            begin #makeLet
                                                                                              ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30522| 
                                                                                                  if ( 
                                                                                                    begin
                                                                                                        trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30522)
                                                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                    end
                                                                                                   ) then
                                                                                                      begin
                                                                                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30522)
                                                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                      end
                                                                                                  else
                                                                                                      begin #makeLet
                                                                                                        ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30523| 
                                                                                                            if ( 
                                                                                                              begin
                                                                                                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30523)
                                                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                              end
                                                                                                             ) then
                                                                                                                begin
                                                                                                                    trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30523)
                                                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                                end
                                                                                                            else
                                                                                                              false
                                                                                                            end
                                                                                                        } ; ___lambda.call(
                                                                                                              begin
                                                                                                                embedBacktraceInfo( "", 1 );
                                                                                                                  trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                                                      begin
                                                                                                                        if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                                                          trampCall(@_eqv_QUMARK)
                                                                                                                        else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                                      end                                                                                                                    ,
                                                                                                                  [
                                                                                                                      :"/nendo/core/set!"                                                                                                                      ,
                                                                                                                        begin
                                                                                                                            trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                                        end
                                                                                                                  ]
                                                                                                                               ))
                                                                                                              end
                                                                                                                   )
                                                                                                      end
                                                                                                  end
                                                                                              } ; ___lambda.call(
                                                                                                    begin
                                                                                                      embedBacktraceInfo( "", 1 );
                                                                                                        trampCall( self._eqv_QUMARK_METHOD(  'eqv?',
                                                                                                            begin
                                                                                                              if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                                                trampCall(@_eqv_QUMARK)
                                                                                                              else raise NameError.new( "Error: undefined variable eqv?", "eqv?" ) end
                                                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                            end                                                                                                          ,
                                                                                                        [
                                                                                                            :"set!"                                                                                                            ,
                                                                                                              begin
                                                                                                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30483)
                                                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                              end
                                                                                                        ]
                                                                                                                     ))
                                                                                                    end
                                                                                                         )
                                                                                            end
                                                                                           ) then
                                                                                                begin #makeLet
                                                                                                  ___lambda = lambda { |_val| 
                                                                                                      begin
                                                                                                        embedBacktraceInfo( "", 1 );
                                                                                                          delayCall( '_cons',  'cons',
                                                                                                              begin
                                                                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                                                                  trampCall(@_cons)
                                                                                                                else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,
                                                                                                          [
                                                                                                                begin
                                                                                                                    trampCall(__car)
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1444"] + __e.backtrace ) ; raise __e
                                                                                                                end                                                                                                              ,
                                                                                                                begin
                                                                                                                  embedBacktraceInfo( "", 1 );
                                                                                                                    _cons(
                                                                                                                        begin
                                                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1445 );
                                                                                                                            trampCall( self._second_METHOD(  'second',
                                                                                                                                begin
                                                                                                                                  if @global_lisp_binding.has_key?('_second') then
                                                                                                                                    trampCall(@_second)
                                                                                                                                  else raise NameError.new( "Error: undefined variable second", "second" ) end
                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1445"] + __e.backtrace ) ; raise __e
                                                                                                                                end                                                                                                                              ,
                                                                                                                            [
                                                                                                                                  begin
                                                                                                                                      trampCall(_sexp)
                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1445"] + __e.backtrace ) ; raise __e
                                                                                                                                  end
                                                                                                                            ]
                                                                                                                                         ))
                                                                                                                        end                                                                                                                      ,
                                                                                                                        begin
                                                                                                                          embedBacktraceInfo( "", 1 );
                                                                                                                            _cons(
                                                                                                                                if ( 
                                                                                                                                  if ( 
                                                                                                                                    begin
                                                                                                                                      embedBacktraceInfo( "", 1 );
                                                                                                                                        _not(
                                                                                                                                            begin
                                                                                                                                              embedBacktraceInfo( "", 1 );
                                                                                                                                                _eq_QUMARK(
                                                                                                                                                  false                                                                                                                                                  ,
                                                                                                                                                    begin
                                                                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1446 );
                                                                                                                                                        trampCall( self._list_QUMARK_METHOD(  'list?',
                                                                                                                                                            begin
                                                                                                                                                              if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                                                                                                                                trampCall(@_list_QUMARK)
                                                                                                                                                              else raise NameError.new( "Error: undefined variable list?", "list?" ) end
                                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1446"] + __e.backtrace ) ; raise __e
                                                                                                                                                            end                                                                                                                                                          ,
                                                                                                                                                        [
                                                                                                                                                              begin
                                                                                                                                                                  trampCall(_val)
                                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1446"] + __e.backtrace ) ; raise __e
                                                                                                                                                              end
                                                                                                                                                        ]
                                                                                                                                                                     ))
                                                                                                                                                    end
                                                                                                                                                )
                                                                                                                                            end
                                                                                                                                        )
                                                                                                                                    end
                                                                                                                                   ) then
                                                                                                                                      if ( 
                                                                                                                                        begin
                                                                                                                                          embedBacktraceInfo( "", 1 );
                                                                                                                                            _not(
                                                                                                                                                begin
                                                                                                                                                  embedBacktraceInfo( "", 1 );
                                                                                                                                                    _eq_QUMARK(
                                                                                                                                                      false                                                                                                                                                      ,
                                                                                                                                                        begin
                                                                                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1447 );
                                                                                                                                                            _not(
                                                                                                                                                                begin
                                                                                                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1447 );
                                                                                                                                                                    _null_QUMARK(
                                                                                                                                                                        begin
                                                                                                                                                                            trampCall(_val)
                                                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1447"] + __e.backtrace ) ; raise __e
                                                                                                                                                                        end
                                                                                                                                                                    )
                                                                                                                                                                end
                                                                                                                                                            )
                                                                                                                                                        end
                                                                                                                                                    )
                                                                                                                                                end
                                                                                                                                            )
                                                                                                                                        end
                                                                                                                                       ) then
                                                                                                                                          begin
                                                                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1448 );
                                                                                                                                              trampCall( callProcedure(  '_reserved_QUMARK',  'reserved?',
                                                                                                                                                  begin
                                                                                                                                                      trampCall(_reserved_QUMARK)
                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1448"] + __e.backtrace ) ; raise __e
                                                                                                                                                  end                                                                                                                                                ,
                                                                                                                                              [
                                                                                                                                                    begin
                                                                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1448 );
                                                                                                                                                        _car(
                                                                                                                                                            begin
                                                                                                                                                                trampCall(_val)
                                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1448"] + __e.backtrace ) ; raise __e
                                                                                                                                                            end
                                                                                                                                                        )
                                                                                                                                                    end
                                                                                                                                              ]
                                                                                                                                                           ))
                                                                                                                                          end
                                                                                                                                      else
                                                                                                                                        false
                                                                                                                                      end
                                                                                                                                  else
                                                                                                                                    false
                                                                                                                                  end
                                                                                                                                 ) then
                                                                                                                                    begin
                                                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1449 );
                                                                                                                                        trampCall( self.__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark_METHOD(  '%setup-%tailcall-mark',
                                                                                                                                            begin
                                                                                                                                              if @global_lisp_binding.has_key?('__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark') then
                                                                                                                                                trampCall(@__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark)
                                                                                                                                              else raise NameError.new( "Error: undefined variable %setup-%tailcall-mark", "%setup-%tailcall-mark" ) end
                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1449"] + __e.backtrace ) ; raise __e
                                                                                                                                            end                                                                                                                                          ,
                                                                                                                                        [
                                                                                                                                              begin
                                                                                                                                                  trampCall(_val)
                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1449"] + __e.backtrace ) ; raise __e
                                                                                                                                              end
                                                                                                                                        ]
                                                                                                                                                     ))
                                                                                                                                    end
                                                                                                                                else
                                                                                                                                    begin
                                                                                                                                        trampCall(_val)
                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1450"] + __e.backtrace ) ; raise __e
                                                                                                                                    end
                                                                                                                                end                                                                                                                              ,
                                                                                                                              Cell.new()
                                                                                                                            )
                                                                                                                        end
                                                                                                                    )
                                                                                                                end
                                                                                                          ]
                                                                                                                       )
                                                                                                      end
                                                                                                  } ; ___lambda.call(
                                                                                                        begin
                                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1443 );
                                                                                                            trampCall( self._third_METHOD(  'third',
                                                                                                                begin
                                                                                                                  if @global_lisp_binding.has_key?('_third') then
                                                                                                                    trampCall(@_third)
                                                                                                                  else raise NameError.new( "Error: undefined variable third", "third" ) end
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1443"] + __e.backtrace ) ; raise __e
                                                                                                                end                                                                                                              ,
                                                                                                            [
                                                                                                                  begin
                                                                                                                      trampCall(_sexp)
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1443"] + __e.backtrace ) ; raise __e
                                                                                                                  end
                                                                                                            ]
                                                                                                                         ))
                                                                                                        end
                                                                                                             )
                                                                                                end
                                                                                          else
                                                                                              if ( 
                                                                                              true
                                                                                               ) then
                                                                                                    if ( 
                                                                                                      begin
                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1452 );
                                                                                                          _symbol_QUMARK(
                                                                                                              begin
                                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1452 );
                                                                                                                  _car(
                                                                                                                      begin
                                                                                                                          trampCall(_sexp)
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1452"] + __e.backtrace ) ; raise __e
                                                                                                                      end
                                                                                                                  )
                                                                                                              end
                                                                                                          )
                                                                                                      end
                                                                                                     ) then
                                                                                                        begin
                                                                                                          embedBacktraceInfo( "", 1 );
                                                                                                            delayCall( '_cons',  'cons',
                                                                                                                begin
                                                                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                                                                    trampCall(@_cons)
                                                                                                                  else raise NameError.new( "Error: undefined variable cons", "cons" ) end
                                                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                                end                                                                                                              ,
                                                                                                            [
                                                                                                                :"%tailcall"                                                                                                                ,
                                                                                                                  begin
                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                      _cons(
                                                                                                                          begin
                                                                                                                              trampCall(_sexp)
                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1453"] + __e.backtrace ) ; raise __e
                                                                                                                          end                                                                                                                        ,
                                                                                                                        Cell.new()
                                                                                                                      )
                                                                                                                  end
                                                                                                            ]
                                                                                                                         )
                                                                                                        end
                                                                                                    else
                                                                                                        begin
                                                                                                            trampCall(_sexp)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1454"] + __e.backtrace ) ; raise __e
                                                                                                        end
                                                                                                    end
                                                                                              else
                                                                                                  Cell.new()
                                                                                              end
                                                                                          end
                                                                                      end
                                                                                  end
                                                                              end
                                                                          end
                                                                      end
                                                                  end
                                                              end
                                                          end
                                                      end
                                                  end
                                              end
                                          } ; ___lambda.call(
                                                begin
                                                    trampCall(__car)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1396"] + __e.backtrace ) ; raise __e
                                                end
                                                     )
                                        end
                                    } ; ___lambda.call(
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1395 );
                                              _car(
                                                  begin
                                                      trampCall(_sexp)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1395"] + __e.backtrace ) ; raise __e
                                                  end
                                              )
                                          end
                                               )
                                  end
                            else
                                if ( 
                                true
                                 ) then
                                      begin
                                          trampCall(_sexp)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1456"] + __e.backtrace ) ; raise __e
                                      end
                                else
                                    Cell.new()
                                end
                            end
                        end
                    end
                } ; ___lambda.call(
                nil,nil,nil,nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARKcompile_MIMARKphase_MIMARKfunctions_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKcompile_MIMARKphase_MIMARKfunctions', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKcompile_MIMARKphase_MIMARKfunctions'] = self.method( :__PAMARKcompile_MIMARKphase_MIMARKfunctions_METHOD )
    @__PAMARKcompile_MIMARKphase_MIMARKfunctions = 
    trampCall(
          begin
            embedBacktraceInfo( "./lib/nendo/init.nnd", 1462 );
              trampCall( self._list_METHOD(  'list',
                  begin
                    if @global_lisp_binding.has_key?('_list') then
                      trampCall(@_list)
                    else raise NameError.new( "Error: undefined variable list", "list" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1462"] + __e.backtrace ) ; raise __e
                  end                ,
              [
                    begin
                      if @global_lisp_binding.has_key?('__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark') then
                        trampCall(@__PAMARKsetup_MIMARK_PAMARKtailcall_MIMARKmark)
                      else raise NameError.new( "Error: undefined variable %setup-%tailcall-mark", "%setup-%tailcall-mark" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1463"] + __e.backtrace ) ; raise __e
                    end
              ]
                           ))
          end
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._identifier_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_identifier_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_identifier_QUMARK'] = self.method( :_identifier_QUMARK_METHOD )
    @_identifier_QUMARK = 
    trampCall(
          Proc.new { |_x| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 1473 );
                  delayCall( '_symbol_QUMARK',  'symbol?',
                      begin
                        if @global_lisp_binding.has_key?('_symbol_QUMARK') then
                          trampCall(@_symbol_QUMARK)
                        else raise NameError.new( "Error: undefined variable symbol?", "symbol?" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1473"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                            trampCall(_x)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1473"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._identifier_EQMARK_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_identifier_EQMARK_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_identifier_EQMARK_QUMARK'] = self.method( :_identifier_EQMARK_QUMARK_METHOD )
    @_identifier_EQMARK_QUMARK = 
    trampCall(
          Proc.new { |_use_MIMARKenv_MIMARKx,_x,_use_MIMARKenv_MIMARKy,_y| 
              begin
                embedBacktraceInfo( "./lib/nendo/init.nnd", 1476 );
                  delayCall( '_eq_QUMARK',  'eq?',
                      begin
                        if @global_lisp_binding.has_key?('_eq_QUMARK') then
                          trampCall(@_eq_QUMARK)
                        else raise NameError.new( "Error: undefined variable eq?", "eq?" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1476"] + __e.backtrace ) ; raise __e
                      end                    ,
                  [
                        begin
                            trampCall(_x)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1476"] + __e.backtrace ) ; raise __e
                        end                      ,
                        begin
                            trampCall(_y)
                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1476"] + __e.backtrace ) ; raise __e
                        end
                  ]
                               )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._identifier_MIMARK_GTMARKsymbol_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_identifier_MIMARK_GTMARKsymbol', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_identifier_MIMARK_GTMARKsymbol'] = self.method( :_identifier_MIMARK_GTMARKsymbol_METHOD )
    @_identifier_MIMARK_GTMARKsymbol = 
    trampCall(
          Proc.new { |_id| 
              if ( 
                begin
                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1479 );
                    _not(
                        begin
                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1479 );
                            _symbol_QUMARK(
                                begin
                                    trampCall(_id)
                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1479"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                    )
                end
               ) then
                    begin raise RuntimeError, 
                    "Error: identifier->symbol requires only symbol"
                    rescue => __e 
                      __e.set_backtrace( ["./lib/nendo/init.nnd:1480"] + __e.backtrace )
                      raise __e
                    end 
              end
              begin
                  trampCall(_id)
                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1481"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._er_MIMARKmacro_MIMARKtransformer_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_er_MIMARKmacro_MIMARKtransformer', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_er_MIMARKmacro_MIMARKtransformer'] = self.method( :_er_MIMARKmacro_MIMARKtransformer_METHOD )
    @_er_MIMARKmacro_MIMARKtransformer = 
    trampCall(
          Proc.new { |_f| 
              LispSyntax.new { |_expr,_use_MIMARKenv,_mac_MIMARKenv| 
                  begin #execFunc
                      def self._expander_MIMARKmain_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_expander_MIMARKmain', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                      @global_lisp_binding['_expander_MIMARKmain'] = self.method( :_expander_MIMARKmain_METHOD )
                    @_expander_MIMARKmain = 
                    trampCall(
                          Proc.new { |_rename,_compare| 
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1488 );
                                  trampCall( callProcedure(  '_f',  'f',
                                      begin
                                          trampCall(_f)
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1488"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_expr)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1488"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1488"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_compare)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1488"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               ))
                              end
                          }
                    )
                  end
                  begin #execFunc
                      def self.__rename_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__rename', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                      @global_lisp_binding['__rename'] = self.method( :__rename_METHOD )
                    @__rename = 
                    trampCall(
                          Proc.new { |_renames| 
                              Proc.new { |_identifier| 
                                  begin #makeLet
                                    ___lambda = lambda { |_cell| 
                                        if ( 
                                          begin
                                              trampCall(_cell)
                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1492"] + __e.backtrace ) ; raise __e
                                          end
                                         ) then
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1493 );
                                                _cdr(
                                                    begin
                                                        trampCall(_cell)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1493"] + __e.backtrace ) ; raise __e
                                                    end
                                                )
                                            end
                                        else
                                            trampCall( callProcedure( nil, 'anonymouse', 
                                                Proc.new { |_name| 
                                                    begin #execFunc
                                                      
                                                      _renames = 
                                                      trampCall(
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1495 );
                                                                _cons(
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1495 );
                                                                        _cons(
                                                                            begin
                                                                                trampCall(_identifier)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1495"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            begin
                                                                                trampCall(_name)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1495"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                        )
                                                                    end                                                                  ,
                                                                    begin
                                                                        trampCall(_renames)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1495"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                      )
                                                    end
                                                    begin
                                                        trampCall(_name)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1496"] + __e.backtrace ) ; raise __e
                                                    end
                                                }                                              ,
                                            [
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1497 );
                                                      trampCall( self._make_MIMARKsyntactic_MIMARKclosure_METHOD(  'make-syntactic-closure',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_make_MIMARKsyntactic_MIMARKclosure') then
                                                              trampCall(@_make_MIMARKsyntactic_MIMARKclosure)
                                                            else raise NameError.new( "Error: undefined variable make-syntactic-closure", "make-syntactic-closure" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1497"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_mac_MIMARKenv)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1497"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                          Cell.new()                                                          ,
                                                            begin
                                                                trampCall(_identifier)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1497"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                            ]
                                                      ))
                                        end
                                    } ; ___lambda.call(
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1491 );
                                              trampCall( self._assq_METHOD(  'assq',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_assq') then
                                                      trampCall(@_assq)
                                                    else raise NameError.new( "Error: undefined variable assq", "assq" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1491"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(_identifier)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1491"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    begin
                                                        trampCall(_renames)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1491"] + __e.backtrace ) ; raise __e
                                                    end
                                              ]
                                                           ))
                                          end
                                               )
                                  end
                              }
                          }
                    )
                  end
                  begin #execFunc
                      def self.__compare_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__compare', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                      @global_lisp_binding['__compare'] = self.method( :__compare_METHOD )
                    @__compare = 
                    trampCall(
                          Proc.new { |_x,_y| 
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1499 );
                                  trampCall( self._identifier_EQMARK_QUMARK_METHOD(  'identifier=?',
                                      begin
                                        if @global_lisp_binding.has_key?('_identifier_EQMARK_QUMARK') then
                                          trampCall(@_identifier_EQMARK_QUMARK)
                                        else raise NameError.new( "Error: undefined variable identifier=?", "identifier=?" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1499"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(_use_MIMARKenv)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1499"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_x)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1499"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_use_MIMARKenv)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1499"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                            trampCall(_y)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1499"] + __e.backtrace ) ; raise __e
                                        end
                                  ]
                                               ))
                              end
                          }
                    )
                  end
                  begin
                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1501 );
                      trampCall( self._expander_MIMARKmain_METHOD(  'expander-main',
                          begin
                            if @global_lisp_binding.has_key?('_expander_MIMARKmain') then
                              trampCall(@_expander_MIMARKmain)
                            else raise NameError.new( "Error: undefined variable expander-main", "expander-main" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1501"] + __e.backtrace ) ; raise __e
                          end                        ,
                      [
                            begin
                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1502 );
                                trampCall( self.__rename_METHOD(  '_rename',
                                    begin
                                      if @global_lisp_binding.has_key?('__rename') then
                                        trampCall(@__rename)
                                      else raise NameError.new( "Error: undefined variable _rename", "_rename" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1502"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                [
                                    Cell.new()
                                ]
                                             ))
                            end                          ,
                            begin
                              if @global_lisp_binding.has_key?('__compare') then
                                trampCall(@__compare)
                              else raise NameError.new( "Error: undefined variable _compare", "_compare" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1503"] + __e.backtrace ) ; raise __e
                            end
                      ]
                                   ))
                  end
              }
          }
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__DOTDOTDOT_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__DOTDOTDOT', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__DOTDOTDOT'] = self.method( :__DOTDOTDOT_METHOD )
    @__DOTDOTDOT = 
    trampCall(
        :"..."
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self._syntax_MIMARKrules_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_syntax_MIMARKrules', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_syntax_MIMARKrules'] = self.method( :_syntax_MIMARKrules_METHOD )
    @_syntax_MIMARKrules = 
    trampCall(
          begin
            embedBacktraceInfo( "./lib/nendo/init.nnd", 1510 );
              trampCall( self._er_MIMARKmacro_MIMARKtransformer_METHOD(  'er-macro-transformer',
                  begin
                    if @global_lisp_binding.has_key?('_er_MIMARKmacro_MIMARKtransformer') then
                      trampCall(@_er_MIMARKmacro_MIMARKtransformer)
                    else raise NameError.new( "Error: undefined variable er-macro-transformer", "er-macro-transformer" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1510"] + __e.backtrace ) ; raise __e
                  end                ,
              [
                    Proc.new { |_expr,_rename,_compare| 
                        if ( 
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1512 );
                              _not(
                                  begin
                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1512 );
                                      _pair_QUMARK(
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1512 );
                                              _cdr(
                                                  begin
                                                      trampCall(_expr)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1512"] + __e.backtrace ) ; raise __e
                                                  end
                                              )
                                          end
                                      )
                                  end
                              )
                          end
                         ) then
                              begin raise RuntimeError, 
                                "syntax-rules requires: (syntax-rules (ellipses...) ..patterns..) form (1). but got: " ' ' + 
                                _write_MIMARKto_MIMARKstring(
                                  begin
                                      trampCall(_expr)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1513"] + __e.backtrace ) ; raise __e
                                  end
                                )
                              rescue => __e 
                                __e.set_backtrace( ["./lib/nendo/init.nnd:1513"] + __e.backtrace )
                                raise __e
                              end 
                        end
                        if ( 
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1514 );
                              _not(
                                  begin #makeLet
                                    ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30528| 
                                        if ( 
                                          begin
                                              trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30528)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                         ) then
                                            begin
                                                trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30528)
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end
                                        else
                                            begin #makeLet
                                              ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30529| 
                                                  if ( 
                                                    begin
                                                        trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30529)
                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                    end
                                                   ) then
                                                      begin
                                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30529)
                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                      end
                                                  else
                                                    false
                                                  end
                                              } ; ___lambda.call(
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1514 );
                                                        trampCall( self._list_QUMARK_METHOD(  'list?',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                                trampCall(@_list_QUMARK)
                                                              else raise NameError.new( "Error: undefined variable list?", "list?" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1514"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                        [
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1514 );
                                                                  trampCall( self._cadr_METHOD(  'cadr',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_cadr') then
                                                                          trampCall(@_cadr)
                                                                        else raise NameError.new( "Error: undefined variable cadr", "cadr" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1514"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                  [
                                                                        begin
                                                                            trampCall(_expr)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1514"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                  ]
                                                                               ))
                                                              end
                                                        ]
                                                                     ))
                                                    end
                                                         )
                                            end
                                        end
                                    } ; ___lambda.call(
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1514 );
                                              _null_QUMARK(
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1514 );
                                                      trampCall( self._cadr_METHOD(  'cadr',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cadr') then
                                                              trampCall(@_cadr)
                                                            else raise NameError.new( "Error: undefined variable cadr", "cadr" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1514"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(_expr)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1514"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                              )
                                          end
                                               )
                                  end
                              )
                          end
                         ) then
                              begin raise RuntimeError, 
                                "syntax-rules requires: (syntax-rules (ellipses...) ..patterns..) form (2). but got: " ' ' + 
                                _write_MIMARKto_MIMARKstring(
                                  begin
                                      trampCall(_expr)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1515"] + __e.backtrace ) ; raise __e
                                  end
                                )
                              rescue => __e 
                                __e.set_backtrace( ["./lib/nendo/init.nnd:1515"] + __e.backtrace )
                                raise __e
                              end 
                        end
                        if ( 
                          begin
                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1516 );
                              ( 
                              3                              >
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1516 );
                                    _length(
                                        begin
                                            trampCall(_expr)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1516"] + __e.backtrace ) ; raise __e
                                        end
                                    )
                                end
                               ) 
                          end
                         ) then
                              begin raise RuntimeError, 
                                "syntax-rules requires: (syntax-rules (ellipses...) ..patterns..) form (3). but got: " ' ' + 
                                _write_MIMARKto_MIMARKstring(
                                  begin
                                      trampCall(_expr)
                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1517"] + __e.backtrace ) ; raise __e
                                  end
                                )
                              rescue => __e 
                                __e.set_backtrace( ["./lib/nendo/init.nnd:1517"] + __e.backtrace )
                                raise __e
                              end 
                        end
                        begin #makeLet
                          ___lambda = lambda { |_ellipse_MIMARKspecified_QUMARK,_count,__er_MIMARKmacro_MIMARKtransformer,__lambda,__let,__begin,__if,__and,__or,__eq_QUMARK,__equal_QUMARK,__car,__cdr,__cons,__pair_QUMARK,__null_QUMARK,__expr,__rename,__compare,__quote,__apply,__append,__map,__vector_QUMARK,__list_QUMARK,__lp,__reverse,__len,__length,___MIMARK,___GTMARK_EQMARK,__error,__ls,__res,__i,__vector_MIMARK_GTMARKlist,__list_MIMARK_GTMARKvector,__list| 
                              begin #execFunc
                                  def self._ellipse_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_ellipse', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                                  @global_lisp_binding['_ellipse'] = self.method( :_ellipse_METHOD )
                                @_ellipse = 
                                trampCall(
                                      begin
                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1539 );
                                          trampCall( callProcedure(  '_rename',  'rename',
                                              begin
                                                  trampCall(_rename)
                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1539"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                          [
                                                if ( 
                                                  begin
                                                      trampCall(_ellipse_MIMARKspecified_QUMARK)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1539"] + __e.backtrace ) ; raise __e
                                                  end
                                                 ) then
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1539 );
                                                        trampCall( self._cadr_METHOD(  'cadr',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_cadr') then
                                                                trampCall(@_cadr)
                                                              else raise NameError.new( "Error: undefined variable cadr", "cadr" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1539"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                        [
                                                              begin
                                                                  trampCall(_expr)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1539"] + __e.backtrace ) ; raise __e
                                                              end
                                                        ]
                                                                     ))
                                                    end
                                                else
                                                  :"..."
                                                end
                                          ]
                                                       ))
                                      end
                                )
                              end
                              begin #execFunc
                                  def self._lits_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_lits', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                                  @global_lisp_binding['_lits'] = self.method( :_lits_METHOD )
                                @_lits = 
                                trampCall(
                                      if ( 
                                        begin
                                            trampCall(_ellipse_MIMARKspecified_QUMARK)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1540"] + __e.backtrace ) ; raise __e
                                        end
                                       ) then
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1540 );
                                              trampCall( self._caddr_METHOD(  'caddr',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_caddr') then
                                                      trampCall(@_caddr)
                                                    else raise NameError.new( "Error: undefined variable caddr", "caddr" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1540"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(_expr)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1540"] + __e.backtrace ) ; raise __e
                                                    end
                                              ]
                                                           ))
                                          end
                                      else
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1540 );
                                              trampCall( self._cadr_METHOD(  'cadr',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cadr') then
                                                      trampCall(@_cadr)
                                                    else raise NameError.new( "Error: undefined variable cadr", "cadr" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1540"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(_expr)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1540"] + __e.backtrace ) ; raise __e
                                                    end
                                              ]
                                                           ))
                                          end
                                      end
                                )
                              end
                              begin #execFunc
                                  def self._forms_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_forms', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                                  @global_lisp_binding['_forms'] = self.method( :_forms_METHOD )
                                @_forms = 
                                trampCall(
                                      if ( 
                                        begin
                                            trampCall(_ellipse_MIMARKspecified_QUMARK)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1541"] + __e.backtrace ) ; raise __e
                                        end
                                       ) then
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1541 );
                                              trampCall( self._cdddr_METHOD(  'cdddr',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cdddr') then
                                                      trampCall(@_cdddr)
                                                    else raise NameError.new( "Error: undefined variable cdddr", "cdddr" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1541"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(_expr)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1541"] + __e.backtrace ) ; raise __e
                                                    end
                                              ]
                                                           ))
                                          end
                                      else
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1541 );
                                              trampCall( self._cddr_METHOD(  'cddr',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cddr') then
                                                      trampCall(@_cddr)
                                                    else raise NameError.new( "Error: undefined variable cddr", "cddr" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1541"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(_expr)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1541"] + __e.backtrace ) ; raise __e
                                                    end
                                              ]
                                                           ))
                                          end
                                      end
                                )
                              end
                              begin #execFunc
                                  def self._next_MIMARKv_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_next_MIMARKv', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                                  @global_lisp_binding['_next_MIMARKv'] = self.method( :_next_MIMARKv_METHOD )
                                @_next_MIMARKv = 
                                trampCall(
                                      Proc.new { || 
                                          begin #execFunc
                                            
                                            _count = 
                                            trampCall(
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1543 );
                                                      ( 
                                                        begin
                                                            trampCall(_count)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1543"] + __e.backtrace ) ; raise __e
                                                        end                                                      +
                                                      1
                                                       ) 
                                                  end
                                            )
                                          end
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1544 );
                                              trampCall( callProcedure(  '_rename',  'rename',
                                                  begin
                                                      trampCall(_rename)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1544"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1544 );
                                                        _string_MIMARK_GTMARKsymbol(
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1544 );
                                                                trampCall( self._string_MIMARKappend_METHOD(  'string-append',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_string_MIMARKappend') then
                                                                        trampCall(@_string_MIMARKappend)
                                                                      else raise NameError.new( "Error: undefined variable string-append", "string-append" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1544"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                    "v__"                                                                    ,
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1544 );
                                                                          trampCall( self._number_MIMARK_GTMARKstring_METHOD(  'number->string',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_number_MIMARK_GTMARKstring') then
                                                                                  trampCall(@_number_MIMARK_GTMARKstring)
                                                                                else raise NameError.new( "Error: undefined variable number->string", "number->string" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1544"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                                begin
                                                                                    trampCall(_count)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1544"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                          ]
                                                                                       ))
                                                                      end
                                                                ]
                                                                             ))
                                                            end
                                                        )
                                                    end
                                              ]
                                                           ))
                                          end
                                      }
                                )
                              end
                              begin #execFunc
                                  def self._expand_MIMARKpattern_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_expand_MIMARKpattern', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                                  @global_lisp_binding['_expand_MIMARKpattern'] = self.method( :_expand_MIMARKpattern_METHOD )
                                @_expand_MIMARKpattern = 
                                trampCall(
                                      Proc.new { |_pat,_tmpl| 
                                          begin #makeLetrec
                                            ___lambda = lambda { |_lp| 
                                                _lp                                                 = 
                                                  Proc.new { |_p,_x,_dim,_vars,_k| 
                                                      begin #makeLet
                                                        ___lambda = lambda { |_v| 
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1554 );
                                                                trampCall( self._list_METHOD(  'list',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_list') then
                                                                        trampCall(@_list)
                                                                      else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1554"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                      begin
                                                                          trampCall(__let)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1555"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1555 );
                                                                          trampCall( self._list_METHOD(  'list',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_list') then
                                                                                  trampCall(@_list)
                                                                                else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1555"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                                begin
                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1555 );
                                                                                    trampCall( self._list_METHOD(  'list',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_list') then
                                                                                            trampCall(@_list)
                                                                                          else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1555"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                    [
                                                                                          begin
                                                                                              trampCall(_v)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1555"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          begin
                                                                                              trampCall(_x)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1555"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                    ]
                                                                                                 ))
                                                                                end
                                                                          ]
                                                                                       ))
                                                                      end                                                                    ,
                                                                      if ( 
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1557 );
                                                                            trampCall( self._identifier_QUMARK_METHOD(  'identifier?',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_identifier_QUMARK') then
                                                                                    trampCall(@_identifier_QUMARK)
                                                                                  else raise NameError.new( "Error: undefined variable identifier?", "identifier?" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1557"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  begin
                                                                                      trampCall(_p)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1557"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                            ]
                                                                                         ))
                                                                        end
                                                                       ) then
                                                                            if ( 
                                                                              begin
                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1558 );
                                                                                  trampCall( self._find_METHOD(  'find',
                                                                                      begin
                                                                                        if @global_lisp_binding.has_key?('_find') then
                                                                                          trampCall(@_find)
                                                                                        else raise NameError.new( "Error: undefined variable find", "find" ) end
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1558"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                  [
                                                                                        Proc.new { |_l| 
                                                                                            begin
                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1558 );
                                                                                                trampCall( callProcedure(  '_compare',  'compare',
                                                                                                    begin
                                                                                                        trampCall(_compare)
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1558"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                [
                                                                                                      begin
                                                                                                          trampCall(_p)
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1558"] + __e.backtrace ) ; raise __e
                                                                                                      end                                                                                                    ,
                                                                                                      begin
                                                                                                          trampCall(_l)
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1558"] + __e.backtrace ) ; raise __e
                                                                                                      end
                                                                                                ]
                                                                                                             ))
                                                                                            end
                                                                                        }                                                                                      ,
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_lits') then
                                                                                            trampCall(@_lits)
                                                                                          else raise NameError.new( "Error: undefined variable lits", "lits" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1558"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                  ]
                                                                                               ))
                                                                              end
                                                                             ) then
                                                                                begin
                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1559 );
                                                                                    trampCall( self._list_METHOD(  'list',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_list') then
                                                                                            trampCall(@_list)
                                                                                          else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1559"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                    [
                                                                                          begin
                                                                                              trampCall(__and)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1559"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          begin
                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1559 );
                                                                                              trampCall( self._list_METHOD(  'list',
                                                                                                  begin
                                                                                                    if @global_lisp_binding.has_key?('_list') then
                                                                                                      trampCall(@_list)
                                                                                                    else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1559"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,
                                                                                              [
                                                                                                    begin
                                                                                                        trampCall(__compare)
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1559"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                    begin
                                                                                                        trampCall(_v)
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1559"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                    begin
                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1559 );
                                                                                                        trampCall( self._list_METHOD(  'list',
                                                                                                            begin
                                                                                                              if @global_lisp_binding.has_key?('_list') then
                                                                                                                trampCall(@_list)
                                                                                                              else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1559"] + __e.backtrace ) ; raise __e
                                                                                                            end                                                                                                          ,
                                                                                                        [
                                                                                                              begin
                                                                                                                  trampCall(__quote)
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1559"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,
                                                                                                              begin
                                                                                                                  trampCall(_p)
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1559"] + __e.backtrace ) ; raise __e
                                                                                                              end
                                                                                                        ]
                                                                                                                     ))
                                                                                                    end
                                                                                              ]
                                                                                                           ))
                                                                                          end                                                                                        ,
                                                                                          begin
                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1559 );
                                                                                              trampCall( callProcedure(  '_k',  'k',
                                                                                                  begin
                                                                                                      trampCall(_k)
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1559"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,
                                                                                              [
                                                                                                    begin
                                                                                                        trampCall(_vars)
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1559"] + __e.backtrace ) ; raise __e
                                                                                                    end
                                                                                              ]
                                                                                                           ))
                                                                                          end
                                                                                    ]
                                                                                                 ))
                                                                                end
                                                                            else
                                                                                begin
                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1560 );
                                                                                    trampCall( self._list_METHOD(  'list',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_list') then
                                                                                            trampCall(@_list)
                                                                                          else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1560"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                    [
                                                                                          begin
                                                                                              trampCall(__let)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1560"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          begin
                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1560 );
                                                                                              trampCall( self._list_METHOD(  'list',
                                                                                                  begin
                                                                                                    if @global_lisp_binding.has_key?('_list') then
                                                                                                      trampCall(@_list)
                                                                                                    else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1560"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,
                                                                                              [
                                                                                                    begin
                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1560 );
                                                                                                        trampCall( self._list_METHOD(  'list',
                                                                                                            begin
                                                                                                              if @global_lisp_binding.has_key?('_list') then
                                                                                                                trampCall(@_list)
                                                                                                              else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1560"] + __e.backtrace ) ; raise __e
                                                                                                            end                                                                                                          ,
                                                                                                        [
                                                                                                              begin
                                                                                                                  trampCall(_p)
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1560"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,
                                                                                                              begin
                                                                                                                  trampCall(_v)
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1560"] + __e.backtrace ) ; raise __e
                                                                                                              end
                                                                                                        ]
                                                                                                                     ))
                                                                                                    end
                                                                                              ]
                                                                                                           ))
                                                                                          end                                                                                        ,
                                                                                          begin
                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1560 );
                                                                                              trampCall( callProcedure(  '_k',  'k',
                                                                                                  begin
                                                                                                      trampCall(_k)
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1560"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,
                                                                                              [
                                                                                                    begin
                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1560 );
                                                                                                        _cons(
                                                                                                            begin
                                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1560 );
                                                                                                                _cons(
                                                                                                                    begin
                                                                                                                        trampCall(_p)
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1560"] + __e.backtrace ) ; raise __e
                                                                                                                    end                                                                                                                  ,
                                                                                                                    begin
                                                                                                                        trampCall(_dim)
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1560"] + __e.backtrace ) ; raise __e
                                                                                                                    end
                                                                                                                )
                                                                                                            end                                                                                                          ,
                                                                                                            begin
                                                                                                                trampCall(_vars)
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1560"] + __e.backtrace ) ; raise __e
                                                                                                            end
                                                                                                        )
                                                                                                    end
                                                                                              ]
                                                                                                           ))
                                                                                          end
                                                                                    ]
                                                                                                 ))
                                                                                end
                                                                            end
                                                                      else
                                                                          if ( 
                                                                            begin
                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1561 );
                                                                                trampCall( self._ellipse_QUMARK_METHOD(  'ellipse?',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_ellipse_QUMARK') then
                                                                                        trampCall(@_ellipse_QUMARK)
                                                                                      else raise NameError.new( "Error: undefined variable ellipse?", "ellipse?" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1561"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                [
                                                                                      begin
                                                                                          trampCall(_p)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1561"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                ]
                                                                                             ))
                                                                            end
                                                                           ) then
                                                                                if ( 
                                                                                  begin
                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1563 );
                                                                                      _not(
                                                                                          begin
                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1563 );
                                                                                              _null_QUMARK(
                                                                                                  begin
                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1563 );
                                                                                                      trampCall( self._cddr_METHOD(  'cddr',
                                                                                                          begin
                                                                                                            if @global_lisp_binding.has_key?('_cddr') then
                                                                                                              trampCall(@_cddr)
                                                                                                            else raise NameError.new( "Error: undefined variable cddr", "cddr" ) end
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1563"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                      [
                                                                                                            begin
                                                                                                                trampCall(_p)
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1563"] + __e.backtrace ) ; raise __e
                                                                                                            end
                                                                                                      ]
                                                                                                                   ))
                                                                                                  end
                                                                                              )
                                                                                          end
                                                                                      )
                                                                                  end
                                                                                 ) then
                                                                                      if ( 
                                                                                        begin
                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1565 );
                                                                                            _not(
                                                                                                begin
                                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1565 );
                                                                                                    trampCall( self._list_QUMARK_METHOD(  'list?',
                                                                                                        begin
                                                                                                          if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                                                                            trampCall(@_list_QUMARK)
                                                                                                          else raise NameError.new( "Error: undefined variable list?", "list?" ) end
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1565"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                    [
                                                                                                          begin
                                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1565 );
                                                                                                              trampCall( self._cddr_METHOD(  'cddr',
                                                                                                                  begin
                                                                                                                    if @global_lisp_binding.has_key?('_cddr') then
                                                                                                                      trampCall(@_cddr)
                                                                                                                    else raise NameError.new( "Error: undefined variable cddr", "cddr" ) end
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1565"] + __e.backtrace ) ; raise __e
                                                                                                                  end                                                                                                                ,
                                                                                                              [
                                                                                                                    begin
                                                                                                                        trampCall(_p)
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1565"] + __e.backtrace ) ; raise __e
                                                                                                                    end
                                                                                                              ]
                                                                                                                           ))
                                                                                                          end
                                                                                                    ]
                                                                                                                 ))
                                                                                                end
                                                                                            )
                                                                                        end
                                                                                       ) then
                                                                                            begin raise RuntimeError, 
                                                                                              "dotted ellipse" ' ' + 
                                                                                              _write_MIMARKto_MIMARKstring(
                                                                                                begin
                                                                                                    trampCall(_p)
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1566"] + __e.backtrace ) ; raise __e
                                                                                                end
                                                                                              )
                                                                                            rescue => __e 
                                                                                              __e.set_backtrace( ["./lib/nendo/init.nnd:1566"] + __e.backtrace )
                                                                                              raise __e
                                                                                            end 
                                                                                      else
                                                                                          if ( 
                                                                                            begin
                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1567 );
                                                                                                trampCall( self._find_METHOD(  'find',
                                                                                                    begin
                                                                                                      if @global_lisp_binding.has_key?('_find') then
                                                                                                        trampCall(@_find)
                                                                                                      else raise NameError.new( "Error: undefined variable find", "find" ) end
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1567"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                [
                                                                                                      Proc.new { |_x| 
                                                                                                          if ( 
                                                                                                            begin
                                                                                                              embedBacktraceInfo( "", 1 );
                                                                                                                _not(
                                                                                                                    begin
                                                                                                                      embedBacktraceInfo( "", 1 );
                                                                                                                        _eq_QUMARK(
                                                                                                                          false                                                                                                                          ,
                                                                                                                            begin
                                                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1567 );
                                                                                                                                trampCall( self._identifier_QUMARK_METHOD(  'identifier?',
                                                                                                                                    begin
                                                                                                                                      if @global_lisp_binding.has_key?('_identifier_QUMARK') then
                                                                                                                                        trampCall(@_identifier_QUMARK)
                                                                                                                                      else raise NameError.new( "Error: undefined variable identifier?", "identifier?" ) end
                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1567"] + __e.backtrace ) ; raise __e
                                                                                                                                    end                                                                                                                                  ,
                                                                                                                                [
                                                                                                                                      begin
                                                                                                                                          trampCall(_x)
                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1567"] + __e.backtrace ) ; raise __e
                                                                                                                                      end
                                                                                                                                ]
                                                                                                                                             ))
                                                                                                                            end
                                                                                                                        )
                                                                                                                    end
                                                                                                                )
                                                                                                            end
                                                                                                           ) then
                                                                                                              begin
                                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1567 );
                                                                                                                  trampCall( callProcedure(  '_compare',  'compare',
                                                                                                                      begin
                                                                                                                          trampCall(_compare)
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1567"] + __e.backtrace ) ; raise __e
                                                                                                                      end                                                                                                                    ,
                                                                                                                  [
                                                                                                                        begin
                                                                                                                            trampCall(_x)
                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1567"] + __e.backtrace ) ; raise __e
                                                                                                                        end                                                                                                                      ,
                                                                                                                        begin
                                                                                                                          if @global_lisp_binding.has_key?('_ellipse') then
                                                                                                                            trampCall(@_ellipse)
                                                                                                                          else raise NameError.new( "Error: undefined variable ellipse", "ellipse" ) end
                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1567"] + __e.backtrace ) ; raise __e
                                                                                                                        end
                                                                                                                  ]
                                                                                                                               ))
                                                                                                              end
                                                                                                          else
                                                                                                            false
                                                                                                          end
                                                                                                      }                                                                                                    ,
                                                                                                      begin
                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1568 );
                                                                                                          trampCall( self._cddr_METHOD(  'cddr',
                                                                                                              begin
                                                                                                                if @global_lisp_binding.has_key?('_cddr') then
                                                                                                                  trampCall(@_cddr)
                                                                                                                else raise NameError.new( "Error: undefined variable cddr", "cddr" ) end
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1568"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,
                                                                                                          [
                                                                                                                begin
                                                                                                                    trampCall(_p)
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1568"] + __e.backtrace ) ; raise __e
                                                                                                                end
                                                                                                          ]
                                                                                                                       ))
                                                                                                      end
                                                                                                ]
                                                                                                             ))
                                                                                            end
                                                                                           ) then
                                                                                                begin raise RuntimeError, 
                                                                                                  "multiple ellipses" ' ' + 
                                                                                                  _write_MIMARKto_MIMARKstring(
                                                                                                    begin
                                                                                                        trampCall(_p)
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1569"] + __e.backtrace ) ; raise __e
                                                                                                    end
                                                                                                  )
                                                                                                rescue => __e 
                                                                                                  __e.set_backtrace( ["./lib/nendo/init.nnd:1569"] + __e.backtrace )
                                                                                                  raise __e
                                                                                                end 
                                                                                          else
                                                                                              if ( 
                                                                                              true
                                                                                               ) then
                                                                                                    begin #makeLet
                                                                                                      ___lambda = lambda { |_len| 
                                                                                                          begin
                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                              _cons(
                                                                                                                  begin
                                                                                                                      trampCall(__let)
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1572"] + __e.backtrace ) ; raise __e
                                                                                                                  end                                                                                                                ,
                                                                                                                  begin
                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                      _cons(
                                                                                                                          begin
                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                              _cons(
                                                                                                                                  begin
                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                      _cons(
                                                                                                                                          begin
                                                                                                                                              trampCall(__len)
                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1572"] + __e.backtrace ) ; raise __e
                                                                                                                                          end                                                                                                                                        ,
                                                                                                                                          begin
                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                              _cons(
                                                                                                                                                  begin
                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                      _cons(
                                                                                                                                                          begin
                                                                                                                                                              trampCall(__length)
                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1572"] + __e.backtrace ) ; raise __e
                                                                                                                                                          end                                                                                                                                                        ,
                                                                                                                                                          begin
                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                              _cons(
                                                                                                                                                                  begin
                                                                                                                                                                      trampCall(_v)
                                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1572"] + __e.backtrace ) ; raise __e
                                                                                                                                                                  end                                                                                                                                                                ,
                                                                                                                                                                Cell.new()
                                                                                                                                                              )
                                                                                                                                                          end
                                                                                                                                                      )
                                                                                                                                                  end                                                                                                                                                ,
                                                                                                                                                Cell.new()
                                                                                                                                              )
                                                                                                                                          end
                                                                                                                                      )
                                                                                                                                  end                                                                                                                                ,
                                                                                                                                Cell.new()
                                                                                                                              )
                                                                                                                          end                                                                                                                        ,
                                                                                                                          begin
                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                              _cons(
                                                                                                                                  begin
                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                      _cons(
                                                                                                                                          begin
                                                                                                                                              trampCall(__and)
                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1573"] + __e.backtrace ) ; raise __e
                                                                                                                                          end                                                                                                                                        ,
                                                                                                                                          begin
                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                              _cons(
                                                                                                                                                  begin
                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                      _cons(
                                                                                                                                                          begin
                                                                                                                                                              trampCall(___GTMARK_EQMARK)
                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1573"] + __e.backtrace ) ; raise __e
                                                                                                                                                          end                                                                                                                                                        ,
                                                                                                                                                          begin
                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                              _cons(
                                                                                                                                                                  begin
                                                                                                                                                                      trampCall(__len)
                                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1573"] + __e.backtrace ) ; raise __e
                                                                                                                                                                  end                                                                                                                                                                ,
                                                                                                                                                                  begin
                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                      _cons(
                                                                                                                                                                          begin
                                                                                                                                                                              trampCall(_len)
                                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1573"] + __e.backtrace ) ; raise __e
                                                                                                                                                                          end                                                                                                                                                                        ,
                                                                                                                                                                        Cell.new()
                                                                                                                                                                      )
                                                                                                                                                                  end
                                                                                                                                                              )
                                                                                                                                                          end
                                                                                                                                                      )
                                                                                                                                                  end                                                                                                                                                ,
                                                                                                                                                  begin
                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                      _cons(
                                                                                                                                                          begin
                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                              _cons(
                                                                                                                                                                  begin
                                                                                                                                                                      trampCall(__let)
                                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1574"] + __e.backtrace ) ; raise __e
                                                                                                                                                                  end                                                                                                                                                                ,
                                                                                                                                                                  begin
                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                      _cons(
                                                                                                                                                                          begin
                                                                                                                                                                              trampCall(__lp)
                                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1574"] + __e.backtrace ) ; raise __e
                                                                                                                                                                          end                                                                                                                                                                        ,
                                                                                                                                                                          begin
                                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                                              _cons(
                                                                                                                                                                                  begin
                                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                                      _cons(
                                                                                                                                                                                          begin
                                                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                                                              _cons(
                                                                                                                                                                                                  begin
                                                                                                                                                                                                      trampCall(__ls)
                                                                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1574"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                  end                                                                                                                                                                                                ,
                                                                                                                                                                                                  begin
                                                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                      _cons(
                                                                                                                                                                                                          begin
                                                                                                                                                                                                              trampCall(_v)
                                                                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1574"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                          end                                                                                                                                                                                                        ,
                                                                                                                                                                                                        Cell.new()
                                                                                                                                                                                                      )
                                                                                                                                                                                                  end
                                                                                                                                                                                              )
                                                                                                                                                                                          end                                                                                                                                                                                        ,
                                                                                                                                                                                          begin
                                                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                                                              _cons(
                                                                                                                                                                                                  begin
                                                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                      _cons(
                                                                                                                                                                                                          begin
                                                                                                                                                                                                              trampCall(__i)
                                                                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1575"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                          end                                                                                                                                                                                                        ,
                                                                                                                                                                                                          begin
                                                                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                              _cons(
                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                      _cons(
                                                                                                                                                                                                                          begin
                                                                                                                                                                                                                              trampCall(___MIMARK)
                                                                                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1575"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                          end                                                                                                                                                                                                                        ,
                                                                                                                                                                                                                          begin
                                                                                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                              _cons(
                                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                                      trampCall(__len)
                                                                                                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1575"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                                  end                                                                                                                                                                                                                                ,
                                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                      _cons(
                                                                                                                                                                                                                                          begin
                                                                                                                                                                                                                                              trampCall(_len)
                                                                                                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1575"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                                          end                                                                                                                                                                                                                                        ,
                                                                                                                                                                                                                                        Cell.new()
                                                                                                                                                                                                                                      )
                                                                                                                                                                                                                                  end
                                                                                                                                                                                                                              )
                                                                                                                                                                                                                          end
                                                                                                                                                                                                                      )
                                                                                                                                                                                                                  end                                                                                                                                                                                                                ,
                                                                                                                                                                                                                Cell.new()
                                                                                                                                                                                                              )
                                                                                                                                                                                                          end
                                                                                                                                                                                                      )
                                                                                                                                                                                                  end                                                                                                                                                                                                ,
                                                                                                                                                                                                  begin
                                                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                      _cons(
                                                                                                                                                                                                          begin
                                                                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                              _cons(
                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                      trampCall(__res)
                                                                                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1576"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                  end                                                                                                                                                                                                                ,
                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                      _cons(
                                                                                                                                                                                                                          begin
                                                                                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                              _cons(
                                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                                      trampCall(__quote)
                                                                                                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1576"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                                  end                                                                                                                                                                                                                                ,
                                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                      _cons(
                                                                                                                                                                                                                                        Cell.new()                                                                                                                                                                                                                                        ,
                                                                                                                                                                                                                                        Cell.new()
                                                                                                                                                                                                                                      )
                                                                                                                                                                                                                                  end
                                                                                                                                                                                                                              )
                                                                                                                                                                                                                          end                                                                                                                                                                                                                        ,
                                                                                                                                                                                                                        Cell.new()
                                                                                                                                                                                                                      )
                                                                                                                                                                                                                  end
                                                                                                                                                                                                              )
                                                                                                                                                                                                          end                                                                                                                                                                                                        ,
                                                                                                                                                                                                        Cell.new()
                                                                                                                                                                                                      )
                                                                                                                                                                                                  end
                                                                                                                                                                                              )
                                                                                                                                                                                          end
                                                                                                                                                                                      )
                                                                                                                                                                                  end                                                                                                                                                                                ,
                                                                                                                                                                                  begin
                                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                                      _cons(
                                                                                                                                                                                          begin
                                                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                                                              _cons(
                                                                                                                                                                                                  begin
                                                                                                                                                                                                      trampCall(__if)
                                                                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1577"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                  end                                                                                                                                                                                                ,
                                                                                                                                                                                                  begin
                                                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                      _cons(
                                                                                                                                                                                                          begin
                                                                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                              _cons(
                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                      trampCall(___GTMARK_EQMARK)
                                                                                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1577"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                  end                                                                                                                                                                                                                ,
                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                      _cons(
                                                                                                                                                                                                                        0                                                                                                                                                                                                                        ,
                                                                                                                                                                                                                          begin
                                                                                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                              _cons(
                                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                                      trampCall(__i)
                                                                                                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1577"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                                  end                                                                                                                                                                                                                                ,
                                                                                                                                                                                                                                Cell.new()
                                                                                                                                                                                                                              )
                                                                                                                                                                                                                          end
                                                                                                                                                                                                                      )
                                                                                                                                                                                                                  end
                                                                                                                                                                                                              )
                                                                                                                                                                                                          end                                                                                                                                                                                                        ,
                                                                                                                                                                                                          begin
                                                                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                              _cons(
                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1578 );
                                                                                                                                                                                                                      trampCall( callProcedure(  '_lp',  'lp',
                                                                                                                                                                                                                          begin
                                                                                                                                                                                                                              trampCall(_lp)
                                                                                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1578"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                          end                                                                                                                                                                                                                        ,
                                                                                                                                                                                                                      [
                                                                                                                                                                                                                            begin
                                                                                                                                                                                                                              embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                trampCall( self._append_METHOD(  'append',
                                                                                                                                                                                                                                    begin
                                                                                                                                                                                                                                      if @global_lisp_binding.has_key?('_append') then
                                                                                                                                                                                                                                        trampCall(@_append)
                                                                                                                                                                                                                                      else raise NameError.new( "Error: undefined variable append", "append" ) end
                                                                                                                                                                                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                                    end                                                                                                                                                                                                                                  ,
                                                                                                                                                                                                                                [
                                                                                                                                                                                                                                      begin
                                                                                                                                                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1578 );
                                                                                                                                                                                                                                          _cdr(
                                                                                                                                                                                                                                              begin
                                                                                                                                                                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1578 );
                                                                                                                                                                                                                                                  _cdr(
                                                                                                                                                                                                                                                      begin
                                                                                                                                                                                                                                                          trampCall(_p)
                                                                                                                                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1578"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                                                      end
                                                                                                                                                                                                                                                  )
                                                                                                                                                                                                                                              end
                                                                                                                                                                                                                                          )
                                                                                                                                                                                                                                      end                                                                                                                                                                                                                                    ,
                                                                                                                                                                                                                                      begin
                                                                                                                                                                                                                                        embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                          _cons(
                                                                                                                                                                                                                                              begin
                                                                                                                                                                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1578 );
                                                                                                                                                                                                                                                  _car(
                                                                                                                                                                                                                                                      begin
                                                                                                                                                                                                                                                          trampCall(_p)
                                                                                                                                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1578"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                                                      end
                                                                                                                                                                                                                                                  )
                                                                                                                                                                                                                                              end                                                                                                                                                                                                                                            ,
                                                                                                                                                                                                                                              begin
                                                                                                                                                                                                                                                embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                                  _cons(
                                                                                                                                                                                                                                                      begin
                                                                                                                                                                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1578 );
                                                                                                                                                                                                                                                          _car(
                                                                                                                                                                                                                                                              begin
                                                                                                                                                                                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1578 );
                                                                                                                                                                                                                                                                  _cdr(
                                                                                                                                                                                                                                                                      begin
                                                                                                                                                                                                                                                                          trampCall(_p)
                                                                                                                                                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1578"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                                                                      end
                                                                                                                                                                                                                                                                  )
                                                                                                                                                                                                                                                              end
                                                                                                                                                                                                                                                          )
                                                                                                                                                                                                                                                      end                                                                                                                                                                                                                                                    ,
                                                                                                                                                                                                                                                    Cell.new()
                                                                                                                                                                                                                                                  )
                                                                                                                                                                                                                                              end
                                                                                                                                                                                                                                          )
                                                                                                                                                                                                                                      end
                                                                                                                                                                                                                                ]
                                                                                                                                                                                                                                             ))
                                                                                                                                                                                                                            end                                                                                                                                                                                                                          ,
                                                                                                                                                                                                                            begin
                                                                                                                                                                                                                              embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                _cons(
                                                                                                                                                                                                                                    begin
                                                                                                                                                                                                                                        trampCall(__append)
                                                                                                                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1579"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                                    end                                                                                                                                                                                                                                  ,
                                                                                                                                                                                                                                    begin
                                                                                                                                                                                                                                      embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                        _cons(
                                                                                                                                                                                                                                            begin
                                                                                                                                                                                                                                                trampCall(__ls)
                                                                                                                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1579"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                                            end                                                                                                                                                                                                                                          ,
                                                                                                                                                                                                                                            begin
                                                                                                                                                                                                                                              embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                                _cons(
                                                                                                                                                                                                                                                    begin
                                                                                                                                                                                                                                                      embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                                        _cons(
                                                                                                                                                                                                                                                            begin
                                                                                                                                                                                                                                                                trampCall(__reverse)
                                                                                                                                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1579"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                                                            end                                                                                                                                                                                                                                                          ,
                                                                                                                                                                                                                                                            begin
                                                                                                                                                                                                                                                              embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                                                _cons(
                                                                                                                                                                                                                                                                    begin
                                                                                                                                                                                                                                                                        trampCall(__res)
                                                                                                                                                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1579"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                                                                    end                                                                                                                                                                                                                                                                  ,
                                                                                                                                                                                                                                                                  Cell.new()
                                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                                            end
                                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                                    end                                                                                                                                                                                                                                                  ,
                                                                                                                                                                                                                                                  Cell.new()
                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                            end
                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                    end
                                                                                                                                                                                                                                )
                                                                                                                                                                                                                            end                                                                                                                                                                                                                          ,
                                                                                                                                                                                                                            begin
                                                                                                                                                                                                                                trampCall(_dim)
                                                                                                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1580"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                            end                                                                                                                                                                                                                          ,
                                                                                                                                                                                                                            begin
                                                                                                                                                                                                                                trampCall(_vars)
                                                                                                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1581"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                            end                                                                                                                                                                                                                          ,
                                                                                                                                                                                                                            begin
                                                                                                                                                                                                                                trampCall(_k)
                                                                                                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1582"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                            end
                                                                                                                                                                                                                      ]
                                                                                                                                                                                                                                   ))
                                                                                                                                                                                                                  end                                                                                                                                                                                                                ,
                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                      _cons(
                                                                                                                                                                                                                          begin
                                                                                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                              _cons(
                                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                                      trampCall(__lp)
                                                                                                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1583"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                                  end                                                                                                                                                                                                                                ,
                                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                      _cons(
                                                                                                                                                                                                                                          begin
                                                                                                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                              _cons(
                                                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                                                      trampCall(__cdr)
                                                                                                                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1583"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                                                  end                                                                                                                                                                                                                                                ,
                                                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                                      _cons(
                                                                                                                                                                                                                                                          begin
                                                                                                                                                                                                                                                              trampCall(__ls)
                                                                                                                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1583"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                                                          end                                                                                                                                                                                                                                                        ,
                                                                                                                                                                                                                                                        Cell.new()
                                                                                                                                                                                                                                                      )
                                                                                                                                                                                                                                                  end
                                                                                                                                                                                                                                              )
                                                                                                                                                                                                                                          end                                                                                                                                                                                                                                        ,
                                                                                                                                                                                                                                          begin
                                                                                                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                              _cons(
                                                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                                      _cons(
                                                                                                                                                                                                                                                          begin
                                                                                                                                                                                                                                                              trampCall(___MIMARK)
                                                                                                                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1584"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                                                          end                                                                                                                                                                                                                                                        ,
                                                                                                                                                                                                                                                          begin
                                                                                                                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                                              _cons(
                                                                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                                                                      trampCall(__i)
                                                                                                                                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1584"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                                                                  end                                                                                                                                                                                                                                                                ,
                                                                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                                                      _cons(

                                                                                                                                                                                                                                                                        Cell.new()
                                                                                                                                                                                                                                                                      )
                                                                                                                                                                                                                                                                  end
                                                                                                                                                                                                                                                              )
                                                                                                                                                                                                                                                          end
                                                                                                                                                                                                                                                      )
                                                                                                                                                                                                                                                  end                                                                                                                                                                                                                                                ,
                                                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                                      _cons(
                                                                                                                                                                                                                                                          begin
                                                                                                                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                                              _cons(
                                                                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                                                                      trampCall(__cons)
                                                                                                                                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1585"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                                                                  end                                                                                                                                                                                                                                                                ,
                                                                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                                                      _cons(
                                                                                                                                                                                                                                                                          begin
                                                                                                                                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                                                              _cons(
                                                                                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                                                                                      trampCall(__car)
                                                                                                                                                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1585"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                                                                                  end                                                                                                                                                                                                                                                                                ,
                                                                                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                                                                      _cons(
                                                                                                                                                                                                                                                                                          begin
                                                                                                                                                                                                                                                                                              trampCall(__ls)
                                                                                                                                                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1585"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                                                                                          end                                                                                                                                                                                                                                                                                        ,
                                                                                                                                                                                                                                                                                        Cell.new()
                                                                                                                                                                                                                                                                                      )
                                                                                                                                                                                                                                                                                  end
                                                                                                                                                                                                                                                                              )
                                                                                                                                                                                                                                                                          end                                                                                                                                                                                                                                                                        ,
                                                                                                                                                                                                                                                                          begin
                                                                                                                                                                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                                                                                                                                                                              _cons(
                                                                                                                                                                                                                                                                                  begin
                                                                                                                                                                                                                                                                                      trampCall(__res)
                                                                                                                                                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1585"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                                                                                                                  end                                                                                                                                                                                                                                                                                ,
                                                                                                                                                                                                                                                                                Cell.new()
                                                                                                                                                                                                                                                                              )
                                                                                                                                                                                                                                                                          end
                                                                                                                                                                                                                                                                      )
                                                                                                                                                                                                                                                                  end
                                                                                                                                                                                                                                                              )
                                                                                                                                                                                                                                                          end                                                                                                                                                                                                                                                        ,
                                                                                                                                                                                                                                                        Cell.new()
                                                                                                                                                                                                                                                      )
                                                                                                                                                                                                                                                  end
                                                                                                                                                                                                                                              )
                                                                                                                                                                                                                                          end
                                                                                                                                                                                                                                      )
                                                                                                                                                                                                                                  end
                                                                                                                                                                                                                              )
                                                                                                                                                                                                                          end                                                                                                                                                                                                                        ,
                                                                                                                                                                                                                        Cell.new()
                                                                                                                                                                                                                      )
                                                                                                                                                                                                                  end
                                                                                                                                                                                                              )
                                                                                                                                                                                                          end
                                                                                                                                                                                                      )
                                                                                                                                                                                                  end
                                                                                                                                                                                              )
                                                                                                                                                                                          end                                                                                                                                                                                        ,
                                                                                                                                                                                        Cell.new()
                                                                                                                                                                                      )
                                                                                                                                                                                  end
                                                                                                                                                                              )
                                                                                                                                                                          end
                                                                                                                                                                      )
                                                                                                                                                                  end
                                                                                                                                                              )
                                                                                                                                                          end                                                                                                                                                        ,
                                                                                                                                                        Cell.new()
                                                                                                                                                      )
                                                                                                                                                  end
                                                                                                                                              )
                                                                                                                                          end
                                                                                                                                      )
                                                                                                                                  end                                                                                                                                ,
                                                                                                                                Cell.new()
                                                                                                                              )
                                                                                                                          end
                                                                                                                      )
                                                                                                                  end
                                                                                                              )
                                                                                                          end
                                                                                                      } ; ___lambda.call(
                                                                                                            begin
                                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1571 );
                                                                                                                _length(
                                                                                                                    begin
                                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1571 );
                                                                                                                        _cdr(
                                                                                                                            begin
                                                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1571 );
                                                                                                                                _cdr(
                                                                                                                                    begin
                                                                                                                                        trampCall(_p)
                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1571"] + __e.backtrace ) ; raise __e
                                                                                                                                    end
                                                                                                                                )
                                                                                                                            end
                                                                                                                        )
                                                                                                                    end
                                                                                                                )
                                                                                                            end
                                                                                                                 )
                                                                                                    end
                                                                                              else
                                                                                                  Cell.new()
                                                                                              end
                                                                                          end
                                                                                      end
                                                                                else
                                                                                    if ( 
                                                                                      begin
                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1586 );
                                                                                          trampCall( self._identifier_QUMARK_METHOD(  'identifier?',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_identifier_QUMARK') then
                                                                                                  trampCall(@_identifier_QUMARK)
                                                                                                else raise NameError.new( "Error: undefined variable identifier?", "identifier?" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1586"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                          [
                                                                                                begin
                                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1586 );
                                                                                                    _car(
                                                                                                        begin
                                                                                                            trampCall(_p)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1586"] + __e.backtrace ) ; raise __e
                                                                                                        end
                                                                                                    )
                                                                                                end
                                                                                          ]
                                                                                                       ))
                                                                                      end
                                                                                     ) then
                                                                                          begin
                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1587 );
                                                                                              trampCall( self._list_METHOD(  'list',
                                                                                                  begin
                                                                                                    if @global_lisp_binding.has_key?('_list') then
                                                                                                      trampCall(@_list)
                                                                                                    else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1587"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,
                                                                                              [
                                                                                                    begin
                                                                                                        trampCall(__and)
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1587"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                    begin
                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1587 );
                                                                                                        trampCall( self._list_METHOD(  'list',
                                                                                                            begin
                                                                                                              if @global_lisp_binding.has_key?('_list') then
                                                                                                                trampCall(@_list)
                                                                                                              else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1587"] + __e.backtrace ) ; raise __e
                                                                                                            end                                                                                                          ,
                                                                                                        [
                                                                                                              begin
                                                                                                                  trampCall(__list_QUMARK)
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1587"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,
                                                                                                              begin
                                                                                                                  trampCall(_v)
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1587"] + __e.backtrace ) ; raise __e
                                                                                                              end
                                                                                                        ]
                                                                                                                     ))
                                                                                                    end                                                                                                  ,
                                                                                                    begin
                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1588 );
                                                                                                        trampCall( self._list_METHOD(  'list',
                                                                                                            begin
                                                                                                              if @global_lisp_binding.has_key?('_list') then
                                                                                                                trampCall(@_list)
                                                                                                              else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1588"] + __e.backtrace ) ; raise __e
                                                                                                            end                                                                                                          ,
                                                                                                        [
                                                                                                              begin
                                                                                                                  trampCall(__let)
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1588"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,
                                                                                                              begin
                                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1588 );
                                                                                                                  trampCall( self._list_METHOD(  'list',
                                                                                                                      begin
                                                                                                                        if @global_lisp_binding.has_key?('_list') then
                                                                                                                          trampCall(@_list)
                                                                                                                        else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1588"] + __e.backtrace ) ; raise __e
                                                                                                                      end                                                                                                                    ,
                                                                                                                  [
                                                                                                                        begin
                                                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1588 );
                                                                                                                            trampCall( self._list_METHOD(  'list',
                                                                                                                                begin
                                                                                                                                  if @global_lisp_binding.has_key?('_list') then
                                                                                                                                    trampCall(@_list)
                                                                                                                                  else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1588"] + __e.backtrace ) ; raise __e
                                                                                                                                end                                                                                                                              ,
                                                                                                                            [
                                                                                                                                  begin
                                                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1588 );
                                                                                                                                      _car(
                                                                                                                                          begin
                                                                                                                                              trampCall(_p)
                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1588"] + __e.backtrace ) ; raise __e
                                                                                                                                          end
                                                                                                                                      )
                                                                                                                                  end                                                                                                                                ,
                                                                                                                                  begin
                                                                                                                                      trampCall(_v)
                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1588"] + __e.backtrace ) ; raise __e
                                                                                                                                  end
                                                                                                                            ]
                                                                                                                                         ))
                                                                                                                        end
                                                                                                                  ]
                                                                                                                               ))
                                                                                                              end                                                                                                            ,
                                                                                                              begin
                                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1589 );
                                                                                                                  trampCall( callProcedure(  '_k',  'k',
                                                                                                                      begin
                                                                                                                          trampCall(_k)
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1589"] + __e.backtrace ) ; raise __e
                                                                                                                      end                                                                                                                    ,
                                                                                                                  [
                                                                                                                        begin
                                                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1589 );
                                                                                                                            _cons(
                                                                                                                                begin
                                                                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1589 );
                                                                                                                                    _cons(
                                                                                                                                        begin
                                                                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1589 );
                                                                                                                                            _car(
                                                                                                                                                begin
                                                                                                                                                    trampCall(_p)
                                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1589"] + __e.backtrace ) ; raise __e
                                                                                                                                                end
                                                                                                                                            )
                                                                                                                                        end                                                                                                                                      ,
                                                                                                                                        begin
                                                                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1589 );
                                                                                                                                            ( 
                                                                                                                                            1                                                                                                                                            +
                                                                                                                                              begin
                                                                                                                                                  trampCall(_dim)
                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1589"] + __e.backtrace ) ; raise __e
                                                                                                                                              end
                                                                                                                                             ) 
                                                                                                                                        end
                                                                                                                                    )
                                                                                                                                end                                                                                                                              ,
                                                                                                                                begin
                                                                                                                                    trampCall(_vars)
                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1589"] + __e.backtrace ) ; raise __e
                                                                                                                                end
                                                                                                                            )
                                                                                                                        end
                                                                                                                  ]
                                                                                                                               ))
                                                                                                              end
                                                                                                        ]
                                                                                                                     ))
                                                                                                    end
                                                                                              ]
                                                                                                           ))
                                                                                          end
                                                                                    else
                                                                                        if ( 
                                                                                        true
                                                                                         ) then
                                                                                              begin #makeLet
                                                                                                ___lambda = lambda { |_w| 
                                                                                                    begin #makeLet
                                                                                                      ___lambda = lambda { |_new_MIMARKvars| 
                                                                                                          begin #makeLet
                                                                                                            ___lambda = lambda { |_ls_MIMARKvars| 
                                                                                                                begin #makeLet
                                                                                                                  ___lambda = lambda { |_once| 
                                                                                                                      begin
                                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1612 );
                                                                                                                          trampCall( self._list_METHOD(  'list',
                                                                                                                              begin
                                                                                                                                if @global_lisp_binding.has_key?('_list') then
                                                                                                                                  trampCall(@_list)
                                                                                                                                else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1612"] + __e.backtrace ) ; raise __e
                                                                                                                              end                                                                                                                            ,
                                                                                                                          [
                                                                                                                                begin
                                                                                                                                    trampCall(__let)
                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1613"] + __e.backtrace ) ; raise __e
                                                                                                                                end                                                                                                                              ,
                                                                                                                                begin
                                                                                                                                    trampCall(__lp)
                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1614"] + __e.backtrace ) ; raise __e
                                                                                                                                end                                                                                                                              ,
                                                                                                                                begin
                                                                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1614 );
                                                                                                                                    _cons(
                                                                                                                                        begin
                                                                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1614 );
                                                                                                                                            trampCall( self._list_METHOD(  'list',
                                                                                                                                                begin
                                                                                                                                                  if @global_lisp_binding.has_key?('_list') then
                                                                                                                                                    trampCall(@_list)
                                                                                                                                                  else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1614"] + __e.backtrace ) ; raise __e
                                                                                                                                                end                                                                                                                                              ,
                                                                                                                                            [
                                                                                                                                                  begin
                                                                                                                                                      trampCall(_w)
                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1614"] + __e.backtrace ) ; raise __e
                                                                                                                                                  end                                                                                                                                                ,
                                                                                                                                                  begin
                                                                                                                                                      trampCall(_v)
                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1614"] + __e.backtrace ) ; raise __e
                                                                                                                                                  end
                                                                                                                                            ]
                                                                                                                                                         ))
                                                                                                                                        end                                                                                                                                      ,
                                                                                                                                        begin
                                                                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1615 );
                                                                                                                                            trampCall( self._map_METHOD(  'map',
                                                                                                                                                begin
                                                                                                                                                  if @global_lisp_binding.has_key?('_map') then
                                                                                                                                                    trampCall(@_map)
                                                                                                                                                  else raise NameError.new( "Error: undefined variable map", "map" ) end
                                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1615"] + __e.backtrace ) ; raise __e
                                                                                                                                                end                                                                                                                                              ,
                                                                                                                                            [
                                                                                                                                                  Proc.new { |_x| 
                                                                                                                                                      begin
                                                                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1615 );
                                                                                                                                                          trampCall( self._list_METHOD(  'list',
                                                                                                                                                              begin
                                                                                                                                                                if @global_lisp_binding.has_key?('_list') then
                                                                                                                                                                  trampCall(@_list)
                                                                                                                                                                else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1615"] + __e.backtrace ) ; raise __e
                                                                                                                                                              end                                                                                                                                                            ,
                                                                                                                                                          [
                                                                                                                                                                begin
                                                                                                                                                                    trampCall(_x)
                                                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1615"] + __e.backtrace ) ; raise __e
                                                                                                                                                                end                                                                                                                                                              ,
                                                                                                                                                              Cell.new()
                                                                                                                                                          ]
                                                                                                                                                                       ))
                                                                                                                                                      end
                                                                                                                                                  }                                                                                                                                                ,
                                                                                                                                                  begin
                                                                                                                                                      trampCall(_ls_MIMARKvars)
                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1615"] + __e.backtrace ) ; raise __e
                                                                                                                                                  end
                                                                                                                                            ]
                                                                                                                                                         ))
                                                                                                                                        end
                                                                                                                                    )
                                                                                                                                end                                                                                                                              ,
                                                                                                                                begin
                                                                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1616 );
                                                                                                                                    trampCall( self._list_METHOD(  'list',
                                                                                                                                        begin
                                                                                                                                          if @global_lisp_binding.has_key?('_list') then
                                                                                                                                            trampCall(@_list)
                                                                                                                                          else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1616"] + __e.backtrace ) ; raise __e
                                                                                                                                        end                                                                                                                                      ,
                                                                                                                                    [
                                                                                                                                          begin
                                                                                                                                              trampCall(__if)
                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1616"] + __e.backtrace ) ; raise __e
                                                                                                                                          end                                                                                                                                        ,
                                                                                                                                          begin
                                                                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1616 );
                                                                                                                                              trampCall( self._list_METHOD(  'list',
                                                                                                                                                  begin
                                                                                                                                                    if @global_lisp_binding.has_key?('_list') then
                                                                                                                                                      trampCall(@_list)
                                                                                                                                                    else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1616"] + __e.backtrace ) ; raise __e
                                                                                                                                                  end                                                                                                                                                ,
                                                                                                                                              [
                                                                                                                                                    begin
                                                                                                                                                        trampCall(__null_QUMARK)
                                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1616"] + __e.backtrace ) ; raise __e
                                                                                                                                                    end                                                                                                                                                  ,
                                                                                                                                                    begin
                                                                                                                                                        trampCall(_w)
                                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1616"] + __e.backtrace ) ; raise __e
                                                                                                                                                    end
                                                                                                                                              ]
                                                                                                                                                           ))
                                                                                                                                          end                                                                                                                                        ,
                                                                                                                                          begin
                                                                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1617 );
                                                                                                                                              trampCall( self._list_METHOD(  'list',
                                                                                                                                                  begin
                                                                                                                                                    if @global_lisp_binding.has_key?('_list') then
                                                                                                                                                      trampCall(@_list)
                                                                                                                                                    else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1617"] + __e.backtrace ) ; raise __e
                                                                                                                                                  end                                                                                                                                                ,
                                                                                                                                              [
                                                                                                                                                    begin
                                                                                                                                                        trampCall(__let)
                                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1617"] + __e.backtrace ) ; raise __e
                                                                                                                                                    end                                                                                                                                                  ,
                                                                                                                                                    begin
                                                                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1617 );
                                                                                                                                                        trampCall( self._map_METHOD(  'map',
                                                                                                                                                            begin
                                                                                                                                                              if @global_lisp_binding.has_key?('_map') then
                                                                                                                                                                trampCall(@_map)
                                                                                                                                                              else raise NameError.new( "Error: undefined variable map", "map" ) end
                                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1617"] + __e.backtrace ) ; raise __e
                                                                                                                                                            end                                                                                                                                                          ,
                                                                                                                                                        [
                                                                                                                                                              Proc.new { |_x,_l| 
                                                                                                                                                                  begin
                                                                                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1618 );
                                                                                                                                                                      trampCall( self._list_METHOD(  'list',
                                                                                                                                                                          begin
                                                                                                                                                                            if @global_lisp_binding.has_key?('_list') then
                                                                                                                                                                              trampCall(@_list)
                                                                                                                                                                            else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1618"] + __e.backtrace ) ; raise __e
                                                                                                                                                                          end                                                                                                                                                                        ,
                                                                                                                                                                      [
                                                                                                                                                                            begin
                                                                                                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1618 );
                                                                                                                                                                                _car(
                                                                                                                                                                                    begin
                                                                                                                                                                                        trampCall(_x)
                                                                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1618"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                    end
                                                                                                                                                                                )
                                                                                                                                                                            end                                                                                                                                                                          ,
                                                                                                                                                                            begin
                                                                                                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1618 );
                                                                                                                                                                                trampCall( self._list_METHOD(  'list',
                                                                                                                                                                                    begin
                                                                                                                                                                                      if @global_lisp_binding.has_key?('_list') then
                                                                                                                                                                                        trampCall(@_list)
                                                                                                                                                                                      else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1618"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                    end                                                                                                                                                                                  ,
                                                                                                                                                                                [
                                                                                                                                                                                      begin
                                                                                                                                                                                          trampCall(__reverse)
                                                                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1618"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                      end                                                                                                                                                                                    ,
                                                                                                                                                                                      begin
                                                                                                                                                                                          trampCall(_l)
                                                                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1618"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                      end
                                                                                                                                                                                ]
                                                                                                                                                                                             ))
                                                                                                                                                                            end
                                                                                                                                                                      ]
                                                                                                                                                                                   ))
                                                                                                                                                                  end
                                                                                                                                                              }                                                                                                                                                            ,
                                                                                                                                                              begin
                                                                                                                                                                  trampCall(_new_MIMARKvars)
                                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1619"] + __e.backtrace ) ; raise __e
                                                                                                                                                              end                                                                                                                                                            ,
                                                                                                                                                              begin
                                                                                                                                                                  trampCall(_ls_MIMARKvars)
                                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1620"] + __e.backtrace ) ; raise __e
                                                                                                                                                              end
                                                                                                                                                        ]
                                                                                                                                                                     ))
                                                                                                                                                    end                                                                                                                                                  ,
                                                                                                                                                    begin
                                                                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1621 );
                                                                                                                                                        trampCall( callProcedure(  '_k',  'k',
                                                                                                                                                            begin
                                                                                                                                                                trampCall(_k)
                                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1621"] + __e.backtrace ) ; raise __e
                                                                                                                                                            end                                                                                                                                                          ,
                                                                                                                                                        [
                                                                                                                                                              begin
                                                                                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1621 );
                                                                                                                                                                  trampCall( self._append_METHOD(  'append',
                                                                                                                                                                      begin
                                                                                                                                                                        if @global_lisp_binding.has_key?('_append') then
                                                                                                                                                                          trampCall(@_append)
                                                                                                                                                                        else raise NameError.new( "Error: undefined variable append", "append" ) end
                                                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1621"] + __e.backtrace ) ; raise __e
                                                                                                                                                                      end                                                                                                                                                                    ,
                                                                                                                                                                  [
                                                                                                                                                                        begin
                                                                                                                                                                            trampCall(_new_MIMARKvars)
                                                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1621"] + __e.backtrace ) ; raise __e
                                                                                                                                                                        end                                                                                                                                                                      ,
                                                                                                                                                                        begin
                                                                                                                                                                            trampCall(_vars)
                                                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1621"] + __e.backtrace ) ; raise __e
                                                                                                                                                                        end
                                                                                                                                                                  ]
                                                                                                                                                                               ))
                                                                                                                                                              end
                                                                                                                                                        ]
                                                                                                                                                                     ))
                                                                                                                                                    end
                                                                                                                                              ]
                                                                                                                                                           ))
                                                                                                                                          end                                                                                                                                        ,
                                                                                                                                          begin
                                                                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1622 );
                                                                                                                                              trampCall( self._list_METHOD(  'list',
                                                                                                                                                  begin
                                                                                                                                                    if @global_lisp_binding.has_key?('_list') then
                                                                                                                                                      trampCall(@_list)
                                                                                                                                                    else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1622"] + __e.backtrace ) ; raise __e
                                                                                                                                                  end                                                                                                                                                ,
                                                                                                                                              [
                                                                                                                                                    begin
                                                                                                                                                        trampCall(__and)
                                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1622"] + __e.backtrace ) ; raise __e
                                                                                                                                                    end                                                                                                                                                  ,
                                                                                                                                                    begin
                                                                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1622 );
                                                                                                                                                        trampCall( self._list_METHOD(  'list',
                                                                                                                                                            begin
                                                                                                                                                              if @global_lisp_binding.has_key?('_list') then
                                                                                                                                                                trampCall(@_list)
                                                                                                                                                              else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1622"] + __e.backtrace ) ; raise __e
                                                                                                                                                            end                                                                                                                                                          ,
                                                                                                                                                        [
                                                                                                                                                              begin
                                                                                                                                                                  trampCall(__pair_QUMARK)
                                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1622"] + __e.backtrace ) ; raise __e
                                                                                                                                                              end                                                                                                                                                            ,
                                                                                                                                                              begin
                                                                                                                                                                  trampCall(_w)
                                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1622"] + __e.backtrace ) ; raise __e
                                                                                                                                                              end
                                                                                                                                                        ]
                                                                                                                                                                     ))
                                                                                                                                                    end                                                                                                                                                  ,
                                                                                                                                                    begin
                                                                                                                                                        trampCall(_once)
                                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1622"] + __e.backtrace ) ; raise __e
                                                                                                                                                    end
                                                                                                                                              ]
                                                                                                                                                           ))
                                                                                                                                          end
                                                                                                                                    ]
                                                                                                                                                 ))
                                                                                                                                end
                                                                                                                          ]
                                                                                                                                       ))
                                                                                                                      end
                                                                                                                  } ; ___lambda.call(
                                                                                                                        begin
                                                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1602 );
                                                                                                                            trampCall( callProcedure(  '_lp',  'lp',
                                                                                                                                begin
                                                                                                                                    trampCall(_lp)
                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1602"] + __e.backtrace ) ; raise __e
                                                                                                                                end                                                                                                                              ,
                                                                                                                            [
                                                                                                                                  begin
                                                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1602 );
                                                                                                                                      _car(
                                                                                                                                          begin
                                                                                                                                              trampCall(_p)
                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1602"] + __e.backtrace ) ; raise __e
                                                                                                                                          end
                                                                                                                                      )
                                                                                                                                  end                                                                                                                                ,
                                                                                                                                  begin
                                                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1602 );
                                                                                                                                      trampCall( self._list_METHOD(  'list',
                                                                                                                                          begin
                                                                                                                                            if @global_lisp_binding.has_key?('_list') then
                                                                                                                                              trampCall(@_list)
                                                                                                                                            else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1602"] + __e.backtrace ) ; raise __e
                                                                                                                                          end                                                                                                                                        ,
                                                                                                                                      [
                                                                                                                                            begin
                                                                                                                                                trampCall(__car)
                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1602"] + __e.backtrace ) ; raise __e
                                                                                                                                            end                                                                                                                                          ,
                                                                                                                                            begin
                                                                                                                                                trampCall(_w)
                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1602"] + __e.backtrace ) ; raise __e
                                                                                                                                            end
                                                                                                                                      ]
                                                                                                                                                   ))
                                                                                                                                  end                                                                                                                                ,
                                                                                                                                  begin
                                                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1602 );
                                                                                                                                      ( 
                                                                                                                                        begin
                                                                                                                                            trampCall(_dim)
                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1602"] + __e.backtrace ) ; raise __e
                                                                                                                                        end                                                                                                                                      +
                                                                                                                                      1
                                                                                                                                       ) 
                                                                                                                                  end                                                                                                                                ,
                                                                                                                                Cell.new()                                                                                                                                ,
                                                                                                                                  Proc.new { |__| 
                                                                                                                                      begin
                                                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1604 );
                                                                                                                                          _cons(
                                                                                                                                              begin
                                                                                                                                                  trampCall(__lp)
                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1605"] + __e.backtrace ) ; raise __e
                                                                                                                                              end                                                                                                                                            ,
                                                                                                                                              begin
                                                                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1606 );
                                                                                                                                                  _cons(
                                                                                                                                                      begin
                                                                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1607 );
                                                                                                                                                          trampCall( self._list_METHOD(  'list',
                                                                                                                                                              begin
                                                                                                                                                                if @global_lisp_binding.has_key?('_list') then
                                                                                                                                                                  trampCall(@_list)
                                                                                                                                                                else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1607"] + __e.backtrace ) ; raise __e
                                                                                                                                                              end                                                                                                                                                            ,
                                                                                                                                                          [
                                                                                                                                                                begin
                                                                                                                                                                    trampCall(__cdr)
                                                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1607"] + __e.backtrace ) ; raise __e
                                                                                                                                                                end                                                                                                                                                              ,
                                                                                                                                                                begin
                                                                                                                                                                    trampCall(_w)
                                                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1607"] + __e.backtrace ) ; raise __e
                                                                                                                                                                end
                                                                                                                                                          ]
                                                                                                                                                                       ))
                                                                                                                                                      end                                                                                                                                                    ,
                                                                                                                                                      begin
                                                                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1608 );
                                                                                                                                                          trampCall( self._map_METHOD(  'map',
                                                                                                                                                              begin
                                                                                                                                                                if @global_lisp_binding.has_key?('_map') then
                                                                                                                                                                  trampCall(@_map)
                                                                                                                                                                else raise NameError.new( "Error: undefined variable map", "map" ) end
                                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1608"] + __e.backtrace ) ; raise __e
                                                                                                                                                              end                                                                                                                                                            ,
                                                                                                                                                          [
                                                                                                                                                                Proc.new { |_x,_l| 
                                                                                                                                                                    begin
                                                                                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1609 );
                                                                                                                                                                        trampCall( self._list_METHOD(  'list',
                                                                                                                                                                            begin
                                                                                                                                                                              if @global_lisp_binding.has_key?('_list') then
                                                                                                                                                                                trampCall(@_list)
                                                                                                                                                                              else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1609"] + __e.backtrace ) ; raise __e
                                                                                                                                                                            end                                                                                                                                                                          ,
                                                                                                                                                                        [
                                                                                                                                                                              begin
                                                                                                                                                                                  trampCall(__cons)
                                                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1609"] + __e.backtrace ) ; raise __e
                                                                                                                                                                              end                                                                                                                                                                            ,
                                                                                                                                                                              begin
                                                                                                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1609 );
                                                                                                                                                                                  _car(
                                                                                                                                                                                      begin
                                                                                                                                                                                          trampCall(_x)
                                                                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1609"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                      end
                                                                                                                                                                                  )
                                                                                                                                                                              end                                                                                                                                                                            ,
                                                                                                                                                                              begin
                                                                                                                                                                                  trampCall(_l)
                                                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1609"] + __e.backtrace ) ; raise __e
                                                                                                                                                                              end
                                                                                                                                                                        ]
                                                                                                                                                                                     ))
                                                                                                                                                                    end
                                                                                                                                                                }                                                                                                                                                              ,
                                                                                                                                                                begin
                                                                                                                                                                    trampCall(_new_MIMARKvars)
                                                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1610"] + __e.backtrace ) ; raise __e
                                                                                                                                                                end                                                                                                                                                              ,
                                                                                                                                                                begin
                                                                                                                                                                    trampCall(_ls_MIMARKvars)
                                                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1611"] + __e.backtrace ) ; raise __e
                                                                                                                                                                end
                                                                                                                                                          ]
                                                                                                                                                                       ))
                                                                                                                                                      end
                                                                                                                                                  )
                                                                                                                                              end
                                                                                                                                          )
                                                                                                                                      end
                                                                                                                                  }
                                                                                                                            ]
                                                                                                                                         ))
                                                                                                                        end
                                                                                                                             )
                                                                                                                end
                                                                                                            } ; ___lambda.call(
                                                                                                                  begin
                                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1593 );
                                                                                                                      trampCall( self._map_METHOD(  'map',
                                                                                                                          begin
                                                                                                                            if @global_lisp_binding.has_key?('_map') then
                                                                                                                              trampCall(@_map)
                                                                                                                            else raise NameError.new( "Error: undefined variable map", "map" ) end
                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1593"] + __e.backtrace ) ; raise __e
                                                                                                                          end                                                                                                                        ,
                                                                                                                      [
                                                                                                                            Proc.new { |_x| 
                                                                                                                                begin
                                                                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1594 );
                                                                                                                                    trampCall( callProcedure(  '_rename',  'rename',
                                                                                                                                        begin
                                                                                                                                            trampCall(_rename)
                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1594"] + __e.backtrace ) ; raise __e
                                                                                                                                        end                                                                                                                                      ,
                                                                                                                                    [
                                                                                                                                          begin
                                                                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1595 );
                                                                                                                                              _string_MIMARK_GTMARKsymbol(
                                                                                                                                                  begin
                                                                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1596 );
                                                                                                                                                      trampCall( self._string_MIMARKappend_METHOD(  'string-append',
                                                                                                                                                          begin
                                                                                                                                                            if @global_lisp_binding.has_key?('_string_MIMARKappend') then
                                                                                                                                                              trampCall(@_string_MIMARKappend)
                                                                                                                                                            else raise NameError.new( "Error: undefined variable string-append", "string-append" ) end
                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1596"] + __e.backtrace ) ; raise __e
                                                                                                                                                          end                                                                                                                                                        ,
                                                                                                                                                      [
                                                                                                                                                            begin
                                                                                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1597 );
                                                                                                                                                                _symbol_MIMARK_GTMARKstring(
                                                                                                                                                                    begin
                                                                                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1598 );
                                                                                                                                                                        trampCall( self._identifier_MIMARK_GTMARKsymbol_METHOD(  'identifier->symbol',
                                                                                                                                                                            begin
                                                                                                                                                                              if @global_lisp_binding.has_key?('_identifier_MIMARK_GTMARKsymbol') then
                                                                                                                                                                                trampCall(@_identifier_MIMARK_GTMARKsymbol)
                                                                                                                                                                              else raise NameError.new( "Error: undefined variable identifier->symbol", "identifier->symbol" ) end
                                                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1598"] + __e.backtrace ) ; raise __e
                                                                                                                                                                            end                                                                                                                                                                          ,
                                                                                                                                                                        [
                                                                                                                                                                              begin
                                                                                                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1598 );
                                                                                                                                                                                  _car(
                                                                                                                                                                                      begin
                                                                                                                                                                                          trampCall(_x)
                                                                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1598"] + __e.backtrace ) ; raise __e
                                                                                                                                                                                      end
                                                                                                                                                                                  )
                                                                                                                                                                              end
                                                                                                                                                                        ]
                                                                                                                                                                                     ))
                                                                                                                                                                    end
                                                                                                                                                                )
                                                                                                                                                            end                                                                                                                                                          ,
                                                                                                                                                          "-ls"
                                                                                                                                                      ]
                                                                                                                                                                   ))
                                                                                                                                                  end
                                                                                                                                              )
                                                                                                                                          end
                                                                                                                                    ]
                                                                                                                                                 ))
                                                                                                                                end
                                                                                                                            }                                                                                                                          ,
                                                                                                                            begin
                                                                                                                                trampCall(_new_MIMARKvars)
                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1600"] + __e.backtrace ) ; raise __e
                                                                                                                            end
                                                                                                                      ]
                                                                                                                                   ))
                                                                                                                  end
                                                                                                                       )
                                                                                                          end
                                                                                                      } ; ___lambda.call(
                                                                                                            begin
                                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1592 );
                                                                                                                trampCall( self._all_MIMARKvars_METHOD(  'all-vars',
                                                                                                                    begin
                                                                                                                      if @global_lisp_binding.has_key?('_all_MIMARKvars') then
                                                                                                                        trampCall(@_all_MIMARKvars)
                                                                                                                      else raise NameError.new( "Error: undefined variable all-vars", "all-vars" ) end
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1592"] + __e.backtrace ) ; raise __e
                                                                                                                    end                                                                                                                  ,
                                                                                                                [
                                                                                                                      begin
                                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1592 );
                                                                                                                          _car(
                                                                                                                              begin
                                                                                                                                  trampCall(_p)
                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1592"] + __e.backtrace ) ; raise __e
                                                                                                                              end
                                                                                                                          )
                                                                                                                      end                                                                                                                    ,
                                                                                                                      begin
                                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1592 );
                                                                                                                          ( 
                                                                                                                            begin
                                                                                                                                trampCall(_dim)
                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1592"] + __e.backtrace ) ; raise __e
                                                                                                                            end                                                                                                                          +
                                                                                                                          1
                                                                                                                           ) 
                                                                                                                      end
                                                                                                                ]
                                                                                                                             ))
                                                                                                            end
                                                                                                                 )
                                                                                                    end
                                                                                                } ; ___lambda.call(
                                                                                                      begin
                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1591 );
                                                                                                          trampCall( self._next_MIMARKv_METHOD(  'next-v',
                                                                                                              begin
                                                                                                                if @global_lisp_binding.has_key?('_next_MIMARKv') then
                                                                                                                  trampCall(@_next_MIMARKv)
                                                                                                                else raise NameError.new( "Error: undefined variable next-v", "next-v" ) end
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1591"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,
                                                                                                          [
                                                                                                          ]
                                                                                                                       ))
                                                                                                      end
                                                                                                           )
                                                                                              end
                                                                                        else
                                                                                            Cell.new()
                                                                                        end
                                                                                    end
                                                                                end
                                                                          else
                                                                              if ( 
                                                                                begin
                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1623 );
                                                                                    _pair_QUMARK(
                                                                                        begin
                                                                                            trampCall(_p)
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1623"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                    )
                                                                                end
                                                                               ) then
                                                                                    begin
                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1624 );
                                                                                        trampCall( self._list_METHOD(  'list',
                                                                                            begin
                                                                                              if @global_lisp_binding.has_key?('_list') then
                                                                                                trampCall(@_list)
                                                                                              else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1624"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,
                                                                                        [
                                                                                              begin
                                                                                                  trampCall(__and)
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1624"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              begin
                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1624 );
                                                                                                  trampCall( self._list_METHOD(  'list',
                                                                                                      begin
                                                                                                        if @global_lisp_binding.has_key?('_list') then
                                                                                                          trampCall(@_list)
                                                                                                        else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1624"] + __e.backtrace ) ; raise __e
                                                                                                      end                                                                                                    ,
                                                                                                  [
                                                                                                        begin
                                                                                                            trampCall(__pair_QUMARK)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1624"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                        begin
                                                                                                            trampCall(_v)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1624"] + __e.backtrace ) ; raise __e
                                                                                                        end
                                                                                                  ]
                                                                                                               ))
                                                                                              end                                                                                            ,
                                                                                              begin
                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1625 );
                                                                                                  trampCall( callProcedure(  '_lp',  'lp',
                                                                                                      begin
                                                                                                          trampCall(_lp)
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1625"] + __e.backtrace ) ; raise __e
                                                                                                      end                                                                                                    ,
                                                                                                  [
                                                                                                        begin
                                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1625 );
                                                                                                            _car(
                                                                                                                begin
                                                                                                                    trampCall(_p)
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1625"] + __e.backtrace ) ; raise __e
                                                                                                                end
                                                                                                            )
                                                                                                        end                                                                                                      ,
                                                                                                        begin
                                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1626 );
                                                                                                            trampCall( self._list_METHOD(  'list',
                                                                                                                begin
                                                                                                                  if @global_lisp_binding.has_key?('_list') then
                                                                                                                    trampCall(@_list)
                                                                                                                  else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1626"] + __e.backtrace ) ; raise __e
                                                                                                                end                                                                                                              ,
                                                                                                            [
                                                                                                                  begin
                                                                                                                      trampCall(__car)
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1626"] + __e.backtrace ) ; raise __e
                                                                                                                  end                                                                                                                ,
                                                                                                                  begin
                                                                                                                      trampCall(_v)
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1626"] + __e.backtrace ) ; raise __e
                                                                                                                  end
                                                                                                            ]
                                                                                                                         ))
                                                                                                        end                                                                                                      ,
                                                                                                        begin
                                                                                                            trampCall(_dim)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1627"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                        begin
                                                                                                            trampCall(_vars)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1628"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                        Proc.new { |_vars| 
                                                                                                            begin
                                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1630 );
                                                                                                                trampCall( callProcedure(  '_lp',  'lp',
                                                                                                                    begin
                                                                                                                        trampCall(_lp)
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1630"] + __e.backtrace ) ; raise __e
                                                                                                                    end                                                                                                                  ,
                                                                                                                [
                                                                                                                      begin
                                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1630 );
                                                                                                                          _cdr(
                                                                                                                              begin
                                                                                                                                  trampCall(_p)
                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1630"] + __e.backtrace ) ; raise __e
                                                                                                                              end
                                                                                                                          )
                                                                                                                      end                                                                                                                    ,
                                                                                                                      begin
                                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1630 );
                                                                                                                          trampCall( self._list_METHOD(  'list',
                                                                                                                              begin
                                                                                                                                if @global_lisp_binding.has_key?('_list') then
                                                                                                                                  trampCall(@_list)
                                                                                                                                else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1630"] + __e.backtrace ) ; raise __e
                                                                                                                              end                                                                                                                            ,
                                                                                                                          [
                                                                                                                                begin
                                                                                                                                    trampCall(__cdr)
                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1630"] + __e.backtrace ) ; raise __e
                                                                                                                                end                                                                                                                              ,
                                                                                                                                begin
                                                                                                                                    trampCall(_v)
                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1630"] + __e.backtrace ) ; raise __e
                                                                                                                                end
                                                                                                                          ]
                                                                                                                                       ))
                                                                                                                      end                                                                                                                    ,
                                                                                                                      begin
                                                                                                                          trampCall(_dim)
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1630"] + __e.backtrace ) ; raise __e
                                                                                                                      end                                                                                                                    ,
                                                                                                                      begin
                                                                                                                          trampCall(_vars)
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1630"] + __e.backtrace ) ; raise __e
                                                                                                                      end                                                                                                                    ,
                                                                                                                      begin
                                                                                                                          trampCall(_k)
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1630"] + __e.backtrace ) ; raise __e
                                                                                                                      end
                                                                                                                ]
                                                                                                                             ))
                                                                                                            end
                                                                                                        }
                                                                                                  ]
                                                                                                               ))
                                                                                              end
                                                                                        ]
                                                                                                     ))
                                                                                    end
                                                                              else
                                                                                  if ( 
                                                                                    begin
                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1631 );
                                                                                        trampCall( self._vector_QUMARK_METHOD(  'vector?',
                                                                                            begin
                                                                                              if @global_lisp_binding.has_key?('_vector_QUMARK') then
                                                                                                trampCall(@_vector_QUMARK)
                                                                                              else raise NameError.new( "Error: undefined variable vector?", "vector?" ) end
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1631"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,
                                                                                        [
                                                                                              begin
                                                                                                  trampCall(_p)
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1631"] + __e.backtrace ) ; raise __e
                                                                                              end
                                                                                        ]
                                                                                                     ))
                                                                                    end
                                                                                   ) then
                                                                                        begin
                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1632 );
                                                                                            trampCall( self._list_METHOD(  'list',
                                                                                                begin
                                                                                                  if @global_lisp_binding.has_key?('_list') then
                                                                                                    trampCall(@_list)
                                                                                                  else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1632"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,
                                                                                            [
                                                                                                  begin
                                                                                                      trampCall(__and)
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1632"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,
                                                                                                  begin
                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1633 );
                                                                                                      trampCall( self._list_METHOD(  'list',
                                                                                                          begin
                                                                                                            if @global_lisp_binding.has_key?('_list') then
                                                                                                              trampCall(@_list)
                                                                                                            else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1633"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                      [
                                                                                                            begin
                                                                                                                trampCall(__vector_QUMARK)
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1633"] + __e.backtrace ) ; raise __e
                                                                                                            end                                                                                                          ,
                                                                                                            begin
                                                                                                                trampCall(_v)
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1633"] + __e.backtrace ) ; raise __e
                                                                                                            end
                                                                                                      ]
                                                                                                                   ))
                                                                                                  end                                                                                                ,
                                                                                                  begin
                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1634 );
                                                                                                      trampCall( callProcedure(  '_lp',  'lp',
                                                                                                          begin
                                                                                                              trampCall(_lp)
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1634"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                      [
                                                                                                            begin
                                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1634 );
                                                                                                                trampCall( self._vector_MIMARK_GTMARKlist_METHOD(  'vector->list',
                                                                                                                    begin
                                                                                                                      if @global_lisp_binding.has_key?('_vector_MIMARK_GTMARKlist') then
                                                                                                                        trampCall(@_vector_MIMARK_GTMARKlist)
                                                                                                                      else raise NameError.new( "Error: undefined variable vector->list", "vector->list" ) end
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1634"] + __e.backtrace ) ; raise __e
                                                                                                                    end                                                                                                                  ,
                                                                                                                [
                                                                                                                      begin
                                                                                                                          trampCall(_p)
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1634"] + __e.backtrace ) ; raise __e
                                                                                                                      end
                                                                                                                ]
                                                                                                                             ))
                                                                                                            end                                                                                                          ,
                                                                                                            begin
                                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1634 );
                                                                                                                trampCall( self._list_METHOD(  'list',
                                                                                                                    begin
                                                                                                                      if @global_lisp_binding.has_key?('_list') then
                                                                                                                        trampCall(@_list)
                                                                                                                      else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1634"] + __e.backtrace ) ; raise __e
                                                                                                                    end                                                                                                                  ,
                                                                                                                [
                                                                                                                      begin
                                                                                                                          trampCall(__vector_MIMARK_GTMARKlist)
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1634"] + __e.backtrace ) ; raise __e
                                                                                                                      end                                                                                                                    ,
                                                                                                                      begin
                                                                                                                          trampCall(_v)
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1634"] + __e.backtrace ) ; raise __e
                                                                                                                      end
                                                                                                                ]
                                                                                                                             ))
                                                                                                            end                                                                                                          ,
                                                                                                            begin
                                                                                                                trampCall(_dim)
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1634"] + __e.backtrace ) ; raise __e
                                                                                                            end                                                                                                          ,
                                                                                                            begin
                                                                                                                trampCall(_vars)
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1634"] + __e.backtrace ) ; raise __e
                                                                                                            end                                                                                                          ,
                                                                                                            begin
                                                                                                                trampCall(_k)
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1634"] + __e.backtrace ) ; raise __e
                                                                                                            end
                                                                                                      ]
                                                                                                                   ))
                                                                                                  end
                                                                                            ]
                                                                                                         ))
                                                                                        end
                                                                                  else
                                                                                      if ( 
                                                                                        begin
                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1635 );
                                                                                            _null_QUMARK(
                                                                                                begin
                                                                                                    trampCall(_p)
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1635"] + __e.backtrace ) ; raise __e
                                                                                                end
                                                                                            )
                                                                                        end
                                                                                       ) then
                                                                                            begin
                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1635 );
                                                                                                trampCall( self._list_METHOD(  'list',
                                                                                                    begin
                                                                                                      if @global_lisp_binding.has_key?('_list') then
                                                                                                        trampCall(@_list)
                                                                                                      else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1635"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                [
                                                                                                      begin
                                                                                                          trampCall(__and)
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1635"] + __e.backtrace ) ; raise __e
                                                                                                      end                                                                                                    ,
                                                                                                      begin
                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1635 );
                                                                                                          trampCall( self._list_METHOD(  'list',
                                                                                                              begin
                                                                                                                if @global_lisp_binding.has_key?('_list') then
                                                                                                                  trampCall(@_list)
                                                                                                                else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1635"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,
                                                                                                          [
                                                                                                                begin
                                                                                                                    trampCall(__null_QUMARK)
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1635"] + __e.backtrace ) ; raise __e
                                                                                                                end                                                                                                              ,
                                                                                                                begin
                                                                                                                    trampCall(_v)
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1635"] + __e.backtrace ) ; raise __e
                                                                                                                end
                                                                                                          ]
                                                                                                                       ))
                                                                                                      end                                                                                                    ,
                                                                                                      begin
                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1635 );
                                                                                                          trampCall( callProcedure(  '_k',  'k',
                                                                                                              begin
                                                                                                                  trampCall(_k)
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1635"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,
                                                                                                          [
                                                                                                                begin
                                                                                                                    trampCall(_vars)
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1635"] + __e.backtrace ) ; raise __e
                                                                                                                end
                                                                                                          ]
                                                                                                                       ))
                                                                                                      end
                                                                                                ]
                                                                                                             ))
                                                                                            end
                                                                                      else
                                                                                          if ( 
                                                                                          true
                                                                                           ) then
                                                                                                begin
                                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1636 );
                                                                                                    trampCall( self._list_METHOD(  'list',
                                                                                                        begin
                                                                                                          if @global_lisp_binding.has_key?('_list') then
                                                                                                            trampCall(@_list)
                                                                                                          else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1636"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                    [
                                                                                                          begin
                                                                                                              trampCall(__and)
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1636"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                          begin
                                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1636 );
                                                                                                              trampCall( self._list_METHOD(  'list',
                                                                                                                  begin
                                                                                                                    if @global_lisp_binding.has_key?('_list') then
                                                                                                                      trampCall(@_list)
                                                                                                                    else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1636"] + __e.backtrace ) ; raise __e
                                                                                                                  end                                                                                                                ,
                                                                                                              [
                                                                                                                    begin
                                                                                                                        trampCall(__equal_QUMARK)
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1636"] + __e.backtrace ) ; raise __e
                                                                                                                    end                                                                                                                  ,
                                                                                                                    begin
                                                                                                                        trampCall(_v)
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1636"] + __e.backtrace ) ; raise __e
                                                                                                                    end                                                                                                                  ,
                                                                                                                    begin
                                                                                                                        trampCall(_p)
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1636"] + __e.backtrace ) ; raise __e
                                                                                                                    end
                                                                                                              ]
                                                                                                                           ))
                                                                                                          end                                                                                                        ,
                                                                                                          begin
                                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1636 );
                                                                                                              trampCall( callProcedure(  '_k',  'k',
                                                                                                                  begin
                                                                                                                      trampCall(_k)
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1636"] + __e.backtrace ) ; raise __e
                                                                                                                  end                                                                                                                ,
                                                                                                              [
                                                                                                                    begin
                                                                                                                        trampCall(_vars)
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1636"] + __e.backtrace ) ; raise __e
                                                                                                                    end
                                                                                                              ]
                                                                                                                           ))
                                                                                                          end
                                                                                                    ]
                                                                                                                 ))
                                                                                                end
                                                                                          else
                                                                                              Cell.new()
                                                                                          end
                                                                                      end
                                                                                  end
                                                                              end
                                                                          end
                                                                      end
                                                                ]
                                                                             ))
                                                            end
                                                        } ; ___lambda.call(
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1553 );
                                                                  trampCall( self._next_MIMARKv_METHOD(  'next-v',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_next_MIMARKv') then
                                                                          trampCall(@_next_MIMARKv)
                                                                        else raise NameError.new( "Error: undefined variable next-v", "next-v" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1553"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                  [
                                                                  ]
                                                                               ))
                                                              end
                                                                   )
                                                      end
                                                  }
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1546 );
                                                    trampCall( callProcedure(  '_lp',  'lp',
                                                        begin
                                                            trampCall(_lp)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1546"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1546 );
                                                              _cdr(
                                                                  begin
                                                                      trampCall(_pat)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1546"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              )
                                                          end                                                        ,
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1547 );
                                                              trampCall( self._list_METHOD(  'list',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_list') then
                                                                      trampCall(@_list)
                                                                    else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1547"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                    begin
                                                                        trampCall(__cdr)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1547"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    begin
                                                                        trampCall(__expr)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1547"] + __e.backtrace ) ; raise __e
                                                                    end
                                                              ]
                                                                           ))
                                                          end                                                        ,
                                                        0                                                        ,
                                                        Cell.new()                                                        ,
                                                          Proc.new { |_vars| 
                                                              begin #makeLet
                                                                ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30530| 
                                                                    if ( 
                                                                      begin
                                                                          trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30530)
                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                     ) then
                                                                        begin
                                                                            trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30530)
                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    else
                                                                        begin #makeLet
                                                                          ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30531| 
                                                                              if ( 
                                                                                begin
                                                                                    trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30531)
                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                               ) then
                                                                                  begin
                                                                                      trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30531)
                                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                              else
                                                                                false
                                                                              end
                                                                          } ; ___lambda.call(
                                                                                begin
                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1552 );
                                                                                    trampCall( self._list_METHOD(  'list',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_list') then
                                                                                            trampCall(@_list)
                                                                                          else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1552"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                    [
                                                                                          begin
                                                                                              trampCall(__begin)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1552"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                        false
                                                                                    ]
                                                                                                 ))
                                                                                end
                                                                                     )
                                                                        end
                                                                    end
                                                                } ; ___lambda.call(
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1551 );
                                                                          trampCall( self._expand_MIMARKtemplate_METHOD(  'expand-template',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_expand_MIMARKtemplate') then
                                                                                  trampCall(@_expand_MIMARKtemplate)
                                                                                else raise NameError.new( "Error: undefined variable expand-template", "expand-template" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1551"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                                begin
                                                                                    trampCall(_tmpl)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1551"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                begin
                                                                                    trampCall(_vars)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1551"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                          ]
                                                                                       ))
                                                                      end
                                                                           )
                                                              end
                                                          }
                                                    ]
                                                                 ))
                                                end
                                            } ; ___lambda.call(
                                            nil
                                                       )
                                          end
                                      }
                                )
                              end
                              begin #execFunc
                                  def self._ellipse_MIMARKescape_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_ellipse_MIMARKescape_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                                  @global_lisp_binding['_ellipse_MIMARKescape_QUMARK'] = self.method( :_ellipse_MIMARKescape_QUMARK_METHOD )
                                @_ellipse_MIMARKescape_QUMARK = 
                                trampCall(
                                      Proc.new { |_x| 
                                          if ( 
                                            begin
                                              embedBacktraceInfo( "", 1 );
                                                _not(
                                                    begin
                                                      embedBacktraceInfo( "", 1 );
                                                        _eq_QUMARK(
                                                          false                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1637 );
                                                                _pair_QUMARK(
                                                                    begin
                                                                        trampCall(_x)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1637"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                        )
                                                    end
                                                )
                                            end
                                           ) then
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1637 );
                                                  trampCall( callProcedure(  '_compare',  'compare',
                                                      begin
                                                          trampCall(_compare)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1637"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                        begin
                                                          if @global_lisp_binding.has_key?('_ellipse') then
                                                            trampCall(@_ellipse)
                                                          else raise NameError.new( "Error: undefined variable ellipse", "ellipse" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1637"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1637 );
                                                            _car(
                                                                begin
                                                                    trampCall(_x)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1637"] + __e.backtrace ) ; raise __e
                                                                end
                                                            )
                                                        end
                                                  ]
                                                               ))
                                              end
                                          else
                                            false
                                          end
                                      }
                                )
                              end
                              begin #execFunc
                                  def self._ellipse_QUMARK_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_ellipse_QUMARK', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                                  @global_lisp_binding['_ellipse_QUMARK'] = self.method( :_ellipse_QUMARK_METHOD )
                                @_ellipse_QUMARK = 
                                trampCall(
                                      Proc.new { |_x| 
                                          if ( 
                                            begin
                                              embedBacktraceInfo( "", 1 );
                                                _not(
                                                    begin
                                                      embedBacktraceInfo( "", 1 );
                                                        _eq_QUMARK(
                                                          false                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1639 );
                                                                _pair_QUMARK(
                                                                    begin
                                                                        trampCall(_x)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1639"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                        )
                                                    end
                                                )
                                            end
                                           ) then
                                              if ( 
                                                begin
                                                  embedBacktraceInfo( "", 1 );
                                                    _not(
                                                        begin
                                                          embedBacktraceInfo( "", 1 );
                                                            _eq_QUMARK(
                                                              false                                                              ,
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1639 );
                                                                    _pair_QUMARK(
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1639 );
                                                                            _cdr(
                                                                                begin
                                                                                    trampCall(_x)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1639"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                            )
                                                                        end
                                                                    )
                                                                end
                                                            )
                                                        end
                                                    )
                                                end
                                               ) then
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1639 );
                                                      trampCall( callProcedure(  '_compare',  'compare',
                                                          begin
                                                              trampCall(_compare)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1639"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                              if @global_lisp_binding.has_key?('_ellipse') then
                                                                trampCall(@_ellipse)
                                                              else raise NameError.new( "Error: undefined variable ellipse", "ellipse" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1639"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1639 );
                                                                trampCall( self._cadr_METHOD(  'cadr',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_cadr') then
                                                                        trampCall(@_cadr)
                                                                      else raise NameError.new( "Error: undefined variable cadr", "cadr" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1639"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                      begin
                                                                          trampCall(_x)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1639"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                ]
                                                                             ))
                                                            end
                                                      ]
                                                                   ))
                                                  end
                                              else
                                                false
                                              end
                                          else
                                            false
                                          end
                                      }
                                )
                              end
                              begin #execFunc
                                  def self._ellipse_MIMARKdepth_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_ellipse_MIMARKdepth', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                                  @global_lisp_binding['_ellipse_MIMARKdepth'] = self.method( :_ellipse_MIMARKdepth_METHOD )
                                @_ellipse_MIMARKdepth = 
                                trampCall(
                                      Proc.new { |_x| 
                                          if ( 
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1641 );
                                                trampCall( self._ellipse_QUMARK_METHOD(  'ellipse?',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_ellipse_QUMARK') then
                                                        trampCall(@_ellipse_QUMARK)
                                                      else raise NameError.new( "Error: undefined variable ellipse?", "ellipse?" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1641"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_x)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1641"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end
                                           ) then
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1642 );
                                                  ( 
                                                  1                                                  +
                                                    begin
                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1642 );
                                                        trampCall( self._ellipse_MIMARKdepth_METHOD(  'ellipse-depth',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_ellipse_MIMARKdepth') then
                                                                trampCall(@_ellipse_MIMARKdepth)
                                                              else raise NameError.new( "Error: undefined variable ellipse-depth", "ellipse-depth" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1642"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                        [
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1642 );
                                                                  _cdr(
                                                                      begin
                                                                          trampCall(_x)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1642"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                  )
                                                              end
                                                        ]
                                                                     ))
                                                    end
                                                   ) 
                                              end
                                          else
                                            0
                                          end
                                      }
                                )
                              end
                              begin #execFunc
                                  def self._ellipse_MIMARKtail_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_ellipse_MIMARKtail', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                                  @global_lisp_binding['_ellipse_MIMARKtail'] = self.method( :_ellipse_MIMARKtail_METHOD )
                                @_ellipse_MIMARKtail = 
                                trampCall(
                                      Proc.new { |_x| 
                                          if ( 
                                            begin
                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1645 );
                                                trampCall( self._ellipse_QUMARK_METHOD(  'ellipse?',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_ellipse_QUMARK') then
                                                        trampCall(@_ellipse_QUMARK)
                                                      else raise NameError.new( "Error: undefined variable ellipse?", "ellipse?" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1645"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                          trampCall(_x)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1645"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end
                                           ) then
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1646 );
                                                  trampCall( self._ellipse_MIMARKtail_METHOD(  'ellipse-tail',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_ellipse_MIMARKtail') then
                                                          trampCall(@_ellipse_MIMARKtail)
                                                        else raise NameError.new( "Error: undefined variable ellipse-tail", "ellipse-tail" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1646"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                  [
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1646 );
                                                            _cdr(
                                                                begin
                                                                    trampCall(_x)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1646"] + __e.backtrace ) ; raise __e
                                                                end
                                                            )
                                                        end
                                                  ]
                                                               ))
                                              end
                                          else
                                              begin
                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1647 );
                                                  _cdr(
                                                      begin
                                                          trampCall(_x)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1647"] + __e.backtrace ) ; raise __e
                                                      end
                                                  )
                                              end
                                          end
                                      }
                                )
                              end
                              begin #execFunc
                                  def self._all_MIMARKvars_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_all_MIMARKvars', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                                  @global_lisp_binding['_all_MIMARKvars'] = self.method( :_all_MIMARKvars_METHOD )
                                @_all_MIMARKvars = 
                                trampCall(
                                      Proc.new { |_x,_dim| 
                                          begin #makeLetrec
                                            ___lambda = lambda { |_lp| 
                                                _lp                                                 = 
                                                  Proc.new { |_x,_dim,_vars| 
                                                      if ( 
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1650 );
                                                            trampCall( self._identifier_QUMARK_METHOD(  'identifier?',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_identifier_QUMARK') then
                                                                    trampCall(@_identifier_QUMARK)
                                                                  else raise NameError.new( "Error: undefined variable identifier?", "identifier?" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1650"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  begin
                                                                      trampCall(_x)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1650"] + __e.backtrace ) ; raise __e
                                                                  end
                                                            ]
                                                                         ))
                                                        end
                                                       ) then
                                                            if ( 
                                                              begin
                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1651 );
                                                                  trampCall( self._find_METHOD(  'find',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_find') then
                                                                          trampCall(@_find)
                                                                        else raise NameError.new( "Error: undefined variable find", "find" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1651"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                  [
                                                                        Proc.new { |_lit| 
                                                                            begin
                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1651 );
                                                                                trampCall( callProcedure(  '_compare',  'compare',
                                                                                    begin
                                                                                        trampCall(_compare)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1651"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                [
                                                                                      begin
                                                                                          trampCall(_x)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1651"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                      begin
                                                                                          trampCall(_lit)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1651"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                ]
                                                                                             ))
                                                                            end
                                                                        }                                                                      ,
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_lits') then
                                                                            trampCall(@_lits)
                                                                          else raise NameError.new( "Error: undefined variable lits", "lits" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1651"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                  ]
                                                                               ))
                                                              end
                                                             ) then
                                                                begin
                                                                    trampCall(_vars)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1652"] + __e.backtrace ) ; raise __e
                                                                end
                                                            else
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1653 );
                                                                    _cons(
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1653 );
                                                                            _cons(
                                                                                begin
                                                                                    trampCall(_x)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1653"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                begin
                                                                                    trampCall(_dim)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1653"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                            )
                                                                        end                                                                      ,
                                                                        begin
                                                                            trampCall(_vars)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1653"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    )
                                                                end
                                                            end
                                                      else
                                                          if ( 
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1654 );
                                                                trampCall( self._ellipse_QUMARK_METHOD(  'ellipse?',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_ellipse_QUMARK') then
                                                                        trampCall(@_ellipse_QUMARK)
                                                                      else raise NameError.new( "Error: undefined variable ellipse?", "ellipse?" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1654"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                [
                                                                      begin
                                                                          trampCall(_x)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1654"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                ]
                                                                             ))
                                                            end
                                                           ) then
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1654 );
                                                                    trampCall( callProcedure(  '_lp',  'lp',
                                                                        begin
                                                                            trampCall(_lp)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1654"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                    [
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1654 );
                                                                              _car(
                                                                                  begin
                                                                                      trampCall(_x)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1654"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                              )
                                                                          end                                                                        ,
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1654 );
                                                                              ( 
                                                                                begin
                                                                                    trampCall(_dim)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1654"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              +
                                                                              1
                                                                               ) 
                                                                          end                                                                        ,
                                                                          begin
                                                                              trampCall(_vars)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1654"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                    ]
                                                                                 ))
                                                                end
                                                          else
                                                              if ( 
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1655 );
                                                                    _pair_QUMARK(
                                                                        begin
                                                                            trampCall(_x)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1655"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    )
                                                                end
                                                               ) then
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1655 );
                                                                        trampCall( callProcedure(  '_lp',  'lp',
                                                                            begin
                                                                                trampCall(_lp)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1655"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1655 );
                                                                                  _car(
                                                                                      begin
                                                                                          trampCall(_x)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1655"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                  )
                                                                              end                                                                            ,
                                                                              begin
                                                                                  trampCall(_dim)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1655"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              begin
                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1655 );
                                                                                  trampCall( callProcedure(  '_lp',  'lp',
                                                                                      begin
                                                                                          trampCall(_lp)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1655"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                  [
                                                                                        begin
                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1655 );
                                                                                            _cdr(
                                                                                                begin
                                                                                                    trampCall(_x)
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1655"] + __e.backtrace ) ; raise __e
                                                                                                end
                                                                                            )
                                                                                        end                                                                                      ,
                                                                                        begin
                                                                                            trampCall(_dim)
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1655"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        begin
                                                                                            trampCall(_vars)
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1655"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                  ]
                                                                                               ))
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end
                                                              else
                                                                  if ( 
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1656 );
                                                                        trampCall( self._vector_QUMARK_METHOD(  'vector?',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_vector_QUMARK') then
                                                                                trampCall(@_vector_QUMARK)
                                                                              else raise NameError.new( "Error: undefined variable vector?", "vector?" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1656"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                  trampCall(_x)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1656"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end
                                                                   ) then
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1656 );
                                                                            trampCall( callProcedure(  '_lp',  'lp',
                                                                                begin
                                                                                    trampCall(_lp)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1656"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  begin
                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1656 );
                                                                                      trampCall( self._vector_MIMARK_GTMARKlist_METHOD(  'vector->list',
                                                                                          begin
                                                                                            if @global_lisp_binding.has_key?('_vector_MIMARK_GTMARKlist') then
                                                                                              trampCall(@_vector_MIMARK_GTMARKlist)
                                                                                            else raise NameError.new( "Error: undefined variable vector->list", "vector->list" ) end
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1656"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                      [
                                                                                            begin
                                                                                                trampCall(_x)
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1656"] + __e.backtrace ) ; raise __e
                                                                                            end
                                                                                      ]
                                                                                                   ))
                                                                                  end                                                                                ,
                                                                                  begin
                                                                                      trampCall(_dim)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1656"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  begin
                                                                                      trampCall(_vars)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1656"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                            ]
                                                                                         ))
                                                                        end
                                                                  else
                                                                      if ( 
                                                                      true
                                                                       ) then
                                                                            begin
                                                                                trampCall(_vars)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1657"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                      else
                                                                          Cell.new()
                                                                      end
                                                                  end
                                                              end
                                                          end
                                                      end
                                                  }
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1649 );
                                                    trampCall( callProcedure(  '_lp',  'lp',
                                                        begin
                                                            trampCall(_lp)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1649"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                              trampCall(_x)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1649"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          begin
                                                              trampCall(_dim)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1649"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                        Cell.new()
                                                    ]
                                                                 ))
                                                end
                                            } ; ___lambda.call(
                                            nil
                                                       )
                                          end
                                      }
                                )
                              end
                              begin #execFunc
                                  def self._free_MIMARKvars_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_free_MIMARKvars', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                                  @global_lisp_binding['_free_MIMARKvars'] = self.method( :_free_MIMARKvars_METHOD )
                                @_free_MIMARKvars = 
                                trampCall(
                                      Proc.new { |_x,_vars,_dim| 
                                          begin #makeLetrec
                                            ___lambda = lambda { |_lp| 
                                                _lp                                                 = 
                                                  Proc.new { |_x,_free| 
                                                      if ( 
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1661 );
                                                            trampCall( self._identifier_QUMARK_METHOD(  'identifier?',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_identifier_QUMARK') then
                                                                    trampCall(@_identifier_QUMARK)
                                                                  else raise NameError.new( "Error: undefined variable identifier?", "identifier?" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1661"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  begin
                                                                      trampCall(_x)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1661"] + __e.backtrace ) ; raise __e
                                                                  end
                                                            ]
                                                                         ))
                                                        end
                                                       ) then
                                                            if ( 
                                                              if ( 
                                                                begin
                                                                  embedBacktraceInfo( "", 1 );
                                                                    _not(
                                                                        begin
                                                                          embedBacktraceInfo( "", 1 );
                                                                            _eq_QUMARK(
                                                                              false                                                                              ,
                                                                                begin
                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1662 );
                                                                                    _not(
                                                                                        begin
                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1662 );
                                                                                            trampCall( self._memq_METHOD(  'memq',
                                                                                                begin
                                                                                                  if @global_lisp_binding.has_key?('_memq') then
                                                                                                    trampCall(@_memq)
                                                                                                  else raise NameError.new( "Error: undefined variable memq", "memq" ) end
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1662"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,
                                                                                            [
                                                                                                  begin
                                                                                                      trampCall(_x)
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1662"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,
                                                                                                  begin
                                                                                                      trampCall(_free)
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1662"] + __e.backtrace ) ; raise __e
                                                                                                  end
                                                                                            ]
                                                                                                         ))
                                                                                        end
                                                                                    )
                                                                                end
                                                                            )
                                                                        end
                                                                    )
                                                                end
                                                               ) then
                                                                  if ( 
                                                                    begin #execFunc
                                                                        def self.___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30561_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30561', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                                                                        @global_lisp_binding['___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30561'] = self.method( :___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30561_METHOD )
                                                                      @___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30561 = 
                                                                      trampCall(
                                                                            begin
                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1663 );
                                                                                trampCall( self._assq_METHOD(  'assq',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_assq') then
                                                                                        trampCall(@_assq)
                                                                                      else raise NameError.new( "Error: undefined variable assq", "assq" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1663"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                [
                                                                                      begin
                                                                                          trampCall(_x)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1663"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                      begin
                                                                                          trampCall(_vars)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1663"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                ]
                                                                                             ))
                                                                            end
                                                                      )
                                                                    end
                                                                   ) then
                                                                      trampCall( callProcedure( nil, 'anonymouse', 
                                                                          Proc.new { |_cell| 
                                                                              begin
                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1663 );
                                                                                  ( 
                                                                                    begin
                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1663 );
                                                                                        _cdr(
                                                                                            begin
                                                                                                trampCall(_cell)
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1663"] + __e.backtrace ) ; raise __e
                                                                                            end
                                                                                        )
                                                                                    end                                                                                  >=
                                                                                    begin
                                                                                        trampCall(_dim)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1663"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                   ) 
                                                                              end
                                                                          }                                                                        ,
                                                                      [
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30561') then
                                                                                trampCall(@___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30561)
                                                                              else raise NameError.new( "Error: undefined variable __gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30561", "__gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30561" ) end
                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                      ]
                                                                                ))
                                                                  else
                                                                      if ( 
                                                                      true
                                                                       ) then
                                                                          false
                                                                      else
                                                                          Cell.new()
                                                                      end
                                                                  end
                                                              else
                                                                false
                                                              end
                                                             ) then
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1665 );
                                                                    _cons(
                                                                        begin
                                                                            trampCall(_x)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1665"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        begin
                                                                            trampCall(_free)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1665"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    )
                                                                end
                                                            else
                                                                begin
                                                                    trampCall(_free)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1666"] + __e.backtrace ) ; raise __e
                                                                end
                                                            end
                                                      else
                                                          if ( 
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1667 );
                                                                _pair_QUMARK(
                                                                    begin
                                                                        trampCall(_x)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1667"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                           ) then
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1667 );
                                                                    trampCall( callProcedure(  '_lp',  'lp',
                                                                        begin
                                                                            trampCall(_lp)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1667"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                    [
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1667 );
                                                                              _car(
                                                                                  begin
                                                                                      trampCall(_x)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1667"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                              )
                                                                          end                                                                        ,
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1667 );
                                                                              trampCall( callProcedure(  '_lp',  'lp',
                                                                                  begin
                                                                                      trampCall(_lp)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1667"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                              [
                                                                                    begin
                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1667 );
                                                                                        _cdr(
                                                                                            begin
                                                                                                trampCall(_x)
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1667"] + __e.backtrace ) ; raise __e
                                                                                            end
                                                                                        )
                                                                                    end                                                                                  ,
                                                                                    begin
                                                                                        trampCall(_free)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1667"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                              ]
                                                                                           ))
                                                                          end
                                                                    ]
                                                                                 ))
                                                                end
                                                          else
                                                              if ( 
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1668 );
                                                                    trampCall( self._vector_QUMARK_METHOD(  'vector?',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_vector_QUMARK') then
                                                                            trampCall(@_vector_QUMARK)
                                                                          else raise NameError.new( "Error: undefined variable vector?", "vector?" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1668"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                    [
                                                                          begin
                                                                              trampCall(_x)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1668"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                    ]
                                                                                 ))
                                                                end
                                                               ) then
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1668 );
                                                                        trampCall( callProcedure(  '_lp',  'lp',
                                                                            begin
                                                                                trampCall(_lp)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1668"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1668 );
                                                                                  trampCall( self._vector_MIMARK_GTMARKlist_METHOD(  'vector->list',
                                                                                      begin
                                                                                        if @global_lisp_binding.has_key?('_vector_MIMARK_GTMARKlist') then
                                                                                          trampCall(@_vector_MIMARK_GTMARKlist)
                                                                                        else raise NameError.new( "Error: undefined variable vector->list", "vector->list" ) end
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1668"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                  [
                                                                                        begin
                                                                                            trampCall(_x)
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1668"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                  ]
                                                                                               ))
                                                                              end                                                                            ,
                                                                              begin
                                                                                  trampCall(_free)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1668"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end
                                                              else
                                                                  if ( 
                                                                  true
                                                                   ) then
                                                                        begin
                                                                            trampCall(_free)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1669"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                  else
                                                                      Cell.new()
                                                                  end
                                                              end
                                                          end
                                                      end
                                                  }
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1659 );
                                                    trampCall( callProcedure(  '_lp',  'lp',
                                                        begin
                                                            trampCall(_lp)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1659"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                              trampCall(_x)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1659"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                        Cell.new()
                                                    ]
                                                                 ))
                                                end
                                            } ; ___lambda.call(
                                            nil
                                                       )
                                          end
                                      }
                                )
                              end
                              begin #execFunc
                                  def self._expand_MIMARKtemplate_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_expand_MIMARKtemplate', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                                  @global_lisp_binding['_expand_MIMARKtemplate'] = self.method( :_expand_MIMARKtemplate_METHOD )
                                @_expand_MIMARKtemplate = 
                                trampCall(
                                      Proc.new { |_tmpl,_vars| 
                                          begin #makeLetrec
                                            ___lambda = lambda { |_lp| 
                                                _lp                                                 = 
                                                  Proc.new { |_t,_dim| 
                                                      if ( 
                                                        begin
                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1673 );
                                                            trampCall( self._identifier_QUMARK_METHOD(  'identifier?',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_identifier_QUMARK') then
                                                                    trampCall(@_identifier_QUMARK)
                                                                  else raise NameError.new( "Error: undefined variable identifier?", "identifier?" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1673"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                            [
                                                                  begin
                                                                      trampCall(_t)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1673"] + __e.backtrace ) ; raise __e
                                                                  end
                                                            ]
                                                                         ))
                                                        end
                                                       ) then
                                                            if ( 
                                                              begin #execFunc
                                                                  def self.___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30553_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30553', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
                                                                  @global_lisp_binding['___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30553'] = self.method( :___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30553_METHOD )
                                                                @___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30553 = 
                                                                trampCall(
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1675 );
                                                                          trampCall( self._find_METHOD(  'find',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_find') then
                                                                                  trampCall(@_find)
                                                                                else raise NameError.new( "Error: undefined variable find", "find" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1675"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                                Proc.new { |_v| 
                                                                                    begin
                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1675 );
                                                                                        trampCall( callProcedure(  '_compare',  'compare',
                                                                                            begin
                                                                                                trampCall(_compare)
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1675"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,
                                                                                        [
                                                                                              begin
                                                                                                  trampCall(_t)
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1675"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              begin
                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1675 );
                                                                                                  _car(
                                                                                                      begin
                                                                                                          trampCall(_v)
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1675"] + __e.backtrace ) ; raise __e
                                                                                                      end
                                                                                                  )
                                                                                              end
                                                                                        ]
                                                                                                     ))
                                                                                    end
                                                                                }                                                                              ,
                                                                                begin
                                                                                    trampCall(_vars)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1675"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                          ]
                                                                                       ))
                                                                      end
                                                                )
                                                              end
                                                             ) then
                                                                trampCall( callProcedure( nil, 'anonymouse', 
                                                                    Proc.new { |_cell| 
                                                                        if ( 
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1677 );
                                                                              ( 
                                                                                begin
                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1677 );
                                                                                    _cdr(
                                                                                        begin
                                                                                            trampCall(_cell)
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1677"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                    )
                                                                                end                                                                              <=
                                                                                begin
                                                                                    trampCall(_dim)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1677"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                               ) 
                                                                          end
                                                                         ) then
                                                                            begin
                                                                                trampCall(_t)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1678"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                        else
                                                                            begin raise RuntimeError, 
                                                                            "too few ...'s"
                                                                            rescue => __e 
                                                                              __e.set_backtrace( ["./lib/nendo/init.nnd:1679"] + __e.backtrace )
                                                                              raise __e
                                                                            end 
                                                                        end
                                                                    }                                                                  ,
                                                                [
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30553') then
                                                                          trampCall(@___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30553)
                                                                        else raise NameError.new( "Error: undefined variable __gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30553", "__gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30553" ) end
                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                ]
                                                                          ))
                                                            else
                                                                if ( 
                                                                true
                                                                 ) then
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1681 );
                                                                          trampCall( self._list_METHOD(  'list',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_list') then
                                                                                  trampCall(@_list)
                                                                                else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1681"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                                begin
                                                                                    trampCall(__rename)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1681"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                begin
                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1681 );
                                                                                    trampCall( self._list_METHOD(  'list',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_list') then
                                                                                            trampCall(@_list)
                                                                                          else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1681"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                    [
                                                                                          begin
                                                                                              trampCall(__quote)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1681"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          begin
                                                                                              trampCall(_t)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1681"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                    ]
                                                                                                 ))
                                                                                end
                                                                          ]
                                                                                       ))
                                                                      end
                                                                else
                                                                    Cell.new()
                                                                end
                                                            end
                                                      else
                                                          if ( 
                                                            begin
                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1682 );
                                                                _pair_QUMARK(
                                                                    begin
                                                                        trampCall(_t)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1682"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                )
                                                            end
                                                           ) then
                                                                if ( 
                                                                  begin
                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1684 );
                                                                      trampCall( self._ellipse_MIMARKescape_QUMARK_METHOD(  'ellipse-escape?',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_ellipse_MIMARKescape_QUMARK') then
                                                                              trampCall(@_ellipse_MIMARKescape_QUMARK)
                                                                            else raise NameError.new( "Error: undefined variable ellipse-escape?", "ellipse-escape?" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1684"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                      [
                                                                            begin
                                                                                trampCall(_t)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1684"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                      ]
                                                                                   ))
                                                                  end
                                                                 ) then
                                                                      if ( 
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1685 );
                                                                            _pair_QUMARK(
                                                                                begin
                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1685 );
                                                                                    _cdr(
                                                                                        begin
                                                                                            trampCall(_t)
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1685"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                    )
                                                                                end
                                                                            )
                                                                        end
                                                                       ) then
                                                                          if ( 
                                                                            begin
                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1686 );
                                                                                _pair_QUMARK(
                                                                                    begin
                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1686 );
                                                                                        trampCall( self._cddr_METHOD(  'cddr',
                                                                                            begin
                                                                                              if @global_lisp_binding.has_key?('_cddr') then
                                                                                                trampCall(@_cddr)
                                                                                              else raise NameError.new( "Error: undefined variable cddr", "cddr" ) end
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1686"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,
                                                                                        [
                                                                                              begin
                                                                                                  trampCall(_t)
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1686"] + __e.backtrace ) ; raise __e
                                                                                              end
                                                                                        ]
                                                                                                     ))
                                                                                    end
                                                                                )
                                                                            end
                                                                           ) then
                                                                              begin
                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1686 );
                                                                                  trampCall( self._cddr_METHOD(  'cddr',
                                                                                      begin
                                                                                        if @global_lisp_binding.has_key?('_cddr') then
                                                                                          trampCall(@_cddr)
                                                                                        else raise NameError.new( "Error: undefined variable cddr", "cddr" ) end
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1686"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                  [
                                                                                        begin
                                                                                            trampCall(_t)
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1686"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                  ]
                                                                                               ))
                                                                              end
                                                                          else
                                                                              begin
                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1686 );
                                                                                  trampCall( self._cadr_METHOD(  'cadr',
                                                                                      begin
                                                                                        if @global_lisp_binding.has_key?('_cadr') then
                                                                                          trampCall(@_cadr)
                                                                                        else raise NameError.new( "Error: undefined variable cadr", "cadr" ) end
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1686"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                  [
                                                                                        begin
                                                                                            trampCall(_t)
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1686"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                  ]
                                                                                               ))
                                                                              end
                                                                          end
                                                                      else
                                                                          begin
                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1687 );
                                                                              _cdr(
                                                                                  begin
                                                                                      trampCall(_t)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1687"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                              )
                                                                          end
                                                                      end
                                                                else
                                                                    if ( 
                                                                      begin
                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1688 );
                                                                          trampCall( self._ellipse_QUMARK_METHOD(  'ellipse?',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_ellipse_QUMARK') then
                                                                                  trampCall(@_ellipse_QUMARK)
                                                                                else raise NameError.new( "Error: undefined variable ellipse?", "ellipse?" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1688"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                          [
                                                                                begin
                                                                                    trampCall(_t)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1688"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                          ]
                                                                                       ))
                                                                      end
                                                                     ) then
                                                                          begin #makeLet
                                                                            ___lambda = lambda { |_depth| 
                                                                                begin #makeLet
                                                                                  ___lambda = lambda { |_ell_MIMARKdim| 
                                                                                      begin #makeLet
                                                                                        ___lambda = lambda { |_ell_MIMARKvars| 
                                                                                            if ( 
                                                                                              begin
                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1692 );
                                                                                                  _null_QUMARK(
                                                                                                      begin
                                                                                                          trampCall(_ell_MIMARKvars)
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1692"] + __e.backtrace ) ; raise __e
                                                                                                      end
                                                                                                  )
                                                                                              end
                                                                                             ) then
                                                                                                begin raise RuntimeError, 
                                                                                                "too many ...'s"
                                                                                                rescue => __e 
                                                                                                  __e.set_backtrace( ["./lib/nendo/init.nnd:1693"] + __e.backtrace )
                                                                                                  raise __e
                                                                                                end 
                                                                                            else
                                                                                                begin #makeLet
                                                                                                  ___lambda = lambda { |_once| 
                                                                                                      begin #makeLet
                                                                                                        ___lambda = lambda { |_nest| 
                                                                                                            begin #makeLet
                                                                                                              ___lambda = lambda { |_many| 
                                                                                                                  if ( 
                                                                                                                    begin
                                                                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1706 );
                                                                                                                        _null_QUMARK(
                                                                                                                            begin
                                                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1706 );
                                                                                                                                trampCall( self._ellipse_MIMARKtail_METHOD(  'ellipse-tail',
                                                                                                                                    begin
                                                                                                                                      if @global_lisp_binding.has_key?('_ellipse_MIMARKtail') then
                                                                                                                                        trampCall(@_ellipse_MIMARKtail)
                                                                                                                                      else raise NameError.new( "Error: undefined variable ellipse-tail", "ellipse-tail" ) end
                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1706"] + __e.backtrace ) ; raise __e
                                                                                                                                    end                                                                                                                                  ,
                                                                                                                                [
                                                                                                                                      begin
                                                                                                                                          trampCall(_t)
                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1706"] + __e.backtrace ) ; raise __e
                                                                                                                                      end
                                                                                                                                ]
                                                                                                                                             ))
                                                                                                                            end
                                                                                                                        )
                                                                                                                    end
                                                                                                                   ) then
                                                                                                                      begin
                                                                                                                          trampCall(_many)
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1707"] + __e.backtrace ) ; raise __e
                                                                                                                      end
                                                                                                                  else
                                                                                                                      begin
                                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1708 );
                                                                                                                          trampCall( self._list_METHOD(  'list',
                                                                                                                              begin
                                                                                                                                if @global_lisp_binding.has_key?('_list') then
                                                                                                                                  trampCall(@_list)
                                                                                                                                else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1708"] + __e.backtrace ) ; raise __e
                                                                                                                              end                                                                                                                            ,
                                                                                                                          [
                                                                                                                                begin
                                                                                                                                    trampCall(__append)
                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1708"] + __e.backtrace ) ; raise __e
                                                                                                                                end                                                                                                                              ,
                                                                                                                                begin
                                                                                                                                    trampCall(_many)
                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1708"] + __e.backtrace ) ; raise __e
                                                                                                                                end                                                                                                                              ,
                                                                                                                                begin
                                                                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1708 );
                                                                                                                                    trampCall( callProcedure(  '_lp',  'lp',
                                                                                                                                        begin
                                                                                                                                            trampCall(_lp)
                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1708"] + __e.backtrace ) ; raise __e
                                                                                                                                        end                                                                                                                                      ,
                                                                                                                                    [
                                                                                                                                          begin
                                                                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1708 );
                                                                                                                                              trampCall( self._ellipse_MIMARKtail_METHOD(  'ellipse-tail',
                                                                                                                                                  begin
                                                                                                                                                    if @global_lisp_binding.has_key?('_ellipse_MIMARKtail') then
                                                                                                                                                      trampCall(@_ellipse_MIMARKtail)
                                                                                                                                                    else raise NameError.new( "Error: undefined variable ellipse-tail", "ellipse-tail" ) end
                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1708"] + __e.backtrace ) ; raise __e
                                                                                                                                                  end                                                                                                                                                ,
                                                                                                                                              [
                                                                                                                                                    begin
                                                                                                                                                        trampCall(_t)
                                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1708"] + __e.backtrace ) ; raise __e
                                                                                                                                                    end
                                                                                                                                              ]
                                                                                                                                                           ))
                                                                                                                                          end                                                                                                                                        ,
                                                                                                                                          begin
                                                                                                                                              trampCall(_dim)
                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1708"] + __e.backtrace ) ; raise __e
                                                                                                                                          end
                                                                                                                                    ]
                                                                                                                                                 ))
                                                                                                                                end
                                                                                                                          ]
                                                                                                                                       ))
                                                                                                                      end
                                                                                                                  end
                                                                                                              } ; ___lambda.call(
                                                                                                                    begin #makeLetrec
                                                                                                                      ___lambda = lambda { |___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30565| 
                                                                                                                          ___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30565                                                                                                                           = 
                                                                                                                            Proc.new { |_d,_many| 
                                                                                                                                if ( 
                                                                                                                                  begin
                                                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1705 );
                                                                                                                                      __EQMARK(
                                                                                                                                          begin
                                                                                                                                              trampCall(_d)
                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1705"] + __e.backtrace ) ; raise __e
                                                                                                                                          end                                                                                                                                        ,
                                                                                                                                        1
                                                                                                                                      )
                                                                                                                                  end
                                                                                                                                 ) then
                                                                                                                                      begin
                                                                                                                                          trampCall(_many)
                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1705"] + __e.backtrace ) ; raise __e
                                                                                                                                      end
                                                                                                                                else
                                                                                                                                      begin
                                                                                                                                        embedBacktraceInfo( "", 1 );
                                                                                                                                          trampCall( callProcedure(  '___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30565',  '__gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30565',
                                                                                                                                              begin
                                                                                                                                                  trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30565)
                                                                                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                                                              end                                                                                                                                            ,
                                                                                                                                          [
                                                                                                                                                begin
                                                                                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1702 );
                                                                                                                                                    ( 
                                                                                                                                                      begin
                                                                                                                                                          trampCall(_d)
                                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1702"] + __e.backtrace ) ; raise __e
                                                                                                                                                      end                                                                                                                                                    -
                                                                                                                                                    1
                                                                                                                                                     ) 
                                                                                                                                                end                                                                                                                                              ,
                                                                                                                                                begin
                                                                                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1704 );
                                                                                                                                                    trampCall( self._list_METHOD(  'list',
                                                                                                                                                        begin
                                                                                                                                                          if @global_lisp_binding.has_key?('_list') then
                                                                                                                                                            trampCall(@_list)
                                                                                                                                                          else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1704"] + __e.backtrace ) ; raise __e
                                                                                                                                                        end                                                                                                                                                      ,
                                                                                                                                                    [
                                                                                                                                                          begin
                                                                                                                                                              trampCall(__apply)
                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1704"] + __e.backtrace ) ; raise __e
                                                                                                                                                          end                                                                                                                                                        ,
                                                                                                                                                          begin
                                                                                                                                                              trampCall(__append)
                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1704"] + __e.backtrace ) ; raise __e
                                                                                                                                                          end                                                                                                                                                        ,
                                                                                                                                                          begin
                                                                                                                                                              trampCall(_many)
                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1704"] + __e.backtrace ) ; raise __e
                                                                                                                                                          end
                                                                                                                                                    ]
                                                                                                                                                                 ))
                                                                                                                                                end
                                                                                                                                          ]
                                                                                                                                                       ))
                                                                                                                                      end
                                                                                                                                end
                                                                                                                            }
                                                                                                                          begin
                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                              trampCall( callProcedure(  '___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30565',  '__gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30565',
                                                                                                                                  begin
                                                                                                                                      trampCall(___gensym__f28d97254eae7310ad1652f5536a07a6f8508817_30565)
                                                                                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                                                  end                                                                                                                                ,
                                                                                                                              [
                                                                                                                                    begin
                                                                                                                                        trampCall(_depth)
                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1702"] + __e.backtrace ) ; raise __e
                                                                                                                                    end                                                                                                                                  ,
                                                                                                                                    begin
                                                                                                                                        trampCall(_nest)
                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1703"] + __e.backtrace ) ; raise __e
                                                                                                                                    end
                                                                                                                              ]
                                                                                                                                           ))
                                                                                                                          end
                                                                                                                      } ; ___lambda.call(
                                                                                                                      nil
                                                                                                                                 )
                                                                                                                    end
                                                                                                                         )
                                                                                                            end
                                                                                                        } ; ___lambda.call(
                                                                                                              if ( 
                                                                                                                if ( 
                                                                                                                  begin
                                                                                                                    embedBacktraceInfo( "", 1 );
                                                                                                                      _not(
                                                                                                                          begin
                                                                                                                            embedBacktraceInfo( "", 1 );
                                                                                                                              _eq_QUMARK(
                                                                                                                                false                                                                                                                                ,
                                                                                                                                  begin
                                                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1695 );
                                                                                                                                      _null_QUMARK(
                                                                                                                                          begin
                                                                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1695 );
                                                                                                                                              _cdr(
                                                                                                                                                  begin
                                                                                                                                                      trampCall(_ell_MIMARKvars)
                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1695"] + __e.backtrace ) ; raise __e
                                                                                                                                                  end
                                                                                                                                              )
                                                                                                                                          end
                                                                                                                                      )
                                                                                                                                  end
                                                                                                                              )
                                                                                                                          end
                                                                                                                      )
                                                                                                                  end
                                                                                                                 ) then
                                                                                                                    if ( 
                                                                                                                      begin
                                                                                                                        embedBacktraceInfo( "", 1 );
                                                                                                                          _not(
                                                                                                                              begin
                                                                                                                                embedBacktraceInfo( "", 1 );
                                                                                                                                  _eq_QUMARK(
                                                                                                                                    false                                                                                                                                    ,
                                                                                                                                      begin
                                                                                                                                        embedBacktraceInfo( "./lib/nendo/init.nnd", 1696 );
                                                                                                                                          trampCall( self._identifier_QUMARK_METHOD(  'identifier?',
                                                                                                                                              begin
                                                                                                                                                if @global_lisp_binding.has_key?('_identifier_QUMARK') then
                                                                                                                                                  trampCall(@_identifier_QUMARK)
                                                                                                                                                else raise NameError.new( "Error: undefined variable identifier?", "identifier?" ) end
                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1696"] + __e.backtrace ) ; raise __e
                                                                                                                                              end                                                                                                                                            ,
                                                                                                                                          [
                                                                                                                                                begin
                                                                                                                                                    trampCall(_once)
                                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1696"] + __e.backtrace ) ; raise __e
                                                                                                                                                end
                                                                                                                                          ]
                                                                                                                                                       ))
                                                                                                                                      end
                                                                                                                                  )
                                                                                                                              end
                                                                                                                          )
                                                                                                                      end
                                                                                                                     ) then
                                                                                                                        begin
                                                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1697 );
                                                                                                                            _eq_QUMARK(
                                                                                                                                begin
                                                                                                                                    trampCall(_once)
                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1697"] + __e.backtrace ) ; raise __e
                                                                                                                                end                                                                                                                              ,
                                                                                                                                begin
                                                                                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1697 );
                                                                                                                                    _car(
                                                                                                                                        begin
                                                                                                                                            trampCall(_vars)
                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1697"] + __e.backtrace ) ; raise __e
                                                                                                                                        end
                                                                                                                                    )
                                                                                                                                end
                                                                                                                            )
                                                                                                                        end
                                                                                                                    else
                                                                                                                      false
                                                                                                                    end
                                                                                                                else
                                                                                                                  false
                                                                                                                end
                                                                                                               ) then
                                                                                                                  begin
                                                                                                                      trampCall(_once)
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1698"] + __e.backtrace ) ; raise __e
                                                                                                                  end
                                                                                                              else
                                                                                                                  begin
                                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1699 );
                                                                                                                      _cons(
                                                                                                                          begin
                                                                                                                              trampCall(__map)
                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1699"] + __e.backtrace ) ; raise __e
                                                                                                                          end                                                                                                                        ,
                                                                                                                          begin
                                                                                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1700 );
                                                                                                                              _cons(
                                                                                                                                  begin
                                                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1700 );
                                                                                                                                      trampCall( self._list_METHOD(  'list',
                                                                                                                                          begin
                                                                                                                                            if @global_lisp_binding.has_key?('_list') then
                                                                                                                                              trampCall(@_list)
                                                                                                                                            else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1700"] + __e.backtrace ) ; raise __e
                                                                                                                                          end                                                                                                                                        ,
                                                                                                                                      [
                                                                                                                                            begin
                                                                                                                                                trampCall(__lambda)
                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1700"] + __e.backtrace ) ; raise __e
                                                                                                                                            end                                                                                                                                          ,
                                                                                                                                            begin
                                                                                                                                                trampCall(_ell_MIMARKvars)
                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1700"] + __e.backtrace ) ; raise __e
                                                                                                                                            end                                                                                                                                          ,
                                                                                                                                            begin
                                                                                                                                                trampCall(_once)
                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1700"] + __e.backtrace ) ; raise __e
                                                                                                                                            end
                                                                                                                                      ]
                                                                                                                                                   ))
                                                                                                                                  end                                                                                                                                ,
                                                                                                                                  begin
                                                                                                                                      trampCall(_ell_MIMARKvars)
                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1701"] + __e.backtrace ) ; raise __e
                                                                                                                                  end
                                                                                                                              )
                                                                                                                          end
                                                                                                                      )
                                                                                                                  end
                                                                                                              end
                                                                                                                   )
                                                                                                      end
                                                                                                  } ; ___lambda.call(
                                                                                                        begin
                                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1694 );
                                                                                                            trampCall( callProcedure(  '_lp',  'lp',
                                                                                                                begin
                                                                                                                    trampCall(_lp)
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1694"] + __e.backtrace ) ; raise __e
                                                                                                                end                                                                                                              ,
                                                                                                            [
                                                                                                                  begin
                                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1694 );
                                                                                                                      _car(
                                                                                                                          begin
                                                                                                                              trampCall(_t)
                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1694"] + __e.backtrace ) ; raise __e
                                                                                                                          end
                                                                                                                      )
                                                                                                                  end                                                                                                                ,
                                                                                                                  begin
                                                                                                                      trampCall(_ell_MIMARKdim)
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1694"] + __e.backtrace ) ; raise __e
                                                                                                                  end
                                                                                                            ]
                                                                                                                         ))
                                                                                                        end
                                                                                                             )
                                                                                                end
                                                                                            end
                                                                                        } ; ___lambda.call(
                                                                                              begin
                                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1691 );
                                                                                                  trampCall( self._free_MIMARKvars_METHOD(  'free-vars',
                                                                                                      begin
                                                                                                        if @global_lisp_binding.has_key?('_free_MIMARKvars') then
                                                                                                          trampCall(@_free_MIMARKvars)
                                                                                                        else raise NameError.new( "Error: undefined variable free-vars", "free-vars" ) end
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1691"] + __e.backtrace ) ; raise __e
                                                                                                      end                                                                                                    ,
                                                                                                  [
                                                                                                        begin
                                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1691 );
                                                                                                            _car(
                                                                                                                begin
                                                                                                                    trampCall(_t)
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1691"] + __e.backtrace ) ; raise __e
                                                                                                                end
                                                                                                            )
                                                                                                        end                                                                                                      ,
                                                                                                        begin
                                                                                                            trampCall(_vars)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1691"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                        begin
                                                                                                            trampCall(_ell_MIMARKdim)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1691"] + __e.backtrace ) ; raise __e
                                                                                                        end
                                                                                                  ]
                                                                                                               ))
                                                                                              end
                                                                                                   )
                                                                                      end
                                                                                  } ; ___lambda.call(
                                                                                        begin
                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1690 );
                                                                                            ( 
                                                                                              begin
                                                                                                  trampCall(_dim)
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1690"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            +
                                                                                              begin
                                                                                                  trampCall(_depth)
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1690"] + __e.backtrace ) ; raise __e
                                                                                              end
                                                                                             ) 
                                                                                        end
                                                                                             )
                                                                                end
                                                                            } ; ___lambda.call(
                                                                                  begin
                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1689 );
                                                                                      trampCall( self._ellipse_MIMARKdepth_METHOD(  'ellipse-depth',
                                                                                          begin
                                                                                            if @global_lisp_binding.has_key?('_ellipse_MIMARKdepth') then
                                                                                              trampCall(@_ellipse_MIMARKdepth)
                                                                                            else raise NameError.new( "Error: undefined variable ellipse-depth", "ellipse-depth" ) end
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1689"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                      [
                                                                                            begin
                                                                                                trampCall(_t)
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1689"] + __e.backtrace ) ; raise __e
                                                                                            end
                                                                                      ]
                                                                                                   ))
                                                                                  end
                                                                                       )
                                                                          end
                                                                    else
                                                                        if ( 
                                                                        true
                                                                         ) then
                                                                              begin
                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1709 );
                                                                                  trampCall( self._list_METHOD(  'list',
                                                                                      begin
                                                                                        if @global_lisp_binding.has_key?('_list') then
                                                                                          trampCall(@_list)
                                                                                        else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1709"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                  [
                                                                                        begin
                                                                                            trampCall(__cons)
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1709"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        begin
                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1709 );
                                                                                            trampCall( callProcedure(  '_lp',  'lp',
                                                                                                begin
                                                                                                    trampCall(_lp)
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1709"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,
                                                                                            [
                                                                                                  begin
                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1709 );
                                                                                                      _car(
                                                                                                          begin
                                                                                                              trampCall(_t)
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1709"] + __e.backtrace ) ; raise __e
                                                                                                          end
                                                                                                      )
                                                                                                  end                                                                                                ,
                                                                                                  begin
                                                                                                      trampCall(_dim)
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1709"] + __e.backtrace ) ; raise __e
                                                                                                  end
                                                                                            ]
                                                                                                         ))
                                                                                        end                                                                                      ,
                                                                                        begin
                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1709 );
                                                                                            trampCall( callProcedure(  '_lp',  'lp',
                                                                                                begin
                                                                                                    trampCall(_lp)
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1709"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,
                                                                                            [
                                                                                                  begin
                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1709 );
                                                                                                      _cdr(
                                                                                                          begin
                                                                                                              trampCall(_t)
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1709"] + __e.backtrace ) ; raise __e
                                                                                                          end
                                                                                                      )
                                                                                                  end                                                                                                ,
                                                                                                  begin
                                                                                                      trampCall(_dim)
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1709"] + __e.backtrace ) ; raise __e
                                                                                                  end
                                                                                            ]
                                                                                                         ))
                                                                                        end
                                                                                  ]
                                                                                               ))
                                                                              end
                                                                        else
                                                                            Cell.new()
                                                                        end
                                                                    end
                                                                end
                                                          else
                                                              if ( 
                                                                begin
                                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1710 );
                                                                    trampCall( self._vector_QUMARK_METHOD(  'vector?',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_vector_QUMARK') then
                                                                            trampCall(@_vector_QUMARK)
                                                                          else raise NameError.new( "Error: undefined variable vector?", "vector?" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1710"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                    [
                                                                          begin
                                                                              trampCall(_t)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1710"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                    ]
                                                                                 ))
                                                                end
                                                               ) then
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1710 );
                                                                        trampCall( self._list_METHOD(  'list',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_list') then
                                                                                trampCall(@_list)
                                                                              else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1710"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                  trampCall(__list_MIMARK_GTMARKvector)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1710"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              begin
                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1710 );
                                                                                  trampCall( callProcedure(  '_lp',  'lp',
                                                                                      begin
                                                                                          trampCall(_lp)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1710"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                  [
                                                                                        begin
                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1710 );
                                                                                            trampCall( self._vector_MIMARK_GTMARKlist_METHOD(  'vector->list',
                                                                                                begin
                                                                                                  if @global_lisp_binding.has_key?('_vector_MIMARK_GTMARKlist') then
                                                                                                    trampCall(@_vector_MIMARK_GTMARKlist)
                                                                                                  else raise NameError.new( "Error: undefined variable vector->list", "vector->list" ) end
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1710"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,
                                                                                            [
                                                                                                  begin
                                                                                                      trampCall(_t)
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1710"] + __e.backtrace ) ; raise __e
                                                                                                  end
                                                                                            ]
                                                                                                         ))
                                                                                        end                                                                                      ,
                                                                                        begin
                                                                                            trampCall(_dim)
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1710"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                  ]
                                                                                               ))
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end
                                                              else
                                                                  if ( 
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1711 );
                                                                        _null_QUMARK(
                                                                            begin
                                                                                trampCall(_t)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1711"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                        )
                                                                    end
                                                                   ) then
                                                                        begin
                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1711 );
                                                                            trampCall( self._list_METHOD(  'list',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_list') then
                                                                                    trampCall(@_list)
                                                                                  else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1711"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                            [
                                                                                  begin
                                                                                      trampCall(__quote)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1711"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                Cell.new()
                                                                            ]
                                                                                         ))
                                                                        end
                                                                  else
                                                                      if ( 
                                                                      true
                                                                       ) then
                                                                            begin
                                                                                trampCall(_t)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1712"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                      else
                                                                          Cell.new()
                                                                      end
                                                                  end
                                                              end
                                                          end
                                                      end
                                                  }
                                                begin
                                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1671 );
                                                    trampCall( callProcedure(  '_lp',  'lp',
                                                        begin
                                                            trampCall(_lp)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1671"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                    [
                                                          begin
                                                              trampCall(_tmpl)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1671"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                        0
                                                    ]
                                                                 ))
                                                end
                                            } ; ___lambda.call(
                                            nil
                                                       )
                                          end
                                      }
                                )
                              end
                              begin
                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1713 );
                                  trampCall( self._list_METHOD(  'list',
                                      begin
                                        if @global_lisp_binding.has_key?('_list') then
                                          trampCall(@_list)
                                        else raise NameError.new( "Error: undefined variable list", "list" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1713"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                  [
                                        begin
                                            trampCall(__er_MIMARKmacro_MIMARKtransformer)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1714"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        begin
                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1715 );
                                            trampCall( self._list_METHOD(  'list',
                                                begin
                                                  if @global_lisp_binding.has_key?('_list') then
                                                    trampCall(@_list)
                                                  else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1715"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                            [
                                                  begin
                                                      trampCall(__lambda)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1715"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1715 );
                                                      trampCall( self._list_METHOD(  'list',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_list') then
                                                              trampCall(@_list)
                                                            else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1715"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                      [
                                                            begin
                                                                trampCall(__expr)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1715"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            begin
                                                                trampCall(__rename)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1715"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            begin
                                                                trampCall(__compare)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1715"] + __e.backtrace ) ; raise __e
                                                            end
                                                      ]
                                                                   ))
                                                  end                                                ,
                                                  begin
                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1716 );
                                                      _cons(
                                                          begin
                                                              trampCall(__or)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1717"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          begin
                                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1718 );
                                                              trampCall( self._append_METHOD(  'append',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_append') then
                                                                      trampCall(@_append)
                                                                    else raise NameError.new( "Error: undefined variable append", "append" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1718"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                              [
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1719 );
                                                                        trampCall( self._map_METHOD(  'map',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_map') then
                                                                                trampCall(@_map)
                                                                              else raise NameError.new( "Error: undefined variable map", "map" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1719"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              Proc.new { |_clause| 
                                                                                  begin
                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1720 );
                                                                                      trampCall( self._expand_MIMARKpattern_METHOD(  'expand-pattern',
                                                                                          begin
                                                                                            if @global_lisp_binding.has_key?('_expand_MIMARKpattern') then
                                                                                              trampCall(@_expand_MIMARKpattern)
                                                                                            else raise NameError.new( "Error: undefined variable expand-pattern", "expand-pattern" ) end
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1720"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                      [
                                                                                            begin
                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1720 );
                                                                                                _car(
                                                                                                    begin
                                                                                                        trampCall(_clause)
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1720"] + __e.backtrace ) ; raise __e
                                                                                                    end
                                                                                                )
                                                                                            end                                                                                          ,
                                                                                            begin
                                                                                              embedBacktraceInfo( "./lib/nendo/init.nnd", 1720 );
                                                                                                trampCall( self._cadr_METHOD(  'cadr',
                                                                                                    begin
                                                                                                      if @global_lisp_binding.has_key?('_cadr') then
                                                                                                        trampCall(@_cadr)
                                                                                                      else raise NameError.new( "Error: undefined variable cadr", "cadr" ) end
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1720"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                [
                                                                                                      begin
                                                                                                          trampCall(_clause)
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1720"] + __e.backtrace ) ; raise __e
                                                                                                      end
                                                                                                ]
                                                                                                             ))
                                                                                            end
                                                                                      ]
                                                                                                   ))
                                                                                  end
                                                                              }                                                                            ,
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_forms') then
                                                                                  trampCall(@_forms)
                                                                                else raise NameError.new( "Error: undefined variable forms", "forms" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1721"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end                                                                  ,
                                                                    begin
                                                                      embedBacktraceInfo( "./lib/nendo/init.nnd", 1722 );
                                                                        trampCall( self._list_METHOD(  'list',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_list') then
                                                                                trampCall(@_list)
                                                                              else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1722"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                        [
                                                                              begin
                                                                                embedBacktraceInfo( "./lib/nendo/init.nnd", 1722 );
                                                                                  trampCall( self._list_METHOD(  'list',
                                                                                      begin
                                                                                        if @global_lisp_binding.has_key?('_list') then
                                                                                          trampCall(@_list)
                                                                                        else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1722"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                  [
                                                                                        begin
                                                                                            trampCall(__error)
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1722"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                      "no expansion for"                                                                                      ,
                                                                                        begin
                                                                                          embedBacktraceInfo( "./lib/nendo/init.nnd", 1723 );
                                                                                            trampCall( self._list_METHOD(  'list',
                                                                                                begin
                                                                                                  if @global_lisp_binding.has_key?('_list') then
                                                                                                    trampCall(@_list)
                                                                                                  else raise NameError.new( "Error: undefined variable list", "list" ) end
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1723"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,
                                                                                            [
                                                                                                  begin
                                                                                                    embedBacktraceInfo( "./lib/nendo/init.nnd", 1723 );
                                                                                                      trampCall( callProcedure(  '_rename',  'rename',
                                                                                                          begin
                                                                                                              trampCall(_rename)
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1723"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                      [
                                                                                                          :"strip-syntactic-closures"
                                                                                                      ]
                                                                                                                   ))
                                                                                                  end                                                                                                ,
                                                                                                  begin
                                                                                                      trampCall(__expr)
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1723"] + __e.backtrace ) ; raise __e
                                                                                                  end
                                                                                            ]
                                                                                                         ))
                                                                                        end
                                                                                  ]
                                                                                               ))
                                                                              end
                                                                        ]
                                                                                     ))
                                                                    end
                                                              ]
                                                                           ))
                                                          end
                                                      )
                                                  end
                                            ]
                                                         ))
                                        end
                                  ]
                                               ))
                              end
                          } ; ___lambda.call(
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1518 );
                                    trampCall( self._identifier_QUMARK_METHOD(  'identifier?',
                                        begin
                                          if @global_lisp_binding.has_key?('_identifier_QUMARK') then
                                            trampCall(@_identifier_QUMARK)
                                          else raise NameError.new( "Error: undefined variable identifier?", "identifier?" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1518"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                          begin
                                            embedBacktraceInfo( "./lib/nendo/init.nnd", 1518 );
                                              trampCall( self._cadr_METHOD(  'cadr',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cadr') then
                                                      trampCall(@_cadr)
                                                    else raise NameError.new( "Error: undefined variable cadr", "cadr" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1518"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                              [
                                                    begin
                                                        trampCall(_expr)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1518"] + __e.backtrace ) ; raise __e
                                                    end
                                              ]
                                                           ))
                                          end
                                    ]
                                                 ))
                                end                              ,
                              0                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1520 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1520"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"er-macro-transformer"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1521 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1521"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"lambda"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1521 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1521"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"let"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1522 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1522"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"begin"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1522 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1522"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"if"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1523 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1523"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"and"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1523 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1523"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"or"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1524 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1524"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"eq?"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1524 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1524"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"equal?"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1525 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1525"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"car"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1525 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1525"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"cdr"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1526 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1526"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"cons"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1526 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1526"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"pair?"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1527 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1527"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"null?"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1527 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1527"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"expr"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1528 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1528"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"rename"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1528 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1528"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"compare"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1529 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1529"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"quote"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1529 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1529"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"apply"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1530 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1530"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"append"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1530 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1530"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"map"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1531 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1531"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"vector?"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1531 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1531"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"list?"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1532 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1532"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"lp"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1532 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1532"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"reverse"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1533 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1533"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"len"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1533 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1533"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"length"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1534 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1534"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"-"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1534 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1534"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :">="
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1534 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1534"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"error"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1535 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1535"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"ls"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1535 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1535"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"res"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1535 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1535"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"i"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1536 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1536"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"vector->list"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1537 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1537"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"list->vector"
                                    ]
                                                 ))
                                end                              ,
                                begin
                                  embedBacktraceInfo( "./lib/nendo/init.nnd", 1538 );
                                    trampCall( callProcedure(  '_rename',  'rename',
                                        begin
                                            trampCall(_rename)
                                          rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1538"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                    [
                                        :"list"
                                    ]
                                                 ))
                                end
                                     )
                        end
                    }
              ]
                           ))
          end
    )
  end
 )
#--------------------

trampCall( 
  begin #execFunc
      def self.__PAMARKsyntax_MIMARKrules_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '__PAMARKsyntax_MIMARKrules', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['__PAMARKsyntax_MIMARKrules'] = self.method( :__PAMARKsyntax_MIMARKrules_METHOD )
    @__PAMARKsyntax_MIMARKrules = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('_syntax_MIMARKrules') then
              trampCall(@_syntax_MIMARKrules)
            else raise NameError.new( "Error: undefined variable syntax-rules", "syntax-rules" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/nendo/init.nnd:1725"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin
    embedBacktraceInfo( "", 1 );
      delayCall( '_load',  'load',
          begin
            if @global_lisp_binding.has_key?('_load') then
              trampCall(@_load)
            else raise NameError.new( "Error: undefined variable load", "load" ) end
            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
          end        ,
      [
          "nendo/experimental"
      ]
                   )
  end
 )


# -------------------------------------------------------
# [EOF]
# -------------------------------------------------------
