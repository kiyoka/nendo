#
#    This file is nendo's compiled library file. 
#    generated  "nendo -c src" command. 
# 

trampCall( 
  begin
    @global_lisp_binding['_define'] = true
    @_define = 
        LispMacro.new { |_arg,*__rest__| _body = __rest__[0] ;  
            if ( 
              trampCall( callProcedure( 'not',
                  begin
                    if @global_lisp_binding.has_key?('_not') then
                      @_not
                    else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:42"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'pair?',
                        begin
                          if @global_lisp_binding.has_key?('_pair_QUMARK') then
                            @_pair_QUMARK
                          else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:50"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              _arg
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                           )))
             ) then
                trampCall( callProcedure( 'cons',
                    begin
                      if @global_lisp_binding.has_key?('_cons') then
                        @_cons
                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                    :"define"                    ,Cell.new(
                      trampCall( callProcedure( 'cons',
                          begin
                            if @global_lisp_binding.has_key?('_cons') then
                              @_cons
                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                _arg
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                            end                          ,Cell.new(
                            begin
                                _body
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:57"] + __e.backtrace ) ; raise __e
                            end
                                   ))))
                             ))))
            else
                begin
                    if ( 
                      trampCall( callProcedure( 'pair?',
                          begin
                            if @global_lisp_binding.has_key?('_pair_QUMARK') then
                              @_pair_QUMARK
                            else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:50"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            trampCall( callProcedure( 'cdr',
                                begin
                                  if @global_lisp_binding.has_key?('_cdr') then
                                    @_cdr
                                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      _arg
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                                   )))
                     ) then
                        if ( 
                          trampCall( callProcedure( 'pair?',
                              begin
                                if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                  @_pair_QUMARK
                                else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:50"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'car',
                                    begin
                                      if @global_lisp_binding.has_key?('_car') then
                                        @_car
                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:53"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'cdr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cdr') then
                                              @_cdr
                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _arg
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             )))
                                       )))
                         ) then
                            begin raise RuntimeError, 
                            "Error: define syntax error."
                            rescue => __e 
                              __e.set_backtrace( ["./lib/init.nnd:51"] + __e.backtrace )
                              raise __e
                            end 
                        end
                    end
                    trampCall( callProcedure( 'cons',
                        begin
                          if @global_lisp_binding.has_key?('_cons') then
                            @_cons
                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                        :"define"                        ,Cell.new(
                          trampCall( callProcedure( 'cons',
                              begin
                                if @global_lisp_binding.has_key?('_cons') then
                                  @_cons
                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'car',
                                    begin
                                      if @global_lisp_binding.has_key?('_car') then
                                        @_car
                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:53"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _arg
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                                      end
                                             )))                              ,Cell.new(
                                trampCall( callProcedure( 'list',
                                    begin
                                      if @global_lisp_binding.has_key?('_list') then
                                        @_list
                                      else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:54"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'cons',
                                          begin
                                            if @global_lisp_binding.has_key?('_cons') then
                                              @_cons
                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                          :"lambda"                                          ,Cell.new(
                                            trampCall( callProcedure( 'cons',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cons') then
                                                    @_cons
                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  trampCall( callProcedure( 'cdr',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_cdr') then
                                                          @_cdr
                                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            _arg
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))                                                ,Cell.new(
                                                  begin
                                                      _body
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:57"] + __e.backtrace ) ; raise __e
                                                  end
                                                         ))))
                                                   ))))
                                             )))
                                       ))))
                                 ))))
                end
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_debug_MIMARKprint'] = true
    @_debug_MIMARKprint = 
        LispMacro.new { |__form,_sourcefile,_lineno,_sourcesexp| 
            begin
                __form
              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:64"] + __e.backtrace ) ; raise __e
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_caar'] = true
    @_caar = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'car',
                begin
                  if @global_lisp_binding.has_key?('_car') then
                    @_car
                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:69"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          @_car
                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:69"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _x
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:69"] + __e.backtrace ) ; raise __e
                        end
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cadr'] = true
    @_cadr = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'car',
                begin
                  if @global_lisp_binding.has_key?('_car') then
                    @_car
                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:70"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          @_cdr
                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:70"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _x
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:70"] + __e.backtrace ) ; raise __e
                        end
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cdar'] = true
    @_cdar = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'cdr',
                begin
                  if @global_lisp_binding.has_key?('_cdr') then
                    @_cdr
                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:71"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          @_car
                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:71"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _x
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:71"] + __e.backtrace ) ; raise __e
                        end
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cddr'] = true
    @_cddr = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'cdr',
                begin
                  if @global_lisp_binding.has_key?('_cdr') then
                    @_cdr
                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:72"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          @_cdr
                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:72"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _x
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:72"] + __e.backtrace ) ; raise __e
                        end
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_caaar'] = true
    @_caaar = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'car',
                begin
                  if @global_lisp_binding.has_key?('_car') then
                    @_car
                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:73"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          @_car
                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:73"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                @_car
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:73"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _x
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:73"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_caadr'] = true
    @_caadr = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'car',
                begin
                  if @global_lisp_binding.has_key?('_car') then
                    @_car
                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:74"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          @_car
                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:74"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'cdr',
                            begin
                              if @global_lisp_binding.has_key?('_cdr') then
                                @_cdr
                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:74"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _x
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:74"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cadar'] = true
    @_cadar = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'car',
                begin
                  if @global_lisp_binding.has_key?('_car') then
                    @_car
                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:75"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          @_cdr
                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:75"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                @_car
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:75"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _x
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:75"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_caddr'] = true
    @_caddr = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'car',
                begin
                  if @global_lisp_binding.has_key?('_car') then
                    @_car
                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:76"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          @_cdr
                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:76"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'cdr',
                            begin
                              if @global_lisp_binding.has_key?('_cdr') then
                                @_cdr
                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:76"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _x
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:76"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cdaar'] = true
    @_cdaar = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'cdr',
                begin
                  if @global_lisp_binding.has_key?('_cdr') then
                    @_cdr
                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:77"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          @_car
                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:77"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                @_car
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:77"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _x
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:77"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cdadr'] = true
    @_cdadr = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'cdr',
                begin
                  if @global_lisp_binding.has_key?('_cdr') then
                    @_cdr
                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:78"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          @_car
                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:78"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'cdr',
                            begin
                              if @global_lisp_binding.has_key?('_cdr') then
                                @_cdr
                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:78"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _x
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:78"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cddar'] = true
    @_cddar = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'cdr',
                begin
                  if @global_lisp_binding.has_key?('_cdr') then
                    @_cdr
                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:79"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          @_cdr
                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:79"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                @_car
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:79"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _x
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:79"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cdddr'] = true
    @_cdddr = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'cdr',
                begin
                  if @global_lisp_binding.has_key?('_cdr') then
                    @_cdr
                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:80"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          @_cdr
                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:80"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'cdr',
                            begin
                              if @global_lisp_binding.has_key?('_cdr') then
                                @_cdr
                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:80"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _x
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:80"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_caaaar'] = true
    @_caaaar = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'car',
                begin
                  if @global_lisp_binding.has_key?('_car') then
                    @_car
                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:81"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          @_car
                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:81"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                @_car
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:81"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'car',
                                  begin
                                    if @global_lisp_binding.has_key?('_car') then
                                      @_car
                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:81"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _x
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:81"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_caaadr'] = true
    @_caaadr = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'car',
                begin
                  if @global_lisp_binding.has_key?('_car') then
                    @_car
                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:82"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          @_car
                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:82"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                @_car
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:82"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cdr',
                                  begin
                                    if @global_lisp_binding.has_key?('_cdr') then
                                      @_cdr
                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:82"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _x
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:82"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_caadar'] = true
    @_caadar = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'car',
                begin
                  if @global_lisp_binding.has_key?('_car') then
                    @_car
                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:83"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          @_car
                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:83"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'cdr',
                            begin
                              if @global_lisp_binding.has_key?('_cdr') then
                                @_cdr
                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:83"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'car',
                                  begin
                                    if @global_lisp_binding.has_key?('_car') then
                                      @_car
                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:83"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _x
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:83"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_caaddr'] = true
    @_caaddr = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'car',
                begin
                  if @global_lisp_binding.has_key?('_car') then
                    @_car
                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:84"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          @_car
                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:84"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'cdr',
                            begin
                              if @global_lisp_binding.has_key?('_cdr') then
                                @_cdr
                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:84"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cdr',
                                  begin
                                    if @global_lisp_binding.has_key?('_cdr') then
                                      @_cdr
                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:84"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _x
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:84"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cadaar'] = true
    @_cadaar = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'car',
                begin
                  if @global_lisp_binding.has_key?('_car') then
                    @_car
                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:85"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          @_cdr
                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:85"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                @_car
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:85"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'car',
                                  begin
                                    if @global_lisp_binding.has_key?('_car') then
                                      @_car
                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:85"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _x
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:85"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cadadr'] = true
    @_cadadr = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'car',
                begin
                  if @global_lisp_binding.has_key?('_car') then
                    @_car
                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:86"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          @_cdr
                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:86"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                @_car
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:86"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cdr',
                                  begin
                                    if @global_lisp_binding.has_key?('_cdr') then
                                      @_cdr
                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:86"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _x
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:86"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_caddar'] = true
    @_caddar = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'car',
                begin
                  if @global_lisp_binding.has_key?('_car') then
                    @_car
                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:87"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          @_cdr
                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:87"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'cdr',
                            begin
                              if @global_lisp_binding.has_key?('_cdr') then
                                @_cdr
                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:87"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'car',
                                  begin
                                    if @global_lisp_binding.has_key?('_car') then
                                      @_car
                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:87"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _x
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:87"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cadddr'] = true
    @_cadddr = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'car',
                begin
                  if @global_lisp_binding.has_key?('_car') then
                    @_car
                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:88"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          @_cdr
                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:88"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'cdr',
                            begin
                              if @global_lisp_binding.has_key?('_cdr') then
                                @_cdr
                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:88"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cdr',
                                  begin
                                    if @global_lisp_binding.has_key?('_cdr') then
                                      @_cdr
                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:88"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _x
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:88"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cdaaar'] = true
    @_cdaaar = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'cdr',
                begin
                  if @global_lisp_binding.has_key?('_cdr') then
                    @_cdr
                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:89"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          @_car
                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:89"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                @_car
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:89"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'car',
                                  begin
                                    if @global_lisp_binding.has_key?('_car') then
                                      @_car
                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:89"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _x
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:89"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cdaadr'] = true
    @_cdaadr = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'cdr',
                begin
                  if @global_lisp_binding.has_key?('_cdr') then
                    @_cdr
                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:90"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          @_car
                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:90"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                @_car
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:90"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cdr',
                                  begin
                                    if @global_lisp_binding.has_key?('_cdr') then
                                      @_cdr
                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:90"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _x
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:90"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cdadar'] = true
    @_cdadar = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'cdr',
                begin
                  if @global_lisp_binding.has_key?('_cdr') then
                    @_cdr
                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:91"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          @_car
                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:91"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'cdr',
                            begin
                              if @global_lisp_binding.has_key?('_cdr') then
                                @_cdr
                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:91"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'car',
                                  begin
                                    if @global_lisp_binding.has_key?('_car') then
                                      @_car
                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:91"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _x
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:91"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cdaddr'] = true
    @_cdaddr = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'cdr',
                begin
                  if @global_lisp_binding.has_key?('_cdr') then
                    @_cdr
                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:92"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          @_car
                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:92"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'cdr',
                            begin
                              if @global_lisp_binding.has_key?('_cdr') then
                                @_cdr
                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:92"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cdr',
                                  begin
                                    if @global_lisp_binding.has_key?('_cdr') then
                                      @_cdr
                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:92"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _x
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:92"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cddaar'] = true
    @_cddaar = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'cdr',
                begin
                  if @global_lisp_binding.has_key?('_cdr') then
                    @_cdr
                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:93"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          @_cdr
                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:93"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                @_car
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:93"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'car',
                                  begin
                                    if @global_lisp_binding.has_key?('_car') then
                                      @_car
                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:93"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _x
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:93"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cddadr'] = true
    @_cddadr = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'cdr',
                begin
                  if @global_lisp_binding.has_key?('_cdr') then
                    @_cdr
                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:94"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          @_cdr
                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:94"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                @_car
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:94"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cdr',
                                  begin
                                    if @global_lisp_binding.has_key?('_cdr') then
                                      @_cdr
                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:94"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _x
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:94"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cdddar'] = true
    @_cdddar = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'cdr',
                begin
                  if @global_lisp_binding.has_key?('_cdr') then
                    @_cdr
                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:95"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          @_cdr
                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:95"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'cdr',
                            begin
                              if @global_lisp_binding.has_key?('_cdr') then
                                @_cdr
                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:95"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'car',
                                  begin
                                    if @global_lisp_binding.has_key?('_car') then
                                      @_car
                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:95"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _x
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:95"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cddddr'] = true
    @_cddddr = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'cdr',
                begin
                  if @global_lisp_binding.has_key?('_cdr') then
                    @_cdr
                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:96"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          @_cdr
                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:96"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'cdr',
                            begin
                              if @global_lisp_binding.has_key?('_cdr') then
                                @_cdr
                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:96"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cdr',
                                  begin
                                    if @global_lisp_binding.has_key?('_cdr') then
                                      @_cdr
                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:96"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _x
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:96"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                               )))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_iota'] = true
    @_iota = 
        begin
          if @global_lisp_binding.has_key?('_range') then
            @_range
          else raise NameError.new( "Error: undefined variable _range", "_range" ) end
          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:102"] + __e.backtrace ) ; raise __e
        end
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_append'] = true
    @_append = 
        Proc.new { |_a,_b| 
            begin
              ___lambda = lambda { |_append_MIMARKreverse| 
                  _append_MIMARKreverse                   = 
                    Proc.new { |_a,_b| 
                        if ( 
                          trampCall( callProcedure( 'pair?',
                              begin
                                if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                  @_pair_QUMARK
                                else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:107"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    _a
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:110"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                         ) then
                            DelayedCallPacket.new( 'append-reverse',
                                begin
                                    _append_MIMARKreverse
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:110"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  trampCall( callProcedure( 'cdr',
                                      begin
                                        if @global_lisp_binding.has_key?('_cdr') then
                                          @_cdr
                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:108"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            _a
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:110"] + __e.backtrace ) ; raise __e
                                        end
                                               )))                                ,Cell.new(
                                  trampCall( callProcedure( 'cons',
                                      begin
                                        if @global_lisp_binding.has_key?('_cons') then
                                          @_cons
                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:108"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'car',
                                            begin
                                              if @global_lisp_binding.has_key?('_car') then
                                                @_car
                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:108"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  _a
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:110"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))                                      ,Cell.new(
                                        begin
                                            _b
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:110"] + __e.backtrace ) ; raise __e
                                        end
                                               ))))
                                         )))
                        else
                            begin
                                _b
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:110"] + __e.backtrace ) ; raise __e
                            end
                        end
                    }
                  DelayedCallPacket.new( 'append-reverse',
                      begin
                          _append_MIMARKreverse
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:110"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'reverse',
                            begin
                              if @global_lisp_binding.has_key?('_reverse') then
                                @_reverse
                              else raise NameError.new( "Error: undefined variable _reverse", "_reverse" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:110"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _a
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:110"] + __e.backtrace ) ; raise __e
                              end
                                     )))                      ,Cell.new(
                        begin
                            _b
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:110"] + __e.backtrace ) ; raise __e
                        end
                               )))
              } ; ___lambda.call(
              nil
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_vector'] = true
    @_vector = 
        Proc.new { |*__rest__| _lst = __rest__[0] ;  
            DelayedCallPacket.new( 'to-arr',
                begin
                  if @global_lisp_binding.has_key?('_to_MIMARKarr') then
                    @_to_MIMARKarr
                  else raise NameError.new( "Error: undefined variable _to_MIMARKarr", "_to_MIMARKarr" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:115"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  begin
                      _lst
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:115"] + __e.backtrace ) ; raise __e
                  end
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_list_QUMARK'] = true
    @_list_QUMARK = 
        Proc.new { |_arg| 
            if ( 
              trampCall( callProcedure( 'pair?',
                  begin
                    if @global_lisp_binding.has_key?('_pair_QUMARK') then
                      @_pair_QUMARK
                    else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:117"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        _arg
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:119"] + __e.backtrace ) ; raise __e
                    end
                           )))
             ) then
                DelayedCallPacket.new( 'list?',
                    begin
                      if @global_lisp_binding.has_key?('_list_QUMARK') then
                        @_list_QUMARK
                      else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:118"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      trampCall( callProcedure( 'cdr',
                          begin
                            if @global_lisp_binding.has_key?('_cdr') then
                              @_cdr
                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:118"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                _arg
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:119"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                             ))
            else
                DelayedCallPacket.new( 'null?',
                    begin
                      if @global_lisp_binding.has_key?('_null_QUMARK') then
                        @_null_QUMARK
                      else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:119"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          _arg
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:119"] + __e.backtrace ) ; raise __e
                      end
                             ))
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_even_QUMARK'] = true
    @_even_QUMARK = 
        Proc.new { |_n| 
            DelayedCallPacket.new( '=',
                begin
                  if @global_lisp_binding.has_key?('__EQMARK') then
                    @__EQMARK
                  else raise NameError.new( "Error: undefined variable __EQMARK", "__EQMARK" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:120"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( '%',
                      begin
                        if @global_lisp_binding.has_key?('__PAMARK') then
                          @__PAMARK
                        else raise NameError.new( "Error: undefined variable __PAMARK", "__PAMARK" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:120"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _n
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:120"] + __e.backtrace ) ; raise __e
                        end                      ,Cell.new(
                      2
                               ))))                ,Cell.new(
                0
                         )))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_odd_QUMARK'] = true
    @_odd_QUMARK = 
        Proc.new { |_n| 
            DelayedCallPacket.new( 'not',
                begin
                  if @global_lisp_binding.has_key?('_not') then
                    @_not
                  else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:121"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( '=',
                      begin
                        if @global_lisp_binding.has_key?('__EQMARK') then
                          @__EQMARK
                        else raise NameError.new( "Error: undefined variable __EQMARK", "__EQMARK" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:121"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( '%',
                            begin
                              if @global_lisp_binding.has_key?('__PAMARK') then
                                @__PAMARK
                              else raise NameError.new( "Error: undefined variable __PAMARK", "__PAMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:121"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _n
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:121"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                            2
                                     ))))                      ,Cell.new(
                      0
                               ))))
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_zero_QUMARK'] = true
    @_zero_QUMARK = 
        Proc.new { |_n| 
            DelayedCallPacket.new( '=',
                begin
                  if @global_lisp_binding.has_key?('__EQMARK') then
                    @__EQMARK
                  else raise NameError.new( "Error: undefined variable __EQMARK", "__EQMARK" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:122"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  begin
                      _n
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:122"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                0
                         )))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_positive_QUMARK'] = true
    @_positive_QUMARK = 
        Proc.new { |_n| 
            DelayedCallPacket.new( '>',
                begin
                  if @global_lisp_binding.has_key?('__GTMARK') then
                    @__GTMARK
                  else raise NameError.new( "Error: undefined variable __GTMARK", "__GTMARK" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:123"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  begin
                      _n
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:123"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                0
                         )))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_negative_QUMARK'] = true
    @_negative_QUMARK = 
        Proc.new { |_n| 
            DelayedCallPacket.new( '<',
                begin
                  if @global_lisp_binding.has_key?('__LTMARK') then
                    @__LTMARK
                  else raise NameError.new( "Error: undefined variable __LTMARK", "__LTMARK" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:124"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  begin
                      _n
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:124"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                0
                         )))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_abs'] = true
    @_abs = 
        Proc.new { |_n| 
            if ( 
              trampCall( callProcedure( '>=',
                  begin
                    if @global_lisp_binding.has_key?('__GTMARK_EQMARK') then
                      @__GTMARK_EQMARK
                    else raise NameError.new( "Error: undefined variable __GTMARK_EQMARK", "__GTMARK_EQMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:125"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        _n
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:125"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                  0
                           ))))
             ) then
                begin
                    _n
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:125"] + __e.backtrace ) ; raise __e
                end
            else
                DelayedCallPacket.new( '-',
                    begin
                      if @global_lisp_binding.has_key?('__MIMARK') then
                        @__MIMARK
                      else raise NameError.new( "Error: undefined variable __MIMARK", "__MIMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:125"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          _n
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:125"] + __e.backtrace ) ; raise __e
                      end
                             ))
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_max'] = true
    @_max = 
        Proc.new { |*__rest__| _lst = __rest__[0] ;  
            DelayedCallPacket.new( 'foldr',
                begin
                  if @global_lisp_binding.has_key?('_foldr') then
                    @_foldr
                  else raise NameError.new( "Error: undefined variable _foldr", "_foldr" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:127"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  Proc.new { |_a,_b| 
                      if ( 
                        trampCall( callProcedure( '>',
                            begin
                              if @global_lisp_binding.has_key?('__GTMARK') then
                                @__GTMARK
                              else raise NameError.new( "Error: undefined variable __GTMARK", "__GTMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:127"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _a
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:127"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                              begin
                                  _b
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:127"] + __e.backtrace ) ; raise __e
                              end
                                     ))))
                       ) then
                          begin
                              _a
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:127"] + __e.backtrace ) ; raise __e
                          end
                      else
                          begin
                              _b
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:127"] + __e.backtrace ) ; raise __e
                          end
                      end
                  }                ,Cell.new(
                  trampCall( callProcedure( 'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          @_car
                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:127"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _lst
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:127"] + __e.backtrace ) ; raise __e
                        end
                               )))                ,Cell.new(
                  trampCall( callProcedure( 'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          @_cdr
                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:127"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _lst
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:127"] + __e.backtrace ) ; raise __e
                        end
                               )))
                         ))))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_min'] = true
    @_min = 
        Proc.new { |*__rest__| _lst = __rest__[0] ;  
            DelayedCallPacket.new( 'foldr',
                begin
                  if @global_lisp_binding.has_key?('_foldr') then
                    @_foldr
                  else raise NameError.new( "Error: undefined variable _foldr", "_foldr" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:129"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  Proc.new { |_a,_b| 
                      if ( 
                        trampCall( callProcedure( '<',
                            begin
                              if @global_lisp_binding.has_key?('__LTMARK') then
                                @__LTMARK
                              else raise NameError.new( "Error: undefined variable __LTMARK", "__LTMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:129"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _a
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:129"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                              begin
                                  _b
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:129"] + __e.backtrace ) ; raise __e
                              end
                                     ))))
                       ) then
                          begin
                              _a
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:129"] + __e.backtrace ) ; raise __e
                          end
                      else
                          begin
                              _b
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:129"] + __e.backtrace ) ; raise __e
                          end
                      end
                  }                ,Cell.new(
                  trampCall( callProcedure( 'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          @_car
                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:129"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _lst
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:129"] + __e.backtrace ) ; raise __e
                        end
                               )))                ,Cell.new(
                  trampCall( callProcedure( 'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          @_cdr
                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:129"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _lst
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:129"] + __e.backtrace ) ; raise __e
                        end
                               )))
                         ))))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_succ'] = true
    @_succ = 
        Proc.new { |_x| 
            DelayedCallPacket.new( '+',
                begin
                  if @global_lisp_binding.has_key?('__PLMARK') then
                    @__PLMARK
                  else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:130"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  begin
                      _x
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:130"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                1
                         )))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_pred'] = true
    @_pred = 
        Proc.new { |_x| 
            DelayedCallPacket.new( '-',
                begin
                  if @global_lisp_binding.has_key?('__MIMARK') then
                    @__MIMARK
                  else raise NameError.new( "Error: undefined variable __MIMARK", "__MIMARK" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:131"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  begin
                      _x
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:131"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                1
                         )))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_nth'] = true
    @_nth = 
        Proc.new { |_n,_lst| 
            begin
              ___lambda = lambda { |_nth_MIMARKiter| 
                  _nth_MIMARKiter                   = 
                    Proc.new { |_n,_index,_lst| 
                        if ( 
                          trampCall( callProcedure( 'null?',
                              begin
                                if @global_lisp_binding.has_key?('_null_QUMARK') then
                                  @_null_QUMARK
                                else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:135"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    _lst
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:142"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                         ) then
                          Cell.new()
                        else
                            if ( 
                              trampCall( callProcedure( 'not',
                                  begin
                                    if @global_lisp_binding.has_key?('_not') then
                                      @_not
                                    else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:137"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'pair?',
                                        begin
                                          if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                            @_pair_QUMARK
                                          else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:137"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _lst
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:142"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                           )))
                             ) then
                                begin raise RuntimeError, 
                                "Error: nth got improper list."
                                rescue => __e 
                                  __e.set_backtrace( ["./lib/init.nnd:138"] + __e.backtrace )
                                  raise __e
                                end 
                            else
                                if ( 
                                  trampCall( callProcedure( 'eqv?',
                                      begin
                                        if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                          @_eqv_QUMARK
                                        else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:139"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            _n
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:142"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        begin
                                            _index
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:141"] + __e.backtrace ) ; raise __e
                                        end
                                               ))))
                                 ) then
                                    DelayedCallPacket.new( 'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            @_car
                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:140"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _lst
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:142"] + __e.backtrace ) ; raise __e
                                          end
                                                 ))
                                else
                                    DelayedCallPacket.new( 'nth-iter',
                                        begin
                                            _nth_MIMARKiter
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:142"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _n
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:142"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                          trampCall( callProcedure( '+',
                                              begin
                                                if @global_lisp_binding.has_key?('__PLMARK') then
                                                  @__PLMARK
                                                else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:141"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    _index
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:141"] + __e.backtrace ) ; raise __e
                                                end                                              ,Cell.new(
                                              1
                                                       ))))                                        ,Cell.new(
                                          trampCall( callProcedure( 'cdr',
                                              begin
                                                if @global_lisp_binding.has_key?('_cdr') then
                                                  @_cdr
                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:141"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    _lst
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:142"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 ))))
                                end
                            end
                        end
                    }
                  DelayedCallPacket.new( 'nth-iter',
                      begin
                          _nth_MIMARKiter
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:142"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _n
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:142"] + __e.backtrace ) ; raise __e
                        end                      ,Cell.new(
                      0                      ,Cell.new(
                        begin
                            _lst
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:142"] + __e.backtrace ) ; raise __e
                        end
                               ))))
              } ; ___lambda.call(
              nil
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_first'] = true
    @_first = 
        Proc.new { |_lst| 
            DelayedCallPacket.new( 'nth',
                begin
                  if @global_lisp_binding.has_key?('_nth') then
                    @_nth
                  else raise NameError.new( "Error: undefined variable _nth", "_nth" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:143"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                0                ,Cell.new(
                  begin
                      _lst
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:143"] + __e.backtrace ) ; raise __e
                  end
                         )))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_second'] = true
    @_second = 
        Proc.new { |_lst| 
            DelayedCallPacket.new( 'nth',
                begin
                  if @global_lisp_binding.has_key?('_nth') then
                    @_nth
                  else raise NameError.new( "Error: undefined variable _nth", "_nth" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:144"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                1                ,Cell.new(
                  begin
                      _lst
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:144"] + __e.backtrace ) ; raise __e
                  end
                         )))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_third'] = true
    @_third = 
        Proc.new { |_lst| 
            DelayedCallPacket.new( 'nth',
                begin
                  if @global_lisp_binding.has_key?('_nth') then
                    @_nth
                  else raise NameError.new( "Error: undefined variable _nth", "_nth" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:145"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                2                ,Cell.new(
                  begin
                      _lst
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:145"] + __e.backtrace ) ; raise __e
                  end
                         )))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_fourth'] = true
    @_fourth = 
        Proc.new { |_lst| 
            DelayedCallPacket.new( 'nth',
                begin
                  if @global_lisp_binding.has_key?('_nth') then
                    @_nth
                  else raise NameError.new( "Error: undefined variable _nth", "_nth" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:146"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                3                ,Cell.new(
                  begin
                      _lst
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:146"] + __e.backtrace ) ; raise __e
                  end
                         )))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_fifth'] = true
    @_fifth = 
        Proc.new { |_lst| 
            DelayedCallPacket.new( 'nth',
                begin
                  if @global_lisp_binding.has_key?('_nth') then
                    @_nth
                  else raise NameError.new( "Error: undefined variable _nth", "_nth" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:147"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                4                ,Cell.new(
                  begin
                      _lst
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:147"] + __e.backtrace ) ; raise __e
                  end
                         )))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_sixth'] = true
    @_sixth = 
        Proc.new { |_lst| 
            DelayedCallPacket.new( 'nth',
                begin
                  if @global_lisp_binding.has_key?('_nth') then
                    @_nth
                  else raise NameError.new( "Error: undefined variable _nth", "_nth" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:148"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                5                ,Cell.new(
                  begin
                      _lst
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:148"] + __e.backtrace ) ; raise __e
                  end
                         )))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_seventh'] = true
    @_seventh = 
        Proc.new { |_lst| 
            DelayedCallPacket.new( 'nth',
                begin
                  if @global_lisp_binding.has_key?('_nth') then
                    @_nth
                  else raise NameError.new( "Error: undefined variable _nth", "_nth" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:149"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                6                ,Cell.new(
                  begin
                      _lst
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:149"] + __e.backtrace ) ; raise __e
                  end
                         )))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_eighth'] = true
    @_eighth = 
        Proc.new { |_lst| 
            DelayedCallPacket.new( 'nth',
                begin
                  if @global_lisp_binding.has_key?('_nth') then
                    @_nth
                  else raise NameError.new( "Error: undefined variable _nth", "_nth" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:150"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                7                ,Cell.new(
                  begin
                      _lst
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:150"] + __e.backtrace ) ; raise __e
                  end
                         )))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_ninth'] = true
    @_ninth = 
        Proc.new { |_lst| 
            DelayedCallPacket.new( 'nth',
                begin
                  if @global_lisp_binding.has_key?('_nth') then
                    @_nth
                  else raise NameError.new( "Error: undefined variable _nth", "_nth" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:151"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                8                ,Cell.new(
                  begin
                      _lst
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:151"] + __e.backtrace ) ; raise __e
                  end
                         )))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_tenth'] = true
    @_tenth = 
        Proc.new { |_lst| 
            DelayedCallPacket.new( 'nth',
                begin
                  if @global_lisp_binding.has_key?('_nth') then
                    @_nth
                  else raise NameError.new( "Error: undefined variable _nth", "_nth" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                9                ,Cell.new(
                  begin
                      _lst
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:152"] + __e.backtrace ) ; raise __e
                  end
                         )))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_x_MIMARK_GTMARKstring'] = true
    @_x_MIMARK_GTMARKstring = 
        Proc.new { |_object| 
            DelayedCallPacket.new( 'to-s',
                begin
                  if @global_lisp_binding.has_key?('_to_MIMARKs') then
                    @_to_MIMARKs
                  else raise NameError.new( "Error: undefined variable _to_MIMARKs", "_to_MIMARKs" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:154"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  begin
                      _object
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:154"] + __e.backtrace ) ; raise __e
                  end
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_macroexpand'] = true
    @_macroexpand = 
        Proc.new { |_sexp| 
            begin
              ___lambda = lambda { |_newsexp| 
                  if ( 
                    trampCall( callProcedure( 'not',
                        begin
                          if @global_lisp_binding.has_key?('_not') then
                            @_not
                          else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:161"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'equal?',
                              begin
                                if @global_lisp_binding.has_key?('_equal_QUMARK') then
                                  @_equal_QUMARK
                                else raise NameError.new( "Error: undefined variable _equal_QUMARK", "_equal_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:161"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    _sexp
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:161"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                                begin
                                    _newsexp
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:163"] + __e.backtrace ) ; raise __e
                                end
                                       ))))
                                 )))
                   ) then
                      DelayedCallPacket.new( 'macroexpand',
                          begin
                            if @global_lisp_binding.has_key?('_macroexpand') then
                              @_macroexpand
                            else raise NameError.new( "Error: undefined variable _macroexpand", "_macroexpand" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:162"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                _newsexp
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:163"] + __e.backtrace ) ; raise __e
                            end
                                   ))
                  else
                      begin
                          _newsexp
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:163"] + __e.backtrace ) ; raise __e
                      end
                  end
              } ; ___lambda.call(
                    trampCall( callProcedure( 'macroexpand-1',
                        begin
                          if @global_lisp_binding.has_key?('_macroexpand_MIMARK1') then
                            @_macroexpand_MIMARK1
                          else raise NameError.new( "Error: undefined variable _macroexpand_MIMARK1", "_macroexpand_MIMARK1" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:160"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              _sexp
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:161"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_feedto'] = true
    @_feedto = 
        Proc.new { || 
            begin raise RuntimeError, 
            "=> (feedto) appeared outside cond or case."
            rescue => __e 
              __e.set_backtrace( ["./lib/init.nnd:166"] + __e.backtrace )
              raise __e
            end 
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cond'] = true
    @_cond = 
        LispMacro.new { |*__rest__| _lst = __rest__[0] ;  
            begin
              ___lambda = lambda { |_case_MIMARKblock,_cond_MIMARKiter| 
                  _case_MIMARKblock                   = 
                    Proc.new { |_elem,*__rest__| _elseblock = __rest__[0] ;  
                        begin
                          ___lambda = lambda { |_condition,_body,_tmpsym| 
                              trampCall( callProcedure( 'append',
                                  begin
                                    if @global_lisp_binding.has_key?('_append') then
                                      @_append
                                    else raise NameError.new( "Error: undefined variable _append", "_append" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:182"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    if ( 
                                      trampCall( callProcedure( 'eq?',
                                          begin
                                            if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                              @_eq_QUMARK
                                            else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:199"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                          :"feedto"                                          ,Cell.new(
                                            trampCall( callProcedure( 'car',
                                                begin
                                                  if @global_lisp_binding.has_key?('_car') then
                                                    @_car
                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:201"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      _body
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:191"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                   ))))
                                     ) then
                                        trampCall( callProcedure( 'cons',
                                            begin
                                              if @global_lisp_binding.has_key?('_cons') then
                                                @_cons
                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:191"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                            :"if"                                            ,Cell.new(
                                              trampCall( callProcedure( 'list',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_list') then
                                                      @_list
                                                    else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:189"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'list',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_list') then
                                                            @_list
                                                          else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:189"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                        :"set!"                                                        ,Cell.new(
                                                          begin
                                                              _tmpsym
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:187"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                          begin
                                                              _condition
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:190"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))))                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'list',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_list') then
                                                            @_list
                                                          else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:189"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'cadr',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cadr') then
                                                                  @_cadr
                                                                else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:187"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    _body
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:191"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))                                                        ,Cell.new(
                                                          begin
                                                              _tmpsym
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:187"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))
                                                           ))))
                                                     ))))
                                    else
                                        trampCall( callProcedure( 'cons',
                                            begin
                                              if @global_lisp_binding.has_key?('_cons') then
                                                @_cons
                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:191"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                            :"if"                                            ,Cell.new(
                                              trampCall( callProcedure( 'list',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_list') then
                                                      @_list
                                                    else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:189"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        _condition
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:190"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            @_cons
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:191"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                        :"begin"                                                        ,Cell.new(
                                                          begin
                                                              _body
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:191"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))
                                                           ))))
                                                     ))))
                                    end                                  ,Cell.new(
                                    if ( 
                                      trampCall( callProcedure( '<',
                                          begin
                                            if @global_lisp_binding.has_key?('__LTMARK') then
                                              @__LTMARK
                                            else raise NameError.new( "Error: undefined variable __LTMARK", "__LTMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:192"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                          0                                          ,Cell.new(
                                            trampCall( callProcedure( 'length',
                                                begin
                                                  if @global_lisp_binding.has_key?('_length') then
                                                    @_length
                                                  else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:199"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      _elseblock
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:193"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                   ))))
                                     ) then
                                        begin
                                            _elseblock
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:193"] + __e.backtrace ) ; raise __e
                                        end
                                    else
                                      Cell.new()
                                    end
                                           ))))
                          } ; ___lambda.call(
                                if ( 
                                  trampCall( callProcedure( 'eq?',
                                      begin
                                        if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                          @_eq_QUMARK
                                        else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:199"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                      :"else"                                      ,Cell.new(
                                        trampCall( callProcedure( 'car',
                                            begin
                                              if @global_lisp_binding.has_key?('_car') then
                                                @_car
                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:201"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  _elem
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:177"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               ))))
                                 ) then
                                  true
                                else
                                    trampCall( callProcedure( 'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            @_car
                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:201"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _elem
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:177"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                end                              ,
                                if ( 
                                  trampCall( callProcedure( 'null?',
                                      begin
                                        if @global_lisp_binding.has_key?('_null_QUMARK') then
                                          @_null_QUMARK
                                        else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:175"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'cdr',
                                            begin
                                              if @global_lisp_binding.has_key?('_cdr') then
                                                @_cdr
                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:202"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  _elem
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:177"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               )))
                                 ) then
                                  Cell.new(true)
                                else
                                    trampCall( callProcedure( 'cdr',
                                        begin
                                          if @global_lisp_binding.has_key?('_cdr') then
                                            @_cdr
                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:202"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _elem
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:177"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                end                              ,
                                trampCall( callProcedure( 'gensym',
                                    begin
                                      if @global_lisp_binding.has_key?('_gensym') then
                                        @_gensym
                                      else raise NameError.new( "Error: undefined variable _gensym", "_gensym" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:178"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                  Cell.new(
                                             )))
                                     )
                        end
                    }
                  _cond_MIMARKiter                   = 
                    Proc.new { |_lst| 
                        if ( 
                          trampCall( callProcedure( 'eq?',
                              begin
                                if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                  @_eq_QUMARK
                                else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:199"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              0                              ,Cell.new(
                                trampCall( callProcedure( 'length',
                                    begin
                                      if @global_lisp_binding.has_key?('_length') then
                                        @_length
                                      else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:199"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _lst
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:203"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       ))))
                         ) then
                          Cell.new()
                        else
                            if ( 
                              trampCall( callProcedure( 'eq?',
                                  begin
                                    if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                      @_eq_QUMARK
                                    else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:199"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  1                                  ,Cell.new(
                                    trampCall( callProcedure( 'length',
                                        begin
                                          if @global_lisp_binding.has_key?('_length') then
                                            @_length
                                          else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:199"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _lst
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:203"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                           ))))
                             ) then
                                trampCall( callProcedure( 'case-block',
                                    begin
                                        _case_MIMARKblock
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:201"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              @_car
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:201"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _lst
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:203"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))                                    ,Cell.new(
                                    Cell.new()
                                             ))))
                            else
                                trampCall( callProcedure( 'case-block',
                                    begin
                                        _case_MIMARKblock
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:201"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              @_car
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:201"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _lst
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:203"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))                                    ,Cell.new(
                                      trampCall( callProcedure( 'cond-iter',
                                          begin
                                              _cond_MIMARKiter
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:203"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            trampCall( callProcedure( 'cdr',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cdr') then
                                                    @_cdr
                                                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:202"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      _lst
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:203"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                   )))
                                             ))))
                            end
                        end
                    }
                  trampCall( callProcedure( 'cond-iter',
                      begin
                          _cond_MIMARKiter
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:203"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _lst
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:203"] + __e.backtrace ) ; raise __e
                        end
                               )))
              } ; ___lambda.call(
              nil,nil
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_let1'] = true
    @_let1 = 
        LispMacro.new { |_var,_expr,*__rest__| _body = __rest__[0] ;  
            trampCall( callProcedure( 'append',
                begin
                  if @global_lisp_binding.has_key?('_append') then
                    @_append
                  else raise NameError.new( "Error: undefined variable _append", "_append" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:207"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'list',
                      begin
                        if @global_lisp_binding.has_key?('_list') then
                          @_list
                        else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:208"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                      :"let"                      ,Cell.new(
                        trampCall( callProcedure( 'list',
                            begin
                              if @global_lisp_binding.has_key?('_list') then
                                @_list
                              else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:208"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'list',
                                  begin
                                    if @global_lisp_binding.has_key?('_list') then
                                      @_list
                                    else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:208"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _var
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:208"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        _expr
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:208"] + __e.backtrace ) ; raise __e
                                    end
                                           ))))
                                     )))
                               ))))                ,Cell.new(
                  begin
                      _body
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:209"] + __e.backtrace ) ; raise __e
                  end
                         ))))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_or'] = true
    @_or = 
        LispMacro.new { |*__rest__| _lst = __rest__[0] ;  
            begin
              ___lambda = lambda { |_or_MIMARKiter| 
                  _or_MIMARKiter                   = 
                    Proc.new { |_lst| 
                        if ( 
                          trampCall( callProcedure( 'eq?',
                              begin
                                if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                  @_eq_QUMARK
                                else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:218"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              0                              ,Cell.new(
                                trampCall( callProcedure( 'length',
                                    begin
                                      if @global_lisp_binding.has_key?('_length') then
                                        @_length
                                      else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:218"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _lst
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:226"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       ))))
                         ) then
                            begin
                              false
                            end
                        else
                            if ( 
                              trampCall( callProcedure( 'eq?',
                                  begin
                                    if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                      @_eq_QUMARK
                                    else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:218"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  1                                  ,Cell.new(
                                    trampCall( callProcedure( 'length',
                                        begin
                                          if @global_lisp_binding.has_key?('_length') then
                                            @_length
                                          else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:218"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _lst
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:226"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                           ))))
                             ) then
                                begin
                                    begin
                                      ___lambda = lambda { |_sym| 
                                          trampCall( callProcedure( 'list',
                                              begin
                                                if @global_lisp_binding.has_key?('_list') then
                                                  @_list
                                                else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                              :"let1"                                              ,Cell.new(
                                                begin
                                                    _sym
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                                end                                              ,Cell.new(
                                                trampCall( callProcedure( 'car',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_car') then
                                                        @_car
                                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:224"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          _lst
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:226"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))                                              ,Cell.new(
                                                trampCall( callProcedure( 'list',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_list') then
                                                        @_list
                                                      else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                    :"if"                                                    ,Cell.new(
                                                      begin
                                                          _sym
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                      begin
                                                          _sym
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                    false
                                                             ))))))
                                                       ))))))
                                      } ; ___lambda.call(
                                            trampCall( callProcedure( 'gensym',
                                                begin
                                                  if @global_lisp_binding.has_key?('_gensym') then
                                                    @_gensym
                                                  else raise NameError.new( "Error: undefined variable _gensym", "_gensym" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:223"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                              Cell.new(
                                                         )))
                                                 )
                                    end
                                end
                            else
                                if ( 
                                true
                                 ) then
                                    begin
                                        begin
                                          ___lambda = lambda { |_sym| 
                                              trampCall( callProcedure( 'list',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_list') then
                                                      @_list
                                                    else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                  :"let1"                                                  ,Cell.new(
                                                    begin
                                                        _sym
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'car',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_car') then
                                                            @_car
                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:224"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              _lst
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:226"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'list',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_list') then
                                                            @_list
                                                          else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                        :"if"                                                        ,Cell.new(
                                                          begin
                                                              _sym
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                          begin
                                                              _sym
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                          trampCall( callProcedure( 'or-iter',
                                                              begin
                                                                  _or_MIMARKiter
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:226"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                trampCall( callProcedure( 'cdr',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_cdr') then
                                                                        @_cdr
                                                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      begin
                                                                          _lst
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:226"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                             )))
                                                                       )))
                                                                 ))))))
                                                           ))))))
                                          } ; ___lambda.call(
                                                trampCall( callProcedure( 'gensym',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_gensym') then
                                                        @_gensym
                                                      else raise NameError.new( "Error: undefined variable _gensym", "_gensym" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:223"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                  Cell.new(
                                                             )))
                                                     )
                                        end
                                    end
                                else
                                  Nil.new
                                end
                            end
                        end
                    }
                  trampCall( callProcedure( 'or-iter',
                      begin
                          _or_MIMARKiter
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:226"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _lst
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:226"] + __e.backtrace ) ; raise __e
                        end
                               )))
              } ; ___lambda.call(
              nil
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_and'] = true
    @_and = 
        LispMacro.new { |*__rest__| _lst = __rest__[0] ;  
            begin
              ___lambda = lambda { |_and_MIMARKiter| 
                  _and_MIMARKiter                   = 
                    Proc.new { |_lst| 
                        if ( 
                          trampCall( callProcedure( 'eq?',
                              begin
                                if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                  @_eq_QUMARK
                                else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:238"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              0                              ,Cell.new(
                                trampCall( callProcedure( 'length',
                                    begin
                                      if @global_lisp_binding.has_key?('_length') then
                                        @_length
                                      else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:235"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _lst
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:241"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       ))))
                         ) then
                            begin
                              true
                            end
                        else
                            if ( 
                              trampCall( callProcedure( 'eq?',
                                  begin
                                    if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                      @_eq_QUMARK
                                    else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:238"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  1                                  ,Cell.new(
                                    trampCall( callProcedure( 'length',
                                        begin
                                          if @global_lisp_binding.has_key?('_length') then
                                            @_length
                                          else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:235"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _lst
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:241"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                           ))))
                             ) then
                                begin
                                    trampCall( callProcedure( 'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            @_car
                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:238"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _lst
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:241"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                end
                            else
                                if ( 
                                true
                                 ) then
                                    begin
                                        trampCall( callProcedure( 'list',
                                            begin
                                              if @global_lisp_binding.has_key?('_list') then
                                                @_list
                                              else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:238"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                            :"if"                                            ,Cell.new(
                                              trampCall( callProcedure( 'list',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_list') then
                                                      @_list
                                                    else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:238"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                  :"not"                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'list',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_list') then
                                                            @_list
                                                          else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:238"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                        :"eq?"                                                        ,Cell.new(
                                                        false                                                        ,Cell.new(
                                                          trampCall( callProcedure( 'car',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_car') then
                                                                  @_car
                                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:238"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    _lst
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:241"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                                 )))))
                                                           ))))                                            ,Cell.new(
                                              trampCall( callProcedure( 'and-iter',
                                                  begin
                                                      _and_MIMARKiter
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:241"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'cdr',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cdr') then
                                                            @_cdr
                                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:239"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              _lst
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:241"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))
                                                           )))                                            ,Cell.new(
                                            false
                                                     ))))))
                                    end
                                else
                                  Nil.new
                                end
                            end
                        end
                    }
                  trampCall( callProcedure( 'and-iter',
                      begin
                          _and_MIMARKiter
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:241"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _lst
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:241"] + __e.backtrace ) ; raise __e
                        end
                               )))
              } ; ___lambda.call(
              nil
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_apply'] = true
    @_apply = 
        Proc.new { |_proc,*__rest__| _args = __rest__[0] ;  
            if ( 
              trampCall( callProcedure( 'null?',
                  begin
                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                      @_null_QUMARK
                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:245"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        _args
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:249"] + __e.backtrace ) ; raise __e
                    end
                           )))
             ) then
                DelayedCallPacket.new( 'proc',
                    begin
                        _proc
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:248"] + __e.backtrace ) ; raise __e
                    end                  ,
                  Cell.new(
                             ))
            else
                trampCall( callProcedure( 'anonymouse', 
                    Proc.new { |_lol| 
                        trampCall( callProcedure( 'apply1',
                            begin
                              if @global_lisp_binding.has_key?('_apply1') then
                                @_apply1
                              else raise NameError.new( "Error: undefined variable _apply1", "_apply1" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:248"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _proc
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:248"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                              trampCall( callProcedure( 'append',
                                  begin
                                    if @global_lisp_binding.has_key?('_append') then
                                      @_append
                                    else raise NameError.new( "Error: undefined variable _append", "_append" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:248"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'reverse',
                                        begin
                                          if @global_lisp_binding.has_key?('_reverse') then
                                            @_reverse
                                          else raise NameError.new( "Error: undefined variable _reverse", "_reverse" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:249"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'cdr',
                                              begin
                                                if @global_lisp_binding.has_key?('_cdr') then
                                                  @_cdr
                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:248"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    _lol
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:248"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 )))                                  ,Cell.new(
                                    trampCall( callProcedure( 'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            @_car
                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:248"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _lol
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:248"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                           ))))
                                     ))))
                    }                  ,
                    Cell.new(
                      trampCall( callProcedure( 'reverse',
                          begin
                            if @global_lisp_binding.has_key?('_reverse') then
                              @_reverse
                            else raise NameError.new( "Error: undefined variable _reverse", "_reverse" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:249"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                _args
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:249"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                             )))
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_quasiquote'] = true
    @_quasiquote = 
        LispMacro.new { |_l| 
            begin
              ___lambda = lambda { |_mcons,_mappend,_foo| 
                  _mcons                   = 
                    Proc.new { |_f,_l,_r| 
                        if ( 
                          if ( 
                            trampCall( callProcedure( 'not',
                                begin
                                  if @global_lisp_binding.has_key?('_not') then
                                    @_not
                                  else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:283"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  trampCall( callProcedure( 'eq?',
                                      begin
                                        if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                          @_eq_QUMARK
                                        else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                      false                                      ,Cell.new(
                                        trampCall( callProcedure( 'pair?',
                                            begin
                                              if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                @_pair_QUMARK
                                              else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:295"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  _r
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               ))))
                                         )))
                           ) then
                              if ( 
                                trampCall( callProcedure( 'not',
                                    begin
                                      if @global_lisp_binding.has_key?('_not') then
                                        @_not
                                      else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:283"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'eq?',
                                          begin
                                            if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                              @_eq_QUMARK
                                            else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                          false                                          ,Cell.new(
                                            trampCall( callProcedure( 'eq?',
                                                begin
                                                  if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                    @_eq_QUMARK
                                                  else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  trampCall( callProcedure( 'car',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_car') then
                                                          @_car
                                                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            _r
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))                                                ,Cell.new(
                                                :"quote"
                                                         ))))
                                                   ))))
                                             )))
                               ) then
                                  if ( 
                                    trampCall( callProcedure( 'not',
                                        begin
                                          if @global_lisp_binding.has_key?('_not') then
                                            @_not
                                          else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:283"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'eq?',
                                              begin
                                                if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                  @_eq_QUMARK
                                                else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                              false                                              ,Cell.new(
                                                trampCall( callProcedure( 'eq?',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                        @_eq_QUMARK
                                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'car',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_car') then
                                                              @_car
                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            trampCall( callProcedure( 'cdr',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cdr') then
                                                                    @_cdr
                                                                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      _r
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         )))
                                                                   )))                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'cdr',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cdr') then
                                                              @_cdr
                                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                _f
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:275"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))
                                                             ))))
                                                       ))))
                                                 )))
                                   ) then
                                      if ( 
                                        trampCall( callProcedure( 'not',
                                            begin
                                              if @global_lisp_binding.has_key?('_not') then
                                                @_not
                                              else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:283"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'eq?',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                      @_eq_QUMARK
                                                    else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                  false                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'pair?',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                            @_pair_QUMARK
                                                          else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:295"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              _l
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))
                                                           ))))
                                                     )))
                                       ) then
                                          if ( 
                                            trampCall( callProcedure( 'not',
                                                begin
                                                  if @global_lisp_binding.has_key?('_not') then
                                                    @_not
                                                  else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:283"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  trampCall( callProcedure( 'eq?',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                          @_eq_QUMARK
                                                        else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                      false                                                      ,Cell.new(
                                                        trampCall( callProcedure( 'eq?',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                @_eq_QUMARK
                                                              else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              trampCall( callProcedure( 'car',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_car') then
                                                                      @_car
                                                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        _l
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))                                                            ,Cell.new(
                                                            :"quote"
                                                                     ))))
                                                               ))))
                                                         )))
                                           ) then
                                              trampCall( callProcedure( 'eq?',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                      @_eq_QUMARK
                                                    else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'car',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_car') then
                                                            @_car
                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'cdr',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cdr') then
                                                                  @_cdr
                                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    _l
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                                 )))                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'car',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_car') then
                                                            @_car
                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              _f
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:275"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))
                                                           ))))
                                          else
                                            false
                                          end
                                      else
                                        false
                                      end
                                  else
                                    false
                                  end
                              else
                                false
                              end
                          else
                            false
                          end
                         ) then
                            if ( 
                              begin
                                ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20113| 
                                    if ( 
                                      begin
                                          ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20113
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                     ) then
                                        begin
                                            ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20113
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end
                                    else
                                        begin
                                          ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20114| 
                                              if ( 
                                                begin
                                                    ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20114
                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                end
                                               ) then
                                                  begin
                                                      ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20114
                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                  end
                                              else
                                                  begin
                                                    ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20115| 
                                                        if ( 
                                                          begin
                                                              ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20115
                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                          end
                                                         ) then
                                                            begin
                                                                ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20115
                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                            end
                                                        else
                                                          false
                                                        end
                                                    } ; ___lambda.call(
                                                          trampCall( callProcedure( 'string?',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_string_QUMARK') then
                                                                  @_string_QUMARK
                                                                else raise NameError.new( "Error: undefined variable _string_QUMARK", "_string_QUMARK" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:284"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    _f
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:275"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                               )
                                                  end
                                              end
                                          } ; ___lambda.call(
                                                trampCall( callProcedure( 'number?',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_number_QUMARK') then
                                                        @_number_QUMARK
                                                      else raise NameError.new( "Error: undefined variable _number_QUMARK", "_number_QUMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:284"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          _f
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:275"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                                     )
                                        end
                                    end
                                } ; ___lambda.call(
                                      trampCall( callProcedure( 'procedure?',
                                          begin
                                            if @global_lisp_binding.has_key?('_procedure_QUMARK') then
                                              @_procedure_QUMARK
                                            else raise NameError.new( "Error: undefined variable _procedure_QUMARK", "_procedure_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:284"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _f
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:275"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                           )
                              end
                             ) then
                                begin
                                    _f
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:275"] + __e.backtrace ) ; raise __e
                                end
                            else
                                trampCall( callProcedure( 'list',
                                    begin
                                      if @global_lisp_binding.has_key?('_list') then
                                        @_list
                                      else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:286"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                    :"quote"                                    ,Cell.new(
                                      begin
                                          _f
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:275"] + __e.backtrace ) ; raise __e
                                      end
                                             ))))
                            end
                        else
                            if ( 
                              trampCall( callProcedure( 'eqv?',
                                  begin
                                    if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                      @_eqv_QUMARK
                                    else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:268"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _l
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                      if @global_lisp_binding.has_key?('_vector') then
                                        @_vector
                                      else raise NameError.new( "Error: undefined variable _vector", "_vector" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:268"] + __e.backtrace ) ; raise __e
                                    end
                                           ))))
                             ) then
                                trampCall( callProcedure( 'apply',
                                    begin
                                      if @global_lisp_binding.has_key?('_apply') then
                                        @_apply
                                      else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:269"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _l
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                      end                                    ,Cell.new(
                                      trampCall( callProcedure( 'eval',
                                          begin
                                            if @global_lisp_binding.has_key?('_eval') then
                                              @_eval
                                            else raise NameError.new( "Error: undefined variable _eval", "_eval" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:269"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _r
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             ))))
                            else
                                trampCall( callProcedure( 'list',
                                    begin
                                      if @global_lisp_binding.has_key?('_list') then
                                        @_list
                                      else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:286"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                    :"cons"                                    ,Cell.new(
                                      begin
                                          _l
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                      end                                    ,Cell.new(
                                      begin
                                          _r
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                      end
                                             )))))
                            end
                        end
                    }
                  _mappend                   = 
                    Proc.new { |_f,_l,_r| 
                        if ( 
                          begin
                            ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20116| 
                                if ( 
                                  begin
                                      ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20116
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                                 ) then
                                    begin
                                        ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20116
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                else
                                    begin
                                      ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20117| 
                                          if ( 
                                            begin
                                                ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20117
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end
                                           ) then
                                              begin
                                                  ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20117
                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                              end
                                          else
                                            false
                                          end
                                      } ; ___lambda.call(
                                            if ( 
                                              trampCall( callProcedure( 'not',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_not') then
                                                      @_not
                                                    else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:283"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'eq?',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                            @_eq_QUMARK
                                                          else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                        false                                                        ,Cell.new(
                                                          trampCall( callProcedure( 'pair?',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                                  @_pair_QUMARK
                                                                else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:295"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    _r
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                                 ))))
                                                           )))
                                             ) then
                                                if ( 
                                                  trampCall( callProcedure( 'not',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_not') then
                                                          @_not
                                                        else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:283"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        trampCall( callProcedure( 'eq?',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                @_eq_QUMARK
                                                              else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                            false                                                            ,Cell.new(
                                                              trampCall( callProcedure( 'eq?',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                      @_eq_QUMARK
                                                                    else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    trampCall( callProcedure( 'car',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_car') then
                                                                            @_car
                                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              _r
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 )))                                                                  ,Cell.new(
                                                                  :"quote"
                                                                           ))))
                                                                     ))))
                                                               )))
                                                 ) then
                                                    trampCall( callProcedure( 'eq?',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                            @_eq_QUMARK
                                                          else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'car',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_car') then
                                                                  @_car
                                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                trampCall( callProcedure( 'cdr',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_cdr') then
                                                                        @_cdr
                                                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      begin
                                                                          _r
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                             )))
                                                                       )))                                                        ,Cell.new(
                                                        Cell.new()
                                                                 ))))
                                                else
                                                  false
                                                end
                                            else
                                              false
                                            end
                                                 )
                                    end
                                end
                            } ; ___lambda.call(
                                  trampCall( callProcedure( 'null?',
                                      begin
                                        if @global_lisp_binding.has_key?('_null_QUMARK') then
                                          @_null_QUMARK
                                        else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:275"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'cdr',
                                            begin
                                              if @global_lisp_binding.has_key?('_cdr') then
                                                @_cdr
                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  _f
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:275"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               )))
                                       )
                          end
                         ) then
                            begin
                                _l
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                            end
                        else
                            trampCall( callProcedure( 'list',
                                begin
                                  if @global_lisp_binding.has_key?('_list') then
                                    @_list
                                  else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:286"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                :"append"                                ,Cell.new(
                                  begin
                                      _l
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  begin
                                      _r
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                  end
                                         )))))
                        end
                    }
                  _foo                   = 
                    Proc.new { |_level,_form| 
                        if ( 
                          trampCall( callProcedure( 'not',
                              begin
                                if @global_lisp_binding.has_key?('_not') then
                                  @_not
                                else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:283"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'pair?',
                                    begin
                                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                        @_pair_QUMARK
                                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:295"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _form
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                         ) then
                            begin
                                if ( 
                                  begin
                                    ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20121| 
                                        if ( 
                                          begin
                                              ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20121
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                         ) then
                                            begin
                                                ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20121
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end
                                        else
                                            begin
                                              ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20122| 
                                                  if ( 
                                                    begin
                                                        ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20122
                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                    end
                                                   ) then
                                                      begin
                                                          ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20122
                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                      end
                                                  else
                                                      begin
                                                        ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20123| 
                                                            if ( 
                                                              begin
                                                                  ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20123
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end
                                                             ) then
                                                                begin
                                                                    ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20123
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end
                                                            else
                                                              false
                                                            end
                                                        } ; ___lambda.call(
                                                              trampCall( callProcedure( 'string?',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_string_QUMARK') then
                                                                      @_string_QUMARK
                                                                    else raise NameError.new( "Error: undefined variable _string_QUMARK", "_string_QUMARK" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:284"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        _form
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))
                                                                   )
                                                      end
                                                  end
                                              } ; ___lambda.call(
                                                    trampCall( callProcedure( 'number?',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_number_QUMARK') then
                                                            @_number_QUMARK
                                                          else raise NameError.new( "Error: undefined variable _number_QUMARK", "_number_QUMARK" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:284"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              _form
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))
                                                         )
                                            end
                                        end
                                    } ; ___lambda.call(
                                          trampCall( callProcedure( 'procedure?',
                                              begin
                                                if @global_lisp_binding.has_key?('_procedure_QUMARK') then
                                                  @_procedure_QUMARK
                                                else raise NameError.new( "Error: undefined variable _procedure_QUMARK", "_procedure_QUMARK" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:284"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    _form
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                               )
                                  end
                                 ) then
                                    begin
                                        _form
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                    end
                                else
                                    trampCall( callProcedure( 'list',
                                        begin
                                          if @global_lisp_binding.has_key?('_list') then
                                            @_list
                                          else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:286"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                        :"quote"                                        ,Cell.new(
                                          begin
                                              _form
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                          end
                                                 ))))
                                end
                            end
                        else
                            if ( 
                              trampCall( callProcedure( 'eq?',
                                  begin
                                    if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                      @_eq_QUMARK
                                    else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  :"quasiquote"                                  ,Cell.new(
                                    trampCall( callProcedure( 'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            @_car
                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _form
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                           ))))
                             ) then
                                begin
                                    trampCall( callProcedure( 'mcons',
                                        begin
                                            _mcons
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _form
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                        Cell.new(:"quote",Cell.new(:"quasiquote"))                                        ,Cell.new(
                                          trampCall( callProcedure( 'foo',
                                              begin
                                                  _foo
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( '+',
                                                    begin
                                                      if @global_lisp_binding.has_key?('__PLMARK') then
                                                        @__PLMARK
                                                      else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:293"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          _level
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                    1
                                                             ))))                                              ,Cell.new(
                                                trampCall( callProcedure( 'cdr',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cdr') then
                                                        @_cdr
                                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          _form
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                                       ))))
                                                 )))))
                                end
                            else
                                if ( 
                                true
                                 ) then
                                    begin
                                        if ( 
                                          trampCall( callProcedure( 'zero?',
                                              begin
                                                if @global_lisp_binding.has_key?('_zero_QUMARK') then
                                                  @_zero_QUMARK
                                                else raise NameError.new( "Error: undefined variable _zero_QUMARK", "_zero_QUMARK" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:290"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    _level
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                         ) then
                                            if ( 
                                              trampCall( callProcedure( 'eq?',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                      @_eq_QUMARK
                                                    else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'car',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_car') then
                                                            @_car
                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              _form
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))                                                  ,Cell.new(
                                                  :"unquote"
                                                           ))))
                                             ) then
                                                begin
                                                    trampCall( callProcedure( 'car',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_car') then
                                                            @_car
                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'cdr',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cdr') then
                                                                  @_cdr
                                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    _form
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                                 )))
                                                end
                                            else
                                                if ( 
                                                  trampCall( callProcedure( 'eq?',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                          @_eq_QUMARK
                                                        else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        trampCall( callProcedure( 'car',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_car') then
                                                                @_car
                                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  _form
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))                                                      ,Cell.new(
                                                      :"unquote-splicing"
                                                               ))))
                                                 ) then
                                                    begin
                                                        trampCall( callProcedure( 'raise',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_raise') then
                                                                @_raise
                                                              else raise NameError.new( "Error: undefined variable _raise", "_raise" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:293"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  RuntimeError
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:293"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                              trampCall( callProcedure( '+',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('__PLMARK') then
                                                                      @__PLMARK
                                                                    else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:293"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                  "Error: Unquote-splicing wasn't in a list: "                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'write-to-string',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_write_MIMARKto_MIMARKstring') then
                                                                            @_write_MIMARKto_MIMARKstring
                                                                          else raise NameError.new( "Error: undefined variable _write_MIMARKto_MIMARKstring", "_write_MIMARKto_MIMARKstring" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:293"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              _form
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 )))
                                                                           ))))                                                            ,Cell.new(
                                                              trampCall( callProcedure( 'sprintf',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_sprintf') then
                                                                      @_sprintf
                                                                    else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:294"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                  "%s:%s outside list."                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( '*FILE*',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('__ASMARKFILE_ASMARK') then
                                                                            @__ASMARKFILE_ASMARK
                                                                          else raise NameError.new( "Error: undefined variable __ASMARKFILE_ASMARK", "__ASMARKFILE_ASMARK" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:294"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                      Cell.new(
                                                                                 )))                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( '*LINE*',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('__ASMARKLINE_ASMARK') then
                                                                            @__ASMARKLINE_ASMARK
                                                                          else raise NameError.new( "Error: undefined variable __ASMARKLINE_ASMARK", "__ASMARKLINE_ASMARK" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:294"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                      Cell.new(
                                                                                 )))
                                                                           )))))
                                                                     )))))
                                                    end
                                                else
                                                    if ( 
                                                      if ( 
                                                        trampCall( callProcedure( 'not',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_not') then
                                                                @_not
                                                              else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:283"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              trampCall( callProcedure( 'eq?',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                      @_eq_QUMARK
                                                                    else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                  false                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'pair?',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                                            @_pair_QUMARK
                                                                          else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:295"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          trampCall( callProcedure( 'car',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_car') then
                                                                                  @_car
                                                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                                begin
                                                                                    _form
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                                       )))
                                                                                 )))
                                                                           ))))
                                                                     )))
                                                       ) then
                                                          trampCall( callProcedure( 'eq?',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                  @_eq_QUMARK
                                                                else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                trampCall( callProcedure( 'car',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_car') then
                                                                        @_car
                                                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      trampCall( callProcedure( 'car',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_car') then
                                                                              @_car
                                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                _form
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))
                                                                             )))                                                              ,Cell.new(
                                                              :"unquote-splicing"
                                                                       ))))
                                                      else
                                                        false
                                                      end
                                                     ) then
                                                        begin
                                                            trampCall( callProcedure( 'mappend',
                                                                begin
                                                                    _mappend
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:297"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      _form
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,Cell.new(
                                                                  trampCall( callProcedure( 'car',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_car') then
                                                                          @_car
                                                                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        trampCall( callProcedure( 'cdr',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_cdr') then
                                                                                @_cdr
                                                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              trampCall( callProcedure( 'car',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_car') then
                                                                                      @_car
                                                                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                    begin
                                                                                        _form
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                           )))
                                                                                     )))
                                                                               )))                                                                ,Cell.new(
                                                                  trampCall( callProcedure( 'foo',
                                                                      begin
                                                                          _foo
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            _level
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,Cell.new(
                                                                        trampCall( callProcedure( 'cdr',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_cdr') then
                                                                                @_cdr
                                                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  _form
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                                     )))
                                                                               ))))
                                                                         )))))
                                                        end
                                                    else
                                                        if ( 
                                                        true
                                                         ) then
                                                            begin
                                                                trampCall( callProcedure( 'mcons',
                                                                    begin
                                                                        _mcons
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      begin
                                                                          _form
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,Cell.new(
                                                                      trampCall( callProcedure( 'foo',
                                                                          begin
                                                                              _foo
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                _level
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,Cell.new(
                                                                            trampCall( callProcedure( 'car',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_car') then
                                                                                    @_car
                                                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                Cell.new(
                                                                                  begin
                                                                                      _form
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                                         )))
                                                                                   ))))                                                                    ,Cell.new(
                                                                      trampCall( callProcedure( 'foo',
                                                                          begin
                                                                              _foo
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                _level
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,Cell.new(
                                                                            trampCall( callProcedure( 'cdr',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_cdr') then
                                                                                    @_cdr
                                                                                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                Cell.new(
                                                                                  begin
                                                                                      _form
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                                         )))
                                                                                   ))))
                                                                             )))))
                                                            end
                                                        else
                                                          Nil.new
                                                        end
                                                    end
                                                end
                                            end
                                        else
                                            if ( 
                                              trampCall( callProcedure( 'eq?',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                      @_eq_QUMARK
                                                    else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'car',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_car') then
                                                            @_car
                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              _form
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))                                                  ,Cell.new(
                                                  :"unquote"
                                                           ))))
                                             ) then
                                                begin
                                                    trampCall( callProcedure( 'mcons',
                                                        begin
                                                            _mcons
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              _form
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                        Cell.new(:"quote",Cell.new(:"unquote"))                                                        ,Cell.new(
                                                          trampCall( callProcedure( 'foo',
                                                              begin
                                                                  _foo
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                trampCall( callProcedure( '-',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('__MIMARK') then
                                                                        @__MIMARK
                                                                      else raise NameError.new( "Error: undefined variable __MIMARK", "__MIMARK" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:306"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      begin
                                                                          _level
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,Cell.new(
                                                                    1
                                                                             ))))                                                              ,Cell.new(
                                                                trampCall( callProcedure( 'cdr',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_cdr') then
                                                                        @_cdr
                                                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      begin
                                                                          _form
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                             )))
                                                                       ))))
                                                                 )))))
                                                end
                                            else
                                                if ( 
                                                  trampCall( callProcedure( 'eq?',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                          @_eq_QUMARK
                                                        else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        trampCall( callProcedure( 'car',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_car') then
                                                                @_car
                                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  _form
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))                                                      ,Cell.new(
                                                      :"unquote-splicing"
                                                               ))))
                                                 ) then
                                                    begin
                                                        trampCall( callProcedure( 'mcons',
                                                            begin
                                                                _mcons
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  _form
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                            Cell.new(:"quote",Cell.new(:"unquote-splicing"))                                                            ,Cell.new(
                                                              trampCall( callProcedure( 'foo',
                                                                  begin
                                                                      _foo
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    trampCall( callProcedure( '-',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('__MIMARK') then
                                                                            @__MIMARK
                                                                          else raise NameError.new( "Error: undefined variable __MIMARK", "__MIMARK" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:306"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              _level
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,Cell.new(
                                                                        1
                                                                                 ))))                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'cdr',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_cdr') then
                                                                            @_cdr
                                                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              _form
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 )))
                                                                           ))))
                                                                     )))))
                                                    end
                                                else
                                                    if ( 
                                                    true
                                                     ) then
                                                        begin
                                                            trampCall( callProcedure( 'mcons',
                                                                begin
                                                                    _mcons
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      _form
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,Cell.new(
                                                                  trampCall( callProcedure( 'foo',
                                                                      begin
                                                                          _foo
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            _level
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,Cell.new(
                                                                        trampCall( callProcedure( 'car',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_car') then
                                                                                @_car
                                                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  _form
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                                     )))
                                                                               ))))                                                                ,Cell.new(
                                                                  trampCall( callProcedure( 'foo',
                                                                      begin
                                                                          _foo
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            _level
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,Cell.new(
                                                                        trampCall( callProcedure( 'cdr',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_cdr') then
                                                                                @_cdr
                                                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  _form
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                                     )))
                                                                               ))))
                                                                         )))))
                                                        end
                                                    else
                                                      Nil.new
                                                    end
                                                end
                                            end
                                        end
                                    end
                                else
                                  Nil.new
                                end
                            end
                        end
                    }
                  trampCall( callProcedure( 'foo',
                      begin
                          _foo
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                      0                      ,Cell.new(
                        begin
                            _l
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                        end
                               ))))
              } ; ___lambda.call(
              nil,nil,nil
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_unquote'] = true
    @_unquote = 
        LispMacro.new { |_lst| 
            trampCall( callProcedure( 'raise',
                begin
                  if @global_lisp_binding.has_key?('_raise') then
                    @_raise
                  else raise NameError.new( "Error: undefined variable _raise", "_raise" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:313"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  begin
                      RuntimeError
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:313"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                "Error: unquote appeared outside quasiquote"                ,Cell.new(
                  trampCall( callProcedure( 'sprintf',
                      begin
                        if @global_lisp_binding.has_key?('_sprintf') then
                          @_sprintf
                        else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:313"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                      "%s:%s outside quasiquote"                      ,Cell.new(
                        trampCall( callProcedure( '*FILE*',
                            begin
                              if @global_lisp_binding.has_key?('__ASMARKFILE_ASMARK') then
                                @__ASMARKFILE_ASMARK
                              else raise NameError.new( "Error: undefined variable __ASMARKFILE_ASMARK", "__ASMARKFILE_ASMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:313"] + __e.backtrace ) ; raise __e
                            end                          ,
                          Cell.new(
                                     )))                      ,Cell.new(
                        trampCall( callProcedure( '*LINE*',
                            begin
                              if @global_lisp_binding.has_key?('__ASMARKLINE_ASMARK') then
                                @__ASMARKLINE_ASMARK
                              else raise NameError.new( "Error: undefined variable __ASMARKLINE_ASMARK", "__ASMARKLINE_ASMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:313"] + __e.backtrace ) ; raise __e
                            end                          ,
                          Cell.new(
                                     )))
                               )))))
                         )))))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_unquote_MIMARKsplicing'] = true
    @_unquote_MIMARKsplicing = 
        LispMacro.new { |_lst| 
            trampCall( callProcedure( 'raise',
                begin
                  if @global_lisp_binding.has_key?('_raise') then
                    @_raise
                  else raise NameError.new( "Error: undefined variable _raise", "_raise" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:318"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  begin
                      RuntimeError
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:318"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                "Error: unquote-splicing appeared outside quasiquote"                ,Cell.new(
                  trampCall( callProcedure( 'sprintf',
                      begin
                        if @global_lisp_binding.has_key?('_sprintf') then
                          @_sprintf
                        else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:318"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                      "%s:%s outside quasiquote"                      ,Cell.new(
                        trampCall( callProcedure( '*FILE*',
                            begin
                              if @global_lisp_binding.has_key?('__ASMARKFILE_ASMARK') then
                                @__ASMARKFILE_ASMARK
                              else raise NameError.new( "Error: undefined variable __ASMARKFILE_ASMARK", "__ASMARKFILE_ASMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:318"] + __e.backtrace ) ; raise __e
                            end                          ,
                          Cell.new(
                                     )))                      ,Cell.new(
                        trampCall( callProcedure( '*LINE*',
                            begin
                              if @global_lisp_binding.has_key?('__ASMARKLINE_ASMARK') then
                                @__ASMARKLINE_ASMARK
                              else raise NameError.new( "Error: undefined variable __ASMARKLINE_ASMARK", "__ASMARKLINE_ASMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:318"] + __e.backtrace ) ; raise __e
                            end                          ,
                          Cell.new(
                                     )))
                               )))))
                         )))))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_when'] = true
    @_when = 
        LispMacro.new { |*__rest__| _form = __rest__[0] ;  
            trampCall( callProcedure( 'cons',
                begin
                  if @global_lisp_binding.has_key?('_cons') then
                    @_cons
                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"if"                ,Cell.new(
                  trampCall( callProcedure( 'cons',
                      begin
                        if @global_lisp_binding.has_key?('_cons') then
                          @_cons
                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                @_car
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:323"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _form
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:323"] + __e.backtrace ) ; raise __e
                              end
                                     )))                      ,Cell.new(
                        trampCall( callProcedure( 'cons',
                            begin
                              if @global_lisp_binding.has_key?('_cons') then
                                @_cons
                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      @_cons
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  :"begin"                                  ,Cell.new(
                                    trampCall( callProcedure( 'cdr',
                                        begin
                                          if @global_lisp_binding.has_key?('_cdr') then
                                            @_cdr
                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:323"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _form
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:323"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                           ))))                            ,Cell.new(
                            
                                     ))))
                               ))))
                         ))))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_unless'] = true
    @_unless = 
        LispMacro.new { |*__rest__| _form = __rest__[0] ;  
            trampCall( callProcedure( 'cons',
                begin
                  if @global_lisp_binding.has_key?('_cons') then
                    @_cons
                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"if"                ,Cell.new(
                  trampCall( callProcedure( 'cons',
                      begin
                        if @global_lisp_binding.has_key?('_cons') then
                          @_cons
                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'cons',
                            begin
                              if @global_lisp_binding.has_key?('_cons') then
                                @_cons
                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                            :"not"                            ,Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      @_cons
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            @_car
                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:327"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _form
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:327"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))                                  ,Cell.new(
                                  
                                           ))))
                                     ))))                      ,Cell.new(
                        trampCall( callProcedure( 'cons',
                            begin
                              if @global_lisp_binding.has_key?('_cons') then
                                @_cons
                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      @_cons
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  :"begin"                                  ,Cell.new(
                                    trampCall( callProcedure( 'cdr',
                                        begin
                                          if @global_lisp_binding.has_key?('_cdr') then
                                            @_cdr
                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:327"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _form
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:327"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                           ))))                            ,Cell.new(
                            
                                     ))))
                               ))))
                         ))))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_while'] = true
    @_while = 
        LispMacro.new { |*__rest__| _form = __rest__[0] ;  
            begin
              ___lambda = lambda { |_sym| 
                  trampCall( callProcedure( 'cons',
                      begin
                        if @global_lisp_binding.has_key?('_cons') then
                          @_cons
                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                      :"begin"                      ,Cell.new(
                        trampCall( callProcedure( 'cons',
                            begin
                              if @global_lisp_binding.has_key?('_cons') then
                                @_cons
                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      @_cons
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  :"define"                                  ,Cell.new(
                                    trampCall( callProcedure( 'cons',
                                        begin
                                          if @global_lisp_binding.has_key?('_cons') then
                                            @_cons
                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _sym
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:338"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                          trampCall( callProcedure( 'cons',
                                              begin
                                                if @global_lisp_binding.has_key?('_cons') then
                                                  @_cons
                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'cons',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cons') then
                                                        @_cons
                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                    :"lambda"                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'cons',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cons') then
                                                              @_cons
                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                          Cell.new()                                                          ,Cell.new(
                                                            trampCall( callProcedure( 'cons',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                    @_cons
                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  trampCall( callProcedure( 'cons',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                          @_cons
                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                      :"if"                                                                      ,Cell.new(
                                                                        trampCall( callProcedure( 'cons',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                                @_cons
                                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              trampCall( callProcedure( 'car',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_car') then
                                                                                      @_car
                                                                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:335"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                    begin
                                                                                        _form
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:336"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                           )))                                                                            ,Cell.new(
                                                                              trampCall( callProcedure( 'cons',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                                      @_cons
                                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                    trampCall( callProcedure( 'cons',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                                            @_cons
                                                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        Cell.new(
                                                                                        :"begin"                                                                                        ,Cell.new(
                                                                                          trampCall( callProcedure( 'append',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_append') then
                                                                                                  @_append
                                                                                                else raise NameError.new( "Error: undefined variable _append", "_append" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              Cell.new(
                                                                                                trampCall( callProcedure( 'cdr',
                                                                                                    begin
                                                                                                      if @global_lisp_binding.has_key?('_cdr') then
                                                                                                        @_cdr
                                                                                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:336"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                    Cell.new(
                                                                                                      begin
                                                                                                          _form
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:336"] + __e.backtrace ) ; raise __e
                                                                                                      end
                                                                                                             )))                                                                                              ,Cell.new(
                                                                                                trampCall( callProcedure( 'cons',
                                                                                                    begin
                                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                                        @_cons
                                                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                    Cell.new(
                                                                                                      trampCall( callProcedure( 'cons',
                                                                                                          begin
                                                                                                            if @global_lisp_binding.has_key?('_cons') then
                                                                                                              @_cons
                                                                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                          Cell.new(
                                                                                                            begin
                                                                                                                _sym
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:338"] + __e.backtrace ) ; raise __e
                                                                                                            end                                                                                                          ,Cell.new(
                                                                                                          
                                                                                                                   ))))                                                                                                    ,Cell.new(
                                                                                                    
                                                                                                             ))))
                                                                                                       ))))
                                                                                                 ))))                                                                                  ,Cell.new(
                                                                                  
                                                                                           ))))
                                                                                     ))))
                                                                               ))))                                                                ,Cell.new(
                                                                
                                                                         ))))
                                                                   ))))
                                                             ))))                                              ,Cell.new(
                                              
                                                       ))))
                                                 ))))
                                           ))))                            ,Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      @_cons
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'cons',
                                        begin
                                          if @global_lisp_binding.has_key?('_cons') then
                                            @_cons
                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _sym
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:338"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                        
                                                 ))))                                  ,Cell.new(
                                  
                                           ))))
                                     ))))
                               ))))
              } ; ___lambda.call(
                    trampCall( callProcedure( 'gensym',
                        begin
                          if @global_lisp_binding.has_key?('_gensym') then
                            @_gensym
                          else raise NameError.new( "Error: undefined variable _gensym", "_gensym" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:331"] + __e.backtrace ) ; raise __e
                        end                      ,
                      Cell.new(
                                 )))
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_until'] = true
    @_until = 
        LispMacro.new { |*__rest__| _form = __rest__[0] ;  
            trampCall( callProcedure( 'cons',
                begin
                  if @global_lisp_binding.has_key?('_cons') then
                    @_cons
                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"while"                ,Cell.new(
                  trampCall( callProcedure( 'cons',
                      begin
                        if @global_lisp_binding.has_key?('_cons') then
                          @_cons
                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'cons',
                            begin
                              if @global_lisp_binding.has_key?('_cons') then
                                @_cons
                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                            :"not"                            ,Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      @_cons
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            @_car
                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:342"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _form
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:343"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))                                  ,Cell.new(
                                  
                                           ))))
                                     ))))                      ,Cell.new(
                        trampCall( callProcedure( 'cdr',
                            begin
                              if @global_lisp_binding.has_key?('_cdr') then
                                @_cdr
                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:343"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _form
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:343"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                               ))))
                         ))))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_let'] = true
    @_let = 
        LispMacro.new { |*__rest__| _lst = __rest__[0] ;  
            if ( 
              trampCall( callProcedure( 'symbol?',
                  begin
                    if @global_lisp_binding.has_key?('_symbol_QUMARK') then
                      @_symbol_QUMARK
                    else raise NameError.new( "Error: undefined variable _symbol_QUMARK", "_symbol_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:348"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'car',
                        begin
                          if @global_lisp_binding.has_key?('_car') then
                            @_car
                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:348"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              _lst
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:363"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                           )))
             ) then
                trampCall( callProcedure( 'cons',
                    begin
                      if @global_lisp_binding.has_key?('_cons') then
                        @_cons
                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                    :"letrec"                    ,Cell.new(
                      trampCall( callProcedure( 'cons',
                          begin
                            if @global_lisp_binding.has_key?('_cons') then
                              @_cons
                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            trampCall( callProcedure( 'cons',
                                begin
                                  if @global_lisp_binding.has_key?('_cons') then
                                    @_cons
                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  trampCall( callProcedure( 'cons',
                                      begin
                                        if @global_lisp_binding.has_key?('_cons') then
                                          @_cons
                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'first',
                                            begin
                                              if @global_lisp_binding.has_key?('_first') then
                                                @_first
                                              else raise NameError.new( "Error: undefined variable _first", "_first" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:356"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  _lst
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:363"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))                                      ,Cell.new(
                                        trampCall( callProcedure( 'cons',
                                            begin
                                              if @global_lisp_binding.has_key?('_cons') then
                                                @_cons
                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'cons',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cons') then
                                                      @_cons
                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                  :"lambda"                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            @_cons
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'map',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_map') then
                                                                  @_map
                                                                else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:357"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                Proc.new { |_x| 
                                                                    trampCall( callProcedure( 'first',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_first') then
                                                                            @_first
                                                                          else raise NameError.new( "Error: undefined variable _first", "_first" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:356"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              _x
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:359"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 )))
                                                                }                                                              ,Cell.new(
                                                                trampCall( callProcedure( 'second',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_second') then
                                                                        @_second
                                                                      else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:360"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      begin
                                                                          _lst
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:363"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                             )))
                                                                       ))))                                                        ,Cell.new(
                                                          trampCall( callProcedure( 'cddr',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cddr') then
                                                                  @_cddr
                                                                else raise NameError.new( "Error: undefined variable _cddr", "_cddr" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:355"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    _lst
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:363"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                                 ))))
                                                           ))))                                            ,Cell.new(
                                            
                                                     ))))
                                               ))))                                ,Cell.new(
                                
                                         ))))                          ,Cell.new(
                            trampCall( callProcedure( 'cons',
                                begin
                                  if @global_lisp_binding.has_key?('_cons') then
                                    @_cons
                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  trampCall( callProcedure( 'cons',
                                      begin
                                        if @global_lisp_binding.has_key?('_cons') then
                                          @_cons
                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'first',
                                            begin
                                              if @global_lisp_binding.has_key?('_first') then
                                                @_first
                                              else raise NameError.new( "Error: undefined variable _first", "_first" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:356"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  _lst
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:363"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))                                      ,Cell.new(
                                        trampCall( callProcedure( 'map',
                                            begin
                                              if @global_lisp_binding.has_key?('_map') then
                                                @_map
                                              else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:357"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              Proc.new { |_x| 
                                                  trampCall( callProcedure( 'second',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_second') then
                                                          @_second
                                                        else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:360"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            _x
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:359"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                              }                                            ,Cell.new(
                                              trampCall( callProcedure( 'second',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_second') then
                                                      @_second
                                                    else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:360"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        _lst
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:363"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                                     ))))
                                               ))))                                ,Cell.new(
                                
                                         ))))
                                   ))))
                             ))))
            else
                trampCall( callProcedure( 'cons',
                    begin
                      if @global_lisp_binding.has_key?('_cons') then
                        @_cons
                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                    :"let"                    ,Cell.new(
                      begin
                          _lst
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:363"] + __e.backtrace ) ; raise __e
                      end
                             ))))
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_errorf'] = true
    @_errorf = 
        LispMacro.new { |_format,*__rest__| _args = __rest__[0] ;  
            trampCall( callProcedure( 'cons',
                begin
                  if @global_lisp_binding.has_key?('_cons') then
                    @_cons
                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"error"                ,Cell.new(
                  trampCall( callProcedure( 'cons',
                      begin
                        if @global_lisp_binding.has_key?('_cons') then
                          @_cons
                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'cons',
                            begin
                              if @global_lisp_binding.has_key?('_cons') then
                                @_cons
                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                            :"sprintf"                            ,Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      @_cons
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _format
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:371"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        _args
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:371"] + __e.backtrace ) ; raise __e
                                    end
                                           ))))
                                     ))))                      ,Cell.new(
                      
                               ))))
                         ))))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_do'] = true
    @_do = 
        LispMacro.new { |*__rest__| _do_MIMARKmacro = __rest__[0] ;  
            trampCall( callProcedure( 'apply',
                begin
                  if @global_lisp_binding.has_key?('_apply') then
                    @_apply
                  else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:381"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  Proc.new { |_vars,_endtest,*__rest__| _body = __rest__[0] ;  
                      begin
                        ___lambda = lambda { |_do_MIMARKloop| 
                            trampCall( callProcedure( 'cons',
                                begin
                                  if @global_lisp_binding.has_key?('_cons') then
                                    @_cons
                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                :"letrec"                                ,Cell.new(
                                  trampCall( callProcedure( 'cons',
                                      begin
                                        if @global_lisp_binding.has_key?('_cons') then
                                          @_cons
                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'cons',
                                            begin
                                              if @global_lisp_binding.has_key?('_cons') then
                                                @_cons
                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'cons',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cons') then
                                                      @_cons
                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        _do_MIMARKloop
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:398"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            @_cons
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'cons',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                  @_cons
                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                              :"lambda"                                                              ,Cell.new(
                                                                trampCall( callProcedure( 'cons',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                        @_cons
                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      trampCall( callProcedure( 'map',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_map') then
                                                                              @_map
                                                                            else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:399"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            Proc.new { |_x| 
                                                                                if ( 
                                                                                  trampCall( callProcedure( 'pair?',
                                                                                      begin
                                                                                        if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                                                          @_pair_QUMARK
                                                                                        else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:400"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                      Cell.new(
                                                                                        begin
                                                                                            _x
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                               )))
                                                                                 ) then
                                                                                    trampCall( callProcedure( 'car',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_car') then
                                                                                            @_car
                                                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        Cell.new(
                                                                                          begin
                                                                                              _x
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                                 )))
                                                                                else
                                                                                    begin
                                                                                        _x
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                end
                                                                            }                                                                          ,Cell.new(
                                                                            begin
                                                                                _vars
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:403"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   ))))                                                                    ,Cell.new(
                                                                      trampCall( callProcedure( 'cons',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_cons') then
                                                                              @_cons
                                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            trampCall( callProcedure( 'cons',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                                    @_cons
                                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                Cell.new(
                                                                                :"if"                                                                                ,Cell.new(
                                                                                  trampCall( callProcedure( 'cons',
                                                                                      begin
                                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                                          @_cons
                                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                      Cell.new(
                                                                                        trampCall( callProcedure( 'car',
                                                                                            begin
                                                                                              if @global_lisp_binding.has_key?('_car') then
                                                                                                @_car
                                                                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,
                                                                                            Cell.new(
                                                                                              begin
                                                                                                  _endtest
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:388"] + __e.backtrace ) ; raise __e
                                                                                              end
                                                                                                     )))                                                                                      ,Cell.new(
                                                                                        trampCall( callProcedure( 'cons',
                                                                                            begin
                                                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                                                @_cons
                                                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,
                                                                                            Cell.new(
                                                                                              trampCall( callProcedure( 'cons',
                                                                                                  begin
                                                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                                                      @_cons
                                                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,
                                                                                                  Cell.new(
                                                                                                  :"begin"                                                                                                  ,Cell.new(
                                                                                                    trampCall( callProcedure( 'cdr',
                                                                                                        begin
                                                                                                          if @global_lisp_binding.has_key?('_cdr') then
                                                                                                            @_cdr
                                                                                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                        Cell.new(
                                                                                                          begin
                                                                                                              _endtest
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:388"] + __e.backtrace ) ; raise __e
                                                                                                          end
                                                                                                                 )))
                                                                                                           ))))                                                                                            ,Cell.new(
                                                                                              trampCall( callProcedure( 'cons',
                                                                                                  begin
                                                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                                                      @_cons
                                                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,
                                                                                                  Cell.new(
                                                                                                    trampCall( callProcedure( 'cons',
                                                                                                        begin
                                                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                                                            @_cons
                                                                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                        Cell.new(
                                                                                                        :"begin"                                                                                                        ,Cell.new(
                                                                                                          trampCall( callProcedure( 'append',
                                                                                                              begin
                                                                                                                if @global_lisp_binding.has_key?('_append') then
                                                                                                                  @_append
                                                                                                                else raise NameError.new( "Error: undefined variable _append", "_append" ) end
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,
                                                                                                              Cell.new(
                                                                                                                begin
                                                                                                                    _body
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:390"] + __e.backtrace ) ; raise __e
                                                                                                                end                                                                                                              ,Cell.new(
                                                                                                                trampCall( callProcedure( 'cons',
                                                                                                                    begin
                                                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                                                        @_cons
                                                                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                                                    end                                                                                                                  ,
                                                                                                                    Cell.new(
                                                                                                                      trampCall( callProcedure( 'cons',
                                                                                                                          begin
                                                                                                                            if @global_lisp_binding.has_key?('_cons') then
                                                                                                                              @_cons
                                                                                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                                                          end                                                                                                                        ,
                                                                                                                          Cell.new(
                                                                                                                            begin
                                                                                                                                _do_MIMARKloop
                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:398"] + __e.backtrace ) ; raise __e
                                                                                                                            end                                                                                                                          ,Cell.new(
                                                                                                                            trampCall( callProcedure( 'map',
                                                                                                                                begin
                                                                                                                                  if @global_lisp_binding.has_key?('_map') then
                                                                                                                                    @_map
                                                                                                                                  else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:399"] + __e.backtrace ) ; raise __e
                                                                                                                                end                                                                                                                              ,
                                                                                                                                Cell.new(
                                                                                                                                  Proc.new { |_x| 
                                                                                                                                      if ( 
                                                                                                                                        trampCall( callProcedure( 'not',
                                                                                                                                            begin
                                                                                                                                              if @global_lisp_binding.has_key?('_not') then
                                                                                                                                                @_not
                                                                                                                                              else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:394"] + __e.backtrace ) ; raise __e
                                                                                                                                            end                                                                                                                                          ,
                                                                                                                                            Cell.new(
                                                                                                                                              trampCall( callProcedure( 'pair?',
                                                                                                                                                  begin
                                                                                                                                                    if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                                                                                                                      @_pair_QUMARK
                                                                                                                                                    else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:400"] + __e.backtrace ) ; raise __e
                                                                                                                                                  end                                                                                                                                                ,
                                                                                                                                                  Cell.new(
                                                                                                                                                    begin
                                                                                                                                                        _x
                                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                                                                                    end
                                                                                                                                                           )))
                                                                                                                                                     )))
                                                                                                                                       ) then
                                                                                                                                          begin
                                                                                                                                              begin
                                                                                                                                                  _x
                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                                                                              end
                                                                                                                                          end
                                                                                                                                      else
                                                                                                                                          if ( 
                                                                                                                                            trampCall( callProcedure( '<',
                                                                                                                                                begin
                                                                                                                                                  if @global_lisp_binding.has_key?('__LTMARK') then
                                                                                                                                                    @__LTMARK
                                                                                                                                                  else raise NameError.new( "Error: undefined variable __LTMARK", "__LTMARK" ) end
                                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:395"] + __e.backtrace ) ; raise __e
                                                                                                                                                end                                                                                                                                              ,
                                                                                                                                                Cell.new(
                                                                                                                                                  trampCall( callProcedure( 'length',
                                                                                                                                                      begin
                                                                                                                                                        if @global_lisp_binding.has_key?('_length') then
                                                                                                                                                          @_length
                                                                                                                                                        else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:395"] + __e.backtrace ) ; raise __e
                                                                                                                                                      end                                                                                                                                                    ,
                                                                                                                                                      Cell.new(
                                                                                                                                                        begin
                                                                                                                                                            _x
                                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                                                                                        end
                                                                                                                                                               )))                                                                                                                                                ,Cell.new(
                                                                                                                                                3
                                                                                                                                                         ))))
                                                                                                                                           ) then
                                                                                                                                              begin
                                                                                                                                                  trampCall( callProcedure( 'car',
                                                                                                                                                      begin
                                                                                                                                                        if @global_lisp_binding.has_key?('_car') then
                                                                                                                                                          @_car
                                                                                                                                                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                                                                                      end                                                                                                                                                    ,
                                                                                                                                                      Cell.new(
                                                                                                                                                        begin
                                                                                                                                                            _x
                                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                                                                                        end
                                                                                                                                                               )))
                                                                                                                                              end
                                                                                                                                          else
                                                                                                                                              if ( 
                                                                                                                                              true
                                                                                                                                               ) then
                                                                                                                                                  begin
                                                                                                                                                      trampCall( callProcedure( 'car',
                                                                                                                                                          begin
                                                                                                                                                            if @global_lisp_binding.has_key?('_car') then
                                                                                                                                                              @_car
                                                                                                                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                                                                                          end                                                                                                                                                        ,
                                                                                                                                                          Cell.new(
                                                                                                                                                            trampCall( callProcedure( 'cdr',
                                                                                                                                                                begin
                                                                                                                                                                  if @global_lisp_binding.has_key?('_cdr') then
                                                                                                                                                                    @_cdr
                                                                                                                                                                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                                                                                                end                                                                                                                                                              ,
                                                                                                                                                                Cell.new(
                                                                                                                                                                  trampCall( callProcedure( 'cdr',
                                                                                                                                                                      begin
                                                                                                                                                                        if @global_lisp_binding.has_key?('_cdr') then
                                                                                                                                                                          @_cdr
                                                                                                                                                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                                                                                                      end                                                                                                                                                                    ,
                                                                                                                                                                      Cell.new(
                                                                                                                                                                        begin
                                                                                                                                                                            _x
                                                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                                                                                                        end
                                                                                                                                                                               )))
                                                                                                                                                                         )))
                                                                                                                                                                   )))
                                                                                                                                                  end
                                                                                                                                              else
                                                                                                                                                Nil.new
                                                                                                                                              end
                                                                                                                                          end
                                                                                                                                      end
                                                                                                                                  }                                                                                                                                ,Cell.new(
                                                                                                                                  begin
                                                                                                                                      _vars
                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:403"] + __e.backtrace ) ; raise __e
                                                                                                                                  end
                                                                                                                                         ))))
                                                                                                                                   ))))                                                                                                                    ,Cell.new(
                                                                                                                    
                                                                                                                             ))))
                                                                                                                       ))))
                                                                                                                 ))))                                                                                                  ,Cell.new(
                                                                                                  
                                                                                                           ))))
                                                                                                     ))))
                                                                                               ))))
                                                                                         ))))                                                                          ,Cell.new(
                                                                          
                                                                                   ))))
                                                                             ))))
                                                                       ))))                                                        ,Cell.new(
                                                        
                                                                 ))))
                                                           ))))                                            ,Cell.new(
                                            
                                                     ))))                                      ,Cell.new(
                                        trampCall( callProcedure( 'cons',
                                            begin
                                              if @global_lisp_binding.has_key?('_cons') then
                                                @_cons
                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'cons',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cons') then
                                                      @_cons
                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        _do_MIMARKloop
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:398"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'map',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_map') then
                                                            @_map
                                                          else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:399"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          Proc.new { |_x| 
                                                              if ( 
                                                                if ( 
                                                                  trampCall( callProcedure( 'not',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_not') then
                                                                          @_not
                                                                        else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:394"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        trampCall( callProcedure( 'eq?',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                                @_eq_QUMARK
                                                                              else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                            false                                                                            ,Cell.new(
                                                                              trampCall( callProcedure( 'pair?',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                                                      @_pair_QUMARK
                                                                                    else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:400"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                    begin
                                                                                        _x
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                           )))
                                                                                     ))))
                                                                               )))
                                                                 ) then
                                                                    trampCall( callProcedure( 'cdr',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_cdr') then
                                                                            @_cdr
                                                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              _x
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 )))
                                                                else
                                                                  false
                                                                end
                                                               ) then
                                                                  trampCall( callProcedure( 'car',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_car') then
                                                                          @_car
                                                                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        trampCall( callProcedure( 'cdr',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_cdr') then
                                                                                @_cdr
                                                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  _x
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                                     )))
                                                                               )))
                                                              else
                                                                Cell.new()
                                                              end
                                                          }                                                        ,Cell.new(
                                                          begin
                                                              _vars
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:403"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))
                                                           ))))                                            ,Cell.new(
                                            
                                                     ))))
                                               ))))
                                         ))))
                        } ; ___lambda.call(
                              trampCall( callProcedure( 'gensym',
                                  begin
                                    if @global_lisp_binding.has_key?('_gensym') then
                                      @_gensym
                                    else raise NameError.new( "Error: undefined variable _gensym", "_gensym" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:382"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                Cell.new(
                                           )))
                                   )
                      end
                  }                ,Cell.new(
                  begin
                      _do_MIMARKmacro
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:404"] + __e.backtrace ) ; raise __e
                  end
                         ))))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_generic_MIMARKmember'] = true
    @_generic_MIMARKmember = 
        Proc.new { |_cmp,_obj,_lst| 
            if ( 
              trampCall( callProcedure( 'null?',
                  begin
                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                      @_null_QUMARK
                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:410"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        _lst
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:412"] + __e.backtrace ) ; raise __e
                    end
                           )))
             ) then
                begin
                  false
                end
            else
                if ( 
                  trampCall( callProcedure( 'cmp',
                      begin
                          _cmp
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:412"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _obj
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:412"] + __e.backtrace ) ; raise __e
                        end                      ,Cell.new(
                        trampCall( callProcedure( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                @_car
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:411"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _lst
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:412"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                               ))))
                 ) then
                    begin
                        begin
                            _lst
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:412"] + __e.backtrace ) ; raise __e
                        end
                    end
                else
                    if ( 
                    true
                     ) then
                        begin
                            DelayedCallPacket.new( 'generic-member',
                                begin
                                  if @global_lisp_binding.has_key?('_generic_MIMARKmember') then
                                    @_generic_MIMARKmember
                                  else raise NameError.new( "Error: undefined variable _generic_MIMARKmember", "_generic_MIMARKmember" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:412"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      _cmp
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:412"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  begin
                                      _obj
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:412"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  trampCall( callProcedure( 'cdr',
                                      begin
                                        if @global_lisp_binding.has_key?('_cdr') then
                                          @_cdr
                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:412"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            _lst
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:412"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                         ))))
                        end
                    else
                        Cell.new()
                    end
                end
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_memq'] = true
    @_memq = 
        Proc.new { |_obj,_lst| 
            DelayedCallPacket.new( 'generic-member',
                begin
                  if @global_lisp_binding.has_key?('_generic_MIMARKmember') then
                    @_generic_MIMARKmember
                  else raise NameError.new( "Error: undefined variable _generic_MIMARKmember", "_generic_MIMARKmember" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:415"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  begin
                    if @global_lisp_binding.has_key?('_eq_QUMARK') then
                      @_eq_QUMARK
                    else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:415"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                  begin
                      _obj
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:415"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                  begin
                      _lst
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:415"] + __e.backtrace ) ; raise __e
                  end
                         ))))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_memv'] = true
    @_memv = 
        Proc.new { |_obj,_lst| 
            DelayedCallPacket.new( 'generic-member',
                begin
                  if @global_lisp_binding.has_key?('_generic_MIMARKmember') then
                    @_generic_MIMARKmember
                  else raise NameError.new( "Error: undefined variable _generic_MIMARKmember", "_generic_MIMARKmember" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:417"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  begin
                    if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                      @_eqv_QUMARK
                    else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:417"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                  begin
                      _obj
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:417"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                  begin
                      _lst
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:417"] + __e.backtrace ) ; raise __e
                  end
                         ))))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_member'] = true
    @_member = 
        Proc.new { |_obj,_lst| 
            DelayedCallPacket.new( 'generic-member',
                begin
                  if @global_lisp_binding.has_key?('_generic_MIMARKmember') then
                    @_generic_MIMARKmember
                  else raise NameError.new( "Error: undefined variable _generic_MIMARKmember", "_generic_MIMARKmember" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:419"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  begin
                    if @global_lisp_binding.has_key?('_equal_QUMARK') then
                      @_equal_QUMARK
                    else raise NameError.new( "Error: undefined variable _equal_QUMARK", "_equal_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:419"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                  begin
                      _obj
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:419"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                  begin
                      _lst
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:419"] + __e.backtrace ) ; raise __e
                  end
                         ))))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_generic_MIMARKassoc'] = true
    @_generic_MIMARKassoc = 
        Proc.new { |_cmp,_obj,_alst| 
            if ( 
              trampCall( callProcedure( 'null?',
                  begin
                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                      @_null_QUMARK
                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:424"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        _alst
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:426"] + __e.backtrace ) ; raise __e
                    end
                           )))
             ) then
                begin
                  false
                end
            else
                if ( 
                  trampCall( callProcedure( 'cmp',
                      begin
                          _cmp
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:426"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _obj
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:426"] + __e.backtrace ) ; raise __e
                        end                      ,Cell.new(
                        trampCall( callProcedure( 'caar',
                            begin
                              if @global_lisp_binding.has_key?('_caar') then
                                @_caar
                              else raise NameError.new( "Error: undefined variable _caar", "_caar" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:425"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _alst
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:426"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                               ))))
                 ) then
                    begin
                        DelayedCallPacket.new( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                @_car
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:425"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _alst
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:426"] + __e.backtrace ) ; raise __e
                              end
                                     ))
                    end
                else
                    if ( 
                    true
                     ) then
                        begin
                            DelayedCallPacket.new( 'generic-assoc',
                                begin
                                  if @global_lisp_binding.has_key?('_generic_MIMARKassoc') then
                                    @_generic_MIMARKassoc
                                  else raise NameError.new( "Error: undefined variable _generic_MIMARKassoc", "_generic_MIMARKassoc" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:426"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      _cmp
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:426"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  begin
                                      _obj
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:426"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  trampCall( callProcedure( 'cdr',
                                      begin
                                        if @global_lisp_binding.has_key?('_cdr') then
                                          @_cdr
                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:426"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            _alst
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:426"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                         ))))
                        end
                    else
                        Cell.new()
                    end
                end
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_assq'] = true
    @_assq = 
        Proc.new { |_obj,_alst| 
            DelayedCallPacket.new( 'generic-assoc',
                begin
                  if @global_lisp_binding.has_key?('_generic_MIMARKassoc') then
                    @_generic_MIMARKassoc
                  else raise NameError.new( "Error: undefined variable _generic_MIMARKassoc", "_generic_MIMARKassoc" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:429"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  begin
                    if @global_lisp_binding.has_key?('_eq_QUMARK') then
                      @_eq_QUMARK
                    else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:429"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                  begin
                      _obj
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:429"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                  begin
                      _alst
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:429"] + __e.backtrace ) ; raise __e
                  end
                         ))))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_assv'] = true
    @_assv = 
        Proc.new { |_obj,_alst| 
            DelayedCallPacket.new( 'generic-assoc',
                begin
                  if @global_lisp_binding.has_key?('_generic_MIMARKassoc') then
                    @_generic_MIMARKassoc
                  else raise NameError.new( "Error: undefined variable _generic_MIMARKassoc", "_generic_MIMARKassoc" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:431"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  begin
                    if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                      @_eqv_QUMARK
                    else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:431"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                  begin
                      _obj
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:431"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                  begin
                      _alst
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:431"] + __e.backtrace ) ; raise __e
                  end
                         ))))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_assoc'] = true
    @_assoc = 
        Proc.new { |_obj,_alst| 
            DelayedCallPacket.new( 'generic-assoc',
                begin
                  if @global_lisp_binding.has_key?('_generic_MIMARKassoc') then
                    @_generic_MIMARKassoc
                  else raise NameError.new( "Error: undefined variable _generic_MIMARKassoc", "_generic_MIMARKassoc" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:433"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  begin
                    if @global_lisp_binding.has_key?('_equal_QUMARK') then
                      @_equal_QUMARK
                    else raise NameError.new( "Error: undefined variable _equal_QUMARK", "_equal_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:433"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                  begin
                      _obj
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:433"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                  begin
                      _alst
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:433"] + __e.backtrace ) ; raise __e
                  end
                         ))))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_acons'] = true
    @_acons = 
        Proc.new { |_x,_y,_z| 
            DelayedCallPacket.new( 'cons',
                begin
                  if @global_lisp_binding.has_key?('_cons') then
                    @_cons
                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:435"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'cons',
                      begin
                        if @global_lisp_binding.has_key?('_cons') then
                          @_cons
                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:435"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _x
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:435"] + __e.backtrace ) ; raise __e
                        end                      ,Cell.new(
                        begin
                            _y
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:435"] + __e.backtrace ) ; raise __e
                        end
                               ))))                ,Cell.new(
                  begin
                      _z
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:435"] + __e.backtrace ) ; raise __e
                  end
                         )))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_assq_MIMARKref'] = true
    @_assq_MIMARKref = 
        Proc.new { |_obj,_alst| 
            if ( 
              begin
                @global_lisp_binding['___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20141'] = true
                @___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20141 = 
                    trampCall( callProcedure( 'assq',
                        begin
                          if @global_lisp_binding.has_key?('_assq') then
                            @_assq
                          else raise NameError.new( "Error: undefined variable _assq", "_assq" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:438"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              _obj
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:438"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                              _alst
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:438"] + __e.backtrace ) ; raise __e
                          end
                                 ))))
              end
             ) then
                DelayedCallPacket.new( 'cdr',
                    begin
                      if @global_lisp_binding.has_key?('_cdr') then
                        @_cdr
                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:438"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                        if @global_lisp_binding.has_key?('___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20141') then
                          @___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20141
                        else raise NameError.new( "Error: undefined variable ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20141", "___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20141" ) end
                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                      end
                             ))
            else
                if ( 
                true
                 ) then
                    begin
                      nil
                    end
                else
                    Cell.new()
                end
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_assv_MIMARKref'] = true
    @_assv_MIMARKref = 
        Proc.new { |_obj,_alst| 
            if ( 
              begin
                @global_lisp_binding['___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20143'] = true
                @___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20143 = 
                    trampCall( callProcedure( 'assv',
                        begin
                          if @global_lisp_binding.has_key?('_assv') then
                            @_assv
                          else raise NameError.new( "Error: undefined variable _assv", "_assv" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:441"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              _obj
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:441"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                              _alst
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:441"] + __e.backtrace ) ; raise __e
                          end
                                 ))))
              end
             ) then
                DelayedCallPacket.new( 'cdr',
                    begin
                      if @global_lisp_binding.has_key?('_cdr') then
                        @_cdr
                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:441"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                        if @global_lisp_binding.has_key?('___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20143') then
                          @___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20143
                        else raise NameError.new( "Error: undefined variable ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20143", "___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20143" ) end
                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                      end
                             ))
            else
                if ( 
                true
                 ) then
                    begin
                      nil
                    end
                else
                    Cell.new()
                end
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_assoc_MIMARKref'] = true
    @_assoc_MIMARKref = 
        Proc.new { |_obj,_alst| 
            if ( 
              begin
                @global_lisp_binding['___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20145'] = true
                @___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20145 = 
                    trampCall( callProcedure( 'assoc',
                        begin
                          if @global_lisp_binding.has_key?('_assoc') then
                            @_assoc
                          else raise NameError.new( "Error: undefined variable _assoc", "_assoc" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:444"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              _obj
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:444"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                              _alst
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:444"] + __e.backtrace ) ; raise __e
                          end
                                 ))))
              end
             ) then
                DelayedCallPacket.new( 'cdr',
                    begin
                      if @global_lisp_binding.has_key?('_cdr') then
                        @_cdr
                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:444"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                        if @global_lisp_binding.has_key?('___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20145') then
                          @___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20145
                        else raise NameError.new( "Error: undefined variable ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20145", "___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20145" ) end
                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                      end
                             ))
            else
                if ( 
                true
                 ) then
                    begin
                      nil
                    end
                else
                    Cell.new()
                end
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_foldr'] = true
    @_foldr = 
        Proc.new { |_f,_x,_lst| 
            if ( 
              trampCall( callProcedure( 'null?',
                  begin
                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                      @_null_QUMARK
                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:454"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        _lst
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:456"] + __e.backtrace ) ; raise __e
                    end
                           )))
             ) then
                begin
                    _x
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:456"] + __e.backtrace ) ; raise __e
                end
            else
                DelayedCallPacket.new( 'foldr',
                    begin
                      if @global_lisp_binding.has_key?('_foldr') then
                        @_foldr
                      else raise NameError.new( "Error: undefined variable _foldr", "_foldr" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:456"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          _f
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:456"] + __e.backtrace ) ; raise __e
                      end                    ,Cell.new(
                      trampCall( callProcedure( 'f',
                          begin
                              _f
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:456"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                _x
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:456"] + __e.backtrace ) ; raise __e
                            end                          ,Cell.new(
                            trampCall( callProcedure( 'car',
                                begin
                                  if @global_lisp_binding.has_key?('_car') then
                                    @_car
                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:456"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      _lst
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:456"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                                   ))))                    ,Cell.new(
                      trampCall( callProcedure( 'cdr',
                          begin
                            if @global_lisp_binding.has_key?('_cdr') then
                              @_cdr
                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:456"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                _lst
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:456"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                             ))))
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_unzip1_MIMARKwith_MIMARKcdr'] = true
    @_unzip1_MIMARKwith_MIMARKcdr = 
        Proc.new { |*__rest__| _lists = __rest__[0] ;  
            DelayedCallPacket.new( 'unzip1-with-cdr-iterative',
                begin
                  if @global_lisp_binding.has_key?('_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative') then
                    @_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative
                  else raise NameError.new( "Error: undefined variable _unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative", "_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:459"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  begin
                      _lists
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:459"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                Cell.new()                ,Cell.new(
                Cell.new()
                         ))))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative'] = true
    @_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative = 
        Proc.new { |_lists,_cars,_cdrs| 
            if ( 
              trampCall( callProcedure( 'null?',
                  begin
                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                      @_null_QUMARK
                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:462"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        _lists
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:467"] + __e.backtrace ) ; raise __e
                    end
                           )))
             ) then
                DelayedCallPacket.new( 'cons',
                    begin
                      if @global_lisp_binding.has_key?('_cons') then
                        @_cons
                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:463"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          _cars
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:468"] + __e.backtrace ) ; raise __e
                      end                    ,Cell.new(
                      begin
                          _cdrs
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:469"] + __e.backtrace ) ; raise __e
                      end
                             )))
            else
                begin
                  ___lambda = lambda { |_car1,_cdr1| 
                      DelayedCallPacket.new( 'unzip1-with-cdr-iterative',
                          begin
                            if @global_lisp_binding.has_key?('_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative') then
                              @_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative
                            else raise NameError.new( "Error: undefined variable _unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative", "_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:466"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            trampCall( callProcedure( 'cdr',
                                begin
                                  if @global_lisp_binding.has_key?('_cdr') then
                                    @_cdr
                                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:467"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      _lists
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:467"] + __e.backtrace ) ; raise __e
                                  end
                                         )))                          ,Cell.new(
                            trampCall( callProcedure( 'append',
                                begin
                                  if @global_lisp_binding.has_key?('_append') then
                                    @_append
                                  else raise NameError.new( "Error: undefined variable _append", "_append" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:469"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      _cars
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:468"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  trampCall( callProcedure( 'list',
                                      begin
                                        if @global_lisp_binding.has_key?('_list') then
                                          @_list
                                        else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:469"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            _car1
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:468"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                         ))))                          ,Cell.new(
                            trampCall( callProcedure( 'append',
                                begin
                                  if @global_lisp_binding.has_key?('_append') then
                                    @_append
                                  else raise NameError.new( "Error: undefined variable _append", "_append" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:469"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      _cdrs
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:469"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  trampCall( callProcedure( 'list',
                                      begin
                                        if @global_lisp_binding.has_key?('_list') then
                                          @_list
                                        else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:469"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            _cdr1
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:469"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                         ))))
                                   ))))
                  } ; ___lambda.call(
                        trampCall( callProcedure( 'caar',
                            begin
                              if @global_lisp_binding.has_key?('_caar') then
                                @_caar
                              else raise NameError.new( "Error: undefined variable _caar", "_caar" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:464"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _lists
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:467"] + __e.backtrace ) ; raise __e
                              end
                                     )))                      ,
                        trampCall( callProcedure( 'cdar',
                            begin
                              if @global_lisp_binding.has_key?('_cdar') then
                                @_cdar
                              else raise NameError.new( "Error: undefined variable _cdar", "_cdar" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:465"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _lists
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:467"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                             )
                end
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_map'] = true
    @_map = 
        Proc.new { |_proc,*__rest__| _lists = __rest__[0] ;  
            if ( 
              trampCall( callProcedure( 'null?',
                  begin
                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                      @_null_QUMARK
                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:481"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        _lists
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:477"] + __e.backtrace ) ; raise __e
                    end
                           )))
             ) then
                DelayedCallPacket.new( 'apply',
                    begin
                      if @global_lisp_binding.has_key?('_apply') then
                        @_apply
                      else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:483"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          _proc
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:483"] + __e.backtrace ) ; raise __e
                      end
                             ))
            else
                if ( 
                  trampCall( callProcedure( 'null?',
                      begin
                        if @global_lisp_binding.has_key?('_null_QUMARK') then
                          @_null_QUMARK
                        else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:481"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                @_car
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:478"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _lists
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:477"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                               )))
                 ) then
                  Cell.new()
                else
                    begin
                      ___lambda = lambda { |_unz| 
                          begin
                            ___lambda = lambda { |_cars,_cdrs| 
                                DelayedCallPacket.new( 'cons',
                                    begin
                                      if @global_lisp_binding.has_key?('_cons') then
                                        @_cons
                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:483"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'apply',
                                          begin
                                            if @global_lisp_binding.has_key?('_apply') then
                                              @_apply
                                            else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:483"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _proc
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:483"] + __e.backtrace ) ; raise __e
                                            end                                          ,Cell.new(
                                            begin
                                                _cars
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:480"] + __e.backtrace ) ; raise __e
                                            end
                                                   ))))                                    ,Cell.new(
                                      if ( 
                                        trampCall( callProcedure( 'null?',
                                            begin
                                              if @global_lisp_binding.has_key?('_null_QUMARK') then
                                                @_null_QUMARK
                                              else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:481"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  _cdrs
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:483"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                       ) then
                                        Cell.new()
                                      else
                                          trampCall( callProcedure( 'apply',
                                              begin
                                                if @global_lisp_binding.has_key?('_apply') then
                                                  @_apply
                                                else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:483"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                  if @global_lisp_binding.has_key?('_map') then
                                                    @_map
                                                  else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:483"] + __e.backtrace ) ; raise __e
                                                end                                              ,Cell.new(
                                                trampCall( callProcedure( 'cons',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cons') then
                                                        @_cons
                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:483"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          _proc
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:483"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                      begin
                                                          _cdrs
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:483"] + __e.backtrace ) ; raise __e
                                                      end
                                                             ))))
                                                       ))))
                                      end
                                             )))
                            } ; ___lambda.call(
                                  trampCall( callProcedure( 'car',
                                      begin
                                        if @global_lisp_binding.has_key?('_car') then
                                          @_car
                                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:478"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            _unz
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:479"] + __e.backtrace ) ; raise __e
                                        end
                                               )))                                ,
                                  trampCall( callProcedure( 'cdr',
                                      begin
                                        if @global_lisp_binding.has_key?('_cdr') then
                                          @_cdr
                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:479"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            _unz
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:479"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                       )
                          end
                      } ; ___lambda.call(
                            trampCall( callProcedure( 'apply',
                                begin
                                  if @global_lisp_binding.has_key?('_apply') then
                                    @_apply
                                  else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:483"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                    if @global_lisp_binding.has_key?('_unzip1_MIMARKwith_MIMARKcdr') then
                                      @_unzip1_MIMARKwith_MIMARKcdr
                                    else raise NameError.new( "Error: undefined variable _unzip1_MIMARKwith_MIMARKcdr", "_unzip1_MIMARKwith_MIMARKcdr" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:477"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  begin
                                      _lists
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:477"] + __e.backtrace ) ; raise __e
                                  end
                                         ))))
                                 )
                    end
                end
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_for_MIMARKeach'] = true
    @_for_MIMARKeach = 
        Proc.new { |_proc,*__rest__| _lists = __rest__[0] ;  
            if ( 
              trampCall( callProcedure( 'null?',
                  begin
                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                      @_null_QUMARK
                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:494"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        _lists
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:490"] + __e.backtrace ) ; raise __e
                    end
                           )))
             ) then
                DelayedCallPacket.new( 'apply',
                    begin
                      if @global_lisp_binding.has_key?('_apply') then
                        @_apply
                      else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:496"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          _proc
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:496"] + __e.backtrace ) ; raise __e
                      end
                             ))
            else
                if ( 
                  trampCall( callProcedure( 'null?',
                      begin
                        if @global_lisp_binding.has_key?('_null_QUMARK') then
                          @_null_QUMARK
                        else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:494"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                @_car
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:491"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _lists
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:490"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                               )))
                 ) then
                  true
                else
                    begin
                      ___lambda = lambda { |_unz| 
                          begin
                            ___lambda = lambda { |_cars,_cdrs| 
                                trampCall( callProcedure( 'apply',
                                    begin
                                      if @global_lisp_binding.has_key?('_apply') then
                                        @_apply
                                      else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:496"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _proc
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:496"] + __e.backtrace ) ; raise __e
                                      end                                    ,Cell.new(
                                      begin
                                          _cars
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:493"] + __e.backtrace ) ; raise __e
                                      end
                                             ))))
                                if ( 
                                  trampCall( callProcedure( 'null?',
                                      begin
                                        if @global_lisp_binding.has_key?('_null_QUMARK') then
                                          @_null_QUMARK
                                        else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:494"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            _cdrs
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:496"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                 ) then
                                  Cell.new()
                                else
                                    DelayedCallPacket.new( 'apply',
                                        begin
                                          if @global_lisp_binding.has_key?('_apply') then
                                            @_apply
                                          else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:496"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                            if @global_lisp_binding.has_key?('_map') then
                                              @_map
                                            else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:496"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                          trampCall( callProcedure( 'cons',
                                              begin
                                                if @global_lisp_binding.has_key?('_cons') then
                                                  @_cons
                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:496"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    _proc
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:496"] + __e.backtrace ) ; raise __e
                                                end                                              ,Cell.new(
                                                begin
                                                    _cdrs
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:496"] + __e.backtrace ) ; raise __e
                                                end
                                                       ))))
                                                 )))
                                end
                            } ; ___lambda.call(
                                  trampCall( callProcedure( 'car',
                                      begin
                                        if @global_lisp_binding.has_key?('_car') then
                                          @_car
                                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:491"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            _unz
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:492"] + __e.backtrace ) ; raise __e
                                        end
                                               )))                                ,
                                  trampCall( callProcedure( 'cdr',
                                      begin
                                        if @global_lisp_binding.has_key?('_cdr') then
                                          @_cdr
                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:492"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            _unz
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:492"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                       )
                          end
                      } ; ___lambda.call(
                            trampCall( callProcedure( 'apply',
                                begin
                                  if @global_lisp_binding.has_key?('_apply') then
                                    @_apply
                                  else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:496"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                    if @global_lisp_binding.has_key?('_unzip1_MIMARKwith_MIMARKcdr') then
                                      @_unzip1_MIMARKwith_MIMARKcdr
                                    else raise NameError.new( "Error: undefined variable _unzip1_MIMARKwith_MIMARKcdr", "_unzip1_MIMARKwith_MIMARKcdr" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:490"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  begin
                                      _lists
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:490"] + __e.backtrace ) ; raise __e
                                  end
                                         ))))
                                 )
                    end
                end
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_filter'] = true
    @_filter = 
        Proc.new { |_pred,_lst| 
            if ( 
              trampCall( callProcedure( 'null?',
                  begin
                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                      @_null_QUMARK
                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:499"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        _lst
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:505"] + __e.backtrace ) ; raise __e
                    end
                           )))
             ) then
              Cell.new()
            else
                if ( 
                  trampCall( callProcedure( 'pred',
                      begin
                          _pred
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:505"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                @_car
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:503"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _lst
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:505"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                               )))
                 ) then
                    DelayedCallPacket.new( 'cons',
                        begin
                          if @global_lisp_binding.has_key?('_cons') then
                            @_cons
                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:502"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  @_car
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:503"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    _lst
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:505"] + __e.backtrace ) ; raise __e
                                end
                                       )))                        ,Cell.new(
                          trampCall( callProcedure( 'filter',
                              begin
                                if @global_lisp_binding.has_key?('_filter') then
                                  @_filter
                                else raise NameError.new( "Error: undefined variable _filter", "_filter" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:505"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    _pred
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:505"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                                trampCall( callProcedure( 'cdr',
                                    begin
                                      if @global_lisp_binding.has_key?('_cdr') then
                                        @_cdr
                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:505"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _lst
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:505"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       ))))
                                 )))
                else
                    DelayedCallPacket.new( 'filter',
                        begin
                          if @global_lisp_binding.has_key?('_filter') then
                            @_filter
                          else raise NameError.new( "Error: undefined variable _filter", "_filter" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:505"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              _pred
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:505"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          trampCall( callProcedure( 'cdr',
                              begin
                                if @global_lisp_binding.has_key?('_cdr') then
                                  @_cdr
                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:505"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    _lst
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:505"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                                 )))
                end
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_filter_MIMARKmap'] = true
    @_filter_MIMARKmap = 
        Proc.new { |_pred,_lst| 
            if ( 
              trampCall( callProcedure( 'null?',
                  begin
                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                      @_null_QUMARK
                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:509"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        _lst
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:516"] + __e.backtrace ) ; raise __e
                    end
                           )))
             ) then
              Cell.new()
            else
                begin
                  ___lambda = lambda { |_result| 
                      if ( 
                        begin
                            _result
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:514"] + __e.backtrace ) ; raise __e
                        end
                       ) then
                          DelayedCallPacket.new( 'cons',
                              begin
                                if @global_lisp_binding.has_key?('_cons') then
                                  @_cons
                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:513"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    _result
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:514"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                                trampCall( callProcedure( 'filter-map',
                                    begin
                                      if @global_lisp_binding.has_key?('_filter_MIMARKmap') then
                                        @_filter_MIMARKmap
                                      else raise NameError.new( "Error: undefined variable _filter_MIMARKmap", "_filter_MIMARKmap" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:516"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _pred
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:516"] + __e.backtrace ) ; raise __e
                                      end                                    ,Cell.new(
                                      trampCall( callProcedure( 'cdr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cdr') then
                                              @_cdr
                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:516"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _lst
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:516"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             ))))
                                       )))
                      else
                          DelayedCallPacket.new( 'filter-map',
                              begin
                                if @global_lisp_binding.has_key?('_filter_MIMARKmap') then
                                  @_filter_MIMARKmap
                                else raise NameError.new( "Error: undefined variable _filter_MIMARKmap", "_filter_MIMARKmap" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:516"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    _pred
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:516"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                                trampCall( callProcedure( 'cdr',
                                    begin
                                      if @global_lisp_binding.has_key?('_cdr') then
                                        @_cdr
                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:516"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _lst
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:516"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                      end
                  } ; ___lambda.call(
                        trampCall( callProcedure( 'pred',
                            begin
                                _pred
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:516"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'car',
                                  begin
                                    if @global_lisp_binding.has_key?('_car') then
                                      @_car
                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:511"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _lst
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:516"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                             )
                end
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_find'] = true
    @_find = 
        Proc.new { |_pred,_lst| 
            begin
              ___lambda = lambda { |_result| 
                  if ( 
                    trampCall( callProcedure( 'null?',
                        begin
                          if @global_lisp_binding.has_key?('_null_QUMARK') then
                            @_null_QUMARK
                          else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:521"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              _result
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:523"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                   ) then
                    false
                  else
                      DelayedCallPacket.new( 'car',
                          begin
                            if @global_lisp_binding.has_key?('_car') then
                              @_car
                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:523"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                _result
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:523"] + __e.backtrace ) ; raise __e
                            end
                                   ))
                  end
              } ; ___lambda.call(
                    trampCall( callProcedure( 'filter',
                        begin
                          if @global_lisp_binding.has_key?('_filter') then
                            @_filter
                          else raise NameError.new( "Error: undefined variable _filter", "_filter" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:520"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              _pred
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:520"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                              _lst
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:520"] + __e.backtrace ) ; raise __e
                          end
                                 ))))
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_lambda'] = true
    @_lambda = 
        LispMacro.new { |*__rest__| _src = __rest__[0] ;  
            if ( 
              trampCall( callProcedure( 'not',
                  begin
                    if @global_lisp_binding.has_key?('_not') then
                      @_not
                    else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:545"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'list?',
                        begin
                          if @global_lisp_binding.has_key?('_list_QUMARK') then
                            @_list_QUMARK
                          else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:531"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'cadr',
                              begin
                                if @global_lisp_binding.has_key?('_cadr') then
                                  @_cadr
                                else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:556"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    _src
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:561"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                                 )))
                           )))
             ) then
                trampCall( callProcedure( 'cons',
                    begin
                      if @global_lisp_binding.has_key?('_cons') then
                        @_cons
                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:513"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                    :"lambda"                    ,Cell.new(
                      begin
                          _src
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:561"] + __e.backtrace ) ; raise __e
                      end
                             ))))
            else
                begin
                  ___lambda = lambda { |_body| 
                      if ( 
                        trampCall( callProcedure( 'not',
                            begin
                              if @global_lisp_binding.has_key?('_not') then
                                @_not
                              else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:545"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'list?',
                                  begin
                                    if @global_lisp_binding.has_key?('_list_QUMARK') then
                                      @_list_QUMARK
                                    else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:531"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            @_car
                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:551"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _body
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:548"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                           )))
                                     )))
                       ) then
                          trampCall( callProcedure( 'cons',
                              begin
                                if @global_lisp_binding.has_key?('_cons') then
                                  @_cons
                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:513"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              :"lambda"                              ,Cell.new(
                                begin
                                    _src
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:561"] + __e.backtrace ) ; raise __e
                                end
                                       ))))
                      else
                          begin
                            ___lambda = lambda { |_defs,_rest| 
                                if ( 
                                  trampCall( callProcedure( '<',
                                      begin
                                        if @global_lisp_binding.has_key?('__LTMARK') then
                                          @__LTMARK
                                        else raise NameError.new( "Error: undefined variable __LTMARK", "__LTMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:549"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                      0                                      ,Cell.new(
                                        trampCall( callProcedure( 'length',
                                            begin
                                              if @global_lisp_binding.has_key?('_length') then
                                                @_length
                                              else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:549"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  _defs
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:558"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               ))))
                                 ) then
                                    trampCall( callProcedure( 'cons',
                                        begin
                                          if @global_lisp_binding.has_key?('_cons') then
                                            @_cons
                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:513"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                        :"lambda"                                        ,Cell.new(
                                          trampCall( callProcedure( 'cons',
                                              begin
                                                if @global_lisp_binding.has_key?('_cons') then
                                                  @_cons
                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:513"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'car',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_car') then
                                                        @_car
                                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:551"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          _src
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:561"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))                                              ,Cell.new(
                                                trampCall( callProcedure( 'cons',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cons') then
                                                        @_cons
                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:513"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'cons',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cons') then
                                                              @_cons
                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:513"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                          :"letrec"                                                          ,Cell.new(
                                                            trampCall( callProcedure( 'cons',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                    @_cons
                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:513"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  trampCall( callProcedure( 'map',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_map') then
                                                                          @_map
                                                                        else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:553"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        Proc.new { |_x| 
                                                                            trampCall( callProcedure( 'list',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_list') then
                                                                                    @_list
                                                                                  else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:555"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                Cell.new(
                                                                                  trampCall( callProcedure( 'cadr',
                                                                                      begin
                                                                                        if @global_lisp_binding.has_key?('_cadr') then
                                                                                          @_cadr
                                                                                        else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:556"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                      Cell.new(
                                                                                        begin
                                                                                            _x
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:557"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                               )))                                                                                ,Cell.new(
                                                                                  trampCall( callProcedure( 'caddr',
                                                                                      begin
                                                                                        if @global_lisp_binding.has_key?('_caddr') then
                                                                                          @_caddr
                                                                                        else raise NameError.new( "Error: undefined variable _caddr", "_caddr" ) end
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:557"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                      Cell.new(
                                                                                        begin
                                                                                            _x
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:557"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                               )))
                                                                                         ))))
                                                                        }                                                                      ,Cell.new(
                                                                        begin
                                                                            _defs
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:558"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               ))))                                                                ,Cell.new(
                                                                  begin
                                                                      _rest
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:559"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         ))))
                                                                   ))))                                                    ,Cell.new(
                                                    
                                                             ))))
                                                       ))))
                                                 ))))
                                else
                                    trampCall( callProcedure( 'cons',
                                        begin
                                          if @global_lisp_binding.has_key?('_cons') then
                                            @_cons
                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:513"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                        :"lambda"                                        ,Cell.new(
                                          begin
                                              _src
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:561"] + __e.backtrace ) ; raise __e
                                          end
                                                 ))))
                                end
                            } ; ___lambda.call(
                                  trampCall( callProcedure( 'filter',
                                      begin
                                        if @global_lisp_binding.has_key?('_filter') then
                                          @_filter
                                        else raise NameError.new( "Error: undefined variable _filter", "_filter" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:542"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        Proc.new { |_x| 
                                            if ( 
                                              trampCall( callProcedure( 'pair?',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                      @_pair_QUMARK
                                                    else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:544"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        _x
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:557"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                             ) then
                                                if ( 
                                                  trampCall( callProcedure( 'not',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_not') then
                                                          @_not
                                                        else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:545"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        trampCall( callProcedure( 'eq?',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                @_eq_QUMARK
                                                              else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:545"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                            false                                                            ,Cell.new(
                                                              trampCall( callProcedure( 'eq?',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                      @_eq_QUMARK
                                                                    else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:545"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                  :"define"                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'car',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_car') then
                                                                            @_car
                                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:551"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              _x
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:557"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 )))
                                                                           ))))
                                                                     ))))
                                                               )))
                                                 ) then
                                                    trampCall( callProcedure( 'symbol?',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_symbol_QUMARK') then
                                                            @_symbol_QUMARK
                                                          else raise NameError.new( "Error: undefined variable _symbol_QUMARK", "_symbol_QUMARK" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:546"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'cadr',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cadr') then
                                                                  @_cadr
                                                                else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:556"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    _x
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:557"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                                 )))
                                                else
                                                  false
                                                end
                                            else
                                              false
                                            end
                                        }                                      ,Cell.new(
                                        begin
                                            _body
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:548"] + __e.backtrace ) ; raise __e
                                        end
                                               ))))                                ,
                                  trampCall( callProcedure( 'filter',
                                      begin
                                        if @global_lisp_binding.has_key?('_filter') then
                                          @_filter
                                        else raise NameError.new( "Error: undefined variable _filter", "_filter" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:542"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        Proc.new { |_x| 
                                            if ( 
                                              trampCall( callProcedure( 'pair?',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                      @_pair_QUMARK
                                                    else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:544"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        _x
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:557"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                             ) then
                                                trampCall( callProcedure( 'not',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_not') then
                                                        @_not
                                                      else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:545"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      if ( 
                                                        trampCall( callProcedure( 'not',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_not') then
                                                                @_not
                                                              else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:545"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              trampCall( callProcedure( 'eq?',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                      @_eq_QUMARK
                                                                    else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:545"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                  false                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'eq?',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                            @_eq_QUMARK
                                                                          else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:545"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                        :"define"                                                                        ,Cell.new(
                                                                          trampCall( callProcedure( 'car',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_car') then
                                                                                  @_car
                                                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:551"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                                begin
                                                                                    _x
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:557"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                                       )))
                                                                                 ))))
                                                                           ))))
                                                                     )))
                                                       ) then
                                                          trampCall( callProcedure( 'symbol?',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_symbol_QUMARK') then
                                                                  @_symbol_QUMARK
                                                                else raise NameError.new( "Error: undefined variable _symbol_QUMARK", "_symbol_QUMARK" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:546"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                trampCall( callProcedure( 'cadr',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_cadr') then
                                                                        @_cadr
                                                                      else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:556"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      begin
                                                                          _x
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:557"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                             )))
                                                                       )))
                                                      else
                                                        false
                                                      end
                                                             )))
                                            else
                                              false
                                            end
                                        }                                      ,Cell.new(
                                        begin
                                            _body
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:548"] + __e.backtrace ) ; raise __e
                                        end
                                               ))))
                                       )
                          end
                      end
                  } ; ___lambda.call(
                        trampCall( callProcedure( 'cdr',
                            begin
                              if @global_lisp_binding.has_key?('_cdr') then
                                @_cdr
                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:530"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _src
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:561"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                             )
                end
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_case'] = true
    @_case = 
        LispMacro.new { |_cond_MIMARKexp,*__rest__| _body = __rest__[0] ;  
            begin
              ___lambda = lambda { |_case_MIMARKblock,_case_MIMARKiter| 
                  _case_MIMARKblock                   = 
                    Proc.new { |_val,*__rest__| _elem = __rest__[0] ;  
                        begin
                          ___lambda = lambda { |_block| 
                              begin
                                ___lambda = lambda { |_cond_MIMARKvals,_body| 
                                    begin
                                      ___lambda = lambda { |_v| 
                                          trampCall( callProcedure( 'cons',
                                              begin
                                                if @global_lisp_binding.has_key?('_cons') then
                                                  @_cons
                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'cons',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cons') then
                                                        @_cons
                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          _v
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:582"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                      begin
                                                          _body
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:599"] + __e.backtrace ) ; raise __e
                                                      end
                                                             ))))                                              ,Cell.new(
                                              
                                                       ))))
                                      } ; ___lambda.call(
                                            if ( 
                                              trampCall( callProcedure( 'eq?',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                      @_eq_QUMARK
                                                    else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:590"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                  :"else"                                                  ,Cell.new(
                                                    begin
                                                        _cond_MIMARKvals
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:581"] + __e.backtrace ) ; raise __e
                                                    end
                                                           ))))
                                             ) then
                                                begin
                                                    _cond_MIMARKvals
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:581"] + __e.backtrace ) ; raise __e
                                                end
                                            else
                                                trampCall( callProcedure( 'cons',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cons') then
                                                        @_cons
                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                    :"or"                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'map',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_map') then
                                                              @_map
                                                            else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:578"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            Proc.new { |_x| 
                                                                trampCall( callProcedure( 'cons',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                        @_cons
                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                    :"eqv?"                                                                    ,Cell.new(
                                                                      trampCall( callProcedure( 'cons',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_cons') then
                                                                              @_cons
                                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                _x
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:580"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,Cell.new(
                                                                            trampCall( callProcedure( 'cons',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                                    @_cons
                                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                Cell.new(
                                                                                  begin
                                                                                      _val
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:594"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,Cell.new(
                                                                                
                                                                                         ))))
                                                                                   ))))
                                                                             ))))
                                                            }                                                          ,Cell.new(
                                                            begin
                                                                _cond_MIMARKvals
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:581"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   ))))
                                                             ))))
                                            end
                                                 )
                                    end
                                } ; ___lambda.call(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              @_car
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:593"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _block
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:573"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))                                    ,
                                      trampCall( callProcedure( 'cdr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cdr') then
                                              @_cdr
                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:594"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _block
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:573"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                           )
                              end
                          } ; ___lambda.call(
                                trampCall( callProcedure( 'car',
                                    begin
                                      if @global_lisp_binding.has_key?('_car') then
                                        @_car
                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:593"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _elem
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:571"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                     )
                        end
                    }
                  _case_MIMARKiter                   = 
                    Proc.new { |_val,_lst| 
                        if ( 
                          trampCall( callProcedure( 'eq?',
                              begin
                                if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                  @_eq_QUMARK
                                else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:590"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              0                              ,Cell.new(
                                trampCall( callProcedure( 'length',
                                    begin
                                      if @global_lisp_binding.has_key?('_length') then
                                        @_length
                                      else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:590"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _lst
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:594"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       ))))
                         ) then
                            begin
                              Cell.new()
                            end
                        else
                            if ( 
                              trampCall( callProcedure( 'eq?',
                                  begin
                                    if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                      @_eq_QUMARK
                                    else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:590"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  1                                  ,Cell.new(
                                    trampCall( callProcedure( 'length',
                                        begin
                                          if @global_lisp_binding.has_key?('_length') then
                                            @_length
                                          else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:590"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _lst
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:594"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                           ))))
                             ) then
                                begin
                                    trampCall( callProcedure( 'case-block',
                                        begin
                                            _case_MIMARKblock
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:593"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _val
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:594"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                          trampCall( callProcedure( 'car',
                                              begin
                                                if @global_lisp_binding.has_key?('_car') then
                                                  @_car
                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:593"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    _lst
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:594"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 ))))
                                end
                            else
                                if ( 
                                true
                                 ) then
                                    begin
                                        trampCall( callProcedure( 'append',
                                            begin
                                              if @global_lisp_binding.has_key?('_append') then
                                                @_append
                                              else raise NameError.new( "Error: undefined variable _append", "_append" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:593"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'case-block',
                                                  begin
                                                      _case_MIMARKblock
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:593"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        _val
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:594"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'car',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_car') then
                                                            @_car
                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:593"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              _lst
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:594"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))
                                                           ))))                                            ,Cell.new(
                                              trampCall( callProcedure( 'case-iter',
                                                  begin
                                                      _case_MIMARKiter
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:599"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        _val
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:594"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'cdr',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cdr') then
                                                            @_cdr
                                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:594"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              _lst
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:594"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))
                                                           ))))
                                                     ))))
                                    end
                                else
                                  Nil.new
                                end
                            end
                        end
                    }
                  begin
                    ___lambda = lambda { |_sym| 
                        trampCall( callProcedure( 'cons',
                            begin
                              if @global_lisp_binding.has_key?('_cons') then
                                @_cons
                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                            :"let1"                            ,Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      @_cons
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _sym
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:599"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    trampCall( callProcedure( 'cons',
                                        begin
                                          if @global_lisp_binding.has_key?('_cons') then
                                            @_cons
                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _cond_MIMARKexp
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:597"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                          trampCall( callProcedure( 'cons',
                                              begin
                                                if @global_lisp_binding.has_key?('_cons') then
                                                  @_cons
                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'cons',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cons') then
                                                        @_cons
                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                    :"cond"                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'case-iter',
                                                          begin
                                                              _case_MIMARKiter
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:599"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                _sym
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:599"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,Cell.new(
                                                            begin
                                                                _body
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:599"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   ))))
                                                             ))))                                              ,Cell.new(
                                              
                                                       ))))
                                                 ))))
                                           ))))
                                     ))))
                    } ; ___lambda.call(
                          trampCall( callProcedure( 'gensym',
                              begin
                                if @global_lisp_binding.has_key?('_gensym') then
                                  @_gensym
                                else raise NameError.new( "Error: undefined variable _gensym", "_gensym" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:596"] + __e.backtrace ) ; raise __e
                              end                            ,
                            Cell.new(
                                       )))
                               )
                  end
              } ; ___lambda.call(
              nil,nil
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_let_ASMARK'] = true
    @_let_ASMARK = 
        LispMacro.new { |_exps,*__rest__| _body = __rest__[0] ;  
            begin
              ___lambda = lambda { |_let_ASMARK_MIMARKexpand| 
                  _let_ASMARK_MIMARKexpand                   = 
                    Proc.new { |_rest,_body| 
                        begin
                          ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20149| 
                              if ( 
                                begin
                                  ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20153| 
                                      if ( 
                                        begin
                                            ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20153
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end
                                       ) then
                                          begin
                                              ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20153
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                      else
                                        false
                                      end
                                  } ; ___lambda.call(
                                        trampCall( callProcedure( 'eqv?',
                                            begin
                                              if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                @_eqv_QUMARK
                                              else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:580"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                            0                                            ,Cell.new(
                                              begin
                                                  ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20149
                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                              end
                                                     ))))
                                             )
                                end
                               ) then
                                  begin
                                    Cell.new()
                                  end
                              else
                                  if ( 
                                    begin
                                      ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20154| 
                                          if ( 
                                            begin
                                                ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20154
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end
                                           ) then
                                              begin
                                                  ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20154
                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                              end
                                          else
                                            false
                                          end
                                      } ; ___lambda.call(
                                            trampCall( callProcedure( 'eqv?',
                                                begin
                                                  if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                    @_eqv_QUMARK
                                                  else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:580"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                1                                                ,Cell.new(
                                                  begin
                                                      ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20149
                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                  end
                                                         ))))
                                                 )
                                    end
                                   ) then
                                      begin
                                          trampCall( callProcedure( 'cons',
                                              begin
                                                if @global_lisp_binding.has_key?('_cons') then
                                                  @_cons
                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                              :"let"                                              ,Cell.new(
                                                trampCall( callProcedure( 'cons',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cons') then
                                                        @_cons
                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'cons',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cons') then
                                                              @_cons
                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            trampCall( callProcedure( 'car',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_car') then
                                                                    @_car
                                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:613"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      _rest
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:614"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         )))                                                          ,Cell.new(
                                                          
                                                                   ))))                                                    ,Cell.new(
                                                      begin
                                                          _body
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:616"] + __e.backtrace ) ; raise __e
                                                      end
                                                             ))))
                                                       ))))
                                      end
                                  else
                                      if ( 
                                      true
                                       ) then
                                          begin
                                              trampCall( callProcedure( 'cons',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cons') then
                                                      @_cons
                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                  :"let"                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            @_cons
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'cons',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                  @_cons
                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                trampCall( callProcedure( 'car',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_car') then
                                                                        @_car
                                                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:613"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      begin
                                                                          _rest
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:614"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                             )))                                                              ,Cell.new(
                                                              
                                                                       ))))                                                        ,Cell.new(
                                                          trampCall( callProcedure( 'cons',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                  @_cons
                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                trampCall( callProcedure( 'let*-expand',
                                                                    begin
                                                                        _let_ASMARK_MIMARKexpand
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:616"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      trampCall( callProcedure( 'cdr',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_cdr') then
                                                                              @_cdr
                                                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:614"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                _rest
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:614"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))                                                                    ,Cell.new(
                                                                      begin
                                                                          _body
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:616"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                             ))))                                                              ,Cell.new(
                                                              
                                                                       ))))
                                                                 ))))
                                                           ))))
                                          end
                                      else
                                        Nil.new
                                      end
                                  end
                              end
                          } ; ___lambda.call(
                                trampCall( callProcedure( 'length',
                                    begin
                                      if @global_lisp_binding.has_key?('_length') then
                                        @_length
                                      else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:606"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _rest
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:614"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                     )
                        end
                    }
                  trampCall( callProcedure( 'let*-expand',
                      begin
                          _let_ASMARK_MIMARKexpand
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:616"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _exps
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:616"] + __e.backtrace ) ; raise __e
                        end                      ,Cell.new(
                        begin
                            _body
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:616"] + __e.backtrace ) ; raise __e
                        end
                               ))))
              } ; ___lambda.call(
              nil
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_begin0'] = true
    @_begin0 = 
        LispMacro.new { |*__rest__| _body = __rest__[0] ;  
            if ( 
              trampCall( callProcedure( 'null?',
                  begin
                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                      @_null_QUMARK
                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:621"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        _body
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:626"] + __e.backtrace ) ; raise __e
                    end
                           )))
             ) then
              Cell.new(:"begin",Cell.new(false))
            else
                begin
                  ___lambda = lambda { |_result| 
                      trampCall( callProcedure( 'cons',
                          begin
                            if @global_lisp_binding.has_key?('_cons') then
                              @_cons
                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                          :"receive"                          ,Cell.new(
                            trampCall( callProcedure( 'cons',
                                begin
                                  if @global_lisp_binding.has_key?('_cons') then
                                    @_cons
                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      _result
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:627"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  trampCall( callProcedure( 'cons',
                                      begin
                                        if @global_lisp_binding.has_key?('_cons') then
                                          @_cons
                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'car',
                                            begin
                                              if @global_lisp_binding.has_key?('_car') then
                                                @_car
                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:625"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  _body
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:626"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))                                      ,Cell.new(
                                        trampCall( callProcedure( 'append',
                                            begin
                                              if @global_lisp_binding.has_key?('_append') then
                                                @_append
                                              else raise NameError.new( "Error: undefined variable _append", "_append" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:593"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'cdr',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cdr') then
                                                      @_cdr
                                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:626"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        _body
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:626"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))                                            ,Cell.new(
                                              trampCall( callProcedure( 'cons',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cons') then
                                                      @_cons
                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            @_cons
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                        :"apply"                                                        ,Cell.new(
                                                          trampCall( callProcedure( 'cons',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                  @_cons
                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                              :"values"                                                              ,Cell.new(
                                                                trampCall( callProcedure( 'cons',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                        @_cons
                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      begin
                                                                          _result
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:627"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,Cell.new(
                                                                    
                                                                             ))))
                                                                       ))))
                                                                 ))))                                                  ,Cell.new(
                                                  
                                                           ))))
                                                     ))))
                                               ))))
                                         ))))
                                   ))))
                  } ; ___lambda.call(
                        trampCall( callProcedure( 'gensym',
                            begin
                              if @global_lisp_binding.has_key?('_gensym') then
                                @_gensym
                              else raise NameError.new( "Error: undefined variable _gensym", "_gensym" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:624"] + __e.backtrace ) ; raise __e
                            end                          ,
                          Cell.new(
                                     )))
                             )
                end
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_values'] = true
    @_values = 
        Proc.new { |*__rest__| _args = __rest__[0] ;  
            begin
              ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20155| 
                  if ( 
                    begin
                      ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20158| 
                          if ( 
                            begin
                                ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20158
                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                            end
                           ) then
                              begin
                                  ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20158
                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                              end
                          else
                            false
                          end
                      } ; ___lambda.call(
                            trampCall( callProcedure( 'eqv?',
                                begin
                                  if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                    @_eqv_QUMARK
                                  else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:580"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                1                                ,Cell.new(
                                  begin
                                      ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20155
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                                         ))))
                                 )
                    end
                   ) then
                      begin
                          DelayedCallPacket.new( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  @_car
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:636"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    _args
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:638"] + __e.backtrace ) ; raise __e
                                end
                                       ))
                      end
                  else
                      if ( 
                      true
                       ) then
                          begin
                              DelayedCallPacket.new( 'make-values',
                                  begin
                                    if @global_lisp_binding.has_key?('_make_MIMARKvalues') then
                                      @_make_MIMARKvalues
                                    else raise NameError.new( "Error: undefined variable _make_MIMARKvalues", "_make_MIMARKvalues" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:638"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _args
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:638"] + __e.backtrace ) ; raise __e
                                    end
                                           ))
                          end
                      else
                          Cell.new()
                      end
                  end
              } ; ___lambda.call(
                    trampCall( callProcedure( 'length',
                        begin
                          if @global_lisp_binding.has_key?('_length') then
                            @_length
                          else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:634"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              _args
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:638"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_call_MIMARKwith_MIMARKvalues'] = true
    @_call_MIMARKwith_MIMARKvalues = 
        Proc.new { |_producer,_consumer| 
            begin
              ___lambda = lambda { |_v| 
                  if ( 
                    trampCall( callProcedure( 'values?',
                        begin
                          if @global_lisp_binding.has_key?('_values_QUMARK') then
                            @_values_QUMARK
                          else raise NameError.new( "Error: undefined variable _values_QUMARK", "_values_QUMARK" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:643"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              _v
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:645"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                   ) then
                      DelayedCallPacket.new( 'apply',
                          begin
                            if @global_lisp_binding.has_key?('_apply') then
                              @_apply
                            else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:644"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                _consumer
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:645"] + __e.backtrace ) ; raise __e
                            end                          ,Cell.new(
                            trampCall( callProcedure( 'values-values',
                                begin
                                  if @global_lisp_binding.has_key?('_values_MIMARKvalues') then
                                    @_values_MIMARKvalues
                                  else raise NameError.new( "Error: undefined variable _values_MIMARKvalues", "_values_MIMARKvalues" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:644"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      _v
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:645"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                                   )))
                  else
                      DelayedCallPacket.new( 'consumer',
                          begin
                              _consumer
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:645"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                _v
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:645"] + __e.backtrace ) ; raise __e
                            end
                                   ))
                  end
              } ; ___lambda.call(
                    trampCall( callProcedure( 'producer',
                        begin
                            _producer
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:642"] + __e.backtrace ) ; raise __e
                        end                      ,
                      Cell.new(
                                 )))
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_receive'] = true
    @_receive = 
        LispMacro.new { |_vars,_expr,*__rest__| _body = __rest__[0] ;  
            trampCall( callProcedure( 'cons',
                begin
                  if @global_lisp_binding.has_key?('_cons') then
                    @_cons
                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"call-with-values"                ,Cell.new(
                  trampCall( callProcedure( 'cons',
                      begin
                        if @global_lisp_binding.has_key?('_cons') then
                          @_cons
                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'cons',
                            begin
                              if @global_lisp_binding.has_key?('_cons') then
                                @_cons
                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                            :"lambda"                            ,Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      @_cons
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  Cell.new()                                  ,Cell.new(
                                    trampCall( callProcedure( 'cons',
                                        begin
                                          if @global_lisp_binding.has_key?('_cons') then
                                            @_cons
                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _expr
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:651"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                        
                                                 ))))
                                           ))))
                                     ))))                      ,Cell.new(
                        trampCall( callProcedure( 'cons',
                            begin
                              if @global_lisp_binding.has_key?('_cons') then
                                @_cons
                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      @_cons
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  :"lambda"                                  ,Cell.new(
                                    trampCall( callProcedure( 'cons',
                                        begin
                                          if @global_lisp_binding.has_key?('_cons') then
                                            @_cons
                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _vars
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:652"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                          begin
                                              _body
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:652"] + __e.backtrace ) ; raise __e
                                          end
                                                 ))))
                                           ))))                            ,Cell.new(
                            
                                     ))))
                               ))))
                         ))))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_get_MIMARKkeyword'] = true
    @_get_MIMARKkeyword = 
        Proc.new { |_key,_kv_MIMARKlist,*__rest__| _fallback = __rest__[0] ;  
            if ( 
              begin
                ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20161| 
                    if ( 
                      begin
                          ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20161
                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                      end
                     ) then
                        begin
                            ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20161
                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                        end
                    else
                        begin
                          ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20162| 
                              if ( 
                                begin
                                    ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20162
                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                end
                               ) then
                                  begin
                                      ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20162
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                false
                              end
                          } ; ___lambda.call(
                                trampCall( callProcedure( '>=',
                                    begin
                                      if @global_lisp_binding.has_key?('__GTMARK_EQMARK') then
                                        @__GTMARK_EQMARK
                                      else raise NameError.new( "Error: undefined variable __GTMARK_EQMARK", "__GTMARK_EQMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:660"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                    2                                    ,Cell.new(
                                      trampCall( callProcedure( 'length',
                                          begin
                                            if @global_lisp_binding.has_key?('_length') then
                                              @_length
                                            else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:670"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _kv_MIMARKlist
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:676"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             ))))
                                     )
                        end
                    end
                } ; ___lambda.call(
                      trampCall( callProcedure( 'not',
                          begin
                            if @global_lisp_binding.has_key?('_not') then
                              @_not
                            else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:660"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            trampCall( callProcedure( 'list?',
                                begin
                                  if @global_lisp_binding.has_key?('_list_QUMARK') then
                                    @_list_QUMARK
                                  else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:660"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      _kv_MIMARKlist
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:676"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                                   )))
                           )
              end
             ) then
                begin
                    if ( 
                      trampCall( callProcedure( 'null?',
                          begin
                            if @global_lisp_binding.has_key?('_null_QUMARK') then
                              @_null_QUMARK
                            else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:672"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                _fallback
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:674"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                     ) then
                        begin raise RuntimeError, 
                          trampCall( callProcedure( 'sprintf',
                              begin
                                if @global_lisp_binding.has_key?('_sprintf') then
                                  @_sprintf
                                else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:371"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              "Error: imcomplete key list: %s
"                              ,Cell.new(
                                trampCall( callProcedure( 'write-to-string',
                                    begin
                                      if @global_lisp_binding.has_key?('_write_MIMARKto_MIMARKstring') then
                                        @_write_MIMARKto_MIMARKstring
                                      else raise NameError.new( "Error: undefined variable _write_MIMARKto_MIMARKstring", "_write_MIMARKto_MIMARKstring" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:676"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _kv_MIMARKlist
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:676"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       ))))
                        rescue => __e 
                          __e.set_backtrace( ["./lib/init.nnd:370"] + __e.backtrace )
                          raise __e
                        end 
                    else
                        DelayedCallPacket.new( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                @_car
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:678"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _fallback
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:674"] + __e.backtrace ) ; raise __e
                              end
                                     ))
                    end
                end
            else
                if ( 
                true
                 ) then
                    begin
                        begin
                          ___lambda = lambda { |_loop| 
                              _loop                               = 
                                Proc.new { |_k,_v,_rest| 
                                    if ( 
                                      trampCall( callProcedure( 'eq?',
                                          begin
                                            if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                              @_eq_QUMARK
                                            else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:668"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _k
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:668"] + __e.backtrace ) ; raise __e
                                            end                                          ,Cell.new(
                                            begin
                                                _key
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:673"] + __e.backtrace ) ; raise __e
                                            end
                                                   ))))
                                     ) then
                                        begin
                                            _v
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:669"] + __e.backtrace ) ; raise __e
                                        end
                                    else
                                        begin
                                          ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20163| 
                                              if ( 
                                                begin
                                                  ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20167| 
                                                      if ( 
                                                        begin
                                                            ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20167
                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                        end
                                                       ) then
                                                          begin
                                                              ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20167
                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                          end
                                                      else
                                                        false
                                                      end
                                                  } ; ___lambda.call(
                                                        trampCall( callProcedure( 'eqv?',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                @_eqv_QUMARK
                                                              else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:580"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                            0                                                            ,Cell.new(
                                                              begin
                                                                  ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20163
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     ))))
                                                             )
                                                end
                                               ) then
                                                  begin
                                                      if ( 
                                                        trampCall( callProcedure( 'null?',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_null_QUMARK') then
                                                                @_null_QUMARK
                                                              else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:672"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  _fallback
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:674"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))
                                                       ) then
                                                          begin raise RuntimeError, 
                                                            trampCall( callProcedure( 'sprintf',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_sprintf') then
                                                                    @_sprintf
                                                                  else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:371"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                "Error: value for key %s is not provided : %s
"                                                                ,Cell.new(
                                                                  trampCall( callProcedure( 'write-to-string',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_write_MIMARKto_MIMARKstring') then
                                                                          @_write_MIMARKto_MIMARKstring
                                                                        else raise NameError.new( "Error: undefined variable _write_MIMARKto_MIMARKstring", "_write_MIMARKto_MIMARKstring" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:676"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            _key
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:673"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               )))                                                                ,Cell.new(
                                                                  trampCall( callProcedure( 'write-to-string',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_write_MIMARKto_MIMARKstring') then
                                                                          @_write_MIMARKto_MIMARKstring
                                                                        else raise NameError.new( "Error: undefined variable _write_MIMARKto_MIMARKstring", "_write_MIMARKto_MIMARKstring" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:676"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            _kv_MIMARKlist
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:676"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               )))
                                                                         )))))
                                                          rescue => __e 
                                                            __e.set_backtrace( ["./lib/init.nnd:370"] + __e.backtrace )
                                                            raise __e
                                                          end 
                                                      else
                                                          DelayedCallPacket.new( 'car',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_car') then
                                                                  @_car
                                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:678"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    _fallback
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:674"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       ))
                                                      end
                                                  end
                                              else
                                                  if ( 
                                                    begin
                                                      ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20168| 
                                                          if ( 
                                                            begin
                                                                ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20168
                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                            end
                                                           ) then
                                                              begin
                                                                  ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20168
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end
                                                          else
                                                            false
                                                          end
                                                      } ; ___lambda.call(
                                                            trampCall( callProcedure( 'eqv?',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                    @_eqv_QUMARK
                                                                  else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:580"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                1                                                                ,Cell.new(
                                                                  begin
                                                                      ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20163
                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         ))))
                                                                 )
                                                    end
                                                   ) then
                                                      begin
                                                          begin raise RuntimeError, 
                                                            trampCall( callProcedure( 'sprintf',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_sprintf') then
                                                                    @_sprintf
                                                                  else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:371"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                "Error: incomplete key list: %s
"                                                                ,Cell.new(
                                                                  trampCall( callProcedure( 'write-to-string',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_write_MIMARKto_MIMARKstring') then
                                                                          @_write_MIMARKto_MIMARKstring
                                                                        else raise NameError.new( "Error: undefined variable _write_MIMARKto_MIMARKstring", "_write_MIMARKto_MIMARKstring" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:676"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            _kv_MIMARKlist
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:676"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               )))
                                                                         ))))
                                                          rescue => __e 
                                                            __e.set_backtrace( ["./lib/init.nnd:370"] + __e.backtrace )
                                                            raise __e
                                                          end 
                                                      end
                                                  else
                                                      if ( 
                                                      true
                                                       ) then
                                                          begin
                                                              DelayedCallPacket.new( 'loop',
                                                                  begin
                                                                      _loop
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:678"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    trampCall( callProcedure( 'car',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_car') then
                                                                            @_car
                                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:678"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              _rest
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:680"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 )))                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'cadr',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_cadr') then
                                                                            @_cadr
                                                                          else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:679"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              _rest
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:680"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 )))                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'cddr',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_cddr') then
                                                                            @_cddr
                                                                          else raise NameError.new( "Error: undefined variable _cddr", "_cddr" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:680"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              _rest
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:680"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 )))
                                                                           ))))
                                                          end
                                                      else
                                                          Cell.new()
                                                      end
                                                  end
                                              end
                                          } ; ___lambda.call(
                                                trampCall( callProcedure( 'length',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_length') then
                                                        @_length
                                                      else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:670"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          _rest
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:680"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                                     )
                                        end
                                    end
                                }
                              DelayedCallPacket.new( 'loop',
                                  begin
                                      _loop
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:678"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            @_car
                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:678"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _kv_MIMARKlist
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:676"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))                                  ,Cell.new(
                                    trampCall( callProcedure( 'cadr',
                                        begin
                                          if @global_lisp_binding.has_key?('_cadr') then
                                            @_cadr
                                          else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:679"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _kv_MIMARKlist
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:676"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))                                  ,Cell.new(
                                    trampCall( callProcedure( 'cddr',
                                        begin
                                          if @global_lisp_binding.has_key?('_cddr') then
                                            @_cddr
                                          else raise NameError.new( "Error: undefined variable _cddr", "_cddr" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:680"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _kv_MIMARKlist
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:676"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                           ))))
                          } ; ___lambda.call(
                          nil
                                     )
                        end
                    end
                else
                    Cell.new()
                end
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_dot_MIMARKoperator'] = true
    @_dot_MIMARKoperator = 
        LispMacro.new { |*__rest__| _lst = __rest__[0] ;  
            begin
              ___lambda = lambda { |_generate_MIMARKmethod_MIMARKcall_MIMARKform| 
                  _generate_MIMARKmethod_MIMARKcall_MIMARKform                   = 
                    Proc.new { |_lst| 
                        begin
                          ___lambda = lambda { |_tmp| 
                              if ( 
                                trampCall( callProcedure( 'symbol?',
                                    begin
                                      if @global_lisp_binding.has_key?('_symbol_QUMARK') then
                                        @_symbol_QUMARK
                                      else raise NameError.new( "Error: undefined variable _symbol_QUMARK", "_symbol_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:700"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'first',
                                          begin
                                            if @global_lisp_binding.has_key?('_first') then
                                              @_first
                                            else raise NameError.new( "Error: undefined variable _first", "_first" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:693"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _lst
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:701"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             )))
                               ) then
                                  trampCall( callProcedure( 'cons',
                                      begin
                                        if @global_lisp_binding.has_key?('_cons') then
                                          @_cons
                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'string->symbol',
                                            begin
                                              if @global_lisp_binding.has_key?('_string_MIMARK_GTMARKsymbol') then
                                                @_string_MIMARK_GTMARKsymbol
                                              else raise NameError.new( "Error: undefined variable _string_MIMARK_GTMARKsymbol", "_string_MIMARK_GTMARKsymbol" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:694"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( '+',
                                                  begin
                                                    if @global_lisp_binding.has_key?('__PLMARK') then
                                                      @__PLMARK
                                                    else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:694"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'to-s',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_to_MIMARKs') then
                                                            @_to_MIMARKs
                                                          else raise NameError.new( "Error: undefined variable _to_MIMARKs", "_to_MIMARKs" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:694"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'first',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_first') then
                                                                  @_first
                                                                else raise NameError.new( "Error: undefined variable _first", "_first" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:693"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    _lst
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:701"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                                 )))                                                  ,Cell.new(
                                                  "."                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'to-s',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_to_MIMARKs') then
                                                            @_to_MIMARKs
                                                          else raise NameError.new( "Error: undefined variable _to_MIMARKs", "_to_MIMARKs" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:694"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'second',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_second') then
                                                                  @_second
                                                                else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:700"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    _lst
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:701"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                                 )))
                                                           )))))
                                                     )))                                      ,Cell.new(
                                        trampCall( callProcedure( 'cddr',
                                            begin
                                              if @global_lisp_binding.has_key?('_cddr') then
                                                @_cddr
                                              else raise NameError.new( "Error: undefined variable _cddr", "_cddr" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:695"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  _lst
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:701"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               ))))
                              else
                                  trampCall( callProcedure( 'cons',
                                      begin
                                        if @global_lisp_binding.has_key?('_cons') then
                                          @_cons
                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                      :"let"                                      ,Cell.new(
                                        trampCall( callProcedure( 'cons',
                                            begin
                                              if @global_lisp_binding.has_key?('_cons') then
                                                @_cons
                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'cons',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cons') then
                                                      @_cons
                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            @_cons
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              _tmp
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:694"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                          trampCall( callProcedure( 'cons',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                  @_cons
                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                trampCall( callProcedure( 'first',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_first') then
                                                                        @_first
                                                                      else raise NameError.new( "Error: undefined variable _first", "_first" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:693"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      begin
                                                                          _lst
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:701"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                             )))                                                              ,Cell.new(
                                                              
                                                                       ))))
                                                                 ))))                                                  ,Cell.new(
                                                  
                                                           ))))                                            ,Cell.new(
                                              trampCall( callProcedure( 'cons',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cons') then
                                                      @_cons
                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            @_cons
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:577"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'string->symbol',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_string_MIMARK_GTMARKsymbol') then
                                                                  @_string_MIMARK_GTMARKsymbol
                                                                else raise NameError.new( "Error: undefined variable _string_MIMARK_GTMARKsymbol", "_string_MIMARK_GTMARKsymbol" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:694"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                trampCall( callProcedure( '+',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('__PLMARK') then
                                                                        @__PLMARK
                                                                      else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:694"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      trampCall( callProcedure( 'to-s',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_to_MIMARKs') then
                                                                              @_to_MIMARKs
                                                                            else raise NameError.new( "Error: undefined variable _to_MIMARKs", "_to_MIMARKs" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:694"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                _tmp
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:694"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))                                                                    ,Cell.new(
                                                                    "."                                                                    ,Cell.new(
                                                                      trampCall( callProcedure( 'to-s',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_to_MIMARKs') then
                                                                              @_to_MIMARKs
                                                                            else raise NameError.new( "Error: undefined variable _to_MIMARKs", "_to_MIMARKs" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:694"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            trampCall( callProcedure( 'second',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_second') then
                                                                                    @_second
                                                                                  else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:700"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                Cell.new(
                                                                                  begin
                                                                                      _lst
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:701"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                                         )))
                                                                                   )))
                                                                             )))))
                                                                       )))                                                        ,Cell.new(
                                                          trampCall( callProcedure( 'cddr',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cddr') then
                                                                  @_cddr
                                                                else raise NameError.new( "Error: undefined variable _cddr", "_cddr" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:695"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    _lst
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:701"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                                 ))))                                                  ,Cell.new(
                                                  
                                                           ))))
                                                     ))))
                                               ))))
                              end
                          } ; ___lambda.call(
                                trampCall( callProcedure( 'gensym',
                                    begin
                                      if @global_lisp_binding.has_key?('_gensym') then
                                        @_gensym
                                      else raise NameError.new( "Error: undefined variable _gensym", "_gensym" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:689"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                  Cell.new(
                                             )))
                                     )
                        end
                    }
                  if ( 
                    trampCall( callProcedure( '>',
                        begin
                          if @global_lisp_binding.has_key?('__GTMARK') then
                            @__GTMARK
                          else raise NameError.new( "Error: undefined variable __GTMARK", "__GTMARK" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:697"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                        2                        ,Cell.new(
                          trampCall( callProcedure( 'length',
                              begin
                                if @global_lisp_binding.has_key?('_length') then
                                  @_length
                                else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:697"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    _lst
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:701"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                                 ))))
                   ) then
                      begin
                          trampCall( callProcedure( 'raise',
                              begin
                                if @global_lisp_binding.has_key?('_raise') then
                                  @_raise
                                else raise NameError.new( "Error: undefined variable _raise", "_raise" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:702"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    ArgumentError
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:698"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                              ". dot-operator requires 2+ arguments."                              ,Cell.new(
                                trampCall( callProcedure( 'sprintf',
                                    begin
                                      if @global_lisp_binding.has_key?('_sprintf') then
                                        @_sprintf
                                      else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:702"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                    "%s:%s in dot-operator"                                    ,Cell.new(
                                      trampCall( callProcedure( '*FILE*',
                                          begin
                                            if @global_lisp_binding.has_key?('__ASMARKFILE_ASMARK') then
                                              @__ASMARKFILE_ASMARK
                                            else raise NameError.new( "Error: undefined variable __ASMARKFILE_ASMARK", "__ASMARKFILE_ASMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:702"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                        Cell.new(
                                                   )))                                    ,Cell.new(
                                      trampCall( callProcedure( '*LINE*',
                                          begin
                                            if @global_lisp_binding.has_key?('__ASMARKLINE_ASMARK') then
                                              @__ASMARKLINE_ASMARK
                                            else raise NameError.new( "Error: undefined variable __ASMARKLINE_ASMARK", "__ASMARKLINE_ASMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:702"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                        Cell.new(
                                                   )))
                                             )))))
                                       )))))
                      end
                  else
                      if ( 
                      true
                       ) then
                          begin
                              if ( 
                                trampCall( callProcedure( 'symbol?',
                                    begin
                                      if @global_lisp_binding.has_key?('_symbol_QUMARK') then
                                        @_symbol_QUMARK
                                      else raise NameError.new( "Error: undefined variable _symbol_QUMARK", "_symbol_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:700"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'second',
                                          begin
                                            if @global_lisp_binding.has_key?('_second') then
                                              @_second
                                            else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:700"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _lst
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:701"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             )))
                               ) then
                                  trampCall( callProcedure( 'generate-method-call-form',
                                      begin
                                          _generate_MIMARKmethod_MIMARKcall_MIMARKform
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:701"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            _lst
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:701"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                              else
                                  trampCall( callProcedure( 'raise',
                                      begin
                                        if @global_lisp_binding.has_key?('_raise') then
                                          @_raise
                                        else raise NameError.new( "Error: undefined variable _raise", "_raise" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:702"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            TypeError
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:702"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                      ". dot-operator requires method name as symbol."                                      ,Cell.new(
                                        trampCall( callProcedure( 'sprintf',
                                            begin
                                              if @global_lisp_binding.has_key?('_sprintf') then
                                                @_sprintf
                                              else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:702"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                            "%s:%s in dot-operator"                                            ,Cell.new(
                                              trampCall( callProcedure( '*FILE*',
                                                  begin
                                                    if @global_lisp_binding.has_key?('__ASMARKFILE_ASMARK') then
                                                      @__ASMARKFILE_ASMARK
                                                    else raise NameError.new( "Error: undefined variable __ASMARKFILE_ASMARK", "__ASMARKFILE_ASMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:702"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                Cell.new(
                                                           )))                                            ,Cell.new(
                                              trampCall( callProcedure( '*LINE*',
                                                  begin
                                                    if @global_lisp_binding.has_key?('__ASMARKLINE_ASMARK') then
                                                      @__ASMARKLINE_ASMARK
                                                    else raise NameError.new( "Error: undefined variable __ASMARKLINE_ASMARK", "__ASMARKLINE_ASMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:702"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                Cell.new(
                                                           )))
                                                     )))))
                                               )))))
                              end
                          end
                      else
                        Nil.new
                      end
                  end
              } ; ___lambda.call(
              nil
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_with_MIMARKopen'] = true
    @_with_MIMARKopen = 
        Proc.new { |_filename,_pred,*__rest__| _lst = __rest__[0] ;  
            begin
              ___lambda = lambda { |_len| 
                  begin
                    ___lambda = lambda { |_f| 
                        begin
                          ___lambda = lambda { |_result| 
                              begin
                                  _f.close(
                                    )
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:715"] + __e.backtrace ) ; raise __e
                              end
                              begin
                                  _result
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:716"] + __e.backtrace ) ; raise __e
                              end
                          } ; ___lambda.call(
                                trampCall( callProcedure( 'pred',
                                    begin
                                        _pred
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:714"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _f
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:714"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                     )
                        end
                    } ; ___lambda.call(
                          if ( 
                            trampCall( callProcedure( '=',
                                begin
                                  if @global_lisp_binding.has_key?('__EQMARK') then
                                    @__EQMARK
                                  else raise NameError.new( "Error: undefined variable __EQMARK", "__EQMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:708"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                0                                ,Cell.new(
                                  begin
                                      _len
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:710"] + __e.backtrace ) ; raise __e
                                  end
                                         ))))
                           ) then
                              begin
                                  begin
                                      Kernel.open(
                                            begin
                                                _filename
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:711"] + __e.backtrace ) ; raise __e
                                            end
                                        )
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:711"] + __e.backtrace ) ; raise __e
                                  end
                              end
                          else
                              if ( 
                                trampCall( callProcedure( '<',
                                    begin
                                      if @global_lisp_binding.has_key?('__LTMARK') then
                                        @__LTMARK
                                      else raise NameError.new( "Error: undefined variable __LTMARK", "__LTMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:710"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                    0                                    ,Cell.new(
                                      begin
                                          _len
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:710"] + __e.backtrace ) ; raise __e
                                      end
                                             ))))
                               ) then
                                  begin
                                      begin
                                          Kernel.open(
                                                begin
                                                    _filename
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:711"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                trampCall( callProcedure( 'car',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_car') then
                                                        @_car
                                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:711"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          _lst
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:711"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                            )
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:711"] + __e.backtrace ) ; raise __e
                                      end
                                  end
                              else
                                  if ( 
                                  true
                                   ) then
                                      begin
                                          begin raise RuntimeError, 
                                          "with-open requires 2 or 3 arguments."
                                          rescue => __e 
                                            __e.set_backtrace( ["./lib/init.nnd:713"] + __e.backtrace )
                                            raise __e
                                          end 
                                      end
                                  else
                                      Cell.new()
                                  end
                              end
                          end
                               )
                  end
              } ; ___lambda.call(
                    trampCall( callProcedure( 'length',
                        begin
                          if @global_lisp_binding.has_key?('_length') then
                            @_length
                          else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:706"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              _lst
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:711"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_last_MIMARKpair'] = true
    @_last_MIMARKpair = 
        Proc.new { |_x| 
            if ( 
              trampCall( callProcedure( 'pair?',
                  begin
                    if @global_lisp_binding.has_key?('_pair_QUMARK') then
                      @_pair_QUMARK
                    else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:723"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cdr',
                        begin
                          if @global_lisp_binding.has_key?('_cdr') then
                            @_cdr
                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:724"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              _x
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:725"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                           )))
             ) then
                DelayedCallPacket.new( 'last-pair',
                    begin
                      if @global_lisp_binding.has_key?('_last_MIMARKpair') then
                        @_last_MIMARKpair
                      else raise NameError.new( "Error: undefined variable _last_MIMARKpair", "_last_MIMARKpair" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:724"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      trampCall( callProcedure( 'cdr',
                          begin
                            if @global_lisp_binding.has_key?('_cdr') then
                              @_cdr
                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:724"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                _x
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:725"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                             ))
            else
                begin
                    _x
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:725"] + __e.backtrace ) ; raise __e
                end
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cons_ASMARK'] = true
    @_cons_ASMARK = 
        Proc.new { |_arg,*__rest__| _args = __rest__[0] ;  
            if ( 
              trampCall( callProcedure( 'null?',
                  begin
                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                      @_null_QUMARK
                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:729"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        _args
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:731"] + __e.backtrace ) ; raise __e
                    end
                           )))
             ) then
                begin
                    _arg
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:731"] + __e.backtrace ) ; raise __e
                end
            else
                DelayedCallPacket.new( 'cons',
                    begin
                      if @global_lisp_binding.has_key?('_cons') then
                        @_cons
                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:731"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          _arg
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:731"] + __e.backtrace ) ; raise __e
                      end                    ,Cell.new(
                      trampCall( callProcedure( 'apply',
                          begin
                            if @global_lisp_binding.has_key?('_apply') then
                              @_apply
                            else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:731"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                              if @global_lisp_binding.has_key?('_list_ASMARK') then
                                @_list_ASMARK
                              else raise NameError.new( "Error: undefined variable _list_ASMARK", "_list_ASMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:731"] + __e.backtrace ) ; raise __e
                            end                          ,Cell.new(
                            begin
                                _args
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:731"] + __e.backtrace ) ; raise __e
                            end
                                   ))))
                             )))
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_list_ASMARK'] = true
    @_list_ASMARK = 
        begin
          if @global_lisp_binding.has_key?('_cons_ASMARK') then
            @_cons_ASMARK
          else raise NameError.new( "Error: undefined variable _cons_ASMARK", "_cons_ASMARK" ) end
          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:732"] + __e.backtrace ) ; raise __e
        end
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_make_MIMARKhash_MIMARKtable'] = true
    @_make_MIMARKhash_MIMARKtable = 
        Proc.new { || 
            begin
                Hash.new(
                  )
              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:739"] + __e.backtrace ) ; raise __e
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_QUMARK'] = true
    @_hash_MIMARKtable_QUMARK = 
        Proc.new { |_h| 
            begin
                _h.is_a?(
                      begin
                          Hash
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:742"] + __e.backtrace ) ; raise __e
                      end
                  )
              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:742"] + __e.backtrace ) ; raise __e
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_MIMARKnum_MIMARKentries'] = true
    @_hash_MIMARKtable_MIMARKnum_MIMARKentries = 
        Proc.new { |_h| 
            begin
                _h.length(
                  )
              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:745"] + __e.backtrace ) ; raise __e
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable'] = true
    @_hash_MIMARKtable = 
        Proc.new { |*__rest__| _kv_MIMARKlist = __rest__[0] ;  
            begin
              ___lambda = lambda { |_h| 
                  trampCall( callProcedure( 'for-each',
                      begin
                        if @global_lisp_binding.has_key?('_for_MIMARKeach') then
                          @_for_MIMARKeach
                        else raise NameError.new( "Error: undefined variable _for_MIMARKeach", "_for_MIMARKeach" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:749"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        Proc.new { |_entry| 
                            if ( 
                              trampCall( callProcedure( 'pair?',
                                  begin
                                    if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                      @_pair_QUMARK
                                    else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:751"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'cdr',
                                        begin
                                          if @global_lisp_binding.has_key?('_cdr') then
                                            @_cdr
                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:753"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _entry
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:753"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                           )))
                             ) then
                                trampCall( callProcedure( 'hash-table-put!',
                                    begin
                                      if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKput_EXMARK') then
                                        @_hash_MIMARKtable_MIMARKput_EXMARK
                                      else raise NameError.new( "Error: undefined variable _hash_MIMARKtable_MIMARKput_EXMARK", "_hash_MIMARKtable_MIMARKput_EXMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:753"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _h
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:755"] + __e.backtrace ) ; raise __e
                                      end                                    ,Cell.new(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              @_car
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:753"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _entry
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:753"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))                                    ,Cell.new(
                                      trampCall( callProcedure( 'cadr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cadr') then
                                              @_cadr
                                            else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:752"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _entry
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:753"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             )))))
                            else
                                trampCall( callProcedure( 'hash-table-put!',
                                    begin
                                      if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKput_EXMARK') then
                                        @_hash_MIMARKtable_MIMARKput_EXMARK
                                      else raise NameError.new( "Error: undefined variable _hash_MIMARKtable_MIMARKput_EXMARK", "_hash_MIMARKtable_MIMARKput_EXMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:753"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _h
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:755"] + __e.backtrace ) ; raise __e
                                      end                                    ,Cell.new(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              @_car
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:753"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _entry
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:753"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))                                    ,Cell.new(
                                      trampCall( callProcedure( 'cdr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cdr') then
                                              @_cdr
                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:753"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _entry
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:753"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             )))))
                            end
                        }                      ,Cell.new(
                        begin
                            _kv_MIMARKlist
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:754"] + __e.backtrace ) ; raise __e
                        end
                               ))))
                  begin
                      _h
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:755"] + __e.backtrace ) ; raise __e
                  end
              } ; ___lambda.call(
                    trampCall( callProcedure( 'make-hash-table',
                        begin
                          if @global_lisp_binding.has_key?('_make_MIMARKhash_MIMARKtable') then
                            @_make_MIMARKhash_MIMARKtable
                          else raise NameError.new( "Error: undefined variable _make_MIMARKhash_MIMARKtable", "_make_MIMARKhash_MIMARKtable" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:748"] + __e.backtrace ) ; raise __e
                        end                      ,
                      Cell.new(
                                 )))
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_MIMARKexist_QUMARK'] = true
    @_hash_MIMARKtable_MIMARKexist_QUMARK = 
        Proc.new { |_h,_key| 
            begin
                _h.has_key?(
                      begin
                          _key
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:758"] + __e.backtrace ) ; raise __e
                      end
                  )
              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:758"] + __e.backtrace ) ; raise __e
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_MIMARKclear_EXMARK'] = true
    @_hash_MIMARKtable_MIMARKclear_EXMARK = 
        Proc.new { |_h| 
            begin
                _h.clear(
                  )
              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:761"] + __e.backtrace ) ; raise __e
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_MIMARKdelete_EXMARK'] = true
    @_hash_MIMARKtable_MIMARKdelete_EXMARK = 
        Proc.new { |_h,_key| 
            begin
                _h.delete(
                      begin
                          _key
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:764"] + __e.backtrace ) ; raise __e
                      end
                  )
              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:764"] + __e.backtrace ) ; raise __e
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_MIMARKpush_EXMARK'] = true
    @_hash_MIMARKtable_MIMARKpush_EXMARK = 
        Proc.new { |_ht,_key,_value| 
            DelayedCallPacket.new( 'hash-table-put!',
                begin
                  if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKput_EXMARK') then
                    @_hash_MIMARKtable_MIMARKput_EXMARK
                  else raise NameError.new( "Error: undefined variable _hash_MIMARKtable_MIMARKput_EXMARK", "_hash_MIMARKtable_MIMARKput_EXMARK" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:767"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  begin
                      _ht
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:770"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                  begin
                      _key
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:770"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                  trampCall( callProcedure( 'cons',
                      begin
                        if @global_lisp_binding.has_key?('_cons') then
                          @_cons
                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:770"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _value
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:770"] + __e.backtrace ) ; raise __e
                        end                      ,Cell.new(
                        trampCall( callProcedure( 'hash-table-get',
                            begin
                              if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKget') then
                                @_hash_MIMARKtable_MIMARKget
                              else raise NameError.new( "Error: undefined variable _hash_MIMARKtable_MIMARKget", "_hash_MIMARKtable_MIMARKget" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:770"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _ht
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:770"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                              begin
                                  _key
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:770"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                            Cell.new()
                                     )))))
                               ))))
                         ))))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_MIMARKkeys'] = true
    @_hash_MIMARKtable_MIMARKkeys = 
        Proc.new { |_h| 
            DelayedCallPacket.new( 'to-list',
                begin
                  if @global_lisp_binding.has_key?('_to_MIMARKlist') then
                    @_to_MIMARKlist
                  else raise NameError.new( "Error: undefined variable _to_MIMARKlist", "_to_MIMARKlist" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:773"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  begin
                      _h.keys(
                        )
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:773"] + __e.backtrace ) ; raise __e
                  end
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_MIMARKvalues'] = true
    @_hash_MIMARKtable_MIMARKvalues = 
        Proc.new { |_h| 
            DelayedCallPacket.new( 'to-list',
                begin
                  if @global_lisp_binding.has_key?('_to_MIMARKlist') then
                    @_to_MIMARKlist
                  else raise NameError.new( "Error: undefined variable _to_MIMARKlist", "_to_MIMARKlist" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:776"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  begin
                      _h.values(
                        )
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:776"] + __e.backtrace ) ; raise __e
                  end
                         ))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_MIMARKmap'] = true
    @_hash_MIMARKtable_MIMARKmap = 
        Proc.new { |_h,_pred| 
            begin
              ___lambda = lambda { |_keys| 
                  DelayedCallPacket.new( 'map',
                      begin
                        if @global_lisp_binding.has_key?('_map') then
                          @_map
                        else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:780"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        Proc.new { |_key| 
                            trampCall( callProcedure( 'pred',
                                begin
                                    _pred
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:782"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      _key
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:782"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  trampCall( callProcedure( 'hash-table-get',
                                      begin
                                        if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKget') then
                                          @_hash_MIMARKtable_MIMARKget
                                        else raise NameError.new( "Error: undefined variable _hash_MIMARKtable_MIMARKget", "_hash_MIMARKtable_MIMARKget" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:782"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            _h
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:782"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        begin
                                            _key
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:782"] + __e.backtrace ) ; raise __e
                                        end
                                               ))))
                                         ))))
                        }                      ,Cell.new(
                        begin
                            _keys
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:783"] + __e.backtrace ) ; raise __e
                        end
                               )))
              } ; ___lambda.call(
                    trampCall( callProcedure( 'hash-table-keys',
                        begin
                          if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKkeys') then
                            @_hash_MIMARKtable_MIMARKkeys
                          else raise NameError.new( "Error: undefined variable _hash_MIMARKtable_MIMARKkeys", "_hash_MIMARKtable_MIMARKkeys" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:779"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              _h
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:782"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_MIMARKfor_MIMARKeach'] = true
    @_hash_MIMARKtable_MIMARKfor_MIMARKeach = 
        begin
          if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKmap') then
            @_hash_MIMARKtable_MIMARKmap
          else raise NameError.new( "Error: undefined variable _hash_MIMARKtable_MIMARKmap", "_hash_MIMARKtable_MIMARKmap" ) end
          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:784"] + __e.backtrace ) ; raise __e
        end
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_MIMARK_GTMARKalist'] = true
    @_hash_MIMARKtable_MIMARK_GTMARKalist = 
        Proc.new { |_h| 
            if ( 
              trampCall( callProcedure( 'not',
                  begin
                    if @global_lisp_binding.has_key?('_not') then
                      @_not
                    else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:787"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        _h.is_a?(
                              begin
                                  Hash
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:787"] + __e.backtrace ) ; raise __e
                              end
                          )
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:787"] + __e.backtrace ) ; raise __e
                    end
                           )))
             ) then
                begin raise RuntimeError, 
                "Error: hash-table->alist expects Hash instance."
                rescue => __e 
                  __e.set_backtrace( ["./lib/init.nnd:788"] + __e.backtrace )
                  raise __e
                end 
            else
                begin
                  ___lambda = lambda { |_keys| 
                      DelayedCallPacket.new( 'map',
                          begin
                            if @global_lisp_binding.has_key?('_map') then
                              @_map
                            else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:790"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            Proc.new { |_key| 
                                trampCall( callProcedure( 'cons',
                                    begin
                                      if @global_lisp_binding.has_key?('_cons') then
                                        @_cons
                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:792"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _key
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:792"] + __e.backtrace ) ; raise __e
                                      end                                    ,Cell.new(
                                      trampCall( callProcedure( 'hash-table-get',
                                          begin
                                            if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKget') then
                                              @_hash_MIMARKtable_MIMARKget
                                            else raise NameError.new( "Error: undefined variable _hash_MIMARKtable_MIMARKget", "_hash_MIMARKtable_MIMARKget" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:792"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _h
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:792"] + __e.backtrace ) ; raise __e
                                            end                                          ,Cell.new(
                                            begin
                                                _key
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:792"] + __e.backtrace ) ; raise __e
                                            end
                                                   ))))
                                             ))))
                            }                          ,Cell.new(
                            begin
                                _keys
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:793"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                  } ; ___lambda.call(
                        trampCall( callProcedure( 'hash-table-keys',
                            begin
                              if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKkeys') then
                                @_hash_MIMARKtable_MIMARKkeys
                              else raise NameError.new( "Error: undefined variable _hash_MIMARKtable_MIMARKkeys", "_hash_MIMARKtable_MIMARKkeys" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:789"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _h
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:792"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                             )
                end
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_alist_MIMARK_GTMARKhash_MIMARKtable'] = true
    @_alist_MIMARK_GTMARKhash_MIMARKtable = 
        Proc.new { |_alist| 
            if ( 
              trampCall( callProcedure( 'not',
                  begin
                    if @global_lisp_binding.has_key?('_not') then
                      @_not
                    else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:796"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'list?',
                        begin
                          if @global_lisp_binding.has_key?('_list_QUMARK') then
                            @_list_QUMARK
                          else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:796"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              _alist
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:798"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                           )))
             ) then
                begin raise RuntimeError, 
                "Error: alist->hash-table expects alist."
                rescue => __e 
                  __e.set_backtrace( ["./lib/init.nnd:797"] + __e.backtrace )
                  raise __e
                end 
            else
                DelayedCallPacket.new( 'apply',
                    begin
                      if @global_lisp_binding.has_key?('_apply') then
                        @_apply
                      else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:798"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                        if @global_lisp_binding.has_key?('_hash_MIMARKtable') then
                          @_hash_MIMARKtable
                        else raise NameError.new( "Error: undefined variable _hash_MIMARKtable", "_hash_MIMARKtable" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:798"] + __e.backtrace ) ; raise __e
                      end                    ,Cell.new(
                      begin
                          _alist
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:798"] + __e.backtrace ) ; raise __e
                      end
                             )))
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_export'] = true
    @_export = 
        LispMacro.new { |_name| 
            trampCall( callProcedure( 'cons',
                begin
                  if @global_lisp_binding.has_key?('_cons') then
                    @_cons
                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:792"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"define"                ,Cell.new(
                  trampCall( callProcedure( 'cons',
                      begin
                        if @global_lisp_binding.has_key?('_cons') then
                          @_cons
                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:792"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _name
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:807"] + __e.backtrace ) ; raise __e
                        end                      ,Cell.new(
                      Cell.new(nil)
                               ))))
                         ))))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_load_MIMARKlibrary'] = true
    @_load_MIMARKlibrary = 
        Proc.new { |_name| 
            begin
              ___lambda = lambda { |_home| 
                  begin
                    ___lambda = lambda { |_path| 
                        if ( 
                          begin
                              File.exist?(
                                    trampCall( callProcedure( '+',
                                        begin
                                          if @global_lisp_binding.has_key?('__PLMARK') then
                                            @__PLMARK
                                          else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:816"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _path
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:818"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                        ".nndc"
                                                 ))))
                                )
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:815"] + __e.backtrace ) ; raise __e
                          end
                         ) then
                            begin
                                DelayedCallPacket.new( 'load-compiled-code',
                                    begin
                                      if @global_lisp_binding.has_key?('_load_MIMARKcompiled_MIMARKcode') then
                                        @_load_MIMARKcompiled_MIMARKcode
                                      else raise NameError.new( "Error: undefined variable _load_MIMARKcompiled_MIMARKcode", "_load_MIMARKcompiled_MIMARKcode" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:814"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( '+',
                                          begin
                                            if @global_lisp_binding.has_key?('__PLMARK') then
                                              @__PLMARK
                                            else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:816"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _path
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:818"] + __e.backtrace ) ; raise __e
                                            end                                          ,Cell.new(
                                          ".nndc"
                                                   ))))
                                             ))
                            end
                        else
                            if ( 
                              begin
                                  File.exist?(
                                        trampCall( callProcedure( '+',
                                            begin
                                              if @global_lisp_binding.has_key?('__PLMARK') then
                                                @__PLMARK
                                              else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:816"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  _path
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:818"] + __e.backtrace ) ; raise __e
                                              end                                            ,Cell.new(
                                            ".nnd"
                                                     ))))
                                    )
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:815"] + __e.backtrace ) ; raise __e
                              end
                             ) then
                                begin
                                    DelayedCallPacket.new( 'load',
                                        begin
                                          if @global_lisp_binding.has_key?('_load') then
                                            @_load
                                          else raise NameError.new( "Error: undefined variable _load", "_load" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:816"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( '+',
                                              begin
                                                if @global_lisp_binding.has_key?('__PLMARK') then
                                                  @__PLMARK
                                                else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:816"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    _path
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:818"] + __e.backtrace ) ; raise __e
                                                end                                              ,Cell.new(
                                              ".nnd"
                                                       ))))
                                                 ))
                                end
                            else
                                if ( 
                                true
                                 ) then
                                    begin
                                        begin raise RuntimeError, 
                                          trampCall( callProcedure( 'sprintf',
                                              begin
                                                if @global_lisp_binding.has_key?('_sprintf') then
                                                  @_sprintf
                                                else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:702"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                              "Error: can't load library file [%s]
"                                              ,Cell.new(
                                                begin
                                                    _path
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:818"] + __e.backtrace ) ; raise __e
                                                end
                                                       ))))
                                        rescue => __e 
                                          __e.set_backtrace( ["./lib/init.nnd:797"] + __e.backtrace )
                                          raise __e
                                        end 
                                    end
                                else
                                    Cell.new()
                                end
                            end
                        end
                    } ; ___lambda.call(
                          trampCall( callProcedure( '+',
                              begin
                                if @global_lisp_binding.has_key?('__PLMARK') then
                                  @__PLMARK
                                else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:816"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    _home
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:811"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                              "/"                              ,Cell.new(
                                begin
                                    _name
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:811"] + __e.backtrace ) ; raise __e
                                end
                                       )))))
                               )
                  end
              } ; ___lambda.call(
                    trampCall( callProcedure( 'get-nendo-home',
                        begin
                          if @global_lisp_binding.has_key?('_get_MIMARKnendo_MIMARKhome') then
                            @_get_MIMARKnendo_MIMARKhome
                          else raise NameError.new( "Error: undefined variable _get_MIMARKnendo_MIMARKhome", "_get_MIMARKnendo_MIMARKhome" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:810"] + __e.backtrace ) ; raise __e
                        end                      ,
                      Cell.new(
                                 )))
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_vector_QUMARK'] = true
    @_vector_QUMARK = 
        Proc.new { |_v| 
            begin
                _v.is_a?(
                      begin
                          Array
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:826"] + __e.backtrace ) ; raise __e
                      end
                  )
              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:826"] + __e.backtrace ) ; raise __e
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_make_MIMARKvector'] = true
    @_make_MIMARKvector = 
        Proc.new { |_k,*__rest__| _rest = __rest__[0] ;  
            if ( 
              trampCall( callProcedure( 'null?',
                  begin
                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                      @_null_QUMARK
                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:829"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        _rest
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:831"] + __e.backtrace ) ; raise __e
                    end
                           )))
             ) then
                begin
                    Array.new(
                          begin
                              _k
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:831"] + __e.backtrace ) ; raise __e
                          end
                      )
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:831"] + __e.backtrace ) ; raise __e
                end
            else
                begin
                    Array.new(
                          begin
                              _k
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:831"] + __e.backtrace ) ; raise __e
                          end                        ,
                          trampCall( callProcedure( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  @_car
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:831"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    _rest
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:831"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                      )
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:831"] + __e.backtrace ) ; raise __e
                end
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_vector_MIMARKlength'] = true
    @_vector_MIMARKlength = 
        Proc.new { |_v| 
            begin
                _v.size(
                  )
              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:834"] + __e.backtrace ) ; raise __e
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_vector_MIMARKcopy'] = true
    @_vector_MIMARKcopy = 
        Proc.new { |_v| 
            begin
                _v.clone(
                  )
              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:837"] + __e.backtrace ) ; raise __e
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_vector_MIMARKref'] = true
    @_vector_MIMARKref = 
        Proc.new { |_v,_index,*__rest__| _fallback = __rest__[0] ;  
            if ( 
              if ( 
                trampCall( callProcedure( 'not',
                    begin
                      if @global_lisp_binding.has_key?('_not') then
                        @_not
                      else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:796"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      trampCall( callProcedure( 'eq?',
                          begin
                            if @global_lisp_binding.has_key?('_eq_QUMARK') then
                              @_eq_QUMARK
                            else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:668"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                          false                          ,Cell.new(
                            trampCall( callProcedure( '<=',
                                begin
                                  if @global_lisp_binding.has_key?('__LTMARK_EQMARK') then
                                    @__LTMARK_EQMARK
                                  else raise NameError.new( "Error: undefined variable __LTMARK_EQMARK", "__LTMARK_EQMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:840"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                0                                ,Cell.new(
                                  begin
                                      _index
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:843"] + __e.backtrace ) ; raise __e
                                  end
                                         ))))
                                   ))))
                             )))
               ) then
                  trampCall( callProcedure( '<',
                      begin
                        if @global_lisp_binding.has_key?('__LTMARK') then
                          @__LTMARK
                        else raise NameError.new( "Error: undefined variable __LTMARK", "__LTMARK" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:840"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _index
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:843"] + __e.backtrace ) ; raise __e
                        end                      ,Cell.new(
                        begin
                            _v.size
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:840"] + __e.backtrace ) ; raise __e
                        end
                               ))))
              else
                false
              end
             ) then
                begin
                    _v.fetch(
                          begin
                              _index
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:843"] + __e.backtrace ) ; raise __e
                          end
                      )
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:841"] + __e.backtrace ) ; raise __e
                end
            else
                if ( 
                  trampCall( callProcedure( 'null?',
                      begin
                        if @global_lisp_binding.has_key?('_null_QUMARK') then
                          @_null_QUMARK
                        else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:842"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _fallback
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:844"] + __e.backtrace ) ; raise __e
                        end
                               )))
                 ) then
                    begin raise RuntimeError, 
                      trampCall( callProcedure( 'sprintf',
                          begin
                            if @global_lisp_binding.has_key?('_sprintf') then
                              @_sprintf
                            else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:702"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                          "Error: vector-ref  index value is overflow: %s
"                          ,Cell.new(
                            begin
                                _index
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:843"] + __e.backtrace ) ; raise __e
                            end
                                   ))))
                    rescue => __e 
                      __e.set_backtrace( ["./lib/init.nnd:797"] + __e.backtrace )
                      raise __e
                    end 
                else
                    DelayedCallPacket.new( 'car',
                        begin
                          if @global_lisp_binding.has_key?('_car') then
                            @_car
                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:844"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              _fallback
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:844"] + __e.backtrace ) ; raise __e
                          end
                                 ))
                end
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_vector_MIMARKequal_QUMARK'] = true
    @_vector_MIMARKequal_QUMARK = 
        Proc.new { |_x,_y| 
            if ( 
              trampCall( callProcedure( 'not',
                  begin
                    if @global_lisp_binding.has_key?('_not') then
                      @_not
                    else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:796"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'eq?',
                        begin
                          if @global_lisp_binding.has_key?('_eq_QUMARK') then
                            @_eq_QUMARK
                          else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:668"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                        false                        ,Cell.new(
                          trampCall( callProcedure( 'vector?',
                              begin
                                if @global_lisp_binding.has_key?('_vector_QUMARK') then
                                  @_vector_QUMARK
                                else raise NameError.new( "Error: undefined variable _vector_QUMARK", "_vector_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:850"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    _x
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:855"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                                 ))))
                           )))
             ) then
                if ( 
                  trampCall( callProcedure( 'not',
                      begin
                        if @global_lisp_binding.has_key?('_not') then
                          @_not
                        else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:796"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'eq?',
                            begin
                              if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                @_eq_QUMARK
                              else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:668"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                            false                            ,Cell.new(
                              trampCall( callProcedure( 'vector?',
                                  begin
                                    if @global_lisp_binding.has_key?('_vector_QUMARK') then
                                      @_vector_QUMARK
                                    else raise NameError.new( "Error: undefined variable _vector_QUMARK", "_vector_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:850"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _y
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:855"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     ))))
                               )))
                 ) then
                    if ( 
                      trampCall( callProcedure( 'not',
                          begin
                            if @global_lisp_binding.has_key?('_not') then
                              @_not
                            else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:796"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            trampCall( callProcedure( 'eq?',
                                begin
                                  if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                    @_eq_QUMARK
                                  else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:668"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                false                                ,Cell.new(
                                  trampCall( callProcedure( '=',
                                      begin
                                        if @global_lisp_binding.has_key?('__EQMARK') then
                                          @__EQMARK
                                        else raise NameError.new( "Error: undefined variable __EQMARK", "__EQMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:853"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'vector-length',
                                            begin
                                              if @global_lisp_binding.has_key?('_vector_MIMARKlength') then
                                                @_vector_MIMARKlength
                                              else raise NameError.new( "Error: undefined variable _vector_MIMARKlength", "_vector_MIMARKlength" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:851"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  _x
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:855"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))                                      ,Cell.new(
                                        trampCall( callProcedure( 'vector-length',
                                            begin
                                              if @global_lisp_binding.has_key?('_vector_MIMARKlength') then
                                                @_vector_MIMARKlength
                                              else raise NameError.new( "Error: undefined variable _vector_MIMARKlength", "_vector_MIMARKlength" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:851"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  _y
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:855"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               ))))
                                         ))))
                                   )))
                     ) then
                        begin
                          ___lambda = lambda { |_n| 
                              begin
                                ___lambda = lambda { |_loop| 
                                    _loop                                     = 
                                      Proc.new { |_i| 
                                          if ( 
                                            trampCall( callProcedure( '=',
                                                begin
                                                  if @global_lisp_binding.has_key?('__EQMARK') then
                                                    @__EQMARK
                                                  else raise NameError.new( "Error: undefined variable __EQMARK", "__EQMARK" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:853"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      _i
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:856"] + __e.backtrace ) ; raise __e
                                                  end                                                ,Cell.new(
                                                  begin
                                                      _n
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:853"] + __e.backtrace ) ; raise __e
                                                  end
                                                         ))))
                                           ) then
                                            true
                                          else
                                              if ( 
                                                trampCall( callProcedure( 'not',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_not') then
                                                        @_not
                                                      else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:796"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'eq?',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                              @_eq_QUMARK
                                                            else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:668"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                          false                                                          ,Cell.new(
                                                            trampCall( callProcedure( 'equal?',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_equal_QUMARK') then
                                                                    @_equal_QUMARK
                                                                  else raise NameError.new( "Error: undefined variable _equal_QUMARK", "_equal_QUMARK" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:855"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  trampCall( callProcedure( 'vector-ref',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_vector_MIMARKref') then
                                                                          @_vector_MIMARKref
                                                                        else raise NameError.new( "Error: undefined variable _vector_MIMARKref", "_vector_MIMARKref" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:855"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            _x
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:855"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,Cell.new(
                                                                        begin
                                                                            _i
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:856"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               ))))                                                                ,Cell.new(
                                                                  trampCall( callProcedure( 'vector-ref',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_vector_MIMARKref') then
                                                                          @_vector_MIMARKref
                                                                        else raise NameError.new( "Error: undefined variable _vector_MIMARKref", "_vector_MIMARKref" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:855"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            _y
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:855"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,Cell.new(
                                                                        begin
                                                                            _i
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:856"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               ))))
                                                                         ))))
                                                                   ))))
                                                             )))
                                               ) then
                                                  DelayedCallPacket.new( 'loop',
                                                      begin
                                                          _loop
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:856"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        trampCall( callProcedure( 'succ',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_succ') then
                                                                @_succ
                                                              else raise NameError.new( "Error: undefined variable _succ", "_succ" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:856"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  _i
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:856"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))
                                                               ))
                                              else
                                                false
                                              end
                                          end
                                      }
                                    DelayedCallPacket.new( 'loop',
                                        begin
                                            _loop
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:856"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                        0
                                                 ))
                                } ; ___lambda.call(
                                nil
                                           )
                              end
                          } ; ___lambda.call(
                                trampCall( callProcedure( 'vector-length',
                                    begin
                                      if @global_lisp_binding.has_key?('_vector_MIMARKlength') then
                                        @_vector_MIMARKlength
                                      else raise NameError.new( "Error: undefined variable _vector_MIMARKlength", "_vector_MIMARKlength" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:851"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _x
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:855"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                     )
                        end
                    else
                      false
                    end
                else
                  false
                end
            else
              false
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_list_MIMARK_GTMARKvector'] = true
    @_list_MIMARK_GTMARKvector = 
        Proc.new { |_x| 
            DelayedCallPacket.new( 'apply',
                begin
                  if @global_lisp_binding.has_key?('_apply') then
                    @_apply
                  else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:859"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  begin
                    if @global_lisp_binding.has_key?('_vector') then
                      @_vector
                    else raise NameError.new( "Error: undefined variable _vector", "_vector" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:859"] + __e.backtrace ) ; raise __e
                  end                ,Cell.new(
                  begin
                      _x
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:859"] + __e.backtrace ) ; raise __e
                  end
                         )))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_vector_MIMARKfill_EXMARK'] = true
    @_vector_MIMARKfill_EXMARK = 
        Proc.new { |_v,_e| 
            begin
              ___lambda = lambda { |_n| 
                  begin
                    ___lambda = lambda { |_loop| 
                        _loop                         = 
                          Proc.new { |_i| 
                              if ( 
                                trampCall( callProcedure( '=',
                                    begin
                                      if @global_lisp_binding.has_key?('__EQMARK') then
                                        @__EQMARK
                                      else raise NameError.new( "Error: undefined variable __EQMARK", "__EQMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:864"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _i
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:866"] + __e.backtrace ) ; raise __e
                                      end                                    ,Cell.new(
                                      begin
                                          _n
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:864"] + __e.backtrace ) ; raise __e
                                      end
                                             ))))
                               ) then
                                  begin
                                      _v
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:866"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  begin
                                      trampCall( callProcedure( 'vector-set!',
                                          begin
                                            if @global_lisp_binding.has_key?('_vector_MIMARKset_EXMARK') then
                                              @_vector_MIMARKset_EXMARK
                                            else raise NameError.new( "Error: undefined variable _vector_MIMARKset_EXMARK", "_vector_MIMARKset_EXMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:866"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _v
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:866"] + __e.backtrace ) ; raise __e
                                            end                                          ,Cell.new(
                                            begin
                                                _i
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:866"] + __e.backtrace ) ; raise __e
                                            end                                          ,Cell.new(
                                            begin
                                                _e
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:866"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))))
                                      DelayedCallPacket.new( 'loop',
                                          begin
                                              _loop
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:866"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            trampCall( callProcedure( 'succ',
                                                begin
                                                  if @global_lisp_binding.has_key?('_succ') then
                                                    @_succ
                                                  else raise NameError.new( "Error: undefined variable _succ", "_succ" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:866"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      _i
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:866"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                   ))
                                  end
                              end
                          }
                        DelayedCallPacket.new( 'loop',
                            begin
                                _loop
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:866"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                            0
                                     ))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              } ; ___lambda.call(
                    trampCall( callProcedure( 'vector-length',
                        begin
                          if @global_lisp_binding.has_key?('_vector_MIMARKlength') then
                            @_vector_MIMARKlength
                          else raise NameError.new( "Error: undefined variable _vector_MIMARKlength", "_vector_MIMARKlength" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:862"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              _v
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:866"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_vector_MIMARK_GTMARKlist'] = true
    @_vector_MIMARK_GTMARKlist = 
        Proc.new { |_v| 
            begin
              ___lambda = lambda { |_loop| 
                  _loop                   = 
                    Proc.new { |_n,_l| 
                        if ( 
                          trampCall( callProcedure( '=',
                              begin
                                if @global_lisp_binding.has_key?('__EQMARK') then
                                  @__EQMARK
                                else raise NameError.new( "Error: undefined variable __EQMARK", "__EQMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:870"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    _n
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                              -1
                                       ))))
                         ) then
                            begin
                                _l
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                            end
                        else
                            DelayedCallPacket.new( 'loop',
                                begin
                                    _loop
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  trampCall( callProcedure( 'pred',
                                      begin
                                        if @global_lisp_binding.has_key?('_pred') then
                                          @_pred
                                        else raise NameError.new( "Error: undefined variable _pred", "_pred" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            _n
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                        end
                                               )))                                ,Cell.new(
                                  trampCall( callProcedure( 'cons',
                                      begin
                                        if @global_lisp_binding.has_key?('_cons') then
                                          @_cons
                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'vector-ref',
                                            begin
                                              if @global_lisp_binding.has_key?('_vector_MIMARKref') then
                                                @_vector_MIMARKref
                                              else raise NameError.new( "Error: undefined variable _vector_MIMARKref", "_vector_MIMARKref" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  _v
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                              end                                            ,Cell.new(
                                              begin
                                                  _n
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                              end
                                                     ))))                                      ,Cell.new(
                                        begin
                                            _l
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                        end
                                               ))))
                                         )))
                        end
                    }
                  DelayedCallPacket.new( 'loop',
                      begin
                          _loop
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'pred',
                            begin
                              if @global_lisp_binding.has_key?('_pred') then
                                @_pred
                              else raise NameError.new( "Error: undefined variable _pred", "_pred" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'vector-length',
                                  begin
                                    if @global_lisp_binding.has_key?('_vector_MIMARKlength') then
                                      @_vector_MIMARKlength
                                    else raise NameError.new( "Error: undefined variable _vector_MIMARKlength", "_vector_MIMARKlength" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:869"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _v
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))                      ,Cell.new(
                      Cell.new()
                               )))
              } ; ___lambda.call(
              nil
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_debug_MIMARKprint_MIMARKlength'] = true
    @_debug_MIMARKprint_MIMARKlength = 
      63
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_debug_MIMARKprint_MIMARKoutput_MIMARKfunc'] = true
    @_debug_MIMARKprint_MIMARKoutput_MIMARKfunc = 
        Proc.new { |_str| 
            begin
                STDERR.print(
                      begin
                          _str
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:881"] + __e.backtrace ) ; raise __e
                      end
                  )
              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:881"] + __e.backtrace ) ; raise __e
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_debug_MIMARKlimit_MIMARKlength'] = true
    @_debug_MIMARKlimit_MIMARKlength = 
        Proc.new { |_x| 
            DelayedCallPacket.new( '+',
                begin
                  if @global_lisp_binding.has_key?('__PLMARK') then
                    @__PLMARK
                  else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:886"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  if ( 
                    trampCall( callProcedure( '<',
                        begin
                          if @global_lisp_binding.has_key?('__LTMARK') then
                            @__LTMARK
                          else raise NameError.new( "Error: undefined variable __LTMARK", "__LTMARK" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:884"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                            if @global_lisp_binding.has_key?('_debug_MIMARKprint_MIMARKlength') then
                              @_debug_MIMARKprint_MIMARKlength
                            else raise NameError.new( "Error: undefined variable _debug_MIMARKprint_MIMARKlength", "_debug_MIMARKprint_MIMARKlength" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:884"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                              _x.length
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:884"] + __e.backtrace ) ; raise __e
                          end
                                 ))))
                   ) then
                      begin
                        ___lambda = lambda { |_n| 
                            trampCall( callProcedure( 'sprintf',
                                begin
                                  if @global_lisp_binding.has_key?('_sprintf') then
                                    @_sprintf
                                  else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:886"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  trampCall( callProcedure( '+',
                                      begin
                                        if @global_lisp_binding.has_key?('__PLMARK') then
                                          @__PLMARK
                                        else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:886"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                      "%"                                      ,Cell.new(
                                        begin
                                            _n
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:886"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                      "."                                      ,Cell.new(
                                        begin
                                            _n
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:886"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                      "s ..."
                                               )))))))                                ,Cell.new(
                                  begin
                                      _x
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:887"] + __e.backtrace ) ; raise __e
                                  end
                                         ))))
                        } ; ___lambda.call(
                              begin
                                if @global_lisp_binding.has_key?('_debug_MIMARKprint_MIMARKlength') then
                                  @_debug_MIMARKprint_MIMARKlength.to_s
                                else raise NameError.new( "Error: undefined variable _debug_MIMARKprint_MIMARKlength", "_debug_MIMARKprint_MIMARKlength" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:885"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                  else
                      begin
                          _x
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:887"] + __e.backtrace ) ; raise __e
                      end
                  end                ,Cell.new(
                "
"
                         )))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_debug_MIMARKprint'] = true
    @_debug_MIMARKprint = 
        LispMacro.new { |__form,_sourcefile,_lineno,_sourcesexp| 
            begin
              ___lambda = lambda { |_val| 
                  trampCall( callProcedure( 'cons',
                      begin
                        if @global_lisp_binding.has_key?('_cons') then
                          @_cons
                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                      :"let"                      ,Cell.new(
                        trampCall( callProcedure( 'cons',
                            begin
                              if @global_lisp_binding.has_key?('_cons') then
                                @_cons
                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      @_cons
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'cons',
                                        begin
                                          if @global_lisp_binding.has_key?('_cons') then
                                            @_cons
                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _val
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:897"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                        Cell.new(nil)
                                                 ))))                                  ,Cell.new(
                                  
                                           ))))                            ,Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      @_cons
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'cons',
                                        begin
                                          if @global_lisp_binding.has_key?('_cons') then
                                            @_cons
                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                        :"debug-print-output-func"                                        ,Cell.new(
                                          trampCall( callProcedure( 'cons',
                                              begin
                                                if @global_lisp_binding.has_key?('_cons') then
                                                  @_cons
                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'cons',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cons') then
                                                        @_cons
                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                    :"debug-limit-length"                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'cons',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cons') then
                                                              @_cons
                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            trampCall( callProcedure( 'cons',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                    @_cons
                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                :"sprintf"                                                                ,Cell.new(
                                                                  trampCall( callProcedure( 'cons',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                          @_cons
                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                      "#?=\"%s\":%s:%s"                                                                      ,Cell.new(
                                                                        trampCall( callProcedure( 'cons',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                                @_cons
                                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  _sourcefile
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:894"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,Cell.new(
                                                                              trampCall( callProcedure( 'cons',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                                      @_cons
                                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                    begin
                                                                                        _lineno
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:894"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,Cell.new(
                                                                                    trampCall( callProcedure( 'cons',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                                            @_cons
                                                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        Cell.new(
                                                                                          trampCall( callProcedure( 'cons',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                                                  @_cons
                                                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              Cell.new(
                                                                                              :"write-to-string"                                                                                              ,Cell.new(
                                                                                                trampCall( callProcedure( 'cons',
                                                                                                    begin
                                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                                        @_cons
                                                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                    Cell.new(
                                                                                                      begin
                                                                                                          _sourcesexp
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:894"] + __e.backtrace ) ; raise __e
                                                                                                      end                                                                                                    ,Cell.new(
                                                                                                    
                                                                                                             ))))
                                                                                                       ))))                                                                                        ,Cell.new(
                                                                                        
                                                                                                 ))))
                                                                                           ))))
                                                                                     ))))
                                                                               ))))
                                                                         ))))                                                          ,Cell.new(
                                                          
                                                                   ))))
                                                             ))))                                              ,Cell.new(
                                              
                                                       ))))
                                                 ))))                                  ,Cell.new(
                                    trampCall( callProcedure( 'cons',
                                        begin
                                          if @global_lisp_binding.has_key?('_cons') then
                                            @_cons
                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'cons',
                                              begin
                                                if @global_lisp_binding.has_key?('_cons') then
                                                  @_cons
                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                              :"set!"                                              ,Cell.new(
                                                trampCall( callProcedure( 'cons',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cons') then
                                                        @_cons
                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          _val
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:897"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'cons',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cons') then
                                                              @_cons
                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                __form
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:895"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,Cell.new(
                                                          
                                                                   ))))
                                                             ))))
                                                       ))))                                        ,Cell.new(
                                          trampCall( callProcedure( 'cons',
                                              begin
                                                if @global_lisp_binding.has_key?('_cons') then
                                                  @_cons
                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'cons',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cons') then
                                                        @_cons
                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                    :"debug-print-output-func"                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'cons',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cons') then
                                                              @_cons
                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            trampCall( callProcedure( 'cons',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                    @_cons
                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                :"debug-limit-length"                                                                ,Cell.new(
                                                                  trampCall( callProcedure( 'cons',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                          @_cons
                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        trampCall( callProcedure( 'cons',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                                @_cons
                                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                            :"+"                                                                            ,Cell.new(
                                                                              trampCall( callProcedure( 'cons',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                                      @_cons
                                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                  "#?-    "                                                                                  ,Cell.new(
                                                                                    trampCall( callProcedure( 'cons',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                                            @_cons
                                                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        Cell.new(
                                                                                          trampCall( callProcedure( 'cons',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                                                  @_cons
                                                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              Cell.new(
                                                                                              :"write-to-string"                                                                                              ,Cell.new(
                                                                                                trampCall( callProcedure( 'cons',
                                                                                                    begin
                                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                                        @_cons
                                                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                    Cell.new(
                                                                                                      begin
                                                                                                          _val
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:897"] + __e.backtrace ) ; raise __e
                                                                                                      end                                                                                                    ,Cell.new(
                                                                                                    
                                                                                                             ))))
                                                                                                       ))))                                                                                        ,Cell.new(
                                                                                        
                                                                                                 ))))
                                                                                           ))))
                                                                                     ))))                                                                      ,Cell.new(
                                                                      
                                                                               ))))
                                                                         ))))                                                          ,Cell.new(
                                                          
                                                                   ))))
                                                             ))))                                              ,Cell.new(
                                                trampCall( callProcedure( 'cons',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cons') then
                                                        @_cons
                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          _val
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:897"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                    
                                                             ))))
                                                       ))))
                                                 ))))
                                           ))))
                                     ))))
                               ))))
              } ; ___lambda.call(
                    trampCall( callProcedure( 'gensym',
                        begin
                          if @global_lisp_binding.has_key?('_gensym') then
                            @_gensym
                          else raise NameError.new( "Error: undefined variable _gensym", "_gensym" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:892"] + __e.backtrace ) ; raise __e
                        end                      ,
                      Cell.new(
                                 )))
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_pretty_MIMARKprint'] = true
    @_pretty_MIMARKprint = 
        Proc.new { |_s| 
            begin
              ___lambda = lambda { |_do_MIMARKindent,_pp_MIMARKparenl,_pp_MIMARKparenr,_pp_MIMARKatom,_pp_MIMARKlist| 
                  _do_MIMARKindent                   = 
                    Proc.new { |_level| 
                        DelayedCallPacket.new( 'for-each',
                            begin
                              if @global_lisp_binding.has_key?('_for_MIMARKeach') then
                                @_for_MIMARKeach
                              else raise NameError.new( "Error: undefined variable _for_MIMARKeach", "_for_MIMARKeach" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:907"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              Proc.new { |_x| 
                                  trampCall( callProcedure( 'display',
                                      begin
                                        if @global_lisp_binding.has_key?('_display') then
                                          @_display
                                        else raise NameError.new( "Error: undefined variable _display", "_display" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:913"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                      " "
                                               )))
                              }                            ,Cell.new(
                              trampCall( callProcedure( 'range',
                                  begin
                                    if @global_lisp_binding.has_key?('_range') then
                                      @_range
                                    else raise NameError.new( "Error: undefined variable _range", "_range" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:907"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _level
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:925"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                    }
                  _pp_MIMARKparenl                   = 
                    Proc.new { || 
                        DelayedCallPacket.new( 'display',
                            begin
                              if @global_lisp_binding.has_key?('_display') then
                                @_display
                              else raise NameError.new( "Error: undefined variable _display", "_display" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:913"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                            "("
                                     ))
                    }
                  _pp_MIMARKparenr                   = 
                    Proc.new { || 
                        DelayedCallPacket.new( 'display',
                            begin
                              if @global_lisp_binding.has_key?('_display') then
                                @_display
                              else raise NameError.new( "Error: undefined variable _display", "_display" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:913"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                            ")"
                                     ))
                    }
                  _pp_MIMARKatom                   = 
                    Proc.new { |_e,_prefix| 
                        if ( 
                          begin
                              _prefix
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:926"] + __e.backtrace ) ; raise __e
                          end
                         ) then
                            begin
                                trampCall( callProcedure( 'display',
                                    begin
                                      if @global_lisp_binding.has_key?('_display') then
                                        @_display
                                      else raise NameError.new( "Error: undefined variable _display", "_display" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:913"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                    " "
                                             )))
                            end
                        end
                        DelayedCallPacket.new( 'write',
                            begin
                              if @global_lisp_binding.has_key?('_write') then
                                @_write
                              else raise NameError.new( "Error: undefined variable _write", "_write" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:930"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _e
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:926"] + __e.backtrace ) ; raise __e
                              end
                                     ))
                    }
                  _pp_MIMARKlist                   = 
                    Proc.new { |_s,_level,_prefix| 
                        if ( 
                          trampCall( callProcedure( 'not',
                              begin
                                if @global_lisp_binding.has_key?('_not') then
                                  @_not
                                else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:796"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'eq?',
                                    begin
                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                        @_eq_QUMARK
                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:668"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                    false                                    ,Cell.new(
                                      begin
                                          _prefix
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:926"] + __e.backtrace ) ; raise __e
                                      end
                                             ))))
                                       )))
                         ) then
                            trampCall( callProcedure( 'do-indent',
                                begin
                                    _do_MIMARKindent
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:916"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      _level
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:925"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                        else
                          false
                        end
                        trampCall( callProcedure( 'pp-parenl',
                            begin
                                _pp_MIMARKparenl
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:917"] + __e.backtrace ) ; raise __e
                            end                          ,
                          Cell.new(
                                     )))
                        begin
                          ___lambda = lambda { |_loop| 
                              _loop                               = 
                                Proc.new { |_s,_prefix| 
                                    if ( 
                                      trampCall( callProcedure( 'null?',
                                          begin
                                            if @global_lisp_binding.has_key?('_null_QUMARK') then
                                              @_null_QUMARK
                                            else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:920"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _s
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:930"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                     ) then
                                        DelayedCallPacket.new( 'pp-parenr',
                                            begin
                                                _pp_MIMARKparenr
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:921"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                          Cell.new(
                                                     ))
                                    else
                                        begin
                                          ___lambda = lambda { |_e| 
                                              if ( 
                                                trampCall( callProcedure( 'list?',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                        @_list_QUMARK
                                                      else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:928"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          _e
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:926"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                               ) then
                                                  begin
                                                      if ( 
                                                        trampCall( callProcedure( 'not',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_not') then
                                                                @_not
                                                              else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:796"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              trampCall( callProcedure( 'eq?',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                      @_eq_QUMARK
                                                                    else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:668"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                  false                                                                  ,Cell.new(
                                                                    begin
                                                                        _prefix
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:926"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           ))))
                                                                     )))
                                                       ) then
                                                          trampCall( callProcedure( 'newline',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_newline') then
                                                                  @_newline
                                                                else raise NameError.new( "Error: undefined variable _newline", "_newline" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:931"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                            Cell.new(
                                                                       )))
                                                      else
                                                        false
                                                      end
                                                      trampCall( callProcedure( 'pp-list',
                                                          begin
                                                              _pp_MIMARKlist
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:929"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                _e
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:926"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,Cell.new(
                                                            trampCall( callProcedure( '+',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('__PLMARK') then
                                                                    @__PLMARK
                                                                  else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:925"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      _level
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:925"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,Cell.new(
                                                                1
                                                                         ))))                                                          ,Cell.new(
                                                            begin
                                                                _prefix
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:926"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))))
                                                  end
                                              else
                                                  trampCall( callProcedure( 'pp-atom',
                                                      begin
                                                          _pp_MIMARKatom
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:926"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            _e
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:926"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,Cell.new(
                                                        begin
                                                            _prefix
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:926"] + __e.backtrace ) ; raise __e
                                                        end
                                                               ))))
                                              end
                                              DelayedCallPacket.new( 'loop',
                                                  begin
                                                      _loop
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:927"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'cdr',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cdr') then
                                                            @_cdr
                                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:927"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              _s
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:930"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))                                                  ,Cell.new(
                                                  true
                                                           )))
                                          } ; ___lambda.call(
                                                trampCall( callProcedure( 'car',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_car') then
                                                        @_car
                                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:922"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          _s
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:930"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                                     )
                                        end
                                    end
                                }
                              DelayedCallPacket.new( 'loop',
                                  begin
                                      _loop
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:927"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _s
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:930"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                  false
                                           )))
                          } ; ___lambda.call(
                          nil
                                     )
                        end
                    }
                  if ( 
                    trampCall( callProcedure( 'list?',
                        begin
                          if @global_lisp_binding.has_key?('_list_QUMARK') then
                            @_list_QUMARK
                          else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:928"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              _s
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:930"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                   ) then
                      trampCall( callProcedure( 'pp-list',
                          begin
                              _pp_MIMARKlist
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:929"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                _s
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:930"] + __e.backtrace ) ; raise __e
                            end                          ,Cell.new(
                          0                          ,Cell.new(
                          false
                                   )))))
                  else
                      trampCall( callProcedure( 'write',
                          begin
                            if @global_lisp_binding.has_key?('_write') then
                              @_write
                            else raise NameError.new( "Error: undefined variable _write", "_write" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:930"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                _s
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:930"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                  end
                  DelayedCallPacket.new( 'newline',
                      begin
                        if @global_lisp_binding.has_key?('_newline') then
                          @_newline
                        else raise NameError.new( "Error: undefined variable _newline", "_newline" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:931"] + __e.backtrace ) ; raise __e
                      end                    ,
                    Cell.new(
                               ))
              } ; ___lambda.call(
              nil,nil,nil,nil,nil
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_global_MIMARKdefined_QUMARK'] = true
    @_global_MIMARKdefined_QUMARK = 
        Proc.new { |_sym| 
            DelayedCallPacket.new( 'find',
                begin
                  if @global_lisp_binding.has_key?('_find') then
                    @_find
                  else raise NameError.new( "Error: undefined variable _find", "_find" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:939"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  Proc.new { |_x| 
                      trampCall( callProcedure( 'eq?',
                          begin
                            if @global_lisp_binding.has_key?('_eq_QUMARK') then
                              @_eq_QUMARK
                            else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:941"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                _sym
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:941"] + __e.backtrace ) ; raise __e
                            end                          ,Cell.new(
                            begin
                                _x
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:941"] + __e.backtrace ) ; raise __e
                            end
                                   ))))
                  }                ,Cell.new(
                  trampCall( callProcedure( 'global-variables',
                      begin
                        if @global_lisp_binding.has_key?('_global_MIMARKvariables') then
                          @_global_MIMARKvariables
                        else raise NameError.new( "Error: undefined variable _global_MIMARKvariables", "_global_MIMARKvariables" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:942"] + __e.backtrace ) ; raise __e
                      end                    ,
                    Cell.new(
                               )))
                         )))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_compiled_MIMARKcode_MIMARKstring'] = true
    @_compiled_MIMARKcode_MIMARKstring = 
        Proc.new { |_compiled_MIMARKcode,_filename| 
            begin
              ___lambda = lambda { |_compiled_MIMARKbody_MIMARKstring| 
                  _compiled_MIMARKbody_MIMARKstring                   = 
                    Proc.new { |_string_MIMARKlist,_filename| 
                        DelayedCallPacket.new( '+',
                            begin
                              if @global_lisp_binding.has_key?('__PLMARK') then
                                @__PLMARK
                              else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:950"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'string-join',
                                  begin
                                    if @global_lisp_binding.has_key?('_string_MIMARKjoin') then
                                      @_string_MIMARKjoin
                                    else raise NameError.new( "Error: undefined variable _string_MIMARKjoin", "_string_MIMARKjoin" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:954"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _string_MIMARKlist
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:952"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                  "
#--------------------
"
                                           ))))                            ,Cell.new(
                              trampCall( callProcedure( 'string-join',
                                  begin
                                    if @global_lisp_binding.has_key?('_string_MIMARKjoin') then
                                      @_string_MIMARKjoin
                                    else raise NameError.new( "Error: undefined variable _string_MIMARKjoin", "_string_MIMARKjoin" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:954"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  Cell.new("

",Cell.new("# -------------------------------------------------------",Cell.new("# [EOF]",Cell.new("# -------------------------------------------------------"))))                                  ,Cell.new(
                                  "
"
                                           ))))
                                     )))
                    }
                  begin
                    ___lambda = lambda { |_str_MIMARKlist,_script_MIMARKflag| 
                        DelayedCallPacket.new( 'values',
                            begin
                              if @global_lisp_binding.has_key?('_values') then
                                @_values
                              else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:964"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _script_MIMARKflag
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:965"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                              trampCall( callProcedure( 'compiled-body-string',
                                  begin
                                      _compiled_MIMARKbody_MIMARKstring
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:966"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        _str_MIMARKlist
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:966"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        _filename
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:966"] + __e.backtrace ) ; raise __e
                                    end
                                           ))))
                                     )))
                    } ; ___lambda.call(
                          trampCall( callProcedure( 'assv-ref',
                              begin
                                if @global_lisp_binding.has_key?('_assv_MIMARKref') then
                                  @_assv_MIMARKref
                                else raise NameError.new( "Error: undefined variable _assv_MIMARKref", "_assv_MIMARKref" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:961"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    _filename
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:966"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                                begin
                                    _compiled_MIMARKcode
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:961"] + __e.backtrace ) ; raise __e
                                end
                                       ))))                        ,
                          if ( 
                            trampCall( callProcedure( 'not',
                                begin
                                  if @global_lisp_binding.has_key?('_not') then
                                    @_not
                                  else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:796"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  trampCall( callProcedure( 'eq?',
                                      begin
                                        if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                          @_eq_QUMARK
                                        else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:941"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                      false                                      ,Cell.new(
                                        trampCall( callProcedure( 'global-defined?',
                                            begin
                                              if @global_lisp_binding.has_key?('_global_MIMARKdefined_QUMARK') then
                                                @_global_MIMARKdefined_QUMARK
                                              else raise NameError.new( "Error: undefined variable _global_MIMARKdefined_QUMARK", "_global_MIMARKdefined_QUMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:962"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                            :"main"
                                                     )))
                                               ))))
                                         )))
                           ) then
                              DelayedCallPacket.new( 'procedure?',
                                  begin
                                    if @global_lisp_binding.has_key?('_procedure_QUMARK') then
                                      @_procedure_QUMARK
                                    else raise NameError.new( "Error: undefined variable _procedure_QUMARK", "_procedure_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:963"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                      if @global_lisp_binding.has_key?('_main') then
                                        @_main
                                      else raise NameError.new( "Error: undefined variable _main", "_main" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:963"] + __e.backtrace ) ; raise __e
                                    end
                                           ))
                          else
                            false
                          end
                               )
                  end
              } ; ___lambda.call(
              nil
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_print_MIMARKcompiled_MIMARKcode'] = true
    @_print_MIMARKcompiled_MIMARKcode = 
        Proc.new { |_src,*__rest__| _rest = __rest__[0] ;  
            begin
              ___lambda = lambda { |_print_MIMARKto_MIMARKfile| 
                  _print_MIMARKto_MIMARKfile                   = 
                    Proc.new { |_f| 
                        DelayedCallPacket.new( 'call-with-values',
                            begin
                              if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                @_call_MIMARKwith_MIMARKvalues
                              else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:650"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              Proc.new { || 
                                  trampCall( callProcedure( 'compiled-code-string',
                                      begin
                                        if @global_lisp_binding.has_key?('_compiled_MIMARKcode_MIMARKstring') then
                                          @_compiled_MIMARKcode_MIMARKstring
                                        else raise NameError.new( "Error: undefined variable _compiled_MIMARKcode_MIMARKstring", "_compiled_MIMARKcode_MIMARKstring" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:972"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'get-compiled-code',
                                            begin
                                              if @global_lisp_binding.has_key?('_get_MIMARKcompiled_MIMARKcode') then
                                                @_get_MIMARKcompiled_MIMARKcode
                                              else raise NameError.new( "Error: undefined variable _get_MIMARKcompiled_MIMARKcode", "_get_MIMARKcompiled_MIMARKcode" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:972"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                          Cell.new(
                                                     )))                                      ,Cell.new(
                                        begin
                                            _src
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1008"] + __e.backtrace ) ; raise __e
                                        end
                                               ))))
                              }                            ,Cell.new(
                              Proc.new { |_script_MIMARKflag,_str| 
                                  if ( 
                                    begin
                                        _script_MIMARKflag
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:973"] + __e.backtrace ) ; raise __e
                                    end
                                   ) then
                                      begin
                                          begin
                                              _f.puts(
                                                    trampCall( callProcedure( 'string-join',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_string_MIMARKjoin') then
                                                            @_string_MIMARKjoin
                                                          else raise NameError.new( "Error: undefined variable _string_MIMARKjoin", "_string_MIMARKjoin" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:994"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'cons',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                  @_cons
                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                              "#!/usr/local/bin/ruby"                                                              ,Cell.new(
                                                                trampCall( callProcedure( 'cons',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                        @_cons
                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                    "# -*- encoding: utf-8 -*-"                                                                    ,Cell.new(
                                                                      trampCall( callProcedure( 'cons',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_cons') then
                                                                              @_cons
                                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                          "#"                                                                          ,Cell.new(
                                                                            trampCall( callProcedure( 'cons',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                                    @_cons
                                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                Cell.new(
                                                                                "#    This file is nendo's compiled script file. "                                                                                ,Cell.new(
                                                                                  trampCall( callProcedure( 'cons',
                                                                                      begin
                                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                                          @_cons
                                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                      Cell.new(
                                                                                      "#    generated  \"nendo -c src\" command. "                                                                                      ,Cell.new(
                                                                                        trampCall( callProcedure( 'cons',
                                                                                            begin
                                                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                                                @_cons
                                                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,
                                                                                            Cell.new(
                                                                                            "#"                                                                                            ,Cell.new(
                                                                                              trampCall( callProcedure( 'cons',
                                                                                                  begin
                                                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                                                      @_cons
                                                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,
                                                                                                  Cell.new(
                                                                                                  ""                                                                                                  ,Cell.new(
                                                                                                    trampCall( callProcedure( 'cons',
                                                                                                        begin
                                                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                                                            @_cons
                                                                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                        Cell.new(
                                                                                                        "require 'rubygems'"                                                                                                        ,Cell.new(
                                                                                                          trampCall( callProcedure( 'cons',
                                                                                                              begin
                                                                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                                                                  @_cons
                                                                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,
                                                                                                              Cell.new(
                                                                                                              "require 'nendo'"                                                                                                              ,Cell.new(
                                                                                                                trampCall( callProcedure( 'cons',
                                                                                                                    begin
                                                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                                                        @_cons
                                                                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                                                    end                                                                                                                  ,
                                                                                                                    Cell.new(
                                                                                                                    ""                                                                                                                    ,Cell.new(
                                                                                                                      trampCall( callProcedure( 'cons',
                                                                                                                          begin
                                                                                                                            if @global_lisp_binding.has_key?('_cons') then
                                                                                                                              @_cons
                                                                                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                                                          end                                                                                                                        ,
                                                                                                                          Cell.new(
                                                                                                                          "core = Nendo::Core.new()"                                                                                                                          ,Cell.new(
                                                                                                                            trampCall( callProcedure( 'cons',
                                                                                                                                begin
                                                                                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                                                                                    @_cons
                                                                                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                                                                end                                                                                                                              ,
                                                                                                                                Cell.new(
                                                                                                                                "core.loadInitFile()"                                                                                                                                ,Cell.new(
                                                                                                                                  trampCall( callProcedure( 'cons',
                                                                                                                                      begin
                                                                                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                                                                                          @_cons
                                                                                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                                                                      end                                                                                                                                    ,
                                                                                                                                      Cell.new(
                                                                                                                                      "core.setArgv( ARGV )"                                                                                                                                      ,Cell.new(
                                                                                                                                        trampCall( callProcedure( 'cons',
                                                                                                                                            begin
                                                                                                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                                                                                                @_cons
                                                                                                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                                                                            end                                                                                                                                          ,
                                                                                                                                            Cell.new(
                                                                                                                                            "core.load_compiled_code_from_string( "                                                                                                                                            ,Cell.new(
                                                                                                                                              trampCall( callProcedure( 'cons',
                                                                                                                                                  begin
                                                                                                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                                                                                                      @_cons
                                                                                                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:872"] + __e.backtrace ) ; raise __e
                                                                                                                                                  end                                                                                                                                                ,
                                                                                                                                                  Cell.new(
                                                                                                                                                    trampCall( callProcedure( 'write-to-string',
                                                                                                                                                        begin
                                                                                                                                                          if @global_lisp_binding.has_key?('_write_MIMARKto_MIMARKstring') then
                                                                                                                                                            @_write_MIMARKto_MIMARKstring
                                                                                                                                                          else raise NameError.new( "Error: undefined variable _write_MIMARKto_MIMARKstring", "_write_MIMARKto_MIMARKstring" ) end
                                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:989"] + __e.backtrace ) ; raise __e
                                                                                                                                                        end                                                                                                                                                      ,
                                                                                                                                                        Cell.new(
                                                                                                                                                          begin
                                                                                                                                                              _str
                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1002"] + __e.backtrace ) ; raise __e
                                                                                                                                                          end
                                                                                                                                                                 )))                                                                                                                                                  ,Cell.new(
                                                                                                                                                  Cell.new(" ) ",Cell.new("core.replStr( \"(if (and (global-defined? 'main) (procedure? main)) (main *argv*) #f) \" )",Cell.new("")))
                                                                                                                                                           ))))
                                                                                                                                                     ))))
                                                                                                                                               ))))
                                                                                                                                         ))))
                                                                                                                                   ))))
                                                                                                                             ))))
                                                                                                                       ))))
                                                                                                                 ))))
                                                                                                           ))))
                                                                                                     ))))
                                                                                               ))))
                                                                                         ))))
                                                                                   ))))
                                                                             ))))
                                                                       ))))                                                        ,Cell.new(
                                                        "
"
                                                                 ))))
                                                )
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:994"] + __e.backtrace ) ; raise __e
                                          end
                                      end
                                  else
                                      if ( 
                                      true
                                       ) then
                                          begin
                                              begin
                                                  _f.puts(
                                                        trampCall( callProcedure( '+',
                                                            begin
                                                              if @global_lisp_binding.has_key?('__PLMARK') then
                                                                @__PLMARK
                                                              else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:994"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              trampCall( callProcedure( 'string-join',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_string_MIMARKjoin') then
                                                                      @_string_MIMARKjoin
                                                                    else raise NameError.new( "Error: undefined variable _string_MIMARKjoin", "_string_MIMARKjoin" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:994"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                  Cell.new("#",Cell.new("#    This file is nendo's compiled library file. ",Cell.new("#    generated  \"nendo -c src\" command. ",Cell.new("# "))))                                                                  ,Cell.new(
                                                                  "
"
                                                                           ))))                                                            ,Cell.new(
                                                            "
"                                                            ,Cell.new(
                                                              begin
                                                                  _str
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1002"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))))
                                                    )
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:994"] + __e.backtrace ) ; raise __e
                                              end
                                          end
                                      else
                                        Nil.new
                                      end
                                  end
                              }
                                     )))
                    }
                  if ( 
                    trampCall( callProcedure( 'not',
                        begin
                          if @global_lisp_binding.has_key?('_not') then
                            @_not
                          else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1004"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              File.exist?(
                                    begin
                                        _src
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1008"] + __e.backtrace ) ; raise __e
                                    end
                                )
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1004"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                   ) then
                      begin
                          begin raise RuntimeError, 
                            trampCall( callProcedure( 'sprintf',
                                begin
                                  if @global_lisp_binding.has_key?('_sprintf') then
                                    @_sprintf
                                  else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:894"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                "Error: file [%s] not found."                                ,Cell.new(
                                  begin
                                      _src
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1008"] + __e.backtrace ) ; raise __e
                                  end
                                         ))))
                          rescue => __e 
                            __e.set_backtrace( ["./lib/init.nnd:797"] + __e.backtrace )
                            raise __e
                          end 
                          trampCall( callProcedure( 'exit',
                              begin
                                if @global_lisp_binding.has_key?('_exit') then
                                  @_exit
                                else raise NameError.new( "Error: undefined variable _exit", "_exit" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1006"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              1
                                       )))
                      end
                  end
                  trampCall( callProcedure( 'clean-compiled-code',
                      begin
                        if @global_lisp_binding.has_key?('_clean_MIMARKcompiled_MIMARKcode') then
                          @_clean_MIMARKcompiled_MIMARKcode
                        else raise NameError.new( "Error: undefined variable _clean_MIMARKcompiled_MIMARKcode", "_clean_MIMARKcompiled_MIMARKcode" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1007"] + __e.backtrace ) ; raise __e
                      end                    ,
                    Cell.new(
                               )))
                  trampCall( callProcedure( 'load',
                      begin
                        if @global_lisp_binding.has_key?('_load') then
                          @_load
                        else raise NameError.new( "Error: undefined variable _load", "_load" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1008"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _src
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1008"] + __e.backtrace ) ; raise __e
                        end
                               )))
                  if ( 
                    trampCall( callProcedure( 'null?',
                        begin
                          if @global_lisp_binding.has_key?('_null_QUMARK') then
                            @_null_QUMARK
                          else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1009"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              _rest
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1011"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                   ) then
                      DelayedCallPacket.new( 'print-to-file',
                          begin
                              _print_MIMARKto_MIMARKfile
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1013"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                STDOUT
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1010"] + __e.backtrace ) ; raise __e
                            end
                                   ))
                  else
                      DelayedCallPacket.new( 'with-open',
                          begin
                            if @global_lisp_binding.has_key?('_with_MIMARKopen') then
                              @_with_MIMARKopen
                            else raise NameError.new( "Error: undefined variable _with_MIMARKopen", "_with_MIMARKopen" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1011"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            trampCall( callProcedure( 'car',
                                begin
                                  if @global_lisp_binding.has_key?('_car') then
                                    @_car
                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1011"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      _rest
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1011"] + __e.backtrace ) ; raise __e
                                  end
                                         )))                          ,Cell.new(
                            Proc.new { |_f| 
                                trampCall( callProcedure( 'print-to-file',
                                    begin
                                        _print_MIMARKto_MIMARKfile
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1013"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _f
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1013"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                            }                          ,Cell.new(
                          "w"
                                   ))))
                  end
              } ; ___lambda.call(
              nil
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['__PAMARKcompile_MIMARKphase'] = true
    @__PAMARKcompile_MIMARKphase = 
        Proc.new { |_sexp| 
            if ( 
              trampCall( callProcedure( 'list?',
                  begin
                    if @global_lisp_binding.has_key?('_list_QUMARK') then
                      @_list_QUMARK
                    else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1028"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        _sexp
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1035"] + __e.backtrace ) ; raise __e
                    end
                           )))
             ) then
                begin
                    trampCall( callProcedure( 'for-each',
                        begin
                          if @global_lisp_binding.has_key?('_for_MIMARKeach') then
                            @_for_MIMARKeach
                          else raise NameError.new( "Error: undefined variable _for_MIMARKeach", "_for_MIMARKeach" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1029"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          Proc.new { |_func| 
                              begin
                                @global_lisp_binding['_sexp'] = true
                                _sexp = 
                                    trampCall( callProcedure( 'func',
                                        begin
                                            _func
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1031"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _sexp
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1035"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                              end
                          }                        ,Cell.new(
                          begin
                            if @global_lisp_binding.has_key?('__PAMARKcompile_MIMARKphase_MIMARKfunctions') then
                              @__PAMARKcompile_MIMARKphase_MIMARKfunctions
                            else raise NameError.new( "Error: undefined variable __PAMARKcompile_MIMARKphase_MIMARKfunctions", "__PAMARKcompile_MIMARKphase_MIMARKfunctions" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1032"] + __e.backtrace ) ; raise __e
                          end
                                 ))))
                    begin
                        _sexp
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1035"] + __e.backtrace ) ; raise __e
                    end
                end
            else
                if ( 
                true
                 ) then
                    begin
                        begin
                            _sexp
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1035"] + __e.backtrace ) ; raise __e
                        end
                    end
                else
                    Cell.new()
                end
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_setup_MIMARKtailcall_MIMARKmark'] = true
    @_setup_MIMARKtailcall_MIMARKmark = 
        Proc.new { |_sexp| 
            begin
              ___lambda = lambda { |_reserved_QUMARK,_setup_MIMARKlet_MIMARKargs,_setup_MIMARKproc,_setup_MIMARKproc_MIMARKbody| 
                  _reserved_QUMARK                   = 
                    Proc.new { |_sym| 
                        DelayedCallPacket.new( 'memq',
                            begin
                              if @global_lisp_binding.has_key?('_memq') then
                                @_memq
                              else raise NameError.new( "Error: undefined variable _memq", "_memq" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1043"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _sym
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1043"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                            Cell.new(:"quote",Cell.new(:"macro",Cell.new(:"begin",Cell.new(:"lambda",Cell.new(:"if",Cell.new(:"let",Cell.new(:"letrec",Cell.new(:"define"))))))))
                                     )))
                    }
                  _setup_MIMARKlet_MIMARKargs                   = 
                    Proc.new { |_args| 
                        DelayedCallPacket.new( 'map',
                            begin
                              if @global_lisp_binding.has_key?('_map') then
                                @_map
                              else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1046"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              Proc.new { |_arg| 
                                  begin
                                    ___lambda = lambda { |_name,_body| 
                                        trampCall( callProcedure( 'list',
                                            begin
                                              if @global_lisp_binding.has_key?('_list') then
                                                @_list
                                              else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1050"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  _name
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1050"] + __e.backtrace ) ; raise __e
                                              end                                            ,Cell.new(
                                              if ( 
                                                trampCall( callProcedure( 'list?',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                        @_list_QUMARK
                                                      else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1131"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          _body
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1055"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                               ) then
                                                  if ( 
                                                    trampCall( callProcedure( 'reserved?',
                                                        begin
                                                            _reserved_QUMARK
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1133"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'car',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_car') then
                                                                  @_car
                                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1137"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    _body
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1055"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                                 )))
                                                   ) then
                                                      trampCall( callProcedure( 'setup-tailcall-mark',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_setup_MIMARKtailcall_MIMARKmark') then
                                                              @_setup_MIMARKtailcall_MIMARKmark
                                                            else raise NameError.new( "Error: undefined variable _setup_MIMARKtailcall_MIMARKmark", "_setup_MIMARKtailcall_MIMARKmark" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1134"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                _body
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1055"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))
                                                  else
                                                      begin
                                                          _body
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1055"] + __e.backtrace ) ; raise __e
                                                      end
                                                  end
                                              else
                                                  begin
                                                      _body
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1055"] + __e.backtrace ) ; raise __e
                                                  end
                                              end
                                                     ))))
                                    } ; ___lambda.call(
                                          trampCall( callProcedure( 'first',
                                              begin
                                                if @global_lisp_binding.has_key?('_first') then
                                                  @_first
                                                else raise NameError.new( "Error: undefined variable _first", "_first" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1048"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    _arg
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1049"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))                                        ,
                                          trampCall( callProcedure( 'second',
                                              begin
                                                if @global_lisp_binding.has_key?('_second') then
                                                  @_second
                                                else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1130"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    _arg
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1049"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                               )
                                  end
                              }                            ,Cell.new(
                              begin
                                  _args
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1056"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                    }
                  _setup_MIMARKproc                   = 
                    Proc.new { |_sexp| 
                        if ( 
                          trampCall( callProcedure( 'null?',
                              begin
                                if @global_lisp_binding.has_key?('_null_QUMARK') then
                                  @_null_QUMARK
                                else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1132"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    _sexp
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                         ) then
                            begin
                                begin
                                    _sexp
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                end
                            end
                        else
                            if ( 
                              if ( 
                                trampCall( callProcedure( 'not',
                                    begin
                                      if @global_lisp_binding.has_key?('_not') then
                                        @_not
                                      else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1132"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'eq?',
                                          begin
                                            if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                              @_eq_QUMARK
                                            else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:941"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                          false                                          ,Cell.new(
                                            trampCall( callProcedure( 'list?',
                                                begin
                                                  if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                    @_list_QUMARK
                                                  else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1131"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      _sexp
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                   ))))
                                             )))
                               ) then
                                  trampCall( callProcedure( '<',
                                      begin
                                        if @global_lisp_binding.has_key?('__LTMARK') then
                                          @__LTMARK
                                        else raise NameError.new( "Error: undefined variable __LTMARK", "__LTMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1063"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                      0                                      ,Cell.new(
                                        trampCall( callProcedure( 'length',
                                            begin
                                              if @global_lisp_binding.has_key?('_length') then
                                                @_length
                                              else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  _sexp
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               ))))
                              else
                                false
                              end
                             ) then
                                begin
                                    if ( 
                                      trampCall( callProcedure( 'reserved?',
                                          begin
                                              _reserved_QUMARK
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1133"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            trampCall( callProcedure( 'car',
                                                begin
                                                  if @global_lisp_binding.has_key?('_car') then
                                                    @_car
                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1137"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      _sexp
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                   )))
                                     ) then
                                        DelayedCallPacket.new( 'setup-tailcall-mark',
                                            begin
                                              if @global_lisp_binding.has_key?('_setup_MIMARKtailcall_MIMARKmark') then
                                                @_setup_MIMARKtailcall_MIMARKmark
                                              else raise NameError.new( "Error: undefined variable _setup_MIMARKtailcall_MIMARKmark", "_setup_MIMARKtailcall_MIMARKmark" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1134"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  _sexp
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                              end
                                                     ))
                                    else
                                        if ( 
                                          trampCall( callProcedure( 'pair?',
                                              begin
                                                if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                  @_pair_QUMARK
                                                else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1091"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'car',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_car') then
                                                        @_car
                                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1137"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          _sexp
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                                       )))
                                         ) then
                                            begin
                                                _sexp
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                            end
                                        else
                                            DelayedCallPacket.new( 'cons',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cons') then
                                                    @_cons
                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                :"%tailcall"                                                ,Cell.new(
                                                  trampCall( callProcedure( 'cons',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_cons') then
                                                          @_cons
                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            _sexp
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,Cell.new(
                                                      
                                                               ))))
                                                         )))
                                        end
                                    end
                                end
                            else
                                if ( 
                                true
                                 ) then
                                    begin
                                        begin
                                            _sexp
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                        end
                                    end
                                else
                                    Cell.new()
                                end
                            end
                        end
                    }
                  _setup_MIMARKproc_MIMARKbody                   = 
                    Proc.new { |_sexp| 
                        if ( 
                          begin
                            ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20188| 
                                if ( 
                                  begin
                                      ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20188
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                                 ) then
                                    begin
                                        ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20188
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                else
                                    begin
                                      ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20189| 
                                          if ( 
                                            begin
                                                ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20189
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end
                                           ) then
                                              begin
                                                  ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20189
                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                              end
                                          else
                                            false
                                          end
                                      } ; ___lambda.call(
                                            trampCall( callProcedure( 'null?',
                                                begin
                                                  if @global_lisp_binding.has_key?('_null_QUMARK') then
                                                    @_null_QUMARK
                                                  else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1132"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      _sexp
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                 )
                                    end
                                end
                            } ; ___lambda.call(
                                  trampCall( callProcedure( 'not',
                                      begin
                                        if @global_lisp_binding.has_key?('_not') then
                                          @_not
                                        else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1132"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'list?',
                                            begin
                                              if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                @_list_QUMARK
                                              else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1131"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  _sexp
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               )))
                                       )
                          end
                         ) then
                            begin
                                _sexp
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                            end
                        else
                            begin
                              ___lambda = lambda { |_r| 
                                  begin
                                    ___lambda = lambda { |_last| 
                                        begin
                                          ___lambda = lambda { |_other| 
                                              if ( 
                                                trampCall( callProcedure( 'not',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_not') then
                                                        @_not
                                                      else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1132"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'pair?',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                              @_pair_QUMARK
                                                            else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1091"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                _last
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1087"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))
                                                             )))
                                               ) then
                                                  begin
                                                      _sexp
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                  end
                                              else
                                                  DelayedCallPacket.new( 'reverse',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_reverse') then
                                                          @_reverse
                                                        else raise NameError.new( "Error: undefined variable _reverse", "_reverse" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1081"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        trampCall( callProcedure( 'cons',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                @_cons
                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              if ( 
                                                                trampCall( callProcedure( 'reserved?',
                                                                    begin
                                                                        _reserved_QUMARK
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1133"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      trampCall( callProcedure( 'car',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_car') then
                                                                              @_car
                                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1137"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                _last
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1087"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))
                                                                             )))
                                                               ) then
                                                                  trampCall( callProcedure( 'setup-tailcall-mark',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_setup_MIMARKtailcall_MIMARKmark') then
                                                                          @_setup_MIMARKtailcall_MIMARKmark
                                                                        else raise NameError.new( "Error: undefined variable _setup_MIMARKtailcall_MIMARKmark", "_setup_MIMARKtailcall_MIMARKmark" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1134"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            _last
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1087"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               )))
                                                              else
                                                                  trampCall( callProcedure( 'cons',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                          @_cons
                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                      :"%tailcall"                                                                      ,Cell.new(
                                                                        trampCall( callProcedure( 'cons',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                                @_cons
                                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  _last
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1087"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,Cell.new(
                                                                            
                                                                                     ))))
                                                                               ))))
                                                              end                                                            ,Cell.new(
                                                              begin
                                                                  _other
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1088"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     ))))
                                                               ))
                                              end
                                          } ; ___lambda.call(
                                                trampCall( callProcedure( 'cdr',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cdr') then
                                                        @_cdr
                                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1103"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          _r
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1078"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                                     )
                                        end
                                    } ; ___lambda.call(
                                          trampCall( callProcedure( 'car',
                                              begin
                                                if @global_lisp_binding.has_key?('_car') then
                                                  @_car
                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1137"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    _r
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1078"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                               )
                                  end
                              } ; ___lambda.call(
                                    trampCall( callProcedure( 'reverse',
                                        begin
                                          if @global_lisp_binding.has_key?('_reverse') then
                                            @_reverse
                                          else raise NameError.new( "Error: undefined variable _reverse", "_reverse" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1081"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _sexp
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                         )
                            end
                        end
                    }
                  if ( 
                    trampCall( callProcedure( 'not',
                        begin
                          if @global_lisp_binding.has_key?('_not') then
                            @_not
                          else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1132"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'pair?',
                              begin
                                if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                  @_pair_QUMARK
                                else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1091"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    _sexp
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                                 )))
                   ) then
                      begin
                          begin
                              _sexp
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                          end
                      end
                  else
                      if ( 
                        trampCall( callProcedure( 'null?',
                            begin
                              if @global_lisp_binding.has_key?('_null_QUMARK') then
                                @_null_QUMARK
                              else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1132"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _sexp
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                       ) then
                          begin
                            Cell.new()
                          end
                      else
                          if ( 
                            trampCall( callProcedure( 'list?',
                                begin
                                  if @global_lisp_binding.has_key?('_list_QUMARK') then
                                    @_list_QUMARK
                                  else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1131"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      _sexp
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              begin
                                  begin
                                    ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20190| 
                                        if ( 
                                          begin
                                            ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20200| 
                                                if ( 
                                                  begin
                                                      ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20200
                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                  end
                                                 ) then
                                                    begin
                                                        ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20200
                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                    end
                                                else
                                                  false
                                                end
                                            } ; ___lambda.call(
                                                  trampCall( callProcedure( 'eqv?',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                          @_eqv_QUMARK
                                                        else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:580"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                      :"quote"                                                      ,Cell.new(
                                                        begin
                                                            ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20190
                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                        end
                                                               ))))
                                                       )
                                          end
                                         ) then
                                            begin
                                                begin
                                                    _sexp
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                end
                                            end
                                        else
                                            if ( 
                                              begin
                                                ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20201| 
                                                    if ( 
                                                      begin
                                                          ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20201
                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                      end
                                                     ) then
                                                        begin
                                                            ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20201
                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                        end
                                                    else
                                                      false
                                                    end
                                                } ; ___lambda.call(
                                                      trampCall( callProcedure( 'eqv?',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                              @_eqv_QUMARK
                                                            else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:580"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                          :"macro"                                                          ,Cell.new(
                                                            begin
                                                                ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20190
                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   ))))
                                                           )
                                              end
                                             ) then
                                                begin
                                                    begin
                                                        _sexp
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                    end
                                                end
                                            else
                                                if ( 
                                                  begin
                                                    ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20202| 
                                                        if ( 
                                                          begin
                                                              ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20202
                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                          end
                                                         ) then
                                                            begin
                                                                ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20202
                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                            end
                                                        else
                                                          false
                                                        end
                                                    } ; ___lambda.call(
                                                          trampCall( callProcedure( 'eqv?',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                  @_eqv_QUMARK
                                                                else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:580"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                              :"begin"                                                              ,Cell.new(
                                                                begin
                                                                    ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20190
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       ))))
                                                               )
                                                  end
                                                 ) then
                                                    begin
                                                        DelayedCallPacket.new( 'cons',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                @_cons
                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                            :"begin"                                                            ,Cell.new(
                                                              trampCall( callProcedure( 'setup-proc-body',
                                                                  begin
                                                                      _setup_MIMARKproc_MIMARKbody
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1126"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    trampCall( callProcedure( 'cdr',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_cdr') then
                                                                            @_cdr
                                                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1103"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              _sexp
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 )))
                                                                           )))
                                                                     )))
                                                    end
                                                else
                                                    if ( 
                                                      begin
                                                        ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20203| 
                                                            if ( 
                                                              begin
                                                                  ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20203
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end
                                                             ) then
                                                                begin
                                                                    ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20203
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end
                                                            else
                                                              false
                                                            end
                                                        } ; ___lambda.call(
                                                              trampCall( callProcedure( 'eqv?',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                      @_eqv_QUMARK
                                                                    else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:580"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                  :"lambda"                                                                  ,Cell.new(
                                                                    begin
                                                                        ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20190
                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           ))))
                                                                   )
                                                      end
                                                     ) then
                                                        begin
                                                            DelayedCallPacket.new( 'cons',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                    @_cons
                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                :"lambda"                                                                ,Cell.new(
                                                                  trampCall( callProcedure( 'cons',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                          @_cons
                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        trampCall( callProcedure( 'second',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_second') then
                                                                                @_second
                                                                              else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1130"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  _sexp
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                                     )))                                                                      ,Cell.new(
                                                                        trampCall( callProcedure( 'setup-proc-body',
                                                                            begin
                                                                                _setup_MIMARKproc_MIMARKbody
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1126"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              trampCall( callProcedure( 'cddr',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_cddr') then
                                                                                      @_cddr
                                                                                    else raise NameError.new( "Error: undefined variable _cddr", "_cddr" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1126"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                    begin
                                                                                        _sexp
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                           )))
                                                                                     )))
                                                                               ))))
                                                                         )))
                                                        end
                                                    else
                                                        if ( 
                                                          begin
                                                            ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20204| 
                                                                if ( 
                                                                  begin
                                                                      ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20204
                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                 ) then
                                                                    begin
                                                                        ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20204
                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                else
                                                                  false
                                                                end
                                                            } ; ___lambda.call(
                                                                  trampCall( callProcedure( 'eqv?',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                          @_eqv_QUMARK
                                                                        else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:580"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                      :"if"                                                                      ,Cell.new(
                                                                        begin
                                                                            ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20190
                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               ))))
                                                                       )
                                                          end
                                                         ) then
                                                            begin
                                                                begin
                                                                  ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20205| 
                                                                      if ( 
                                                                        begin
                                                                          ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20211| 
                                                                              if ( 
                                                                                begin
                                                                                    ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20211
                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                               ) then
                                                                                  begin
                                                                                      ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20211
                                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                              else
                                                                                false
                                                                              end
                                                                          } ; ___lambda.call(
                                                                                trampCall( callProcedure( 'eqv?',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                        @_eqv_QUMARK
                                                                                      else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:580"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    Cell.new(
                                                                                    3                                                                                    ,Cell.new(
                                                                                      begin
                                                                                          ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20205
                                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                             ))))
                                                                                     )
                                                                        end
                                                                       ) then
                                                                          begin
                                                                              DelayedCallPacket.new( 'cons',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                                      @_cons
                                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                  :"if"                                                                                  ,Cell.new(
                                                                                    trampCall( callProcedure( 'cons',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                                            @_cons
                                                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        Cell.new(
                                                                                          trampCall( callProcedure( 'second',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_second') then
                                                                                                  @_second
                                                                                                else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1130"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              Cell.new(
                                                                                                begin
                                                                                                    _sexp
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                                                                end
                                                                                                       )))                                                                                        ,Cell.new(
                                                                                          trampCall( callProcedure( 'cons',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                                                  @_cons
                                                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              Cell.new(
                                                                                                trampCall( callProcedure( 'setup-proc',
                                                                                                    begin
                                                                                                        _setup_MIMARKproc
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1118"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                    Cell.new(
                                                                                                      trampCall( callProcedure( 'third',
                                                                                                          begin
                                                                                                            if @global_lisp_binding.has_key?('_third') then
                                                                                                              @_third
                                                                                                            else raise NameError.new( "Error: undefined variable _third", "_third" ) end
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1128"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                          Cell.new(
                                                                                                            begin
                                                                                                                _sexp
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                                                                            end
                                                                                                                   )))
                                                                                                             )))                                                                                              ,Cell.new(
                                                                                              
                                                                                                       ))))
                                                                                                 ))))
                                                                                           )))
                                                                          end
                                                                      else
                                                                          if ( 
                                                                            begin
                                                                              ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20212| 
                                                                                  if ( 
                                                                                    begin
                                                                                        ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20212
                                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                   ) then
                                                                                      begin
                                                                                          ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20212
                                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                  else
                                                                                    false
                                                                                  end
                                                                              } ; ___lambda.call(
                                                                                    trampCall( callProcedure( 'eqv?',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                            @_eqv_QUMARK
                                                                                          else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:580"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        Cell.new(
                                                                                        4                                                                                        ,Cell.new(
                                                                                          begin
                                                                                              ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20205
                                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                                 ))))
                                                                                         )
                                                                            end
                                                                           ) then
                                                                              begin
                                                                                  DelayedCallPacket.new( 'cons',
                                                                                      begin
                                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                                          @_cons
                                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                      Cell.new(
                                                                                      :"if"                                                                                      ,Cell.new(
                                                                                        trampCall( callProcedure( 'cons',
                                                                                            begin
                                                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                                                @_cons
                                                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,
                                                                                            Cell.new(
                                                                                              trampCall( callProcedure( 'second',
                                                                                                  begin
                                                                                                    if @global_lisp_binding.has_key?('_second') then
                                                                                                      @_second
                                                                                                    else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1130"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,
                                                                                                  Cell.new(
                                                                                                    begin
                                                                                                        _sexp
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                                                                    end
                                                                                                           )))                                                                                            ,Cell.new(
                                                                                              trampCall( callProcedure( 'cons',
                                                                                                  begin
                                                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                                                      @_cons
                                                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,
                                                                                                  Cell.new(
                                                                                                    trampCall( callProcedure( 'setup-proc',
                                                                                                        begin
                                                                                                            _setup_MIMARKproc
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1118"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                        Cell.new(
                                                                                                          trampCall( callProcedure( 'third',
                                                                                                              begin
                                                                                                                if @global_lisp_binding.has_key?('_third') then
                                                                                                                  @_third
                                                                                                                else raise NameError.new( "Error: undefined variable _third", "_third" ) end
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1128"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,
                                                                                                              Cell.new(
                                                                                                                begin
                                                                                                                    _sexp
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                                                                                end
                                                                                                                       )))
                                                                                                                 )))                                                                                                  ,Cell.new(
                                                                                                    trampCall( callProcedure( 'cons',
                                                                                                        begin
                                                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                                                            @_cons
                                                                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                        Cell.new(
                                                                                                          trampCall( callProcedure( 'setup-proc',
                                                                                                              begin
                                                                                                                  _setup_MIMARKproc
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1118"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,
                                                                                                              Cell.new(
                                                                                                                trampCall( callProcedure( 'fourth',
                                                                                                                    begin
                                                                                                                      if @global_lisp_binding.has_key?('_fourth') then
                                                                                                                        @_fourth
                                                                                                                      else raise NameError.new( "Error: undefined variable _fourth", "_fourth" ) end
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1118"] + __e.backtrace ) ; raise __e
                                                                                                                    end                                                                                                                  ,
                                                                                                                    Cell.new(
                                                                                                                      begin
                                                                                                                          _sexp
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                                                                                      end
                                                                                                                             )))
                                                                                                                       )))                                                                                                        ,Cell.new(
                                                                                                        
                                                                                                                 ))))
                                                                                                           ))))
                                                                                                     ))))
                                                                                               )))
                                                                              end
                                                                          else
                                                                              Cell.new()
                                                                          end
                                                                      end
                                                                  } ; ___lambda.call(
                                                                        trampCall( callProcedure( 'length',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_length') then
                                                                                @_length
                                                                              else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  _sexp
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                                     )))
                                                                             )
                                                                end
                                                            end
                                                        else
                                                            if ( 
                                                              begin
                                                                ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20206| 
                                                                    if ( 
                                                                      begin
                                                                          ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20206
                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                     ) then
                                                                        begin
                                                                            ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20206
                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    else
                                                                      false
                                                                    end
                                                                } ; ___lambda.call(
                                                                      trampCall( callProcedure( 'eqv?',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                              @_eqv_QUMARK
                                                                            else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:580"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                          :"let"                                                                          ,Cell.new(
                                                                            begin
                                                                                ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20190
                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   ))))
                                                                           )
                                                              end
                                                             ) then
                                                                begin
                                                                    DelayedCallPacket.new( 'cons',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                            @_cons
                                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                        :"let"                                                                        ,Cell.new(
                                                                          trampCall( callProcedure( 'cons',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                                  @_cons
                                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                                trampCall( callProcedure( 'setup-let-args',
                                                                                    begin
                                                                                        _setup_MIMARKlet_MIMARKargs
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1125"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    Cell.new(
                                                                                      trampCall( callProcedure( 'second',
                                                                                          begin
                                                                                            if @global_lisp_binding.has_key?('_second') then
                                                                                              @_second
                                                                                            else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1130"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          Cell.new(
                                                                                            begin
                                                                                                _sexp
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                                                            end
                                                                                                   )))
                                                                                             )))                                                                              ,Cell.new(
                                                                                trampCall( callProcedure( 'setup-proc-body',
                                                                                    begin
                                                                                        _setup_MIMARKproc_MIMARKbody
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1126"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    Cell.new(
                                                                                      trampCall( callProcedure( 'cddr',
                                                                                          begin
                                                                                            if @global_lisp_binding.has_key?('_cddr') then
                                                                                              @_cddr
                                                                                            else raise NameError.new( "Error: undefined variable _cddr", "_cddr" ) end
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1126"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          Cell.new(
                                                                                            begin
                                                                                                _sexp
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                                                            end
                                                                                                   )))
                                                                                             )))
                                                                                       ))))
                                                                                 )))
                                                                end
                                                            else
                                                                if ( 
                                                                  begin
                                                                    ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20207| 
                                                                        if ( 
                                                                          begin
                                                                              ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20207
                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                         ) then
                                                                            begin
                                                                                ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20207
                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                        else
                                                                          false
                                                                        end
                                                                    } ; ___lambda.call(
                                                                          trampCall( callProcedure( 'eqv?',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                  @_eqv_QUMARK
                                                                                else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:580"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                              :"letrec"                                                                              ,Cell.new(
                                                                                begin
                                                                                    ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20190
                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                                       ))))
                                                                               )
                                                                  end
                                                                 ) then
                                                                    begin
                                                                        DelayedCallPacket.new( 'cons',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                                @_cons
                                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                            :"letrec"                                                                            ,Cell.new(
                                                                              trampCall( callProcedure( 'cons',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                                      @_cons
                                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                    trampCall( callProcedure( 'setup-let-args',
                                                                                        begin
                                                                                            _setup_MIMARKlet_MIMARKargs
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1125"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        Cell.new(
                                                                                          trampCall( callProcedure( 'second',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_second') then
                                                                                                  @_second
                                                                                                else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1130"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              Cell.new(
                                                                                                begin
                                                                                                    _sexp
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                                                                end
                                                                                                       )))
                                                                                                 )))                                                                                  ,Cell.new(
                                                                                    trampCall( callProcedure( 'setup-proc-body',
                                                                                        begin
                                                                                            _setup_MIMARKproc_MIMARKbody
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1126"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        Cell.new(
                                                                                          trampCall( callProcedure( 'cddr',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_cddr') then
                                                                                                  @_cddr
                                                                                                else raise NameError.new( "Error: undefined variable _cddr", "_cddr" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1126"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              Cell.new(
                                                                                                begin
                                                                                                    _sexp
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                                                                end
                                                                                                       )))
                                                                                                 )))
                                                                                           ))))
                                                                                     )))
                                                                    end
                                                                else
                                                                    if ( 
                                                                      begin
                                                                        ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20208| 
                                                                            if ( 
                                                                              begin
                                                                                  ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20208
                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                             ) then
                                                                                begin
                                                                                    ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20208
                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                            else
                                                                              false
                                                                            end
                                                                        } ; ___lambda.call(
                                                                              trampCall( callProcedure( 'eqv?',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                      @_eqv_QUMARK
                                                                                    else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:580"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                  :"define"                                                                                  ,Cell.new(
                                                                                    begin
                                                                                        ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20190
                                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                           ))))
                                                                                   )
                                                                      end
                                                                     ) then
                                                                        begin
                                                                            begin
                                                                              ___lambda = lambda { |_val| 
                                                                                  DelayedCallPacket.new( 'cons',
                                                                                      begin
                                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                                          @_cons
                                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                      Cell.new(
                                                                                      :"define"                                                                                      ,Cell.new(
                                                                                        trampCall( callProcedure( 'cons',
                                                                                            begin
                                                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                                                @_cons
                                                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,
                                                                                            Cell.new(
                                                                                              trampCall( callProcedure( 'second',
                                                                                                  begin
                                                                                                    if @global_lisp_binding.has_key?('_second') then
                                                                                                      @_second
                                                                                                    else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1130"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,
                                                                                                  Cell.new(
                                                                                                    begin
                                                                                                        _sexp
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                                                                    end
                                                                                                           )))                                                                                            ,Cell.new(
                                                                                              trampCall( callProcedure( 'cons',
                                                                                                  begin
                                                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                                                      @_cons
                                                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,
                                                                                                  Cell.new(
                                                                                                    if ( 
                                                                                                      if ( 
                                                                                                        trampCall( callProcedure( 'not',
                                                                                                            begin
                                                                                                              if @global_lisp_binding.has_key?('_not') then
                                                                                                                @_not
                                                                                                              else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1132"] + __e.backtrace ) ; raise __e
                                                                                                            end                                                                                                          ,
                                                                                                            Cell.new(
                                                                                                              trampCall( callProcedure( 'eq?',
                                                                                                                  begin
                                                                                                                    if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                                                                      @_eq_QUMARK
                                                                                                                    else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:941"] + __e.backtrace ) ; raise __e
                                                                                                                  end                                                                                                                ,
                                                                                                                  Cell.new(
                                                                                                                  false                                                                                                                  ,Cell.new(
                                                                                                                    trampCall( callProcedure( 'list?',
                                                                                                                        begin
                                                                                                                          if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                                                                                            @_list_QUMARK
                                                                                                                          else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1131"] + __e.backtrace ) ; raise __e
                                                                                                                        end                                                                                                                      ,
                                                                                                                        Cell.new(
                                                                                                                          begin
                                                                                                                              _val
                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1135"] + __e.backtrace ) ; raise __e
                                                                                                                          end
                                                                                                                                 )))
                                                                                                                           ))))
                                                                                                                     )))
                                                                                                       ) then
                                                                                                          if ( 
                                                                                                            trampCall( callProcedure( 'not',
                                                                                                                begin
                                                                                                                  if @global_lisp_binding.has_key?('_not') then
                                                                                                                    @_not
                                                                                                                  else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1132"] + __e.backtrace ) ; raise __e
                                                                                                                end                                                                                                              ,
                                                                                                                Cell.new(
                                                                                                                  trampCall( callProcedure( 'eq?',
                                                                                                                      begin
                                                                                                                        if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                                                                          @_eq_QUMARK
                                                                                                                        else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:941"] + __e.backtrace ) ; raise __e
                                                                                                                      end                                                                                                                    ,
                                                                                                                      Cell.new(
                                                                                                                      false                                                                                                                      ,Cell.new(
                                                                                                                        trampCall( callProcedure( 'not',
                                                                                                                            begin
                                                                                                                              if @global_lisp_binding.has_key?('_not') then
                                                                                                                                @_not
                                                                                                                              else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1132"] + __e.backtrace ) ; raise __e
                                                                                                                            end                                                                                                                          ,
                                                                                                                            Cell.new(
                                                                                                                              trampCall( callProcedure( 'null?',
                                                                                                                                  begin
                                                                                                                                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                                                                                                                                      @_null_QUMARK
                                                                                                                                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1132"] + __e.backtrace ) ; raise __e
                                                                                                                                  end                                                                                                                                ,
                                                                                                                                  Cell.new(
                                                                                                                                    begin
                                                                                                                                        _val
                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1135"] + __e.backtrace ) ; raise __e
                                                                                                                                    end
                                                                                                                                           )))
                                                                                                                                     )))
                                                                                                                               ))))
                                                                                                                         )))
                                                                                                           ) then
                                                                                                              trampCall( callProcedure( 'reserved?',
                                                                                                                  begin
                                                                                                                      _reserved_QUMARK
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1133"] + __e.backtrace ) ; raise __e
                                                                                                                  end                                                                                                                ,
                                                                                                                  Cell.new(
                                                                                                                    trampCall( callProcedure( 'car',
                                                                                                                        begin
                                                                                                                          if @global_lisp_binding.has_key?('_car') then
                                                                                                                            @_car
                                                                                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1137"] + __e.backtrace ) ; raise __e
                                                                                                                        end                                                                                                                      ,
                                                                                                                        Cell.new(
                                                                                                                          begin
                                                                                                                              _val
                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1135"] + __e.backtrace ) ; raise __e
                                                                                                                          end
                                                                                                                                 )))
                                                                                                                           )))
                                                                                                          else
                                                                                                            false
                                                                                                          end
                                                                                                      else
                                                                                                        false
                                                                                                      end
                                                                                                     ) then
                                                                                                        trampCall( callProcedure( 'setup-tailcall-mark',
                                                                                                            begin
                                                                                                              if @global_lisp_binding.has_key?('_setup_MIMARKtailcall_MIMARKmark') then
                                                                                                                @_setup_MIMARKtailcall_MIMARKmark
                                                                                                              else raise NameError.new( "Error: undefined variable _setup_MIMARKtailcall_MIMARKmark", "_setup_MIMARKtailcall_MIMARKmark" ) end
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1134"] + __e.backtrace ) ; raise __e
                                                                                                            end                                                                                                          ,
                                                                                                            Cell.new(
                                                                                                              begin
                                                                                                                  _val
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1135"] + __e.backtrace ) ; raise __e
                                                                                                              end
                                                                                                                     )))
                                                                                                    else
                                                                                                        begin
                                                                                                            _val
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1135"] + __e.backtrace ) ; raise __e
                                                                                                        end
                                                                                                    end                                                                                                  ,Cell.new(
                                                                                                  
                                                                                                           ))))
                                                                                                     ))))
                                                                                               )))
                                                                              } ; ___lambda.call(
                                                                                    trampCall( callProcedure( 'third',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_third') then
                                                                                            @_third
                                                                                          else raise NameError.new( "Error: undefined variable _third", "_third" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1128"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        Cell.new(
                                                                                          begin
                                                                                              _sexp
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                                 )))
                                                                                         )
                                                                            end
                                                                        end
                                                                    else
                                                                        if ( 
                                                                        true
                                                                         ) then
                                                                            begin
                                                                                if ( 
                                                                                  trampCall( callProcedure( 'symbol?',
                                                                                      begin
                                                                                        if @global_lisp_binding.has_key?('_symbol_QUMARK') then
                                                                                          @_symbol_QUMARK
                                                                                        else raise NameError.new( "Error: undefined variable _symbol_QUMARK", "_symbol_QUMARK" ) end
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1137"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                      Cell.new(
                                                                                        trampCall( callProcedure( 'car',
                                                                                            begin
                                                                                              if @global_lisp_binding.has_key?('_car') then
                                                                                                @_car
                                                                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1137"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,
                                                                                            Cell.new(
                                                                                              begin
                                                                                                  _sexp
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                                                              end
                                                                                                     )))
                                                                                               )))
                                                                                 ) then
                                                                                    DelayedCallPacket.new( 'cons',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                                            @_cons
                                                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        Cell.new(
                                                                                        :"%tailcall"                                                                                        ,Cell.new(
                                                                                          trampCall( callProcedure( 'cons',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                                                  @_cons
                                                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              Cell.new(
                                                                                                begin
                                                                                                    _sexp
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,Cell.new(
                                                                                              
                                                                                                       ))))
                                                                                                 )))
                                                                                else
                                                                                    begin
                                                                                        _sexp
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                end
                                                                            end
                                                                        else
                                                                            Cell.new()
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    } ; ___lambda.call(
                                          trampCall( callProcedure( 'car',
                                              begin
                                                if @global_lisp_binding.has_key?('_car') then
                                                  @_car
                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1137"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    _sexp
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                               )
                                  end
                              end
                          else
                              if ( 
                              true
                               ) then
                                  begin
                                      begin
                                          _sexp
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1141"] + __e.backtrace ) ; raise __e
                                      end
                                  end
                              else
                                  Cell.new()
                              end
                          end
                      end
                  end
              } ; ___lambda.call(
              nil,nil,nil,nil
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['__PAMARKcompile_MIMARKphase_MIMARKfunctions'] = true
    @__PAMARKcompile_MIMARKphase_MIMARKfunctions = 
        trampCall( callProcedure( 'list',
            begin
              if @global_lisp_binding.has_key?('_list') then
                @_list
              else raise NameError.new( "Error: undefined variable _list", "_list" ) end
              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1146"] + __e.backtrace ) ; raise __e
            end          ,
            Cell.new(
              begin
                if @global_lisp_binding.has_key?('_setup_MIMARKtailcall_MIMARKmark') then
                  @_setup_MIMARKtailcall_MIMARKmark
                else raise NameError.new( "Error: undefined variable _setup_MIMARKtailcall_MIMARKmark", "_setup_MIMARKtailcall_MIMARKmark" ) end
                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1147"] + __e.backtrace ) ; raise __e
              end
                     )))
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['__ASMARKnendo_MIMARKversion_ASMARK'] = true
    @__ASMARKnendo_MIMARKversion_ASMARK = 
      "0.3.2"
  end
 )


# -------------------------------------------------------
# [EOF]
# -------------------------------------------------------
