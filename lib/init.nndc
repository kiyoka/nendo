#
#    This file is nendo's compiled library file. 
#    generated  "nendo -c src" command. 
# 

trampCall( 
  begin
    @global_lisp_binding['_define'] = true
    @_define = 
    trampCall(
          LispMacro.new { |_arg,*__rest__| _body = __rest__[0] ;  
              if ( 
                trampCall( callProcedure( 'not',
                    begin
                      if @global_lisp_binding.has_key?('_not') then
                        trampCall(@_not)
                      else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:42"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      trampCall( callProcedure( 'pair?',
                          begin
                            if @global_lisp_binding.has_key?('_pair_QUMARK') then
                              trampCall(@_pair_QUMARK)
                            else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:50"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_arg)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                             )))
               ) then
                  trampCall( callProcedure( 'cons',
                      begin
                        if @global_lisp_binding.has_key?('_cons') then
                          trampCall(@_cons)
                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                      :"define"                      ,Cell.new(
                        trampCall( callProcedure( 'cons',
                            begin
                              if @global_lisp_binding.has_key?('_cons') then
                                trampCall(@_cons)
                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_arg)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                              begin
                                  trampCall(_body)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:57"] + __e.backtrace ) ; raise __e
                              end
                                     ))))
                               ))))
              else
                  begin
                      if ( 
                        trampCall( callProcedure( 'pair?',
                            begin
                              if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                trampCall(@_pair_QUMARK)
                              else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:50"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cdr',
                                  begin
                                    if @global_lisp_binding.has_key?('_cdr') then
                                      trampCall(@_cdr)
                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_arg)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                       ) then
                          if ( 
                            trampCall( callProcedure( 'pair?',
                                begin
                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                    trampCall(@_pair_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:50"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  trampCall( callProcedure( 'car',
                                      begin
                                        if @global_lisp_binding.has_key?('_car') then
                                          trampCall(@_car)
                                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:53"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'cdr',
                                            begin
                                              if @global_lisp_binding.has_key?('_cdr') then
                                                trampCall(@_cdr)
                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_arg)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               )))
                                         )))
                           ) then
                              begin raise RuntimeError, 
                              "Error: define syntax error."
                              rescue => __e 
                                __e.set_backtrace( ["./lib/init.nnd:51"] + __e.backtrace )
                                raise __e
                              end 
                          end
                      end
                      trampCall( callProcedure( 'cons',
                          begin
                            if @global_lisp_binding.has_key?('_cons') then
                              trampCall(@_cons)
                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                          :"define"                          ,Cell.new(
                            trampCall( callProcedure( 'cons',
                                begin
                                  if @global_lisp_binding.has_key?('_cons') then
                                    trampCall(@_cons)
                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  trampCall( callProcedure( 'car',
                                      begin
                                        if @global_lisp_binding.has_key?('_car') then
                                          trampCall(@_car)
                                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:53"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_arg)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                                        end
                                               )))                                ,Cell.new(
                                  trampCall( callProcedure( 'list',
                                      begin
                                        if @global_lisp_binding.has_key?('_list') then
                                          trampCall(@_list)
                                        else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:54"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'cons',
                                            begin
                                              if @global_lisp_binding.has_key?('_cons') then
                                                trampCall(@_cons)
                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                            :"lambda"                                            ,Cell.new(
                                              trampCall( callProcedure( 'cons',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cons') then
                                                      trampCall(@_cons)
                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'cdr',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cdr') then
                                                            trampCall(@_cdr)
                                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_arg)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:56"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))                                                  ,Cell.new(
                                                    begin
                                                        trampCall(_body)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:57"] + __e.backtrace ) ; raise __e
                                                    end
                                                           ))))
                                                     ))))
                                               )))
                                         ))))
                                   ))))
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_debug_MIMARKprint'] = true
    @_debug_MIMARKprint = 
    trampCall(
          LispMacro.new { |__form,_sourcefile,_lineno,_sourcesexp| 
              begin
                  trampCall(__form)
                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:64"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_caar'] = true
    @_caar = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'car',
                  begin
                    if @global_lisp_binding.has_key?('_car') then
                      trampCall(@_car)
                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:69"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'car',
                        begin
                          if @global_lisp_binding.has_key?('_car') then
                            trampCall(@_car)
                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:69"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_x)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:69"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cadr'] = true
    @_cadr = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'car',
                  begin
                    if @global_lisp_binding.has_key?('_car') then
                      trampCall(@_car)
                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:70"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cdr',
                        begin
                          if @global_lisp_binding.has_key?('_cdr') then
                            trampCall(@_cdr)
                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:70"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_x)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:70"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cdar'] = true
    @_cdar = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'cdr',
                  begin
                    if @global_lisp_binding.has_key?('_cdr') then
                      trampCall(@_cdr)
                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:71"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'car',
                        begin
                          if @global_lisp_binding.has_key?('_car') then
                            trampCall(@_car)
                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:71"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_x)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:71"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cddr'] = true
    @_cddr = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'cdr',
                  begin
                    if @global_lisp_binding.has_key?('_cdr') then
                      trampCall(@_cdr)
                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:72"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cdr',
                        begin
                          if @global_lisp_binding.has_key?('_cdr') then
                            trampCall(@_cdr)
                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:72"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_x)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:72"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_caaar'] = true
    @_caaar = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'car',
                  begin
                    if @global_lisp_binding.has_key?('_car') then
                      trampCall(@_car)
                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:73"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'car',
                        begin
                          if @global_lisp_binding.has_key?('_car') then
                            trampCall(@_car)
                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:73"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  trampCall(@_car)
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:73"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_x)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:73"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_caadr'] = true
    @_caadr = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'car',
                  begin
                    if @global_lisp_binding.has_key?('_car') then
                      trampCall(@_car)
                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:74"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'car',
                        begin
                          if @global_lisp_binding.has_key?('_car') then
                            trampCall(@_car)
                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:74"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'cdr',
                              begin
                                if @global_lisp_binding.has_key?('_cdr') then
                                  trampCall(@_cdr)
                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:74"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_x)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:74"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cadar'] = true
    @_cadar = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'car',
                  begin
                    if @global_lisp_binding.has_key?('_car') then
                      trampCall(@_car)
                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:75"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cdr',
                        begin
                          if @global_lisp_binding.has_key?('_cdr') then
                            trampCall(@_cdr)
                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:75"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  trampCall(@_car)
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:75"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_x)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:75"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_caddr'] = true
    @_caddr = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'car',
                  begin
                    if @global_lisp_binding.has_key?('_car') then
                      trampCall(@_car)
                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:76"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cdr',
                        begin
                          if @global_lisp_binding.has_key?('_cdr') then
                            trampCall(@_cdr)
                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:76"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'cdr',
                              begin
                                if @global_lisp_binding.has_key?('_cdr') then
                                  trampCall(@_cdr)
                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:76"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_x)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:76"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cdaar'] = true
    @_cdaar = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'cdr',
                  begin
                    if @global_lisp_binding.has_key?('_cdr') then
                      trampCall(@_cdr)
                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:77"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'car',
                        begin
                          if @global_lisp_binding.has_key?('_car') then
                            trampCall(@_car)
                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:77"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  trampCall(@_car)
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:77"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_x)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:77"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cdadr'] = true
    @_cdadr = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'cdr',
                  begin
                    if @global_lisp_binding.has_key?('_cdr') then
                      trampCall(@_cdr)
                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:78"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'car',
                        begin
                          if @global_lisp_binding.has_key?('_car') then
                            trampCall(@_car)
                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:78"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'cdr',
                              begin
                                if @global_lisp_binding.has_key?('_cdr') then
                                  trampCall(@_cdr)
                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:78"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_x)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:78"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cddar'] = true
    @_cddar = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'cdr',
                  begin
                    if @global_lisp_binding.has_key?('_cdr') then
                      trampCall(@_cdr)
                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:79"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cdr',
                        begin
                          if @global_lisp_binding.has_key?('_cdr') then
                            trampCall(@_cdr)
                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:79"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  trampCall(@_car)
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:79"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_x)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:79"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cdddr'] = true
    @_cdddr = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'cdr',
                  begin
                    if @global_lisp_binding.has_key?('_cdr') then
                      trampCall(@_cdr)
                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:80"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cdr',
                        begin
                          if @global_lisp_binding.has_key?('_cdr') then
                            trampCall(@_cdr)
                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:80"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'cdr',
                              begin
                                if @global_lisp_binding.has_key?('_cdr') then
                                  trampCall(@_cdr)
                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:80"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_x)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:80"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_caaaar'] = true
    @_caaaar = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'car',
                  begin
                    if @global_lisp_binding.has_key?('_car') then
                      trampCall(@_car)
                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:81"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'car',
                        begin
                          if @global_lisp_binding.has_key?('_car') then
                            trampCall(@_car)
                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:81"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  trampCall(@_car)
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:81"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'car',
                                    begin
                                      if @global_lisp_binding.has_key?('_car') then
                                        trampCall(@_car)
                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:81"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:81"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_caaadr'] = true
    @_caaadr = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'car',
                  begin
                    if @global_lisp_binding.has_key?('_car') then
                      trampCall(@_car)
                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:82"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'car',
                        begin
                          if @global_lisp_binding.has_key?('_car') then
                            trampCall(@_car)
                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:82"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  trampCall(@_car)
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:82"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'cdr',
                                    begin
                                      if @global_lisp_binding.has_key?('_cdr') then
                                        trampCall(@_cdr)
                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:82"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:82"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_caadar'] = true
    @_caadar = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'car',
                  begin
                    if @global_lisp_binding.has_key?('_car') then
                      trampCall(@_car)
                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:83"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'car',
                        begin
                          if @global_lisp_binding.has_key?('_car') then
                            trampCall(@_car)
                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:83"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'cdr',
                              begin
                                if @global_lisp_binding.has_key?('_cdr') then
                                  trampCall(@_cdr)
                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:83"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'car',
                                    begin
                                      if @global_lisp_binding.has_key?('_car') then
                                        trampCall(@_car)
                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:83"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:83"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_caaddr'] = true
    @_caaddr = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'car',
                  begin
                    if @global_lisp_binding.has_key?('_car') then
                      trampCall(@_car)
                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:84"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'car',
                        begin
                          if @global_lisp_binding.has_key?('_car') then
                            trampCall(@_car)
                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:84"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'cdr',
                              begin
                                if @global_lisp_binding.has_key?('_cdr') then
                                  trampCall(@_cdr)
                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:84"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'cdr',
                                    begin
                                      if @global_lisp_binding.has_key?('_cdr') then
                                        trampCall(@_cdr)
                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:84"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:84"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cadaar'] = true
    @_cadaar = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'car',
                  begin
                    if @global_lisp_binding.has_key?('_car') then
                      trampCall(@_car)
                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:85"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cdr',
                        begin
                          if @global_lisp_binding.has_key?('_cdr') then
                            trampCall(@_cdr)
                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:85"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  trampCall(@_car)
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:85"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'car',
                                    begin
                                      if @global_lisp_binding.has_key?('_car') then
                                        trampCall(@_car)
                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:85"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:85"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cadadr'] = true
    @_cadadr = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'car',
                  begin
                    if @global_lisp_binding.has_key?('_car') then
                      trampCall(@_car)
                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:86"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cdr',
                        begin
                          if @global_lisp_binding.has_key?('_cdr') then
                            trampCall(@_cdr)
                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:86"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  trampCall(@_car)
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:86"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'cdr',
                                    begin
                                      if @global_lisp_binding.has_key?('_cdr') then
                                        trampCall(@_cdr)
                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:86"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:86"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_caddar'] = true
    @_caddar = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'car',
                  begin
                    if @global_lisp_binding.has_key?('_car') then
                      trampCall(@_car)
                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:87"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cdr',
                        begin
                          if @global_lisp_binding.has_key?('_cdr') then
                            trampCall(@_cdr)
                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:87"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'cdr',
                              begin
                                if @global_lisp_binding.has_key?('_cdr') then
                                  trampCall(@_cdr)
                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:87"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'car',
                                    begin
                                      if @global_lisp_binding.has_key?('_car') then
                                        trampCall(@_car)
                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:87"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:87"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cadddr'] = true
    @_cadddr = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'car',
                  begin
                    if @global_lisp_binding.has_key?('_car') then
                      trampCall(@_car)
                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:88"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cdr',
                        begin
                          if @global_lisp_binding.has_key?('_cdr') then
                            trampCall(@_cdr)
                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:88"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'cdr',
                              begin
                                if @global_lisp_binding.has_key?('_cdr') then
                                  trampCall(@_cdr)
                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:88"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'cdr',
                                    begin
                                      if @global_lisp_binding.has_key?('_cdr') then
                                        trampCall(@_cdr)
                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:88"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:88"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cdaaar'] = true
    @_cdaaar = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'cdr',
                  begin
                    if @global_lisp_binding.has_key?('_cdr') then
                      trampCall(@_cdr)
                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:89"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'car',
                        begin
                          if @global_lisp_binding.has_key?('_car') then
                            trampCall(@_car)
                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:89"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  trampCall(@_car)
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:89"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'car',
                                    begin
                                      if @global_lisp_binding.has_key?('_car') then
                                        trampCall(@_car)
                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:89"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:89"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cdaadr'] = true
    @_cdaadr = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'cdr',
                  begin
                    if @global_lisp_binding.has_key?('_cdr') then
                      trampCall(@_cdr)
                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:90"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'car',
                        begin
                          if @global_lisp_binding.has_key?('_car') then
                            trampCall(@_car)
                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:90"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  trampCall(@_car)
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:90"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'cdr',
                                    begin
                                      if @global_lisp_binding.has_key?('_cdr') then
                                        trampCall(@_cdr)
                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:90"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:90"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cdadar'] = true
    @_cdadar = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'cdr',
                  begin
                    if @global_lisp_binding.has_key?('_cdr') then
                      trampCall(@_cdr)
                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:91"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'car',
                        begin
                          if @global_lisp_binding.has_key?('_car') then
                            trampCall(@_car)
                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:91"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'cdr',
                              begin
                                if @global_lisp_binding.has_key?('_cdr') then
                                  trampCall(@_cdr)
                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:91"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'car',
                                    begin
                                      if @global_lisp_binding.has_key?('_car') then
                                        trampCall(@_car)
                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:91"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:91"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cdaddr'] = true
    @_cdaddr = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'cdr',
                  begin
                    if @global_lisp_binding.has_key?('_cdr') then
                      trampCall(@_cdr)
                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:92"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'car',
                        begin
                          if @global_lisp_binding.has_key?('_car') then
                            trampCall(@_car)
                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:92"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'cdr',
                              begin
                                if @global_lisp_binding.has_key?('_cdr') then
                                  trampCall(@_cdr)
                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:92"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'cdr',
                                    begin
                                      if @global_lisp_binding.has_key?('_cdr') then
                                        trampCall(@_cdr)
                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:92"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:92"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cddaar'] = true
    @_cddaar = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'cdr',
                  begin
                    if @global_lisp_binding.has_key?('_cdr') then
                      trampCall(@_cdr)
                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:93"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cdr',
                        begin
                          if @global_lisp_binding.has_key?('_cdr') then
                            trampCall(@_cdr)
                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:93"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  trampCall(@_car)
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:93"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'car',
                                    begin
                                      if @global_lisp_binding.has_key?('_car') then
                                        trampCall(@_car)
                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:93"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:93"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cddadr'] = true
    @_cddadr = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'cdr',
                  begin
                    if @global_lisp_binding.has_key?('_cdr') then
                      trampCall(@_cdr)
                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:94"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cdr',
                        begin
                          if @global_lisp_binding.has_key?('_cdr') then
                            trampCall(@_cdr)
                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:94"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  trampCall(@_car)
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:94"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'cdr',
                                    begin
                                      if @global_lisp_binding.has_key?('_cdr') then
                                        trampCall(@_cdr)
                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:94"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:94"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cdddar'] = true
    @_cdddar = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'cdr',
                  begin
                    if @global_lisp_binding.has_key?('_cdr') then
                      trampCall(@_cdr)
                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:95"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cdr',
                        begin
                          if @global_lisp_binding.has_key?('_cdr') then
                            trampCall(@_cdr)
                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:95"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'cdr',
                              begin
                                if @global_lisp_binding.has_key?('_cdr') then
                                  trampCall(@_cdr)
                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:95"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'car',
                                    begin
                                      if @global_lisp_binding.has_key?('_car') then
                                        trampCall(@_car)
                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:95"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:95"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cddddr'] = true
    @_cddddr = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'cdr',
                  begin
                    if @global_lisp_binding.has_key?('_cdr') then
                      trampCall(@_cdr)
                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:96"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cdr',
                        begin
                          if @global_lisp_binding.has_key?('_cdr') then
                            trampCall(@_cdr)
                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:96"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'cdr',
                              begin
                                if @global_lisp_binding.has_key?('_cdr') then
                                  trampCall(@_cdr)
                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:96"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'cdr',
                                    begin
                                      if @global_lisp_binding.has_key?('_cdr') then
                                        trampCall(@_cdr)
                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:96"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_x)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:96"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_iota'] = true
    @_iota = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('_range') then
              trampCall(@_range)
            else raise NameError.new( "Error: undefined variable _range", "_range" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:102"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_append'] = true
    @_append = 
    trampCall(
          Proc.new { |_a,_b| 
              begin
                ___lambda = lambda { |_append_MIMARKreverse| 
                    _append_MIMARKreverse                     = 
                      Proc.new { |_a,_b| 
                          if ( 
                            trampCall( callProcedure( 'pair?',
                                begin
                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                    trampCall(@_pair_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:107"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_a)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:110"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              DelayedCallPacket.new( 'append-reverse',
                                  begin
                                      trampCall(_append_MIMARKreverse)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:110"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'cdr',
                                        begin
                                          if @global_lisp_binding.has_key?('_cdr') then
                                            trampCall(@_cdr)
                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:108"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_a)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:110"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))                                  ,Cell.new(
                                    trampCall( callProcedure( 'cons',
                                        begin
                                          if @global_lisp_binding.has_key?('_cons') then
                                            trampCall(@_cons)
                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:108"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'car',
                                              begin
                                                if @global_lisp_binding.has_key?('_car') then
                                                  trampCall(@_car)
                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:108"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_a)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:110"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))                                        ,Cell.new(
                                          begin
                                              trampCall(_b)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:110"] + __e.backtrace ) ; raise __e
                                          end
                                                 ))))
                                           )))
                          else
                              begin
                                  trampCall(_b)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:110"] + __e.backtrace ) ; raise __e
                              end
                          end
                      }
                    DelayedCallPacket.new( 'append-reverse',
                        begin
                            trampCall(_append_MIMARKreverse)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:110"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'reverse',
                              begin
                                if @global_lisp_binding.has_key?('_reverse') then
                                  trampCall(@_reverse)
                                else raise NameError.new( "Error: undefined variable _reverse", "_reverse" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:110"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_a)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:110"] + __e.backtrace ) ; raise __e
                                end
                                       )))                        ,Cell.new(
                          begin
                              trampCall(_b)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:110"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_vector'] = true
    @_vector = 
    trampCall(
          Proc.new { |*__rest__| _lst = __rest__[0] ;  
              DelayedCallPacket.new( 'to-arr',
                  begin
                    if @global_lisp_binding.has_key?('_to_MIMARKarr') then
                      trampCall(@_to_MIMARKarr)
                    else raise NameError.new( "Error: undefined variable _to_MIMARKarr", "_to_MIMARKarr" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:115"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        trampCall(_lst)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:115"] + __e.backtrace ) ; raise __e
                    end
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_list_QUMARK'] = true
    @_list_QUMARK = 
    trampCall(
          Proc.new { |_arg| 
              if ( 
                trampCall( callProcedure( 'pair?',
                    begin
                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                        trampCall(@_pair_QUMARK)
                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:117"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_arg)
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:119"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  DelayedCallPacket.new( 'list?',
                      begin
                        if @global_lisp_binding.has_key?('_list_QUMARK') then
                          trampCall(@_list_QUMARK)
                        else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:118"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'cdr',
                            begin
                              if @global_lisp_binding.has_key?('_cdr') then
                                trampCall(@_cdr)
                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:118"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_arg)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:119"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                               ))
              else
                  DelayedCallPacket.new( 'null?',
                      begin
                        if @global_lisp_binding.has_key?('_null_QUMARK') then
                          trampCall(@_null_QUMARK)
                        else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:119"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            trampCall(_arg)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:119"] + __e.backtrace ) ; raise __e
                        end
                               ))
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_even_QUMARK'] = true
    @_even_QUMARK = 
    trampCall(
          Proc.new { |_n| 
              DelayedCallPacket.new( '=',
                  begin
                    if @global_lisp_binding.has_key?('__EQMARK') then
                      trampCall(@__EQMARK)
                    else raise NameError.new( "Error: undefined variable __EQMARK", "__EQMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:120"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( '%',
                        begin
                          if @global_lisp_binding.has_key?('__PAMARK') then
                            trampCall(@__PAMARK)
                          else raise NameError.new( "Error: undefined variable __PAMARK", "__PAMARK" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:120"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_n)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:120"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                        2
                                 ))))                  ,Cell.new(
                  0
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_odd_QUMARK'] = true
    @_odd_QUMARK = 
    trampCall(
          Proc.new { |_n| 
              DelayedCallPacket.new( 'not',
                  begin
                    if @global_lisp_binding.has_key?('_not') then
                      trampCall(@_not)
                    else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:121"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( '=',
                        begin
                          if @global_lisp_binding.has_key?('__EQMARK') then
                            trampCall(@__EQMARK)
                          else raise NameError.new( "Error: undefined variable __EQMARK", "__EQMARK" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:121"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( '%',
                              begin
                                if @global_lisp_binding.has_key?('__PAMARK') then
                                  trampCall(@__PAMARK)
                                else raise NameError.new( "Error: undefined variable __PAMARK", "__PAMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:121"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_n)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:121"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                              2
                                       ))))                        ,Cell.new(
                        0
                                 ))))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_zero_QUMARK'] = true
    @_zero_QUMARK = 
    trampCall(
          Proc.new { |_n| 
              DelayedCallPacket.new( '=',
                  begin
                    if @global_lisp_binding.has_key?('__EQMARK') then
                      trampCall(@__EQMARK)
                    else raise NameError.new( "Error: undefined variable __EQMARK", "__EQMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:122"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        trampCall(_n)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:122"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                  0
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_positive_QUMARK'] = true
    @_positive_QUMARK = 
    trampCall(
          Proc.new { |_n| 
              DelayedCallPacket.new( '>',
                  begin
                    if @global_lisp_binding.has_key?('__GTMARK') then
                      trampCall(@__GTMARK)
                    else raise NameError.new( "Error: undefined variable __GTMARK", "__GTMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:123"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        trampCall(_n)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:123"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                  0
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_negative_QUMARK'] = true
    @_negative_QUMARK = 
    trampCall(
          Proc.new { |_n| 
              DelayedCallPacket.new( '<',
                  begin
                    if @global_lisp_binding.has_key?('__LTMARK') then
                      trampCall(@__LTMARK)
                    else raise NameError.new( "Error: undefined variable __LTMARK", "__LTMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:124"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        trampCall(_n)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:124"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                  0
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_abs'] = true
    @_abs = 
    trampCall(
          Proc.new { |_n| 
              if ( 
                trampCall( callProcedure( '>=',
                    begin
                      if @global_lisp_binding.has_key?('__GTMARK_EQMARK') then
                        trampCall(@__GTMARK_EQMARK)
                      else raise NameError.new( "Error: undefined variable __GTMARK_EQMARK", "__GTMARK_EQMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:125"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_n)
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:125"] + __e.backtrace ) ; raise __e
                      end                    ,Cell.new(
                    0
                             ))))
               ) then
                  begin
                      trampCall(_n)
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:125"] + __e.backtrace ) ; raise __e
                  end
              else
                  DelayedCallPacket.new( '-',
                      begin
                        if @global_lisp_binding.has_key?('__MIMARK') then
                          trampCall(@__MIMARK)
                        else raise NameError.new( "Error: undefined variable __MIMARK", "__MIMARK" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:125"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            trampCall(_n)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:125"] + __e.backtrace ) ; raise __e
                        end
                               ))
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_max'] = true
    @_max = 
    trampCall(
          Proc.new { |*__rest__| _lst = __rest__[0] ;  
              DelayedCallPacket.new( 'foldr',
                  begin
                    if @global_lisp_binding.has_key?('_foldr') then
                      trampCall(@_foldr)
                    else raise NameError.new( "Error: undefined variable _foldr", "_foldr" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:127"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    Proc.new { |_a,_b| 
                        if ( 
                          trampCall( callProcedure( '>',
                              begin
                                if @global_lisp_binding.has_key?('__GTMARK') then
                                  trampCall(@__GTMARK)
                                else raise NameError.new( "Error: undefined variable __GTMARK", "__GTMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:127"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_a)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:127"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                                begin
                                    trampCall(_b)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:127"] + __e.backtrace ) ; raise __e
                                end
                                       ))))
                         ) then
                            begin
                                trampCall(_a)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:127"] + __e.backtrace ) ; raise __e
                            end
                        else
                            begin
                                trampCall(_b)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:127"] + __e.backtrace ) ; raise __e
                            end
                        end
                    }                  ,Cell.new(
                    trampCall( callProcedure( 'car',
                        begin
                          if @global_lisp_binding.has_key?('_car') then
                            trampCall(@_car)
                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:127"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lst)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:127"] + __e.backtrace ) ; raise __e
                          end
                                 )))                  ,Cell.new(
                    trampCall( callProcedure( 'cdr',
                        begin
                          if @global_lisp_binding.has_key?('_cdr') then
                            trampCall(@_cdr)
                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:127"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lst)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:127"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_min'] = true
    @_min = 
    trampCall(
          Proc.new { |*__rest__| _lst = __rest__[0] ;  
              DelayedCallPacket.new( 'foldr',
                  begin
                    if @global_lisp_binding.has_key?('_foldr') then
                      trampCall(@_foldr)
                    else raise NameError.new( "Error: undefined variable _foldr", "_foldr" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:129"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    Proc.new { |_a,_b| 
                        if ( 
                          trampCall( callProcedure( '<',
                              begin
                                if @global_lisp_binding.has_key?('__LTMARK') then
                                  trampCall(@__LTMARK)
                                else raise NameError.new( "Error: undefined variable __LTMARK", "__LTMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:129"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_a)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:129"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                                begin
                                    trampCall(_b)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:129"] + __e.backtrace ) ; raise __e
                                end
                                       ))))
                         ) then
                            begin
                                trampCall(_a)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:129"] + __e.backtrace ) ; raise __e
                            end
                        else
                            begin
                                trampCall(_b)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:129"] + __e.backtrace ) ; raise __e
                            end
                        end
                    }                  ,Cell.new(
                    trampCall( callProcedure( 'car',
                        begin
                          if @global_lisp_binding.has_key?('_car') then
                            trampCall(@_car)
                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:129"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lst)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:129"] + __e.backtrace ) ; raise __e
                          end
                                 )))                  ,Cell.new(
                    trampCall( callProcedure( 'cdr',
                        begin
                          if @global_lisp_binding.has_key?('_cdr') then
                            trampCall(@_cdr)
                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:129"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lst)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:129"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_succ'] = true
    @_succ = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( '+',
                  begin
                    if @global_lisp_binding.has_key?('__PLMARK') then
                      trampCall(@__PLMARK)
                    else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:130"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        trampCall(_x)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:130"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                  1
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_pred'] = true
    @_pred = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( '-',
                  begin
                    if @global_lisp_binding.has_key?('__MIMARK') then
                      trampCall(@__MIMARK)
                    else raise NameError.new( "Error: undefined variable __MIMARK", "__MIMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:131"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        trampCall(_x)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:131"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                  1
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_nth'] = true
    @_nth = 
    trampCall(
          Proc.new { |_n,_lst| 
              begin
                ___lambda = lambda { |_nth_MIMARKiter| 
                    _nth_MIMARKiter                     = 
                      Proc.new { |_n,_index,_lst| 
                          if ( 
                            trampCall( callProcedure( 'null?',
                                begin
                                  if @global_lisp_binding.has_key?('_null_QUMARK') then
                                    trampCall(@_null_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:135"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lst)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:142"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                            Cell.new()
                          else
                              if ( 
                                trampCall( callProcedure( 'not',
                                    begin
                                      if @global_lisp_binding.has_key?('_not') then
                                        trampCall(@_not)
                                      else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:137"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'pair?',
                                          begin
                                            if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                              trampCall(@_pair_QUMARK)
                                            else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:137"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lst)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:142"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             )))
                               ) then
                                  begin raise RuntimeError, 
                                  "Error: nth got improper list."
                                  rescue => __e 
                                    __e.set_backtrace( ["./lib/init.nnd:138"] + __e.backtrace )
                                    raise __e
                                  end 
                              else
                                  if ( 
                                    trampCall( callProcedure( 'eqv?',
                                        begin
                                          if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                            trampCall(@_eqv_QUMARK)
                                          else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:139"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_n)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:142"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                          begin
                                              trampCall(_index)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:141"] + __e.backtrace ) ; raise __e
                                          end
                                                 ))))
                                   ) then
                                      DelayedCallPacket.new( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:140"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lst)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:142"] + __e.backtrace ) ; raise __e
                                            end
                                                   ))
                                  else
                                      DelayedCallPacket.new( 'nth-iter',
                                          begin
                                              trampCall(_nth_MIMARKiter)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:142"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_n)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:142"] + __e.backtrace ) ; raise __e
                                            end                                          ,Cell.new(
                                            trampCall( callProcedure( '+',
                                                begin
                                                  if @global_lisp_binding.has_key?('__PLMARK') then
                                                    trampCall(@__PLMARK)
                                                  else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:141"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_index)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:141"] + __e.backtrace ) ; raise __e
                                                  end                                                ,Cell.new(
                                                1
                                                         ))))                                          ,Cell.new(
                                            trampCall( callProcedure( 'cdr',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cdr') then
                                                    trampCall(@_cdr)
                                                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:141"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_lst)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:142"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                   ))))
                                  end
                              end
                          end
                      }
                    DelayedCallPacket.new( 'nth-iter',
                        begin
                            trampCall(_nth_MIMARKiter)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:142"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_n)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:142"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                        0                        ,Cell.new(
                          begin
                              trampCall(_lst)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:142"] + __e.backtrace ) ; raise __e
                          end
                                 ))))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_first'] = true
    @_first = 
    trampCall(
          Proc.new { |_lst| 
              DelayedCallPacket.new( 'nth',
                  begin
                    if @global_lisp_binding.has_key?('_nth') then
                      trampCall(@_nth)
                    else raise NameError.new( "Error: undefined variable _nth", "_nth" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:143"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                  0                  ,Cell.new(
                    begin
                        trampCall(_lst)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:143"] + __e.backtrace ) ; raise __e
                    end
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_second'] = true
    @_second = 
    trampCall(
          Proc.new { |_lst| 
              DelayedCallPacket.new( 'nth',
                  begin
                    if @global_lisp_binding.has_key?('_nth') then
                      trampCall(@_nth)
                    else raise NameError.new( "Error: undefined variable _nth", "_nth" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:144"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                  1                  ,Cell.new(
                    begin
                        trampCall(_lst)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:144"] + __e.backtrace ) ; raise __e
                    end
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_third'] = true
    @_third = 
    trampCall(
          Proc.new { |_lst| 
              DelayedCallPacket.new( 'nth',
                  begin
                    if @global_lisp_binding.has_key?('_nth') then
                      trampCall(@_nth)
                    else raise NameError.new( "Error: undefined variable _nth", "_nth" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:145"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                  2                  ,Cell.new(
                    begin
                        trampCall(_lst)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:145"] + __e.backtrace ) ; raise __e
                    end
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_fourth'] = true
    @_fourth = 
    trampCall(
          Proc.new { |_lst| 
              DelayedCallPacket.new( 'nth',
                  begin
                    if @global_lisp_binding.has_key?('_nth') then
                      trampCall(@_nth)
                    else raise NameError.new( "Error: undefined variable _nth", "_nth" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:146"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                  3                  ,Cell.new(
                    begin
                        trampCall(_lst)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:146"] + __e.backtrace ) ; raise __e
                    end
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_fifth'] = true
    @_fifth = 
    trampCall(
          Proc.new { |_lst| 
              DelayedCallPacket.new( 'nth',
                  begin
                    if @global_lisp_binding.has_key?('_nth') then
                      trampCall(@_nth)
                    else raise NameError.new( "Error: undefined variable _nth", "_nth" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:147"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                  4                  ,Cell.new(
                    begin
                        trampCall(_lst)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:147"] + __e.backtrace ) ; raise __e
                    end
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_sixth'] = true
    @_sixth = 
    trampCall(
          Proc.new { |_lst| 
              DelayedCallPacket.new( 'nth',
                  begin
                    if @global_lisp_binding.has_key?('_nth') then
                      trampCall(@_nth)
                    else raise NameError.new( "Error: undefined variable _nth", "_nth" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:148"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                  5                  ,Cell.new(
                    begin
                        trampCall(_lst)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:148"] + __e.backtrace ) ; raise __e
                    end
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_seventh'] = true
    @_seventh = 
    trampCall(
          Proc.new { |_lst| 
              DelayedCallPacket.new( 'nth',
                  begin
                    if @global_lisp_binding.has_key?('_nth') then
                      trampCall(@_nth)
                    else raise NameError.new( "Error: undefined variable _nth", "_nth" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:149"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                  6                  ,Cell.new(
                    begin
                        trampCall(_lst)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:149"] + __e.backtrace ) ; raise __e
                    end
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_eighth'] = true
    @_eighth = 
    trampCall(
          Proc.new { |_lst| 
              DelayedCallPacket.new( 'nth',
                  begin
                    if @global_lisp_binding.has_key?('_nth') then
                      trampCall(@_nth)
                    else raise NameError.new( "Error: undefined variable _nth", "_nth" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:150"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                  7                  ,Cell.new(
                    begin
                        trampCall(_lst)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:150"] + __e.backtrace ) ; raise __e
                    end
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_ninth'] = true
    @_ninth = 
    trampCall(
          Proc.new { |_lst| 
              DelayedCallPacket.new( 'nth',
                  begin
                    if @global_lisp_binding.has_key?('_nth') then
                      trampCall(@_nth)
                    else raise NameError.new( "Error: undefined variable _nth", "_nth" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:151"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                  8                  ,Cell.new(
                    begin
                        trampCall(_lst)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:151"] + __e.backtrace ) ; raise __e
                    end
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_tenth'] = true
    @_tenth = 
    trampCall(
          Proc.new { |_lst| 
              DelayedCallPacket.new( 'nth',
                  begin
                    if @global_lisp_binding.has_key?('_nth') then
                      trampCall(@_nth)
                    else raise NameError.new( "Error: undefined variable _nth", "_nth" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:152"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                  9                  ,Cell.new(
                    begin
                        trampCall(_lst)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:152"] + __e.backtrace ) ; raise __e
                    end
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_x_MIMARK_GTMARKstring'] = true
    @_x_MIMARK_GTMARKstring = 
    trampCall(
          Proc.new { |_object| 
              DelayedCallPacket.new( 'to-s',
                  begin
                    if @global_lisp_binding.has_key?('_to_MIMARKs') then
                      trampCall(@_to_MIMARKs)
                    else raise NameError.new( "Error: undefined variable _to_MIMARKs", "_to_MIMARKs" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:154"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        trampCall(_object)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:154"] + __e.backtrace ) ; raise __e
                    end
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_macroexpand'] = true
    @_macroexpand = 
    trampCall(
          Proc.new { |_sexp| 
              begin
                ___lambda = lambda { |_newsexp| 
                    if ( 
                      trampCall( callProcedure( 'not',
                          begin
                            if @global_lisp_binding.has_key?('_not') then
                              trampCall(@_not)
                            else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:161"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            trampCall( callProcedure( 'equal?',
                                begin
                                  if @global_lisp_binding.has_key?('_equal_QUMARK') then
                                    trampCall(@_equal_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _equal_QUMARK", "_equal_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:161"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_sexp)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:161"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  begin
                                      trampCall(_newsexp)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:163"] + __e.backtrace ) ; raise __e
                                  end
                                         ))))
                                   )))
                     ) then
                        DelayedCallPacket.new( 'macroexpand',
                            begin
                              if @global_lisp_binding.has_key?('_macroexpand') then
                                trampCall(@_macroexpand)
                              else raise NameError.new( "Error: undefined variable _macroexpand", "_macroexpand" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:162"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_newsexp)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:163"] + __e.backtrace ) ; raise __e
                              end
                                     ))
                    else
                        begin
                            trampCall(_newsexp)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:163"] + __e.backtrace ) ; raise __e
                        end
                    end
                } ; ___lambda.call(
                      trampCall( callProcedure( 'macroexpand-1',
                          begin
                            if @global_lisp_binding.has_key?('_macroexpand_MIMARK1') then
                              trampCall(@_macroexpand_MIMARK1)
                            else raise NameError.new( "Error: undefined variable _macroexpand_MIMARK1", "_macroexpand_MIMARK1" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:160"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_sexp)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:161"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_feedto'] = true
    @_feedto = 
    trampCall(
          Proc.new { || 
              begin raise RuntimeError, 
              "=> (feedto) appeared outside cond or case."
              rescue => __e 
                __e.set_backtrace( ["./lib/init.nnd:166"] + __e.backtrace )
                raise __e
              end 
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cond'] = true
    @_cond = 
    trampCall(
          LispMacro.new { |*__rest__| _lst = __rest__[0] ;  
              begin
                ___lambda = lambda { |_case_MIMARKblock,_cond_MIMARKiter| 
                    _case_MIMARKblock                     = 
                      Proc.new { |_elem,*__rest__| _elseblock = __rest__[0] ;  
                          begin
                            ___lambda = lambda { |_condition,_body,_tmpsym| 
                                trampCall( callProcedure( 'append',
                                    begin
                                      if @global_lisp_binding.has_key?('_append') then
                                        trampCall(@_append)
                                      else raise NameError.new( "Error: undefined variable _append", "_append" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:182"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      if ( 
                                        trampCall( callProcedure( 'eq?',
                                            begin
                                              if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                trampCall(@_eq_QUMARK)
                                              else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:199"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                            :"feedto"                                            ,Cell.new(
                                              trampCall( callProcedure( 'car',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_car') then
                                                      trampCall(@_car)
                                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:201"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_body)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:191"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                                     ))))
                                       ) then
                                          trampCall( callProcedure( 'cons',
                                              begin
                                                if @global_lisp_binding.has_key?('_cons') then
                                                  trampCall(@_cons)
                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:191"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                              :"if"                                              ,Cell.new(
                                                trampCall( callProcedure( 'list',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_list') then
                                                        trampCall(@_list)
                                                      else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:189"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'list',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_list') then
                                                              trampCall(@_list)
                                                            else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:189"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                          :"set!"                                                          ,Cell.new(
                                                            begin
                                                                trampCall(_tmpsym)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:187"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,Cell.new(
                                                            begin
                                                                trampCall(_condition)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:190"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))))                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'list',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_list') then
                                                              trampCall(@_list)
                                                            else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:189"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            trampCall( callProcedure( 'cadr',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cadr') then
                                                                    trampCall(@_cadr)
                                                                  else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:187"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      trampCall(_body)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:191"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         )))                                                          ,Cell.new(
                                                            begin
                                                                trampCall(_tmpsym)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:187"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   ))))
                                                             ))))
                                                       ))))
                                      else
                                          trampCall( callProcedure( 'cons',
                                              begin
                                                if @global_lisp_binding.has_key?('_cons') then
                                                  trampCall(@_cons)
                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:191"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                              :"if"                                              ,Cell.new(
                                                trampCall( callProcedure( 'list',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_list') then
                                                        trampCall(@_list)
                                                      else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:189"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_condition)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:190"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'cons',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cons') then
                                                              trampCall(@_cons)
                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:191"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                          :"begin"                                                          ,Cell.new(
                                                            begin
                                                                trampCall(_body)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:191"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   ))))
                                                             ))))
                                                       ))))
                                      end                                    ,Cell.new(
                                      if ( 
                                        trampCall( callProcedure( '<',
                                            begin
                                              if @global_lisp_binding.has_key?('__LTMARK') then
                                                trampCall(@__LTMARK)
                                              else raise NameError.new( "Error: undefined variable __LTMARK", "__LTMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:192"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                            0                                            ,Cell.new(
                                              trampCall( callProcedure( 'length',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_length') then
                                                      trampCall(@_length)
                                                    else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:199"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_elseblock)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:193"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                                     ))))
                                       ) then
                                          begin
                                              trampCall(_elseblock)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:193"] + __e.backtrace ) ; raise __e
                                          end
                                      else
                                        Cell.new()
                                      end
                                             ))))
                            } ; ___lambda.call(
                                  if ( 
                                    trampCall( callProcedure( 'eq?',
                                        begin
                                          if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                            trampCall(@_eq_QUMARK)
                                          else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:199"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                        :"else"                                        ,Cell.new(
                                          trampCall( callProcedure( 'car',
                                              begin
                                                if @global_lisp_binding.has_key?('_car') then
                                                  trampCall(@_car)
                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:201"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_elem)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:177"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 ))))
                                   ) then
                                    true
                                  else
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:201"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_elem)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:177"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                  end                                ,
                                  if ( 
                                    trampCall( callProcedure( 'null?',
                                        begin
                                          if @global_lisp_binding.has_key?('_null_QUMARK') then
                                            trampCall(@_null_QUMARK)
                                          else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:175"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'cdr',
                                              begin
                                                if @global_lisp_binding.has_key?('_cdr') then
                                                  trampCall(@_cdr)
                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:202"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_elem)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:177"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 )))
                                   ) then
                                    Cell.new(true)
                                  else
                                      trampCall( callProcedure( 'cdr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cdr') then
                                              trampCall(@_cdr)
                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:202"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_elem)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:177"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                  end                                ,
                                  trampCall( callProcedure( 'gensym',
                                      begin
                                        if @global_lisp_binding.has_key?('_gensym') then
                                          trampCall(@_gensym)
                                        else raise NameError.new( "Error: undefined variable _gensym", "_gensym" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:178"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                    Cell.new(
                                               )))
                                       )
                          end
                      }
                    _cond_MIMARKiter                     = 
                      Proc.new { |_lst| 
                          if ( 
                            trampCall( callProcedure( 'eq?',
                                begin
                                  if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                    trampCall(@_eq_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:199"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                0                                ,Cell.new(
                                  trampCall( callProcedure( 'length',
                                      begin
                                        if @global_lisp_binding.has_key?('_length') then
                                          trampCall(@_length)
                                        else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:199"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lst)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:203"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                         ))))
                           ) then
                            Cell.new()
                          else
                              if ( 
                                trampCall( callProcedure( 'eq?',
                                    begin
                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                        trampCall(@_eq_QUMARK)
                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:199"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                    1                                    ,Cell.new(
                                      trampCall( callProcedure( 'length',
                                          begin
                                            if @global_lisp_binding.has_key?('_length') then
                                              trampCall(@_length)
                                            else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:199"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lst)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:203"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             ))))
                               ) then
                                  trampCall( callProcedure( 'case-block',
                                      begin
                                          trampCall(_case_MIMARKblock)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:201"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'car',
                                            begin
                                              if @global_lisp_binding.has_key?('_car') then
                                                trampCall(@_car)
                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:201"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_lst)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:203"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))                                      ,Cell.new(
                                      Cell.new()
                                               ))))
                              else
                                  trampCall( callProcedure( 'case-block',
                                      begin
                                          trampCall(_case_MIMARKblock)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:201"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'car',
                                            begin
                                              if @global_lisp_binding.has_key?('_car') then
                                                trampCall(@_car)
                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:201"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_lst)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:203"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))                                      ,Cell.new(
                                        trampCall( callProcedure( 'cond-iter',
                                            begin
                                                trampCall(_cond_MIMARKiter)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:203"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'cdr',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cdr') then
                                                      trampCall(@_cdr)
                                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:202"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_lst)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:203"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                                     )))
                                               ))))
                              end
                          end
                      }
                    trampCall( callProcedure( 'cond-iter',
                        begin
                            trampCall(_cond_MIMARKiter)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:203"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lst)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:203"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                } ; ___lambda.call(
                nil,nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_let1'] = true
    @_let1 = 
    trampCall(
          LispMacro.new { |_var,_expr,*__rest__| _body = __rest__[0] ;  
              trampCall( callProcedure( 'append',
                  begin
                    if @global_lisp_binding.has_key?('_append') then
                      trampCall(@_append)
                    else raise NameError.new( "Error: undefined variable _append", "_append" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:207"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'list',
                        begin
                          if @global_lisp_binding.has_key?('_list') then
                            trampCall(@_list)
                          else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:208"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                        :"let"                        ,Cell.new(
                          trampCall( callProcedure( 'list',
                              begin
                                if @global_lisp_binding.has_key?('_list') then
                                  trampCall(@_list)
                                else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:208"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'list',
                                    begin
                                      if @global_lisp_binding.has_key?('_list') then
                                        trampCall(@_list)
                                      else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:208"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_var)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:208"] + __e.backtrace ) ; raise __e
                                      end                                    ,Cell.new(
                                      begin
                                          trampCall(_expr)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:208"] + __e.backtrace ) ; raise __e
                                      end
                                             ))))
                                       )))
                                 ))))                  ,Cell.new(
                    begin
                        trampCall(_body)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:209"] + __e.backtrace ) ; raise __e
                    end
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_or'] = true
    @_or = 
    trampCall(
          LispMacro.new { |*__rest__| _lst = __rest__[0] ;  
              begin
                ___lambda = lambda { |_or_MIMARKiter| 
                    _or_MIMARKiter                     = 
                      Proc.new { |_lst| 
                          if ( 
                            trampCall( callProcedure( 'eq?',
                                begin
                                  if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                    trampCall(@_eq_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:218"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                0                                ,Cell.new(
                                  trampCall( callProcedure( 'length',
                                      begin
                                        if @global_lisp_binding.has_key?('_length') then
                                          trampCall(@_length)
                                        else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:218"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lst)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:226"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                         ))))
                           ) then
                              begin
                                false
                              end
                          else
                              if ( 
                                trampCall( callProcedure( 'eq?',
                                    begin
                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                        trampCall(@_eq_QUMARK)
                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:218"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                    1                                    ,Cell.new(
                                      trampCall( callProcedure( 'length',
                                          begin
                                            if @global_lisp_binding.has_key?('_length') then
                                              trampCall(@_length)
                                            else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:218"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lst)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:226"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             ))))
                               ) then
                                  begin
                                      begin
                                        ___lambda = lambda { |_sym| 
                                            trampCall( callProcedure( 'list',
                                                begin
                                                  if @global_lisp_binding.has_key?('_list') then
                                                    trampCall(@_list)
                                                  else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                :"let1"                                                ,Cell.new(
                                                  begin
                                                      trampCall(_sym)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                                  end                                                ,Cell.new(
                                                  trampCall( callProcedure( 'car',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_car') then
                                                          trampCall(@_car)
                                                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:224"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_lst)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:226"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))                                                ,Cell.new(
                                                  trampCall( callProcedure( 'list',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_list') then
                                                          trampCall(@_list)
                                                        else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                      :"if"                                                      ,Cell.new(
                                                        begin
                                                            trampCall(_sym)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,Cell.new(
                                                        begin
                                                            trampCall(_sym)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,Cell.new(
                                                      false
                                                               ))))))
                                                         ))))))
                                        } ; ___lambda.call(
                                              trampCall( callProcedure( 'gensym',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_gensym') then
                                                      trampCall(@_gensym)
                                                    else raise NameError.new( "Error: undefined variable _gensym", "_gensym" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:223"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                Cell.new(
                                                           )))
                                                   )
                                      end
                                  end
                              else
                                  if ( 
                                  true
                                   ) then
                                      begin
                                          begin
                                            ___lambda = lambda { |_sym| 
                                                trampCall( callProcedure( 'list',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_list') then
                                                        trampCall(@_list)
                                                      else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                    :"let1"                                                    ,Cell.new(
                                                      begin
                                                          trampCall(_sym)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'car',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_car') then
                                                              trampCall(@_car)
                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:224"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_lst)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:226"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'list',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_list') then
                                                              trampCall(@_list)
                                                            else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                          :"if"                                                          ,Cell.new(
                                                            begin
                                                                trampCall(_sym)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,Cell.new(
                                                            begin
                                                                trampCall(_sym)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,Cell.new(
                                                            trampCall( callProcedure( 'or-iter',
                                                                begin
                                                                    trampCall(_or_MIMARKiter)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:226"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  trampCall( callProcedure( 'cdr',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_cdr') then
                                                                          trampCall(@_cdr)
                                                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:225"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            trampCall(_lst)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:226"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               )))
                                                                         )))
                                                                   ))))))
                                                             ))))))
                                            } ; ___lambda.call(
                                                  trampCall( callProcedure( 'gensym',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_gensym') then
                                                          trampCall(@_gensym)
                                                        else raise NameError.new( "Error: undefined variable _gensym", "_gensym" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:223"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                    Cell.new(
                                                               )))
                                                       )
                                          end
                                      end
                                  else
                                    Nil.new
                                  end
                              end
                          end
                      }
                    trampCall( callProcedure( 'or-iter',
                        begin
                            trampCall(_or_MIMARKiter)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:226"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lst)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:226"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_and'] = true
    @_and = 
    trampCall(
          LispMacro.new { |*__rest__| _lst = __rest__[0] ;  
              begin
                ___lambda = lambda { |_and_MIMARKiter| 
                    _and_MIMARKiter                     = 
                      Proc.new { |_lst| 
                          if ( 
                            trampCall( callProcedure( 'eq?',
                                begin
                                  if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                    trampCall(@_eq_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:238"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                0                                ,Cell.new(
                                  trampCall( callProcedure( 'length',
                                      begin
                                        if @global_lisp_binding.has_key?('_length') then
                                          trampCall(@_length)
                                        else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:235"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lst)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:241"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                         ))))
                           ) then
                              begin
                                true
                              end
                          else
                              if ( 
                                trampCall( callProcedure( 'eq?',
                                    begin
                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                        trampCall(@_eq_QUMARK)
                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:238"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                    1                                    ,Cell.new(
                                      trampCall( callProcedure( 'length',
                                          begin
                                            if @global_lisp_binding.has_key?('_length') then
                                              trampCall(@_length)
                                            else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:235"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lst)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:241"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             ))))
                               ) then
                                  begin
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:238"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lst)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:241"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                  end
                              else
                                  if ( 
                                  true
                                   ) then
                                      begin
                                          trampCall( callProcedure( 'list',
                                              begin
                                                if @global_lisp_binding.has_key?('_list') then
                                                  trampCall(@_list)
                                                else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:238"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                              :"if"                                              ,Cell.new(
                                                trampCall( callProcedure( 'list',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_list') then
                                                        trampCall(@_list)
                                                      else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:238"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                    :"not"                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'list',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_list') then
                                                              trampCall(@_list)
                                                            else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:238"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                          :"eq?"                                                          ,Cell.new(
                                                          false                                                          ,Cell.new(
                                                            trampCall( callProcedure( 'car',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_car') then
                                                                    trampCall(@_car)
                                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:238"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      trampCall(_lst)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:241"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         )))
                                                                   )))))
                                                             ))))                                              ,Cell.new(
                                                trampCall( callProcedure( 'and-iter',
                                                    begin
                                                        trampCall(_and_MIMARKiter)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:241"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'cdr',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cdr') then
                                                              trampCall(@_cdr)
                                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:239"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_lst)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:241"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))
                                                             )))                                              ,Cell.new(
                                              false
                                                       ))))))
                                      end
                                  else
                                    Nil.new
                                  end
                              end
                          end
                      }
                    trampCall( callProcedure( 'and-iter',
                        begin
                            trampCall(_and_MIMARKiter)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:241"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lst)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:241"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_apply'] = true
    @_apply = 
    trampCall(
          Proc.new { |_proc,*__rest__| _args = __rest__[0] ;  
              if ( 
                trampCall( callProcedure( 'null?',
                    begin
                      if @global_lisp_binding.has_key?('_null_QUMARK') then
                        trampCall(@_null_QUMARK)
                      else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:245"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_args)
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:249"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  DelayedCallPacket.new( 'proc',
                      begin
                          trampCall(_proc)
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:248"] + __e.backtrace ) ; raise __e
                      end                    ,
                    Cell.new(
                               ))
              else
                  trampCall( callProcedure( 'anonymouse', 
                      Proc.new { |_lol| 
                          trampCall( callProcedure( 'apply1',
                              begin
                                if @global_lisp_binding.has_key?('_apply1') then
                                  trampCall(@_apply1)
                                else raise NameError.new( "Error: undefined variable _apply1", "_apply1" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:248"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_proc)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:248"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                                trampCall( callProcedure( 'append',
                                    begin
                                      if @global_lisp_binding.has_key?('_append') then
                                        trampCall(@_append)
                                      else raise NameError.new( "Error: undefined variable _append", "_append" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:248"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'reverse',
                                          begin
                                            if @global_lisp_binding.has_key?('_reverse') then
                                              trampCall(@_reverse)
                                            else raise NameError.new( "Error: undefined variable _reverse", "_reverse" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:249"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            trampCall( callProcedure( 'cdr',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cdr') then
                                                    trampCall(@_cdr)
                                                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:248"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_lol)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:248"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                   )))                                    ,Cell.new(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:248"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lol)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:248"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             ))))
                                       ))))
                      }                    ,
                      Cell.new(
                        trampCall( callProcedure( 'reverse',
                            begin
                              if @global_lisp_binding.has_key?('_reverse') then
                                trampCall(@_reverse)
                              else raise NameError.new( "Error: undefined variable _reverse", "_reverse" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:249"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_args)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:249"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                               )))
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_quasiquote'] = true
    @_quasiquote = 
    trampCall(
          LispMacro.new { |_l| 
              begin
                ___lambda = lambda { |_mcons,_mappend,_foo| 
                    _mcons                     = 
                      Proc.new { |_f,_l,_r| 
                          if ( 
                            if ( 
                              trampCall( callProcedure( 'not',
                                  begin
                                    if @global_lisp_binding.has_key?('_not') then
                                      trampCall(@_not)
                                    else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:283"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'eq?',
                                        begin
                                          if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                            trampCall(@_eq_QUMARK)
                                          else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                        false                                        ,Cell.new(
                                          trampCall( callProcedure( 'pair?',
                                              begin
                                                if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                  trampCall(@_pair_QUMARK)
                                                else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:295"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_r)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 ))))
                                           )))
                             ) then
                                if ( 
                                  trampCall( callProcedure( 'not',
                                      begin
                                        if @global_lisp_binding.has_key?('_not') then
                                          trampCall(@_not)
                                        else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:283"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'eq?',
                                            begin
                                              if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                trampCall(@_eq_QUMARK)
                                              else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                            false                                            ,Cell.new(
                                              trampCall( callProcedure( 'eq?',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                      trampCall(@_eq_QUMARK)
                                                    else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'car',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_car') then
                                                            trampCall(@_car)
                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_r)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))                                                  ,Cell.new(
                                                  :"quote"
                                                           ))))
                                                     ))))
                                               )))
                                 ) then
                                    if ( 
                                      trampCall( callProcedure( 'not',
                                          begin
                                            if @global_lisp_binding.has_key?('_not') then
                                              trampCall(@_not)
                                            else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:283"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            trampCall( callProcedure( 'eq?',
                                                begin
                                                  if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                    trampCall(@_eq_QUMARK)
                                                  else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                false                                                ,Cell.new(
                                                  trampCall( callProcedure( 'eq?',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                          trampCall(@_eq_QUMARK)
                                                        else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        trampCall( callProcedure( 'car',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_car') then
                                                                trampCall(@_car)
                                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              trampCall( callProcedure( 'cdr',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_cdr') then
                                                                      trampCall(@_cdr)
                                                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_r)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))
                                                                     )))                                                      ,Cell.new(
                                                        trampCall( callProcedure( 'cdr',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_cdr') then
                                                                trampCall(@_cdr)
                                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_f)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:275"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))
                                                               ))))
                                                         ))))
                                                   )))
                                     ) then
                                        if ( 
                                          trampCall( callProcedure( 'not',
                                              begin
                                                if @global_lisp_binding.has_key?('_not') then
                                                  trampCall(@_not)
                                                else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:283"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'eq?',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                        trampCall(@_eq_QUMARK)
                                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                    false                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'pair?',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                              trampCall(@_pair_QUMARK)
                                                            else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:295"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_l)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))
                                                             ))))
                                                       )))
                                         ) then
                                            if ( 
                                              trampCall( callProcedure( 'not',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_not') then
                                                      trampCall(@_not)
                                                    else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:283"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'eq?',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                            trampCall(@_eq_QUMARK)
                                                          else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                        false                                                        ,Cell.new(
                                                          trampCall( callProcedure( 'eq?',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                  trampCall(@_eq_QUMARK)
                                                                else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                trampCall( callProcedure( 'car',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_car') then
                                                                        trampCall(@_car)
                                                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      begin
                                                                          trampCall(_l)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                             )))                                                              ,Cell.new(
                                                              :"quote"
                                                                       ))))
                                                                 ))))
                                                           )))
                                             ) then
                                                trampCall( callProcedure( 'eq?',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                        trampCall(@_eq_QUMARK)
                                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'car',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_car') then
                                                              trampCall(@_car)
                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            trampCall( callProcedure( 'cdr',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cdr') then
                                                                    trampCall(@_cdr)
                                                                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      trampCall(_l)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         )))
                                                                   )))                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'car',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_car') then
                                                              trampCall(@_car)
                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_f)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:275"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))
                                                             ))))
                                            else
                                              false
                                            end
                                        else
                                          false
                                        end
                                    else
                                      false
                                    end
                                else
                                  false
                                end
                            else
                              false
                            end
                           ) then
                              if ( 
                                begin
                                  ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20119| 
                                      if ( 
                                        begin
                                            trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20119)
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end
                                       ) then
                                          begin
                                              trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20119)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                      else
                                          begin
                                            ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20120| 
                                                if ( 
                                                  begin
                                                      trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20120)
                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                  end
                                                 ) then
                                                    begin
                                                        trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20120)
                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                    end
                                                else
                                                    begin
                                                      ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20121| 
                                                          if ( 
                                                            begin
                                                                trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20121)
                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                            end
                                                           ) then
                                                              begin
                                                                  trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20121)
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end
                                                          else
                                                            false
                                                          end
                                                      } ; ___lambda.call(
                                                            trampCall( callProcedure( 'string?',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_string_QUMARK') then
                                                                    trampCall(@_string_QUMARK)
                                                                  else raise NameError.new( "Error: undefined variable _string_QUMARK", "_string_QUMARK" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:284"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      trampCall(_f)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:275"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         )))
                                                                 )
                                                    end
                                                end
                                            } ; ___lambda.call(
                                                  trampCall( callProcedure( 'number?',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_number_QUMARK') then
                                                          trampCall(@_number_QUMARK)
                                                        else raise NameError.new( "Error: undefined variable _number_QUMARK", "_number_QUMARK" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:284"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_f)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:275"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                                       )
                                          end
                                      end
                                  } ; ___lambda.call(
                                        trampCall( callProcedure( 'procedure?',
                                            begin
                                              if @global_lisp_binding.has_key?('_procedure_QUMARK') then
                                                trampCall(@_procedure_QUMARK)
                                              else raise NameError.new( "Error: undefined variable _procedure_QUMARK", "_procedure_QUMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:284"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_f)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:275"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                             )
                                end
                               ) then
                                  begin
                                      trampCall(_f)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:275"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  trampCall( callProcedure( 'list',
                                      begin
                                        if @global_lisp_binding.has_key?('_list') then
                                          trampCall(@_list)
                                        else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:286"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                      :"quote"                                      ,Cell.new(
                                        begin
                                            trampCall(_f)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:275"] + __e.backtrace ) ; raise __e
                                        end
                                               ))))
                              end
                          else
                              if ( 
                                trampCall( callProcedure( 'eqv?',
                                    begin
                                      if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                        trampCall(@_eqv_QUMARK)
                                      else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:268"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_l)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                      end                                    ,Cell.new(
                                      begin
                                        if @global_lisp_binding.has_key?('_vector') then
                                          trampCall(@_vector)
                                        else raise NameError.new( "Error: undefined variable _vector", "_vector" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:268"] + __e.backtrace ) ; raise __e
                                      end
                                             ))))
                               ) then
                                  trampCall( callProcedure( 'apply',
                                      begin
                                        if @global_lisp_binding.has_key?('_apply') then
                                          trampCall(@_apply)
                                        else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:269"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_l)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        trampCall( callProcedure( 'eval',
                                            begin
                                              if @global_lisp_binding.has_key?('_eval') then
                                                trampCall(@_eval)
                                              else raise NameError.new( "Error: undefined variable _eval", "_eval" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:269"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_r)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               ))))
                              else
                                  trampCall( callProcedure( 'list',
                                      begin
                                        if @global_lisp_binding.has_key?('_list') then
                                          trampCall(@_list)
                                        else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:286"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                      :"cons"                                      ,Cell.new(
                                        begin
                                            trampCall(_l)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        begin
                                            trampCall(_r)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                        end
                                               )))))
                              end
                          end
                      }
                    _mappend                     = 
                      Proc.new { |_f,_l,_r| 
                          if ( 
                            begin
                              ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20122| 
                                  if ( 
                                    begin
                                        trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20122)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                   ) then
                                      begin
                                          trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20122)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  else
                                      begin
                                        ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20123| 
                                            if ( 
                                              begin
                                                  trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20123)
                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                              end
                                             ) then
                                                begin
                                                    trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20123)
                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                end
                                            else
                                              false
                                            end
                                        } ; ___lambda.call(
                                              if ( 
                                                trampCall( callProcedure( 'not',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_not') then
                                                        trampCall(@_not)
                                                      else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:283"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'eq?',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                              trampCall(@_eq_QUMARK)
                                                            else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                          false                                                          ,Cell.new(
                                                            trampCall( callProcedure( 'pair?',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                                    trampCall(@_pair_QUMARK)
                                                                  else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:295"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      trampCall(_r)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         )))
                                                                   ))))
                                                             )))
                                               ) then
                                                  if ( 
                                                    trampCall( callProcedure( 'not',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_not') then
                                                            trampCall(@_not)
                                                          else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:283"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'eq?',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                  trampCall(@_eq_QUMARK)
                                                                else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                              false                                                              ,Cell.new(
                                                                trampCall( callProcedure( 'eq?',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                        trampCall(@_eq_QUMARK)
                                                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      trampCall( callProcedure( 'car',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_car') then
                                                                              trampCall(@_car)
                                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_r)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))                                                                    ,Cell.new(
                                                                    :"quote"
                                                                             ))))
                                                                       ))))
                                                                 )))
                                                   ) then
                                                      trampCall( callProcedure( 'eq?',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                              trampCall(@_eq_QUMARK)
                                                            else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            trampCall( callProcedure( 'car',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_car') then
                                                                    trampCall(@_car)
                                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  trampCall( callProcedure( 'cdr',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_cdr') then
                                                                          trampCall(@_cdr)
                                                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            trampCall(_r)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               )))
                                                                         )))                                                          ,Cell.new(
                                                          Cell.new()
                                                                   ))))
                                                  else
                                                    false
                                                  end
                                              else
                                                false
                                              end
                                                   )
                                      end
                                  end
                              } ; ___lambda.call(
                                    trampCall( callProcedure( 'null?',
                                        begin
                                          if @global_lisp_binding.has_key?('_null_QUMARK') then
                                            trampCall(@_null_QUMARK)
                                          else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:275"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'cdr',
                                              begin
                                                if @global_lisp_binding.has_key?('_cdr') then
                                                  trampCall(@_cdr)
                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_f)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:275"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 )))
                                         )
                            end
                           ) then
                              begin
                                  trampCall(_l)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                              end
                          else
                              trampCall( callProcedure( 'list',
                                  begin
                                    if @global_lisp_binding.has_key?('_list') then
                                      trampCall(@_list)
                                    else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:286"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  :"append"                                  ,Cell.new(
                                    begin
                                        trampCall(_l)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_r)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                    end
                                           )))))
                          end
                      }
                    _foo                     = 
                      Proc.new { |_level,_form| 
                          if ( 
                            trampCall( callProcedure( 'not',
                                begin
                                  if @global_lisp_binding.has_key?('_not') then
                                    trampCall(@_not)
                                  else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:283"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  trampCall( callProcedure( 'pair?',
                                      begin
                                        if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                          trampCall(@_pair_QUMARK)
                                        else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:295"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_form)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                         )))
                           ) then
                              begin
                                  if ( 
                                    begin
                                      ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20127| 
                                          if ( 
                                            begin
                                                trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20127)
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end
                                           ) then
                                              begin
                                                  trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20127)
                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                              end
                                          else
                                              begin
                                                ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20128| 
                                                    if ( 
                                                      begin
                                                          trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20128)
                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                      end
                                                     ) then
                                                        begin
                                                            trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20128)
                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                        end
                                                    else
                                                        begin
                                                          ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20129| 
                                                              if ( 
                                                                begin
                                                                    trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20129)
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end
                                                               ) then
                                                                  begin
                                                                      trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20129)
                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              else
                                                                false
                                                              end
                                                          } ; ___lambda.call(
                                                                trampCall( callProcedure( 'string?',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_string_QUMARK') then
                                                                        trampCall(@_string_QUMARK)
                                                                      else raise NameError.new( "Error: undefined variable _string_QUMARK", "_string_QUMARK" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:284"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      begin
                                                                          trampCall(_form)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                             )))
                                                                     )
                                                        end
                                                    end
                                                } ; ___lambda.call(
                                                      trampCall( callProcedure( 'number?',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_number_QUMARK') then
                                                              trampCall(@_number_QUMARK)
                                                            else raise NameError.new( "Error: undefined variable _number_QUMARK", "_number_QUMARK" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:284"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_form)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))
                                                           )
                                              end
                                          end
                                      } ; ___lambda.call(
                                            trampCall( callProcedure( 'procedure?',
                                                begin
                                                  if @global_lisp_binding.has_key?('_procedure_QUMARK') then
                                                    trampCall(@_procedure_QUMARK)
                                                  else raise NameError.new( "Error: undefined variable _procedure_QUMARK", "_procedure_QUMARK" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:284"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_form)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                 )
                                    end
                                   ) then
                                      begin
                                          trampCall(_form)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                      end
                                  else
                                      trampCall( callProcedure( 'list',
                                          begin
                                            if @global_lisp_binding.has_key?('_list') then
                                              trampCall(@_list)
                                            else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:286"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                          :"quote"                                          ,Cell.new(
                                            begin
                                                trampCall(_form)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                            end
                                                   ))))
                                  end
                              end
                          else
                              if ( 
                                trampCall( callProcedure( 'eq?',
                                    begin
                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                        trampCall(@_eq_QUMARK)
                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                    :"quasiquote"                                    ,Cell.new(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_form)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             ))))
                               ) then
                                  begin
                                      trampCall( callProcedure( 'mcons',
                                          begin
                                              trampCall(_mcons)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_form)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                            end                                          ,Cell.new(
                                          Cell.new(:"quote",Cell.new(:"quasiquote"))                                          ,Cell.new(
                                            trampCall( callProcedure( 'foo',
                                                begin
                                                    trampCall(_foo)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  trampCall( callProcedure( '+',
                                                      begin
                                                        if @global_lisp_binding.has_key?('__PLMARK') then
                                                          trampCall(@__PLMARK)
                                                        else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:293"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_level)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,Cell.new(
                                                      1
                                                               ))))                                                ,Cell.new(
                                                  trampCall( callProcedure( 'cdr',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_cdr') then
                                                          trampCall(@_cdr)
                                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_form)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                                         ))))
                                                   )))))
                                  end
                              else
                                  if ( 
                                  true
                                   ) then
                                      begin
                                          if ( 
                                            trampCall( callProcedure( 'zero?',
                                                begin
                                                  if @global_lisp_binding.has_key?('_zero_QUMARK') then
                                                    trampCall(@_zero_QUMARK)
                                                  else raise NameError.new( "Error: undefined variable _zero_QUMARK", "_zero_QUMARK" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:290"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_level)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                           ) then
                                              if ( 
                                                trampCall( callProcedure( 'eq?',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                        trampCall(@_eq_QUMARK)
                                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'car',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_car') then
                                                              trampCall(@_car)
                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_form)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))                                                    ,Cell.new(
                                                    :"unquote"
                                                             ))))
                                               ) then
                                                  begin
                                                      trampCall( callProcedure( 'car',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_car') then
                                                              trampCall(@_car)
                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            trampCall( callProcedure( 'cdr',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cdr') then
                                                                    trampCall(@_cdr)
                                                                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      trampCall(_form)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         )))
                                                                   )))
                                                  end
                                              else
                                                  if ( 
                                                    trampCall( callProcedure( 'eq?',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                            trampCall(@_eq_QUMARK)
                                                          else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'car',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_car') then
                                                                  trampCall(@_car)
                                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_form)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))                                                        ,Cell.new(
                                                        :"unquote-splicing"
                                                                 ))))
                                                   ) then
                                                      begin
                                                          trampCall( callProcedure( 'raise',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_raise') then
                                                                  trampCall(@_raise)
                                                                else raise NameError.new( "Error: undefined variable _raise", "_raise" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:293"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(RuntimeError)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:293"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,Cell.new(
                                                                trampCall( callProcedure( '+',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('__PLMARK') then
                                                                        trampCall(@__PLMARK)
                                                                      else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:293"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                    "Error: Unquote-splicing wasn't in a list: "                                                                    ,Cell.new(
                                                                      trampCall( callProcedure( 'write-to-string',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_write_MIMARKto_MIMARKstring') then
                                                                              trampCall(@_write_MIMARKto_MIMARKstring)
                                                                            else raise NameError.new( "Error: undefined variable _write_MIMARKto_MIMARKstring", "_write_MIMARKto_MIMARKstring" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:293"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_form)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))
                                                                             ))))                                                              ,Cell.new(
                                                                trampCall( callProcedure( 'sprintf',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_sprintf') then
                                                                        trampCall(@_sprintf)
                                                                      else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:294"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                    "%s:%s outside list."                                                                    ,Cell.new(
                                                                      trampCall( callProcedure( '*FILE*',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('__ASMARKFILE_ASMARK') then
                                                                              trampCall(@__ASMARKFILE_ASMARK)
                                                                            else raise NameError.new( "Error: undefined variable __ASMARKFILE_ASMARK", "__ASMARKFILE_ASMARK" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:294"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                        Cell.new(
                                                                                   )))                                                                    ,Cell.new(
                                                                      trampCall( callProcedure( '*LINE*',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('__ASMARKLINE_ASMARK') then
                                                                              trampCall(@__ASMARKLINE_ASMARK)
                                                                            else raise NameError.new( "Error: undefined variable __ASMARKLINE_ASMARK", "__ASMARKLINE_ASMARK" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:294"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                        Cell.new(
                                                                                   )))
                                                                             )))))
                                                                       )))))
                                                      end
                                                  else
                                                      if ( 
                                                        if ( 
                                                          trampCall( callProcedure( 'not',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_not') then
                                                                  trampCall(@_not)
                                                                else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:283"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                trampCall( callProcedure( 'eq?',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                        trampCall(@_eq_QUMARK)
                                                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                    false                                                                    ,Cell.new(
                                                                      trampCall( callProcedure( 'pair?',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                                              trampCall(@_pair_QUMARK)
                                                                            else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:295"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            trampCall( callProcedure( 'car',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_car') then
                                                                                    trampCall(@_car)
                                                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                Cell.new(
                                                                                  begin
                                                                                      trampCall(_form)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                                         )))
                                                                                   )))
                                                                             ))))
                                                                       )))
                                                         ) then
                                                            trampCall( callProcedure( 'eq?',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                    trampCall(@_eq_QUMARK)
                                                                  else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  trampCall( callProcedure( 'car',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_car') then
                                                                          trampCall(@_car)
                                                                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        trampCall( callProcedure( 'car',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_car') then
                                                                                trampCall(@_car)
                                                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  trampCall(_form)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                                     )))
                                                                               )))                                                                ,Cell.new(
                                                                :"unquote-splicing"
                                                                         ))))
                                                        else
                                                          false
                                                        end
                                                       ) then
                                                          begin
                                                              trampCall( callProcedure( 'mappend',
                                                                  begin
                                                                      trampCall(_mappend)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:297"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_form)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'car',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_car') then
                                                                            trampCall(@_car)
                                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          trampCall( callProcedure( 'cdr',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_cdr') then
                                                                                  trampCall(@_cdr)
                                                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                                trampCall( callProcedure( 'car',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_car') then
                                                                                        trampCall(@_car)
                                                                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    Cell.new(
                                                                                      begin
                                                                                          trampCall(_form)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                             )))
                                                                                       )))
                                                                                 )))                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'foo',
                                                                        begin
                                                                            trampCall(_foo)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              trampCall(_level)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,Cell.new(
                                                                          trampCall( callProcedure( 'cdr',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_cdr') then
                                                                                  trampCall(@_cdr)
                                                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                                begin
                                                                                    trampCall(_form)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                                       )))
                                                                                 ))))
                                                                           )))))
                                                          end
                                                      else
                                                          if ( 
                                                          true
                                                           ) then
                                                              begin
                                                                  trampCall( callProcedure( 'mcons',
                                                                      begin
                                                                          trampCall(_mcons)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            trampCall(_form)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,Cell.new(
                                                                        trampCall( callProcedure( 'foo',
                                                                            begin
                                                                                trampCall(_foo)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  trampCall(_level)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,Cell.new(
                                                                              trampCall( callProcedure( 'car',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_car') then
                                                                                      trampCall(@_car)
                                                                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                    begin
                                                                                        trampCall(_form)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                           )))
                                                                                     ))))                                                                      ,Cell.new(
                                                                        trampCall( callProcedure( 'foo',
                                                                            begin
                                                                                trampCall(_foo)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  trampCall(_level)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,Cell.new(
                                                                              trampCall( callProcedure( 'cdr',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_cdr') then
                                                                                      trampCall(@_cdr)
                                                                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                    begin
                                                                                        trampCall(_form)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                           )))
                                                                                     ))))
                                                                               )))))
                                                              end
                                                          else
                                                            Nil.new
                                                          end
                                                      end
                                                  end
                                              end
                                          else
                                              if ( 
                                                trampCall( callProcedure( 'eq?',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                        trampCall(@_eq_QUMARK)
                                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'car',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_car') then
                                                              trampCall(@_car)
                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_form)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))                                                    ,Cell.new(
                                                    :"unquote"
                                                             ))))
                                               ) then
                                                  begin
                                                      trampCall( callProcedure( 'mcons',
                                                          begin
                                                              trampCall(_mcons)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_form)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,Cell.new(
                                                          Cell.new(:"quote",Cell.new(:"unquote"))                                                          ,Cell.new(
                                                            trampCall( callProcedure( 'foo',
                                                                begin
                                                                    trampCall(_foo)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  trampCall( callProcedure( '-',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('__MIMARK') then
                                                                          trampCall(@__MIMARK)
                                                                        else raise NameError.new( "Error: undefined variable __MIMARK", "__MIMARK" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:306"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            trampCall(_level)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,Cell.new(
                                                                      1
                                                                               ))))                                                                ,Cell.new(
                                                                  trampCall( callProcedure( 'cdr',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_cdr') then
                                                                          trampCall(@_cdr)
                                                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            trampCall(_form)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               )))
                                                                         ))))
                                                                   )))))
                                                  end
                                              else
                                                  if ( 
                                                    trampCall( callProcedure( 'eq?',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                            trampCall(@_eq_QUMARK)
                                                          else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'car',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_car') then
                                                                  trampCall(@_car)
                                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_form)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))                                                        ,Cell.new(
                                                        :"unquote-splicing"
                                                                 ))))
                                                   ) then
                                                      begin
                                                          trampCall( callProcedure( 'mcons',
                                                              begin
                                                                  trampCall(_mcons)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_form)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,Cell.new(
                                                              Cell.new(:"quote",Cell.new(:"unquote-splicing"))                                                              ,Cell.new(
                                                                trampCall( callProcedure( 'foo',
                                                                    begin
                                                                        trampCall(_foo)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      trampCall( callProcedure( '-',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('__MIMARK') then
                                                                              trampCall(@__MIMARK)
                                                                            else raise NameError.new( "Error: undefined variable __MIMARK", "__MIMARK" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:306"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_level)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,Cell.new(
                                                                          1
                                                                                   ))))                                                                    ,Cell.new(
                                                                      trampCall( callProcedure( 'cdr',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_cdr') then
                                                                              trampCall(@_cdr)
                                                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_form)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))
                                                                             ))))
                                                                       )))))
                                                      end
                                                  else
                                                      if ( 
                                                      true
                                                       ) then
                                                          begin
                                                              trampCall( callProcedure( 'mcons',
                                                                  begin
                                                                      trampCall(_mcons)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_form)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'foo',
                                                                        begin
                                                                            trampCall(_foo)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              trampCall(_level)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,Cell.new(
                                                                          trampCall( callProcedure( 'car',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_car') then
                                                                                  trampCall(@_car)
                                                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:307"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                                begin
                                                                                    trampCall(_form)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                                       )))
                                                                                 ))))                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'foo',
                                                                        begin
                                                                            trampCall(_foo)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              trampCall(_level)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,Cell.new(
                                                                          trampCall( callProcedure( 'cdr',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_cdr') then
                                                                                  trampCall(@_cdr)
                                                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                                begin
                                                                                    trampCall(_form)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:308"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                                       )))
                                                                                 ))))
                                                                           )))))
                                                          end
                                                      else
                                                        Nil.new
                                                      end
                                                  end
                                              end
                                          end
                                      end
                                  else
                                    Nil.new
                                  end
                              end
                          end
                      }
                    trampCall( callProcedure( 'foo',
                        begin
                            trampCall(_foo)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                        0                        ,Cell.new(
                          begin
                              trampCall(_l)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:309"] + __e.backtrace ) ; raise __e
                          end
                                 ))))
                } ; ___lambda.call(
                nil,nil,nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_unquote'] = true
    @_unquote = 
    trampCall(
          LispMacro.new { |_lst| 
              trampCall( callProcedure( 'raise',
                  begin
                    if @global_lisp_binding.has_key?('_raise') then
                      trampCall(@_raise)
                    else raise NameError.new( "Error: undefined variable _raise", "_raise" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:313"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        trampCall(RuntimeError)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:313"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                  "Error: unquote appeared outside quasiquote"                  ,Cell.new(
                    trampCall( callProcedure( 'sprintf',
                        begin
                          if @global_lisp_binding.has_key?('_sprintf') then
                            trampCall(@_sprintf)
                          else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:313"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                        "%s:%s outside quasiquote"                        ,Cell.new(
                          trampCall( callProcedure( '*FILE*',
                              begin
                                if @global_lisp_binding.has_key?('__ASMARKFILE_ASMARK') then
                                  trampCall(@__ASMARKFILE_ASMARK)
                                else raise NameError.new( "Error: undefined variable __ASMARKFILE_ASMARK", "__ASMARKFILE_ASMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:313"] + __e.backtrace ) ; raise __e
                              end                            ,
                            Cell.new(
                                       )))                        ,Cell.new(
                          trampCall( callProcedure( '*LINE*',
                              begin
                                if @global_lisp_binding.has_key?('__ASMARKLINE_ASMARK') then
                                  trampCall(@__ASMARKLINE_ASMARK)
                                else raise NameError.new( "Error: undefined variable __ASMARKLINE_ASMARK", "__ASMARKLINE_ASMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:313"] + __e.backtrace ) ; raise __e
                              end                            ,
                            Cell.new(
                                       )))
                                 )))))
                           )))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_unquote_MIMARKsplicing'] = true
    @_unquote_MIMARKsplicing = 
    trampCall(
          LispMacro.new { |_lst| 
              trampCall( callProcedure( 'raise',
                  begin
                    if @global_lisp_binding.has_key?('_raise') then
                      trampCall(@_raise)
                    else raise NameError.new( "Error: undefined variable _raise", "_raise" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:318"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        trampCall(RuntimeError)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:318"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                  "Error: unquote-splicing appeared outside quasiquote"                  ,Cell.new(
                    trampCall( callProcedure( 'sprintf',
                        begin
                          if @global_lisp_binding.has_key?('_sprintf') then
                            trampCall(@_sprintf)
                          else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:318"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                        "%s:%s outside quasiquote"                        ,Cell.new(
                          trampCall( callProcedure( '*FILE*',
                              begin
                                if @global_lisp_binding.has_key?('__ASMARKFILE_ASMARK') then
                                  trampCall(@__ASMARKFILE_ASMARK)
                                else raise NameError.new( "Error: undefined variable __ASMARKFILE_ASMARK", "__ASMARKFILE_ASMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:318"] + __e.backtrace ) ; raise __e
                              end                            ,
                            Cell.new(
                                       )))                        ,Cell.new(
                          trampCall( callProcedure( '*LINE*',
                              begin
                                if @global_lisp_binding.has_key?('__ASMARKLINE_ASMARK') then
                                  trampCall(@__ASMARKLINE_ASMARK)
                                else raise NameError.new( "Error: undefined variable __ASMARKLINE_ASMARK", "__ASMARKLINE_ASMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:318"] + __e.backtrace ) ; raise __e
                              end                            ,
                            Cell.new(
                                       )))
                                 )))))
                           )))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_when'] = true
    @_when = 
    trampCall(
          LispMacro.new { |*__rest__| _form = __rest__[0] ;  
              trampCall( callProcedure( 'cons',
                  begin
                    if @global_lisp_binding.has_key?('_cons') then
                      trampCall(@_cons)
                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                  :"if"                  ,Cell.new(
                    trampCall( callProcedure( 'cons',
                        begin
                          if @global_lisp_binding.has_key?('_cons') then
                            trampCall(@_cons)
                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  trampCall(@_car)
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:323"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_form)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:323"] + __e.backtrace ) ; raise __e
                                end
                                       )))                        ,Cell.new(
                          trampCall( callProcedure( 'cons',
                              begin
                                if @global_lisp_binding.has_key?('_cons') then
                                  trampCall(@_cons)
                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'cons',
                                    begin
                                      if @global_lisp_binding.has_key?('_cons') then
                                        trampCall(@_cons)
                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                    :"begin"                                    ,Cell.new(
                                      trampCall( callProcedure( 'cdr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cdr') then
                                              trampCall(@_cdr)
                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:323"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_form)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:323"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             ))))                              ,Cell.new(
                              
                                       ))))
                                 ))))
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_unless'] = true
    @_unless = 
    trampCall(
          LispMacro.new { |*__rest__| _form = __rest__[0] ;  
              trampCall( callProcedure( 'cons',
                  begin
                    if @global_lisp_binding.has_key?('_cons') then
                      trampCall(@_cons)
                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                  :"if"                  ,Cell.new(
                    trampCall( callProcedure( 'cons',
                        begin
                          if @global_lisp_binding.has_key?('_cons') then
                            trampCall(@_cons)
                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'cons',
                              begin
                                if @global_lisp_binding.has_key?('_cons') then
                                  trampCall(@_cons)
                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              :"not"                              ,Cell.new(
                                trampCall( callProcedure( 'cons',
                                    begin
                                      if @global_lisp_binding.has_key?('_cons') then
                                        trampCall(@_cons)
                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:327"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_form)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:327"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))                                    ,Cell.new(
                                    
                                             ))))
                                       ))))                        ,Cell.new(
                          trampCall( callProcedure( 'cons',
                              begin
                                if @global_lisp_binding.has_key?('_cons') then
                                  trampCall(@_cons)
                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'cons',
                                    begin
                                      if @global_lisp_binding.has_key?('_cons') then
                                        trampCall(@_cons)
                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                    :"begin"                                    ,Cell.new(
                                      trampCall( callProcedure( 'cdr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cdr') then
                                              trampCall(@_cdr)
                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:327"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_form)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:327"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             ))))                              ,Cell.new(
                              
                                       ))))
                                 ))))
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_while'] = true
    @_while = 
    trampCall(
          LispMacro.new { |*__rest__| _form = __rest__[0] ;  
              begin
                ___lambda = lambda { |_sym| 
                    trampCall( callProcedure( 'cons',
                        begin
                          if @global_lisp_binding.has_key?('_cons') then
                            trampCall(@_cons)
                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                        :"begin"                        ,Cell.new(
                          trampCall( callProcedure( 'cons',
                              begin
                                if @global_lisp_binding.has_key?('_cons') then
                                  trampCall(@_cons)
                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'cons',
                                    begin
                                      if @global_lisp_binding.has_key?('_cons') then
                                        trampCall(@_cons)
                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                    :"define"                                    ,Cell.new(
                                      trampCall( callProcedure( 'cons',
                                          begin
                                            if @global_lisp_binding.has_key?('_cons') then
                                              trampCall(@_cons)
                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_sym)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:338"] + __e.backtrace ) ; raise __e
                                            end                                          ,Cell.new(
                                            trampCall( callProcedure( 'cons',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cons') then
                                                    trampCall(@_cons)
                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  trampCall( callProcedure( 'cons',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_cons') then
                                                          trampCall(@_cons)
                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                      :"lambda"                                                      ,Cell.new(
                                                        trampCall( callProcedure( 'cons',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                trampCall(@_cons)
                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                            Cell.new()                                                            ,Cell.new(
                                                              trampCall( callProcedure( 'cons',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                      trampCall(@_cons)
                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    trampCall( callProcedure( 'cons',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                            trampCall(@_cons)
                                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                        :"if"                                                                        ,Cell.new(
                                                                          trampCall( callProcedure( 'cons',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                                  trampCall(@_cons)
                                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                                trampCall( callProcedure( 'car',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_car') then
                                                                                        trampCall(@_car)
                                                                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:335"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    Cell.new(
                                                                                      begin
                                                                                          trampCall(_form)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:336"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                             )))                                                                              ,Cell.new(
                                                                                trampCall( callProcedure( 'cons',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                        trampCall(@_cons)
                                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    Cell.new(
                                                                                      trampCall( callProcedure( 'cons',
                                                                                          begin
                                                                                            if @global_lisp_binding.has_key?('_cons') then
                                                                                              trampCall(@_cons)
                                                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          Cell.new(
                                                                                          :"begin"                                                                                          ,Cell.new(
                                                                                            trampCall( callProcedure( 'append',
                                                                                                begin
                                                                                                  if @global_lisp_binding.has_key?('_append') then
                                                                                                    trampCall(@_append)
                                                                                                  else raise NameError.new( "Error: undefined variable _append", "_append" ) end
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,
                                                                                                Cell.new(
                                                                                                  trampCall( callProcedure( 'cdr',
                                                                                                      begin
                                                                                                        if @global_lisp_binding.has_key?('_cdr') then
                                                                                                          trampCall(@_cdr)
                                                                                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:336"] + __e.backtrace ) ; raise __e
                                                                                                      end                                                                                                    ,
                                                                                                      Cell.new(
                                                                                                        begin
                                                                                                            trampCall(_form)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:336"] + __e.backtrace ) ; raise __e
                                                                                                        end
                                                                                                               )))                                                                                                ,Cell.new(
                                                                                                  trampCall( callProcedure( 'cons',
                                                                                                      begin
                                                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                                                          trampCall(@_cons)
                                                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                                      end                                                                                                    ,
                                                                                                      Cell.new(
                                                                                                        trampCall( callProcedure( 'cons',
                                                                                                            begin
                                                                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                                                                trampCall(@_cons)
                                                                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                                            end                                                                                                          ,
                                                                                                            Cell.new(
                                                                                                              begin
                                                                                                                  trampCall(_sym)
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:338"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,Cell.new(
                                                                                                            
                                                                                                                     ))))                                                                                                      ,Cell.new(
                                                                                                      
                                                                                                               ))))
                                                                                                         ))))
                                                                                                   ))))                                                                                    ,Cell.new(
                                                                                    
                                                                                             ))))
                                                                                       ))))
                                                                                 ))))                                                                  ,Cell.new(
                                                                  
                                                                           ))))
                                                                     ))))
                                                               ))))                                                ,Cell.new(
                                                
                                                         ))))
                                                   ))))
                                             ))))                              ,Cell.new(
                                trampCall( callProcedure( 'cons',
                                    begin
                                      if @global_lisp_binding.has_key?('_cons') then
                                        trampCall(@_cons)
                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'cons',
                                          begin
                                            if @global_lisp_binding.has_key?('_cons') then
                                              trampCall(@_cons)
                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_sym)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:338"] + __e.backtrace ) ; raise __e
                                            end                                          ,Cell.new(
                                          
                                                   ))))                                    ,Cell.new(
                                    
                                             ))))
                                       ))))
                                 ))))
                } ; ___lambda.call(
                      trampCall( callProcedure( 'gensym',
                          begin
                            if @global_lisp_binding.has_key?('_gensym') then
                              trampCall(@_gensym)
                            else raise NameError.new( "Error: undefined variable _gensym", "_gensym" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:331"] + __e.backtrace ) ; raise __e
                          end                        ,
                        Cell.new(
                                   )))
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_until'] = true
    @_until = 
    trampCall(
          LispMacro.new { |*__rest__| _form = __rest__[0] ;  
              trampCall( callProcedure( 'cons',
                  begin
                    if @global_lisp_binding.has_key?('_cons') then
                      trampCall(@_cons)
                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                  :"while"                  ,Cell.new(
                    trampCall( callProcedure( 'cons',
                        begin
                          if @global_lisp_binding.has_key?('_cons') then
                            trampCall(@_cons)
                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'cons',
                              begin
                                if @global_lisp_binding.has_key?('_cons') then
                                  trampCall(@_cons)
                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              :"not"                              ,Cell.new(
                                trampCall( callProcedure( 'cons',
                                    begin
                                      if @global_lisp_binding.has_key?('_cons') then
                                        trampCall(@_cons)
                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:342"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_form)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:343"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))                                    ,Cell.new(
                                    
                                             ))))
                                       ))))                        ,Cell.new(
                          trampCall( callProcedure( 'cdr',
                              begin
                                if @global_lisp_binding.has_key?('_cdr') then
                                  trampCall(@_cdr)
                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:343"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_form)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:343"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                                 ))))
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_let'] = true
    @_let = 
    trampCall(
          LispMacro.new { |*__rest__| _lst = __rest__[0] ;  
              if ( 
                trampCall( callProcedure( 'symbol?',
                    begin
                      if @global_lisp_binding.has_key?('_symbol_QUMARK') then
                        trampCall(@_symbol_QUMARK)
                      else raise NameError.new( "Error: undefined variable _symbol_QUMARK", "_symbol_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:348"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      trampCall( callProcedure( 'car',
                          begin
                            if @global_lisp_binding.has_key?('_car') then
                              trampCall(@_car)
                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:348"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_lst)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:363"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                             )))
               ) then
                  trampCall( callProcedure( 'cons',
                      begin
                        if @global_lisp_binding.has_key?('_cons') then
                          trampCall(@_cons)
                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                      :"letrec"                      ,Cell.new(
                        trampCall( callProcedure( 'cons',
                            begin
                              if @global_lisp_binding.has_key?('_cons') then
                                trampCall(@_cons)
                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      trampCall(@_cons)
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'cons',
                                        begin
                                          if @global_lisp_binding.has_key?('_cons') then
                                            trampCall(@_cons)
                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'first',
                                              begin
                                                if @global_lisp_binding.has_key?('_first') then
                                                  trampCall(@_first)
                                                else raise NameError.new( "Error: undefined variable _first", "_first" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:356"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_lst)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:363"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))                                        ,Cell.new(
                                          trampCall( callProcedure( 'cons',
                                              begin
                                                if @global_lisp_binding.has_key?('_cons') then
                                                  trampCall(@_cons)
                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'cons',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cons') then
                                                        trampCall(@_cons)
                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                    :"lambda"                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'cons',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cons') then
                                                              trampCall(@_cons)
                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            trampCall( callProcedure( 'map',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_map') then
                                                                    trampCall(@_map)
                                                                  else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:357"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  Proc.new { |_x| 
                                                                      trampCall( callProcedure( 'first',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_first') then
                                                                              trampCall(@_first)
                                                                            else raise NameError.new( "Error: undefined variable _first", "_first" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:356"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_x)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:359"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))
                                                                  }                                                                ,Cell.new(
                                                                  trampCall( callProcedure( 'second',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_second') then
                                                                          trampCall(@_second)
                                                                        else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:360"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            trampCall(_lst)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:363"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               )))
                                                                         ))))                                                          ,Cell.new(
                                                            trampCall( callProcedure( 'cddr',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cddr') then
                                                                    trampCall(@_cddr)
                                                                  else raise NameError.new( "Error: undefined variable _cddr", "_cddr" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:355"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      trampCall(_lst)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:363"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         )))
                                                                   ))))
                                                             ))))                                              ,Cell.new(
                                              
                                                       ))))
                                                 ))))                                  ,Cell.new(
                                  
                                           ))))                            ,Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      trampCall(@_cons)
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'cons',
                                        begin
                                          if @global_lisp_binding.has_key?('_cons') then
                                            trampCall(@_cons)
                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'first',
                                              begin
                                                if @global_lisp_binding.has_key?('_first') then
                                                  trampCall(@_first)
                                                else raise NameError.new( "Error: undefined variable _first", "_first" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:356"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_lst)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:363"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))                                        ,Cell.new(
                                          trampCall( callProcedure( 'map',
                                              begin
                                                if @global_lisp_binding.has_key?('_map') then
                                                  trampCall(@_map)
                                                else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:357"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                Proc.new { |_x| 
                                                    trampCall( callProcedure( 'second',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_second') then
                                                            trampCall(@_second)
                                                          else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:360"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_x)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:359"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))
                                                }                                              ,Cell.new(
                                                trampCall( callProcedure( 'second',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_second') then
                                                        trampCall(@_second)
                                                      else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:360"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_lst)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:363"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                                       ))))
                                                 ))))                                  ,Cell.new(
                                  
                                           ))))
                                     ))))
                               ))))
              else
                  trampCall( callProcedure( 'cons',
                      begin
                        if @global_lisp_binding.has_key?('_cons') then
                          trampCall(@_cons)
                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                      :"let"                      ,Cell.new(
                        begin
                            trampCall(_lst)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:363"] + __e.backtrace ) ; raise __e
                        end
                               ))))
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_errorf'] = true
    @_errorf = 
    trampCall(
          LispMacro.new { |_format,*__rest__| _args = __rest__[0] ;  
              trampCall( callProcedure( 'cons',
                  begin
                    if @global_lisp_binding.has_key?('_cons') then
                      trampCall(@_cons)
                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                  :"error"                  ,Cell.new(
                    trampCall( callProcedure( 'cons',
                        begin
                          if @global_lisp_binding.has_key?('_cons') then
                            trampCall(@_cons)
                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'cons',
                              begin
                                if @global_lisp_binding.has_key?('_cons') then
                                  trampCall(@_cons)
                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              :"sprintf"                              ,Cell.new(
                                trampCall( callProcedure( 'cons',
                                    begin
                                      if @global_lisp_binding.has_key?('_cons') then
                                        trampCall(@_cons)
                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_format)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:371"] + __e.backtrace ) ; raise __e
                                      end                                    ,Cell.new(
                                      begin
                                          trampCall(_args)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:371"] + __e.backtrace ) ; raise __e
                                      end
                                             ))))
                                       ))))                        ,Cell.new(
                        
                                 ))))
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_do'] = true
    @_do = 
    trampCall(
          LispMacro.new { |*__rest__| _do_MIMARKmacro = __rest__[0] ;  
              trampCall( callProcedure( 'apply',
                  begin
                    if @global_lisp_binding.has_key?('_apply') then
                      trampCall(@_apply)
                    else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:381"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    Proc.new { |_vars,_endtest,*__rest__| _body = __rest__[0] ;  
                        begin
                          ___lambda = lambda { |_do_MIMARKloop| 
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      trampCall(@_cons)
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  :"letrec"                                  ,Cell.new(
                                    trampCall( callProcedure( 'cons',
                                        begin
                                          if @global_lisp_binding.has_key?('_cons') then
                                            trampCall(@_cons)
                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'cons',
                                              begin
                                                if @global_lisp_binding.has_key?('_cons') then
                                                  trampCall(@_cons)
                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'cons',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cons') then
                                                        trampCall(@_cons)
                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_do_MIMARKloop)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:398"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'cons',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cons') then
                                                              trampCall(@_cons)
                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            trampCall( callProcedure( 'cons',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                    trampCall(@_cons)
                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                :"lambda"                                                                ,Cell.new(
                                                                  trampCall( callProcedure( 'cons',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                          trampCall(@_cons)
                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        trampCall( callProcedure( 'map',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_map') then
                                                                                trampCall(@_map)
                                                                              else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:399"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              Proc.new { |_x| 
                                                                                  if ( 
                                                                                    trampCall( callProcedure( 'pair?',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                                                            trampCall(@_pair_QUMARK)
                                                                                          else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:400"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        Cell.new(
                                                                                          begin
                                                                                              trampCall(_x)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                                 )))
                                                                                   ) then
                                                                                      trampCall( callProcedure( 'car',
                                                                                          begin
                                                                                            if @global_lisp_binding.has_key?('_car') then
                                                                                              trampCall(@_car)
                                                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          Cell.new(
                                                                                            begin
                                                                                                trampCall(_x)
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                            end
                                                                                                   )))
                                                                                  else
                                                                                      begin
                                                                                          trampCall(_x)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                  end
                                                                              }                                                                            ,Cell.new(
                                                                              begin
                                                                                  trampCall(_vars)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:403"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                                     ))))                                                                      ,Cell.new(
                                                                        trampCall( callProcedure( 'cons',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                                trampCall(@_cons)
                                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              trampCall( callProcedure( 'cons',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                                      trampCall(@_cons)
                                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                  :"if"                                                                                  ,Cell.new(
                                                                                    trampCall( callProcedure( 'cons',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                                            trampCall(@_cons)
                                                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        Cell.new(
                                                                                          trampCall( callProcedure( 'car',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_car') then
                                                                                                  trampCall(@_car)
                                                                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              Cell.new(
                                                                                                begin
                                                                                                    trampCall(_endtest)
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:388"] + __e.backtrace ) ; raise __e
                                                                                                end
                                                                                                       )))                                                                                        ,Cell.new(
                                                                                          trampCall( callProcedure( 'cons',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                                                  trampCall(@_cons)
                                                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              Cell.new(
                                                                                                trampCall( callProcedure( 'cons',
                                                                                                    begin
                                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                                        trampCall(@_cons)
                                                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                    Cell.new(
                                                                                                    :"begin"                                                                                                    ,Cell.new(
                                                                                                      trampCall( callProcedure( 'cdr',
                                                                                                          begin
                                                                                                            if @global_lisp_binding.has_key?('_cdr') then
                                                                                                              trampCall(@_cdr)
                                                                                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                          Cell.new(
                                                                                                            begin
                                                                                                                trampCall(_endtest)
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:388"] + __e.backtrace ) ; raise __e
                                                                                                            end
                                                                                                                   )))
                                                                                                             ))))                                                                                              ,Cell.new(
                                                                                                trampCall( callProcedure( 'cons',
                                                                                                    begin
                                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                                        trampCall(@_cons)
                                                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                    Cell.new(
                                                                                                      trampCall( callProcedure( 'cons',
                                                                                                          begin
                                                                                                            if @global_lisp_binding.has_key?('_cons') then
                                                                                                              trampCall(@_cons)
                                                                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                          Cell.new(
                                                                                                          :"begin"                                                                                                          ,Cell.new(
                                                                                                            trampCall( callProcedure( 'append',
                                                                                                                begin
                                                                                                                  if @global_lisp_binding.has_key?('_append') then
                                                                                                                    trampCall(@_append)
                                                                                                                  else raise NameError.new( "Error: undefined variable _append", "_append" ) end
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:280"] + __e.backtrace ) ; raise __e
                                                                                                                end                                                                                                              ,
                                                                                                                Cell.new(
                                                                                                                  begin
                                                                                                                      trampCall(_body)
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:390"] + __e.backtrace ) ; raise __e
                                                                                                                  end                                                                                                                ,Cell.new(
                                                                                                                  trampCall( callProcedure( 'cons',
                                                                                                                      begin
                                                                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                                                                          trampCall(@_cons)
                                                                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                                                      end                                                                                                                    ,
                                                                                                                      Cell.new(
                                                                                                                        trampCall( callProcedure( 'cons',
                                                                                                                            begin
                                                                                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                                                                                trampCall(@_cons)
                                                                                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                                                                                            end                                                                                                                          ,
                                                                                                                            Cell.new(
                                                                                                                              begin
                                                                                                                                  trampCall(_do_MIMARKloop)
                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:398"] + __e.backtrace ) ; raise __e
                                                                                                                              end                                                                                                                            ,Cell.new(
                                                                                                                              trampCall( callProcedure( 'map',
                                                                                                                                  begin
                                                                                                                                    if @global_lisp_binding.has_key?('_map') then
                                                                                                                                      trampCall(@_map)
                                                                                                                                    else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:399"] + __e.backtrace ) ; raise __e
                                                                                                                                  end                                                                                                                                ,
                                                                                                                                  Cell.new(
                                                                                                                                    Proc.new { |_x| 
                                                                                                                                        if ( 
                                                                                                                                          trampCall( callProcedure( 'not',
                                                                                                                                              begin
                                                                                                                                                if @global_lisp_binding.has_key?('_not') then
                                                                                                                                                  trampCall(@_not)
                                                                                                                                                else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:394"] + __e.backtrace ) ; raise __e
                                                                                                                                              end                                                                                                                                            ,
                                                                                                                                              Cell.new(
                                                                                                                                                trampCall( callProcedure( 'pair?',
                                                                                                                                                    begin
                                                                                                                                                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                                                                                                                        trampCall(@_pair_QUMARK)
                                                                                                                                                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:400"] + __e.backtrace ) ; raise __e
                                                                                                                                                    end                                                                                                                                                  ,
                                                                                                                                                    Cell.new(
                                                                                                                                                      begin
                                                                                                                                                          trampCall(_x)
                                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                                                                                      end
                                                                                                                                                             )))
                                                                                                                                                       )))
                                                                                                                                         ) then
                                                                                                                                            begin
                                                                                                                                                begin
                                                                                                                                                    trampCall(_x)
                                                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                                                                                end
                                                                                                                                            end
                                                                                                                                        else
                                                                                                                                            if ( 
                                                                                                                                              trampCall( callProcedure( '<',
                                                                                                                                                  begin
                                                                                                                                                    if @global_lisp_binding.has_key?('__LTMARK') then
                                                                                                                                                      trampCall(@__LTMARK)
                                                                                                                                                    else raise NameError.new( "Error: undefined variable __LTMARK", "__LTMARK" ) end
                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:395"] + __e.backtrace ) ; raise __e
                                                                                                                                                  end                                                                                                                                                ,
                                                                                                                                                  Cell.new(
                                                                                                                                                    trampCall( callProcedure( 'length',
                                                                                                                                                        begin
                                                                                                                                                          if @global_lisp_binding.has_key?('_length') then
                                                                                                                                                            trampCall(@_length)
                                                                                                                                                          else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:395"] + __e.backtrace ) ; raise __e
                                                                                                                                                        end                                                                                                                                                      ,
                                                                                                                                                        Cell.new(
                                                                                                                                                          begin
                                                                                                                                                              trampCall(_x)
                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                                                                                          end
                                                                                                                                                                 )))                                                                                                                                                  ,Cell.new(
                                                                                                                                                  3
                                                                                                                                                           ))))
                                                                                                                                             ) then
                                                                                                                                                begin
                                                                                                                                                    trampCall( callProcedure( 'car',
                                                                                                                                                        begin
                                                                                                                                                          if @global_lisp_binding.has_key?('_car') then
                                                                                                                                                            trampCall(@_car)
                                                                                                                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                                                                                        end                                                                                                                                                      ,
                                                                                                                                                        Cell.new(
                                                                                                                                                          begin
                                                                                                                                                              trampCall(_x)
                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                                                                                          end
                                                                                                                                                                 )))
                                                                                                                                                end
                                                                                                                                            else
                                                                                                                                                if ( 
                                                                                                                                                true
                                                                                                                                                 ) then
                                                                                                                                                    begin
                                                                                                                                                        trampCall( callProcedure( 'car',
                                                                                                                                                            begin
                                                                                                                                                              if @global_lisp_binding.has_key?('_car') then
                                                                                                                                                                trampCall(@_car)
                                                                                                                                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                                                                                            end                                                                                                                                                          ,
                                                                                                                                                            Cell.new(
                                                                                                                                                              trampCall( callProcedure( 'cdr',
                                                                                                                                                                  begin
                                                                                                                                                                    if @global_lisp_binding.has_key?('_cdr') then
                                                                                                                                                                      trampCall(@_cdr)
                                                                                                                                                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                                                                                                  end                                                                                                                                                                ,
                                                                                                                                                                  Cell.new(
                                                                                                                                                                    trampCall( callProcedure( 'cdr',
                                                                                                                                                                        begin
                                                                                                                                                                          if @global_lisp_binding.has_key?('_cdr') then
                                                                                                                                                                            trampCall(@_cdr)
                                                                                                                                                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                                                                                                        end                                                                                                                                                                      ,
                                                                                                                                                                        Cell.new(
                                                                                                                                                                          begin
                                                                                                                                                                              trampCall(_x)
                                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                                                                                                          end
                                                                                                                                                                                 )))
                                                                                                                                                                           )))
                                                                                                                                                                     )))
                                                                                                                                                    end
                                                                                                                                                else
                                                                                                                                                  Nil.new
                                                                                                                                                end
                                                                                                                                            end
                                                                                                                                        end
                                                                                                                                    }                                                                                                                                  ,Cell.new(
                                                                                                                                    begin
                                                                                                                                        trampCall(_vars)
                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:403"] + __e.backtrace ) ; raise __e
                                                                                                                                    end
                                                                                                                                           ))))
                                                                                                                                     ))))                                                                                                                      ,Cell.new(
                                                                                                                      
                                                                                                                               ))))
                                                                                                                         ))))
                                                                                                                   ))))                                                                                                    ,Cell.new(
                                                                                                    
                                                                                                             ))))
                                                                                                       ))))
                                                                                                 ))))
                                                                                           ))))                                                                            ,Cell.new(
                                                                            
                                                                                     ))))
                                                                               ))))
                                                                         ))))                                                          ,Cell.new(
                                                          
                                                                   ))))
                                                             ))))                                              ,Cell.new(
                                              
                                                       ))))                                        ,Cell.new(
                                          trampCall( callProcedure( 'cons',
                                              begin
                                                if @global_lisp_binding.has_key?('_cons') then
                                                  trampCall(@_cons)
                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'cons',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cons') then
                                                        trampCall(@_cons)
                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:270"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_do_MIMARKloop)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:398"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'map',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_map') then
                                                              trampCall(@_map)
                                                            else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:399"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            Proc.new { |_x| 
                                                                if ( 
                                                                  if ( 
                                                                    trampCall( callProcedure( 'not',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_not') then
                                                                            trampCall(@_not)
                                                                          else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:394"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          trampCall( callProcedure( 'eq?',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                                  trampCall(@_eq_QUMARK)
                                                                                else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:304"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                              false                                                                              ,Cell.new(
                                                                                trampCall( callProcedure( 'pair?',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                                                        trampCall(@_pair_QUMARK)
                                                                                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:400"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    Cell.new(
                                                                                      begin
                                                                                          trampCall(_x)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                             )))
                                                                                       ))))
                                                                                 )))
                                                                   ) then
                                                                      trampCall( callProcedure( 'cdr',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_cdr') then
                                                                              trampCall(@_cdr)
                                                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_x)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))
                                                                  else
                                                                    false
                                                                  end
                                                                 ) then
                                                                    trampCall( callProcedure( 'car',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_car') then
                                                                            trampCall(@_car)
                                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          trampCall( callProcedure( 'cdr',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_cdr') then
                                                                                  trampCall(@_cdr)
                                                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                                begin
                                                                                    trampCall(_x)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:401"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                                       )))
                                                                                 )))
                                                                else
                                                                  Cell.new()
                                                                end
                                                            }                                                          ,Cell.new(
                                                            begin
                                                                trampCall(_vars)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:403"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   ))))
                                                             ))))                                              ,Cell.new(
                                              
                                                       ))))
                                                 ))))
                                           ))))
                          } ; ___lambda.call(
                                trampCall( callProcedure( 'gensym',
                                    begin
                                      if @global_lisp_binding.has_key?('_gensym') then
                                        trampCall(@_gensym)
                                      else raise NameError.new( "Error: undefined variable _gensym", "_gensym" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:382"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                  Cell.new(
                                             )))
                                     )
                        end
                    }                  ,Cell.new(
                    begin
                        trampCall(_do_MIMARKmacro)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:404"] + __e.backtrace ) ; raise __e
                    end
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_generic_MIMARKmember'] = true
    @_generic_MIMARKmember = 
    trampCall(
          Proc.new { |_cmp,_obj,_lst| 
              if ( 
                trampCall( callProcedure( 'null?',
                    begin
                      if @global_lisp_binding.has_key?('_null_QUMARK') then
                        trampCall(@_null_QUMARK)
                      else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:410"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_lst)
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:412"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  begin
                    false
                  end
              else
                  if ( 
                    trampCall( callProcedure( 'cmp',
                        begin
                            trampCall(_cmp)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:412"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_obj)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:412"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          trampCall( callProcedure( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  trampCall(@_car)
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:411"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_lst)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:412"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                                 ))))
                   ) then
                      begin
                          begin
                              trampCall(_lst)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:412"] + __e.backtrace ) ; raise __e
                          end
                      end
                  else
                      if ( 
                      true
                       ) then
                          begin
                              DelayedCallPacket.new( 'generic-member',
                                  begin
                                    if @global_lisp_binding.has_key?('_generic_MIMARKmember') then
                                      trampCall(@_generic_MIMARKmember)
                                    else raise NameError.new( "Error: undefined variable _generic_MIMARKmember", "_generic_MIMARKmember" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:412"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_cmp)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:412"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_obj)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:412"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    trampCall( callProcedure( 'cdr',
                                        begin
                                          if @global_lisp_binding.has_key?('_cdr') then
                                            trampCall(@_cdr)
                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:412"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_lst)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:412"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                           ))))
                          end
                      else
                          Cell.new()
                      end
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_memq'] = true
    @_memq = 
    trampCall(
          Proc.new { |_obj,_lst| 
              DelayedCallPacket.new( 'generic-member',
                  begin
                    if @global_lisp_binding.has_key?('_generic_MIMARKmember') then
                      trampCall(@_generic_MIMARKmember)
                    else raise NameError.new( "Error: undefined variable _generic_MIMARKmember", "_generic_MIMARKmember" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:415"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                        trampCall(@_eq_QUMARK)
                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:415"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_obj)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:415"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_lst)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:415"] + __e.backtrace ) ; raise __e
                    end
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_memv'] = true
    @_memv = 
    trampCall(
          Proc.new { |_obj,_lst| 
              DelayedCallPacket.new( 'generic-member',
                  begin
                    if @global_lisp_binding.has_key?('_generic_MIMARKmember') then
                      trampCall(@_generic_MIMARKmember)
                    else raise NameError.new( "Error: undefined variable _generic_MIMARKmember", "_generic_MIMARKmember" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:417"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                      if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                        trampCall(@_eqv_QUMARK)
                      else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:417"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_obj)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:417"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_lst)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:417"] + __e.backtrace ) ; raise __e
                    end
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_member'] = true
    @_member = 
    trampCall(
          Proc.new { |_obj,_lst| 
              DelayedCallPacket.new( 'generic-member',
                  begin
                    if @global_lisp_binding.has_key?('_generic_MIMARKmember') then
                      trampCall(@_generic_MIMARKmember)
                    else raise NameError.new( "Error: undefined variable _generic_MIMARKmember", "_generic_MIMARKmember" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:419"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                      if @global_lisp_binding.has_key?('_equal_QUMARK') then
                        trampCall(@_equal_QUMARK)
                      else raise NameError.new( "Error: undefined variable _equal_QUMARK", "_equal_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:419"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_obj)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:419"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_lst)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:419"] + __e.backtrace ) ; raise __e
                    end
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_generic_MIMARKassoc'] = true
    @_generic_MIMARKassoc = 
    trampCall(
          Proc.new { |_cmp,_obj,_alst| 
              if ( 
                trampCall( callProcedure( 'null?',
                    begin
                      if @global_lisp_binding.has_key?('_null_QUMARK') then
                        trampCall(@_null_QUMARK)
                      else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:424"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_alst)
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:426"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  begin
                    false
                  end
              else
                  if ( 
                    trampCall( callProcedure( 'cmp',
                        begin
                            trampCall(_cmp)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:426"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_obj)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:426"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          trampCall( callProcedure( 'caar',
                              begin
                                if @global_lisp_binding.has_key?('_caar') then
                                  trampCall(@_caar)
                                else raise NameError.new( "Error: undefined variable _caar", "_caar" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:425"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_alst)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:426"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                                 ))))
                   ) then
                      begin
                          DelayedCallPacket.new( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  trampCall(@_car)
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:425"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_alst)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:426"] + __e.backtrace ) ; raise __e
                                end
                                       ))
                      end
                  else
                      if ( 
                      true
                       ) then
                          begin
                              DelayedCallPacket.new( 'generic-assoc',
                                  begin
                                    if @global_lisp_binding.has_key?('_generic_MIMARKassoc') then
                                      trampCall(@_generic_MIMARKassoc)
                                    else raise NameError.new( "Error: undefined variable _generic_MIMARKassoc", "_generic_MIMARKassoc" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:426"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_cmp)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:426"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_obj)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:426"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    trampCall( callProcedure( 'cdr',
                                        begin
                                          if @global_lisp_binding.has_key?('_cdr') then
                                            trampCall(@_cdr)
                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:426"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_alst)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:426"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                           ))))
                          end
                      else
                          Cell.new()
                      end
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_assq'] = true
    @_assq = 
    trampCall(
          Proc.new { |_obj,_alst| 
              DelayedCallPacket.new( 'generic-assoc',
                  begin
                    if @global_lisp_binding.has_key?('_generic_MIMARKassoc') then
                      trampCall(@_generic_MIMARKassoc)
                    else raise NameError.new( "Error: undefined variable _generic_MIMARKassoc", "_generic_MIMARKassoc" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:429"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                        trampCall(@_eq_QUMARK)
                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:429"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_obj)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:429"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_alst)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:429"] + __e.backtrace ) ; raise __e
                    end
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_assv'] = true
    @_assv = 
    trampCall(
          Proc.new { |_obj,_alst| 
              DelayedCallPacket.new( 'generic-assoc',
                  begin
                    if @global_lisp_binding.has_key?('_generic_MIMARKassoc') then
                      trampCall(@_generic_MIMARKassoc)
                    else raise NameError.new( "Error: undefined variable _generic_MIMARKassoc", "_generic_MIMARKassoc" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:431"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                      if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                        trampCall(@_eqv_QUMARK)
                      else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:431"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_obj)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:431"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_alst)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:431"] + __e.backtrace ) ; raise __e
                    end
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_assoc'] = true
    @_assoc = 
    trampCall(
          Proc.new { |_obj,_alst| 
              DelayedCallPacket.new( 'generic-assoc',
                  begin
                    if @global_lisp_binding.has_key?('_generic_MIMARKassoc') then
                      trampCall(@_generic_MIMARKassoc)
                    else raise NameError.new( "Error: undefined variable _generic_MIMARKassoc", "_generic_MIMARKassoc" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:433"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                      if @global_lisp_binding.has_key?('_equal_QUMARK') then
                        trampCall(@_equal_QUMARK)
                      else raise NameError.new( "Error: undefined variable _equal_QUMARK", "_equal_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:433"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_obj)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:433"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_alst)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:433"] + __e.backtrace ) ; raise __e
                    end
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_acons'] = true
    @_acons = 
    trampCall(
          Proc.new { |_x,_y,_z| 
              DelayedCallPacket.new( 'cons',
                  begin
                    if @global_lisp_binding.has_key?('_cons') then
                      trampCall(@_cons)
                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:435"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cons',
                        begin
                          if @global_lisp_binding.has_key?('_cons') then
                            trampCall(@_cons)
                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:435"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_x)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:435"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                              trampCall(_y)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:435"] + __e.backtrace ) ; raise __e
                          end
                                 ))))                  ,Cell.new(
                    begin
                        trampCall(_z)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:435"] + __e.backtrace ) ; raise __e
                    end
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_assq_MIMARKref'] = true
    @_assq_MIMARKref = 
    trampCall(
          Proc.new { |_obj,_alst| 
              if ( 
                begin
                  @global_lisp_binding['___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20147'] = true
                  @___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20147 = 
                  trampCall(
                        trampCall( callProcedure( 'assq',
                            begin
                              if @global_lisp_binding.has_key?('_assq') then
                                trampCall(@_assq)
                              else raise NameError.new( "Error: undefined variable _assq", "_assq" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:438"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_obj)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:438"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                              begin
                                  trampCall(_alst)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:438"] + __e.backtrace ) ; raise __e
                              end
                                     ))))
                  )
                end
               ) then
                  DelayedCallPacket.new( 'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          trampCall(@_cdr)
                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:438"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                          if @global_lisp_binding.has_key?('___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20147') then
                            trampCall(@___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20147)
                          else raise NameError.new( "Error: undefined variable ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20147", "___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20147" ) end
                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                        end
                               ))
              else
                  if ( 
                  true
                   ) then
                      begin
                        nil
                      end
                  else
                      Cell.new()
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_assv_MIMARKref'] = true
    @_assv_MIMARKref = 
    trampCall(
          Proc.new { |_obj,_alst| 
              if ( 
                begin
                  @global_lisp_binding['___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20149'] = true
                  @___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20149 = 
                  trampCall(
                        trampCall( callProcedure( 'assv',
                            begin
                              if @global_lisp_binding.has_key?('_assv') then
                                trampCall(@_assv)
                              else raise NameError.new( "Error: undefined variable _assv", "_assv" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:441"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_obj)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:441"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                              begin
                                  trampCall(_alst)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:441"] + __e.backtrace ) ; raise __e
                              end
                                     ))))
                  )
                end
               ) then
                  DelayedCallPacket.new( 'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          trampCall(@_cdr)
                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:441"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                          if @global_lisp_binding.has_key?('___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20149') then
                            trampCall(@___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20149)
                          else raise NameError.new( "Error: undefined variable ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20149", "___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20149" ) end
                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                        end
                               ))
              else
                  if ( 
                  true
                   ) then
                      begin
                        nil
                      end
                  else
                      Cell.new()
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_assoc_MIMARKref'] = true
    @_assoc_MIMARKref = 
    trampCall(
          Proc.new { |_obj,_alst| 
              if ( 
                begin
                  @global_lisp_binding['___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20151'] = true
                  @___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20151 = 
                  trampCall(
                        trampCall( callProcedure( 'assoc',
                            begin
                              if @global_lisp_binding.has_key?('_assoc') then
                                trampCall(@_assoc)
                              else raise NameError.new( "Error: undefined variable _assoc", "_assoc" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:444"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_obj)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:444"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                              begin
                                  trampCall(_alst)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:444"] + __e.backtrace ) ; raise __e
                              end
                                     ))))
                  )
                end
               ) then
                  DelayedCallPacket.new( 'cdr',
                      begin
                        if @global_lisp_binding.has_key?('_cdr') then
                          trampCall(@_cdr)
                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:444"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                          if @global_lisp_binding.has_key?('___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20151') then
                            trampCall(@___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20151)
                          else raise NameError.new( "Error: undefined variable ___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20151", "___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20151" ) end
                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                        end
                               ))
              else
                  if ( 
                  true
                   ) then
                      begin
                        nil
                      end
                  else
                      Cell.new()
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_foldr'] = true
    @_foldr = 
    trampCall(
          Proc.new { |_f,_x,_lst| 
              if ( 
                trampCall( callProcedure( 'null?',
                    begin
                      if @global_lisp_binding.has_key?('_null_QUMARK') then
                        trampCall(@_null_QUMARK)
                      else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:454"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_lst)
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:456"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  begin
                      trampCall(_x)
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:456"] + __e.backtrace ) ; raise __e
                  end
              else
                  DelayedCallPacket.new( 'foldr',
                      begin
                        if @global_lisp_binding.has_key?('_foldr') then
                          trampCall(@_foldr)
                        else raise NameError.new( "Error: undefined variable _foldr", "_foldr" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:456"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            trampCall(_f)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:456"] + __e.backtrace ) ; raise __e
                        end                      ,Cell.new(
                        trampCall( callProcedure( 'f',
                            begin
                                trampCall(_f)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:456"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_x)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:456"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                              trampCall( callProcedure( 'car',
                                  begin
                                    if @global_lisp_binding.has_key?('_car') then
                                      trampCall(@_car)
                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:456"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_lst)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:456"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     ))))                      ,Cell.new(
                        trampCall( callProcedure( 'cdr',
                            begin
                              if @global_lisp_binding.has_key?('_cdr') then
                                trampCall(@_cdr)
                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:456"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_lst)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:456"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                               ))))
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_unzip1_MIMARKwith_MIMARKcdr'] = true
    @_unzip1_MIMARKwith_MIMARKcdr = 
    trampCall(
          Proc.new { |*__rest__| _lists = __rest__[0] ;  
              DelayedCallPacket.new( 'unzip1-with-cdr-iterative',
                  begin
                    if @global_lisp_binding.has_key?('_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative') then
                      trampCall(@_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative)
                    else raise NameError.new( "Error: undefined variable _unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative", "_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:459"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        trampCall(_lists)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:459"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                  Cell.new()                  ,Cell.new(
                  Cell.new()
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative'] = true
    @_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative = 
    trampCall(
          Proc.new { |_lists,_cars,_cdrs| 
              if ( 
                trampCall( callProcedure( 'null?',
                    begin
                      if @global_lisp_binding.has_key?('_null_QUMARK') then
                        trampCall(@_null_QUMARK)
                      else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:462"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_lists)
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:467"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  DelayedCallPacket.new( 'cons',
                      begin
                        if @global_lisp_binding.has_key?('_cons') then
                          trampCall(@_cons)
                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:463"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            trampCall(_cars)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:468"] + __e.backtrace ) ; raise __e
                        end                      ,Cell.new(
                        begin
                            trampCall(_cdrs)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:469"] + __e.backtrace ) ; raise __e
                        end
                               )))
              else
                  begin
                    ___lambda = lambda { |_car1,_cdr1| 
                        DelayedCallPacket.new( 'unzip1-with-cdr-iterative',
                            begin
                              if @global_lisp_binding.has_key?('_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative') then
                                trampCall(@_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative)
                              else raise NameError.new( "Error: undefined variable _unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative", "_unzip1_MIMARKwith_MIMARKcdr_MIMARKiterative" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:466"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cdr',
                                  begin
                                    if @global_lisp_binding.has_key?('_cdr') then
                                      trampCall(@_cdr)
                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:467"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_lists)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:467"] + __e.backtrace ) ; raise __e
                                    end
                                           )))                            ,Cell.new(
                              trampCall( callProcedure( 'append',
                                  begin
                                    if @global_lisp_binding.has_key?('_append') then
                                      trampCall(@_append)
                                    else raise NameError.new( "Error: undefined variable _append", "_append" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:469"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_cars)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:468"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    trampCall( callProcedure( 'list',
                                        begin
                                          if @global_lisp_binding.has_key?('_list') then
                                            trampCall(@_list)
                                          else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:469"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_car1)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:468"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                           ))))                            ,Cell.new(
                              trampCall( callProcedure( 'append',
                                  begin
                                    if @global_lisp_binding.has_key?('_append') then
                                      trampCall(@_append)
                                    else raise NameError.new( "Error: undefined variable _append", "_append" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:469"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_cdrs)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:469"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    trampCall( callProcedure( 'list',
                                        begin
                                          if @global_lisp_binding.has_key?('_list') then
                                            trampCall(@_list)
                                          else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:469"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_cdr1)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:469"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                           ))))
                                     ))))
                    } ; ___lambda.call(
                          trampCall( callProcedure( 'caar',
                              begin
                                if @global_lisp_binding.has_key?('_caar') then
                                  trampCall(@_caar)
                                else raise NameError.new( "Error: undefined variable _caar", "_caar" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:464"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_lists)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:467"] + __e.backtrace ) ; raise __e
                                end
                                       )))                        ,
                          trampCall( callProcedure( 'cdar',
                              begin
                                if @global_lisp_binding.has_key?('_cdar') then
                                  trampCall(@_cdar)
                                else raise NameError.new( "Error: undefined variable _cdar", "_cdar" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:465"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_lists)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:467"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_map'] = true
    @_map = 
    trampCall(
          Proc.new { |_proc,*__rest__| _lists = __rest__[0] ;  
              begin
                ___lambda = lambda { |_result,_map_MIMARKarg1| 
                    _result                     = 
                    Cell.new()
                    _map_MIMARKarg1                     = 
                      Proc.new { |_proc,_lst| 
                          if ( 
                            trampCall( callProcedure( 'null?',
                                begin
                                  if @global_lisp_binding.has_key?('_null_QUMARK') then
                                    trampCall(@_null_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:496"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lst)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:482"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                            true
                          else
                              begin
                                  begin
                                    @global_lisp_binding['_result'] = true
                                    _result = 
                                    trampCall(
                                          trampCall( callProcedure( 'cons',
                                              begin
                                                if @global_lisp_binding.has_key?('_cons') then
                                                  trampCall(@_cons)
                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:498"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'proc',
                                                    begin
                                                        trampCall(_proc)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:498"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'car',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_car') then
                                                              trampCall(@_car)
                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:493"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_lst)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:482"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))
                                                             )))                                              ,Cell.new(
                                                begin
                                                    trampCall(_result)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:488"] + __e.backtrace ) ; raise __e
                                                end
                                                       ))))
                                    )
                                  end
                                  DelayedCallPacket.new( 'map-arg1',
                                      begin
                                          trampCall(_map_MIMARKarg1)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:487"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_proc)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:498"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        trampCall( callProcedure( 'cdr',
                                            begin
                                              if @global_lisp_binding.has_key?('_cdr') then
                                                trampCall(@_cdr)
                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:494"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_lst)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:482"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               )))
                              end
                          end
                      }
                    if ( 
                      trampCall( callProcedure( 'null?',
                          begin
                            if @global_lisp_binding.has_key?('_null_QUMARK') then
                              trampCall(@_null_QUMARK)
                            else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:496"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_lists)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:492"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                     ) then
                        begin
                            DelayedCallPacket.new( 'apply',
                                begin
                                  if @global_lisp_binding.has_key?('_apply') then
                                    trampCall(@_apply)
                                  else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:498"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_proc)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:498"] + __e.backtrace ) ; raise __e
                                  end
                                         ))
                        end
                    else
                        if ( 
                          trampCall( callProcedure( 'eq?',
                              begin
                                if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                  trampCall(@_eq_QUMARK)
                                else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:486"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              1                              ,Cell.new(
                                trampCall( callProcedure( 'length',
                                    begin
                                      if @global_lisp_binding.has_key?('_length') then
                                        trampCall(@_length)
                                      else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:486"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_lists)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:492"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       ))))
                         ) then
                            begin
                                trampCall( callProcedure( 'map-arg1',
                                    begin
                                        trampCall(_map_MIMARKarg1)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:487"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_proc)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:498"] + __e.backtrace ) ; raise __e
                                      end                                    ,Cell.new(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:493"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lists)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:492"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             ))))
                                DelayedCallPacket.new( 'reverse',
                                    begin
                                      if @global_lisp_binding.has_key?('_reverse') then
                                        trampCall(@_reverse)
                                      else raise NameError.new( "Error: undefined variable _reverse", "_reverse" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:488"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_result)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:488"] + __e.backtrace ) ; raise __e
                                      end
                                             ))
                            end
                        else
                            if ( 
                            true
                             ) then
                                begin
                                    if ( 
                                      trampCall( callProcedure( 'null?',
                                          begin
                                            if @global_lisp_binding.has_key?('_null_QUMARK') then
                                              trampCall(@_null_QUMARK)
                                            else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:496"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            trampCall( callProcedure( 'car',
                                                begin
                                                  if @global_lisp_binding.has_key?('_car') then
                                                    trampCall(@_car)
                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:493"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_lists)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:492"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                   )))
                                     ) then
                                      Cell.new()
                                    else
                                        begin
                                          ___lambda = lambda { |_unz| 
                                              begin
                                                ___lambda = lambda { |_cars,_cdrs| 
                                                    DelayedCallPacket.new( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            trampCall(@_cons)
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:498"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'apply',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_apply') then
                                                                  trampCall(@_apply)
                                                                else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:498"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_proc)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:498"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,Cell.new(
                                                                begin
                                                                    trampCall(_cars)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:495"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       ))))                                                        ,Cell.new(
                                                          if ( 
                                                            trampCall( callProcedure( 'null?',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_null_QUMARK') then
                                                                    trampCall(@_null_QUMARK)
                                                                  else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:496"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      trampCall(_cdrs)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:498"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         )))
                                                           ) then
                                                            Cell.new()
                                                          else
                                                              trampCall( callProcedure( 'apply',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_apply') then
                                                                      trampCall(@_apply)
                                                                    else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:498"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_map') then
                                                                        trampCall(@_map)
                                                                      else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:498"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'cons',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                            trampCall(@_cons)
                                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:498"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              trampCall(_proc)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:498"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,Cell.new(
                                                                          begin
                                                                              trampCall(_cdrs)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:498"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 ))))
                                                                           ))))
                                                          end
                                                                 )))
                                                } ; ___lambda.call(
                                                      trampCall( callProcedure( 'car',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_car') then
                                                              trampCall(@_car)
                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:493"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_unz)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:494"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))                                                    ,
                                                      trampCall( callProcedure( 'cdr',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cdr') then
                                                              trampCall(@_cdr)
                                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:494"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_unz)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:494"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))
                                                           )
                                              end
                                          } ; ___lambda.call(
                                                trampCall( callProcedure( 'apply',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_apply') then
                                                        trampCall(@_apply)
                                                      else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:498"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                        if @global_lisp_binding.has_key?('_unzip1_MIMARKwith_MIMARKcdr') then
                                                          trampCall(@_unzip1_MIMARKwith_MIMARKcdr)
                                                        else raise NameError.new( "Error: undefined variable _unzip1_MIMARKwith_MIMARKcdr", "_unzip1_MIMARKwith_MIMARKcdr" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:492"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                      begin
                                                          trampCall(_lists)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:492"] + __e.backtrace ) ; raise __e
                                                      end
                                                             ))))
                                                     )
                                        end
                                    end
                                end
                            else
                                Cell.new()
                            end
                        end
                    end
                } ; ___lambda.call(
                nil,nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_for_MIMARKeach'] = true
    @_for_MIMARKeach = 
    trampCall(
          Proc.new { |_proc,*__rest__| _lists = __rest__[0] ;  
              begin
                ___lambda = lambda { |_for_MIMARKeach_MIMARKarg1| 
                    _for_MIMARKeach_MIMARKarg1                     = 
                      Proc.new { |_proc,_lst| 
                          if ( 
                            trampCall( callProcedure( 'null?',
                                begin
                                  if @global_lisp_binding.has_key?('_null_QUMARK') then
                                    trampCall(@_null_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:520"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lst)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:507"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                            true
                          else
                              begin
                                  trampCall( callProcedure( 'proc',
                                      begin
                                          trampCall(_proc)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:522"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'car',
                                            begin
                                              if @global_lisp_binding.has_key?('_car') then
                                                trampCall(@_car)
                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:517"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_lst)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:507"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               )))
                                  DelayedCallPacket.new( 'for-each-arg1',
                                      begin
                                          trampCall(_for_MIMARKeach_MIMARKarg1)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:512"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_proc)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:522"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        trampCall( callProcedure( 'cdr',
                                            begin
                                              if @global_lisp_binding.has_key?('_cdr') then
                                                trampCall(@_cdr)
                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:518"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_lst)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:507"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               )))
                              end
                          end
                      }
                    if ( 
                      trampCall( callProcedure( 'null?',
                          begin
                            if @global_lisp_binding.has_key?('_null_QUMARK') then
                              trampCall(@_null_QUMARK)
                            else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:520"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_lists)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:516"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                     ) then
                        begin
                            DelayedCallPacket.new( 'apply',
                                begin
                                  if @global_lisp_binding.has_key?('_apply') then
                                    trampCall(@_apply)
                                  else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:522"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_proc)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:522"] + __e.backtrace ) ; raise __e
                                  end
                                         ))
                        end
                    else
                        if ( 
                          trampCall( callProcedure( 'eq?',
                              begin
                                if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                  trampCall(@_eq_QUMARK)
                                else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:511"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              1                              ,Cell.new(
                                trampCall( callProcedure( 'length',
                                    begin
                                      if @global_lisp_binding.has_key?('_length') then
                                        trampCall(@_length)
                                      else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:511"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_lists)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:516"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       ))))
                         ) then
                            begin
                                DelayedCallPacket.new( 'for-each-arg1',
                                    begin
                                        trampCall(_for_MIMARKeach_MIMARKarg1)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:512"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_proc)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:522"] + __e.backtrace ) ; raise __e
                                      end                                    ,Cell.new(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:517"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lists)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:516"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             )))
                            end
                        else
                            if ( 
                            true
                             ) then
                                begin
                                    if ( 
                                      trampCall( callProcedure( 'null?',
                                          begin
                                            if @global_lisp_binding.has_key?('_null_QUMARK') then
                                              trampCall(@_null_QUMARK)
                                            else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:520"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            trampCall( callProcedure( 'car',
                                                begin
                                                  if @global_lisp_binding.has_key?('_car') then
                                                    trampCall(@_car)
                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:517"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_lists)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:516"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                   )))
                                     ) then
                                      true
                                    else
                                        begin
                                          ___lambda = lambda { |_unz| 
                                              begin
                                                ___lambda = lambda { |_cars,_cdrs| 
                                                    trampCall( callProcedure( 'apply',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_apply') then
                                                            trampCall(@_apply)
                                                          else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:522"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_proc)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:522"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_cars)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:519"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))
                                                    if ( 
                                                      trampCall( callProcedure( 'null?',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_null_QUMARK') then
                                                              trampCall(@_null_QUMARK)
                                                            else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:520"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_cdrs)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:522"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))
                                                     ) then
                                                      Cell.new()
                                                    else
                                                        DelayedCallPacket.new( 'apply',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_apply') then
                                                                trampCall(@_apply)
                                                              else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:522"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                if @global_lisp_binding.has_key?('_for_MIMARKeach') then
                                                                  trampCall(@_for_MIMARKeach)
                                                                else raise NameError.new( "Error: undefined variable _for_MIMARKeach", "_for_MIMARKeach" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:522"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                              trampCall( callProcedure( 'cons',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                      trampCall(@_cons)
                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:522"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_proc)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:522"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,Cell.new(
                                                                    begin
                                                                        trampCall(_cdrs)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:522"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           ))))
                                                                     )))
                                                    end
                                                } ; ___lambda.call(
                                                      trampCall( callProcedure( 'car',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_car') then
                                                              trampCall(@_car)
                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:517"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_unz)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:518"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))                                                    ,
                                                      trampCall( callProcedure( 'cdr',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cdr') then
                                                              trampCall(@_cdr)
                                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:518"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_unz)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:518"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))
                                                           )
                                              end
                                          } ; ___lambda.call(
                                                trampCall( callProcedure( 'apply',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_apply') then
                                                        trampCall(@_apply)
                                                      else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:522"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                        if @global_lisp_binding.has_key?('_unzip1_MIMARKwith_MIMARKcdr') then
                                                          trampCall(@_unzip1_MIMARKwith_MIMARKcdr)
                                                        else raise NameError.new( "Error: undefined variable _unzip1_MIMARKwith_MIMARKcdr", "_unzip1_MIMARKwith_MIMARKcdr" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:516"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                      begin
                                                          trampCall(_lists)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:516"] + __e.backtrace ) ; raise __e
                                                      end
                                                             ))))
                                                     )
                                        end
                                    end
                                end
                            else
                                Cell.new()
                            end
                        end
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_filter'] = true
    @_filter = 
    trampCall(
          Proc.new { |_pred,_lst| 
              if ( 
                trampCall( callProcedure( 'null?',
                    begin
                      if @global_lisp_binding.has_key?('_null_QUMARK') then
                        trampCall(@_null_QUMARK)
                      else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:526"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_lst)
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:532"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                Cell.new()
              else
                  if ( 
                    trampCall( callProcedure( 'pred',
                        begin
                            trampCall(_pred)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:532"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  trampCall(@_car)
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:530"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_lst)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:532"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                                 )))
                   ) then
                      DelayedCallPacket.new( 'cons',
                          begin
                            if @global_lisp_binding.has_key?('_cons') then
                              trampCall(@_cons)
                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:529"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            trampCall( callProcedure( 'car',
                                begin
                                  if @global_lisp_binding.has_key?('_car') then
                                    trampCall(@_car)
                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:530"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lst)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:532"] + __e.backtrace ) ; raise __e
                                  end
                                         )))                          ,Cell.new(
                            trampCall( callProcedure( 'filter',
                                begin
                                  if @global_lisp_binding.has_key?('_filter') then
                                    trampCall(@_filter)
                                  else raise NameError.new( "Error: undefined variable _filter", "_filter" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:532"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_pred)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:532"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  trampCall( callProcedure( 'cdr',
                                      begin
                                        if @global_lisp_binding.has_key?('_cdr') then
                                          trampCall(@_cdr)
                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:532"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lst)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:532"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                         ))))
                                   )))
                  else
                      DelayedCallPacket.new( 'filter',
                          begin
                            if @global_lisp_binding.has_key?('_filter') then
                              trampCall(@_filter)
                            else raise NameError.new( "Error: undefined variable _filter", "_filter" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:532"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_pred)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:532"] + __e.backtrace ) ; raise __e
                            end                          ,Cell.new(
                            trampCall( callProcedure( 'cdr',
                                begin
                                  if @global_lisp_binding.has_key?('_cdr') then
                                    trampCall(@_cdr)
                                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:532"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lst)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:532"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                                   )))
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_filter_MIMARKmap'] = true
    @_filter_MIMARKmap = 
    trampCall(
          Proc.new { |_pred,_lst| 
              if ( 
                trampCall( callProcedure( 'null?',
                    begin
                      if @global_lisp_binding.has_key?('_null_QUMARK') then
                        trampCall(@_null_QUMARK)
                      else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:536"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_lst)
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:543"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                Cell.new()
              else
                  begin
                    ___lambda = lambda { |_result| 
                        if ( 
                          begin
                              trampCall(_result)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:541"] + __e.backtrace ) ; raise __e
                          end
                         ) then
                            DelayedCallPacket.new( 'cons',
                                begin
                                  if @global_lisp_binding.has_key?('_cons') then
                                    trampCall(@_cons)
                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:540"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_result)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:541"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  trampCall( callProcedure( 'filter-map',
                                      begin
                                        if @global_lisp_binding.has_key?('_filter_MIMARKmap') then
                                          trampCall(@_filter_MIMARKmap)
                                        else raise NameError.new( "Error: undefined variable _filter_MIMARKmap", "_filter_MIMARKmap" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:543"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_pred)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:543"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        trampCall( callProcedure( 'cdr',
                                            begin
                                              if @global_lisp_binding.has_key?('_cdr') then
                                                trampCall(@_cdr)
                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:543"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_lst)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:543"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               ))))
                                         )))
                        else
                            DelayedCallPacket.new( 'filter-map',
                                begin
                                  if @global_lisp_binding.has_key?('_filter_MIMARKmap') then
                                    trampCall(@_filter_MIMARKmap)
                                  else raise NameError.new( "Error: undefined variable _filter_MIMARKmap", "_filter_MIMARKmap" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:543"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_pred)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:543"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  trampCall( callProcedure( 'cdr',
                                      begin
                                        if @global_lisp_binding.has_key?('_cdr') then
                                          trampCall(@_cdr)
                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:543"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lst)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:543"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                         )))
                        end
                    } ; ___lambda.call(
                          trampCall( callProcedure( 'pred',
                              begin
                                  trampCall(_pred)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:543"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'car',
                                    begin
                                      if @global_lisp_binding.has_key?('_car') then
                                        trampCall(@_car)
                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:538"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_lst)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:543"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_find'] = true
    @_find = 
    trampCall(
          Proc.new { |_pred,_lst| 
              begin
                ___lambda = lambda { |_result| 
                    if ( 
                      trampCall( callProcedure( 'null?',
                          begin
                            if @global_lisp_binding.has_key?('_null_QUMARK') then
                              trampCall(@_null_QUMARK)
                            else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:548"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_result)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:550"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                     ) then
                      false
                    else
                        DelayedCallPacket.new( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                trampCall(@_car)
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:550"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_result)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:550"] + __e.backtrace ) ; raise __e
                              end
                                     ))
                    end
                } ; ___lambda.call(
                      trampCall( callProcedure( 'filter',
                          begin
                            if @global_lisp_binding.has_key?('_filter') then
                              trampCall(@_filter)
                            else raise NameError.new( "Error: undefined variable _filter", "_filter" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:547"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_pred)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:547"] + __e.backtrace ) ; raise __e
                            end                          ,Cell.new(
                            begin
                                trampCall(_lst)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:547"] + __e.backtrace ) ; raise __e
                            end
                                   ))))
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_lambda'] = true
    @_lambda = 
    trampCall(
          LispMacro.new { |*__rest__| _src = __rest__[0] ;  
              if ( 
                trampCall( callProcedure( 'not',
                    begin
                      if @global_lisp_binding.has_key?('_not') then
                        trampCall(@_not)
                      else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:572"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      trampCall( callProcedure( 'list?',
                          begin
                            if @global_lisp_binding.has_key?('_list_QUMARK') then
                              trampCall(@_list_QUMARK)
                            else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:558"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            trampCall( callProcedure( 'cadr',
                                begin
                                  if @global_lisp_binding.has_key?('_cadr') then
                                    trampCall(@_cadr)
                                  else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:583"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_src)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:588"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                                   )))
                             )))
               ) then
                  trampCall( callProcedure( 'cons',
                      begin
                        if @global_lisp_binding.has_key?('_cons') then
                          trampCall(@_cons)
                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:540"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                      :"lambda"                      ,Cell.new(
                        begin
                            trampCall(_src)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:588"] + __e.backtrace ) ; raise __e
                        end
                               ))))
              else
                  begin
                    ___lambda = lambda { |_body| 
                        if ( 
                          trampCall( callProcedure( 'not',
                              begin
                                if @global_lisp_binding.has_key?('_not') then
                                  trampCall(@_not)
                                else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:572"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_list_QUMARK') then
                                        trampCall(@_list_QUMARK)
                                      else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:558"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:578"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_body)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:575"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             )))
                                       )))
                         ) then
                            trampCall( callProcedure( 'cons',
                                begin
                                  if @global_lisp_binding.has_key?('_cons') then
                                    trampCall(@_cons)
                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:540"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                :"lambda"                                ,Cell.new(
                                  begin
                                      trampCall(_src)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:588"] + __e.backtrace ) ; raise __e
                                  end
                                         ))))
                        else
                            begin
                              ___lambda = lambda { |_defs,_rest| 
                                  if ( 
                                    trampCall( callProcedure( '<',
                                        begin
                                          if @global_lisp_binding.has_key?('__LTMARK') then
                                            trampCall(@__LTMARK)
                                          else raise NameError.new( "Error: undefined variable __LTMARK", "__LTMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:576"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                        0                                        ,Cell.new(
                                          trampCall( callProcedure( 'length',
                                              begin
                                                if @global_lisp_binding.has_key?('_length') then
                                                  trampCall(@_length)
                                                else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:576"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_defs)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:585"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 ))))
                                   ) then
                                      trampCall( callProcedure( 'cons',
                                          begin
                                            if @global_lisp_binding.has_key?('_cons') then
                                              trampCall(@_cons)
                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:540"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                          :"lambda"                                          ,Cell.new(
                                            trampCall( callProcedure( 'cons',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cons') then
                                                    trampCall(@_cons)
                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:540"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  trampCall( callProcedure( 'car',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_car') then
                                                          trampCall(@_car)
                                                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:578"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_src)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:588"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))                                                ,Cell.new(
                                                  trampCall( callProcedure( 'cons',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_cons') then
                                                          trampCall(@_cons)
                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:540"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        trampCall( callProcedure( 'cons',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                trampCall(@_cons)
                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:540"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                            :"letrec"                                                            ,Cell.new(
                                                              trampCall( callProcedure( 'cons',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                      trampCall(@_cons)
                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:540"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    trampCall( callProcedure( 'map',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_map') then
                                                                            trampCall(@_map)
                                                                          else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:580"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          Proc.new { |_x| 
                                                                              trampCall( callProcedure( 'list',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_list') then
                                                                                      trampCall(@_list)
                                                                                    else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:582"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                    trampCall( callProcedure( 'cadr',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_cadr') then
                                                                                            trampCall(@_cadr)
                                                                                          else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:583"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        Cell.new(
                                                                                          begin
                                                                                              trampCall(_x)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:584"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                                 )))                                                                                  ,Cell.new(
                                                                                    trampCall( callProcedure( 'caddr',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_caddr') then
                                                                                            trampCall(@_caddr)
                                                                                          else raise NameError.new( "Error: undefined variable _caddr", "_caddr" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:584"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        Cell.new(
                                                                                          begin
                                                                                              trampCall(_x)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:584"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                                 )))
                                                                                           ))))
                                                                          }                                                                        ,Cell.new(
                                                                          begin
                                                                              trampCall(_defs)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:585"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 ))))                                                                  ,Cell.new(
                                                                    begin
                                                                        trampCall(_rest)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:586"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           ))))
                                                                     ))))                                                      ,Cell.new(
                                                      
                                                               ))))
                                                         ))))
                                                   ))))
                                  else
                                      trampCall( callProcedure( 'cons',
                                          begin
                                            if @global_lisp_binding.has_key?('_cons') then
                                              trampCall(@_cons)
                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:540"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                          :"lambda"                                          ,Cell.new(
                                            begin
                                                trampCall(_src)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:588"] + __e.backtrace ) ; raise __e
                                            end
                                                   ))))
                                  end
                              } ; ___lambda.call(
                                    trampCall( callProcedure( 'filter',
                                        begin
                                          if @global_lisp_binding.has_key?('_filter') then
                                            trampCall(@_filter)
                                          else raise NameError.new( "Error: undefined variable _filter", "_filter" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:569"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          Proc.new { |_x| 
                                              if ( 
                                                trampCall( callProcedure( 'pair?',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                        trampCall(@_pair_QUMARK)
                                                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:571"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_x)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:584"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                               ) then
                                                  if ( 
                                                    trampCall( callProcedure( 'not',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_not') then
                                                            trampCall(@_not)
                                                          else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:572"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'eq?',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                  trampCall(@_eq_QUMARK)
                                                                else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:572"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                              false                                                              ,Cell.new(
                                                                trampCall( callProcedure( 'eq?',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                        trampCall(@_eq_QUMARK)
                                                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:572"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                    :"define"                                                                    ,Cell.new(
                                                                      trampCall( callProcedure( 'car',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_car') then
                                                                              trampCall(@_car)
                                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:578"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_x)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:584"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))
                                                                             ))))
                                                                       ))))
                                                                 )))
                                                   ) then
                                                      trampCall( callProcedure( 'symbol?',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_symbol_QUMARK') then
                                                              trampCall(@_symbol_QUMARK)
                                                            else raise NameError.new( "Error: undefined variable _symbol_QUMARK", "_symbol_QUMARK" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:573"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            trampCall( callProcedure( 'cadr',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cadr') then
                                                                    trampCall(@_cadr)
                                                                  else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:583"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      trampCall(_x)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:584"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         )))
                                                                   )))
                                                  else
                                                    false
                                                  end
                                              else
                                                false
                                              end
                                          }                                        ,Cell.new(
                                          begin
                                              trampCall(_body)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:575"] + __e.backtrace ) ; raise __e
                                          end
                                                 ))))                                  ,
                                    trampCall( callProcedure( 'filter',
                                        begin
                                          if @global_lisp_binding.has_key?('_filter') then
                                            trampCall(@_filter)
                                          else raise NameError.new( "Error: undefined variable _filter", "_filter" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:569"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          Proc.new { |_x| 
                                              if ( 
                                                trampCall( callProcedure( 'pair?',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                        trampCall(@_pair_QUMARK)
                                                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:571"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_x)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:584"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                               ) then
                                                  trampCall( callProcedure( 'not',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_not') then
                                                          trampCall(@_not)
                                                        else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:572"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        if ( 
                                                          trampCall( callProcedure( 'not',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_not') then
                                                                  trampCall(@_not)
                                                                else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:572"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                trampCall( callProcedure( 'eq?',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                        trampCall(@_eq_QUMARK)
                                                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:572"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                    false                                                                    ,Cell.new(
                                                                      trampCall( callProcedure( 'eq?',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                              trampCall(@_eq_QUMARK)
                                                                            else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:572"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                          :"define"                                                                          ,Cell.new(
                                                                            trampCall( callProcedure( 'car',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_car') then
                                                                                    trampCall(@_car)
                                                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:578"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                Cell.new(
                                                                                  begin
                                                                                      trampCall(_x)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:584"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                                         )))
                                                                                   ))))
                                                                             ))))
                                                                       )))
                                                         ) then
                                                            trampCall( callProcedure( 'symbol?',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_symbol_QUMARK') then
                                                                    trampCall(@_symbol_QUMARK)
                                                                  else raise NameError.new( "Error: undefined variable _symbol_QUMARK", "_symbol_QUMARK" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:573"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  trampCall( callProcedure( 'cadr',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_cadr') then
                                                                          trampCall(@_cadr)
                                                                        else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:583"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            trampCall(_x)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:584"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               )))
                                                                         )))
                                                        else
                                                          false
                                                        end
                                                               )))
                                              else
                                                false
                                              end
                                          }                                        ,Cell.new(
                                          begin
                                              trampCall(_body)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:575"] + __e.backtrace ) ; raise __e
                                          end
                                                 ))))
                                         )
                            end
                        end
                    } ; ___lambda.call(
                          trampCall( callProcedure( 'cdr',
                              begin
                                if @global_lisp_binding.has_key?('_cdr') then
                                  trampCall(@_cdr)
                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:557"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_src)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:588"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_case'] = true
    @_case = 
    trampCall(
          LispMacro.new { |_cond_MIMARKexp,*__rest__| _body = __rest__[0] ;  
              begin
                ___lambda = lambda { |_case_MIMARKblock,_case_MIMARKiter| 
                    _case_MIMARKblock                     = 
                      Proc.new { |_val,*__rest__| _elem = __rest__[0] ;  
                          begin
                            ___lambda = lambda { |_block| 
                                begin
                                  ___lambda = lambda { |_cond_MIMARKvals,_body| 
                                      begin
                                        ___lambda = lambda { |_v| 
                                            trampCall( callProcedure( 'cons',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cons') then
                                                    trampCall(@_cons)
                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  trampCall( callProcedure( 'cons',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_cons') then
                                                          trampCall(@_cons)
                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_v)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:609"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,Cell.new(
                                                        begin
                                                            trampCall(_body)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:626"] + __e.backtrace ) ; raise __e
                                                        end
                                                               ))))                                                ,Cell.new(
                                                
                                                         ))))
                                        } ; ___lambda.call(
                                              if ( 
                                                trampCall( callProcedure( 'eq?',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                        trampCall(@_eq_QUMARK)
                                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:617"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                    :"else"                                                    ,Cell.new(
                                                      begin
                                                          trampCall(_cond_MIMARKvals)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:608"] + __e.backtrace ) ; raise __e
                                                      end
                                                             ))))
                                               ) then
                                                  begin
                                                      trampCall(_cond_MIMARKvals)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:608"] + __e.backtrace ) ; raise __e
                                                  end
                                              else
                                                  trampCall( callProcedure( 'cons',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_cons') then
                                                          trampCall(@_cons)
                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                      :"or"                                                      ,Cell.new(
                                                        trampCall( callProcedure( 'map',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_map') then
                                                                trampCall(@_map)
                                                              else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:605"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              Proc.new { |_x| 
                                                                  trampCall( callProcedure( 'cons',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                          trampCall(@_cons)
                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                      :"eqv?"                                                                      ,Cell.new(
                                                                        trampCall( callProcedure( 'cons',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                                trampCall(@_cons)
                                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  trampCall(_x)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:607"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,Cell.new(
                                                                              trampCall( callProcedure( 'cons',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                                      trampCall(@_cons)
                                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                    begin
                                                                                        trampCall(_val)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:621"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,Cell.new(
                                                                                  
                                                                                           ))))
                                                                                     ))))
                                                                               ))))
                                                              }                                                            ,Cell.new(
                                                              begin
                                                                  trampCall(_cond_MIMARKvals)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:608"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     ))))
                                                               ))))
                                              end
                                                   )
                                      end
                                  } ; ___lambda.call(
                                        trampCall( callProcedure( 'car',
                                            begin
                                              if @global_lisp_binding.has_key?('_car') then
                                                trampCall(@_car)
                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:620"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_block)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:600"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))                                      ,
                                        trampCall( callProcedure( 'cdr',
                                            begin
                                              if @global_lisp_binding.has_key?('_cdr') then
                                                trampCall(@_cdr)
                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:621"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_block)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:600"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                             )
                                end
                            } ; ___lambda.call(
                                  trampCall( callProcedure( 'car',
                                      begin
                                        if @global_lisp_binding.has_key?('_car') then
                                          trampCall(@_car)
                                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:620"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_elem)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:598"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                       )
                          end
                      }
                    _case_MIMARKiter                     = 
                      Proc.new { |_val,_lst| 
                          if ( 
                            trampCall( callProcedure( 'eq?',
                                begin
                                  if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                    trampCall(@_eq_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:617"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                0                                ,Cell.new(
                                  trampCall( callProcedure( 'length',
                                      begin
                                        if @global_lisp_binding.has_key?('_length') then
                                          trampCall(@_length)
                                        else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:617"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lst)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:621"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                         ))))
                           ) then
                              begin
                                Cell.new()
                              end
                          else
                              if ( 
                                trampCall( callProcedure( 'eq?',
                                    begin
                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                        trampCall(@_eq_QUMARK)
                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:617"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                    1                                    ,Cell.new(
                                      trampCall( callProcedure( 'length',
                                          begin
                                            if @global_lisp_binding.has_key?('_length') then
                                              trampCall(@_length)
                                            else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:617"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lst)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:621"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             ))))
                               ) then
                                  begin
                                      trampCall( callProcedure( 'case-block',
                                          begin
                                              trampCall(_case_MIMARKblock)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:620"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_val)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:621"] + __e.backtrace ) ; raise __e
                                            end                                          ,Cell.new(
                                            trampCall( callProcedure( 'car',
                                                begin
                                                  if @global_lisp_binding.has_key?('_car') then
                                                    trampCall(@_car)
                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:620"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_lst)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:621"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                   ))))
                                  end
                              else
                                  if ( 
                                  true
                                   ) then
                                      begin
                                          trampCall( callProcedure( 'append',
                                              begin
                                                if @global_lisp_binding.has_key?('_append') then
                                                  trampCall(@_append)
                                                else raise NameError.new( "Error: undefined variable _append", "_append" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:620"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'case-block',
                                                    begin
                                                        trampCall(_case_MIMARKblock)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:620"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_val)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:621"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'car',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_car') then
                                                              trampCall(@_car)
                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:620"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_lst)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:621"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))
                                                             ))))                                              ,Cell.new(
                                                trampCall( callProcedure( 'case-iter',
                                                    begin
                                                        trampCall(_case_MIMARKiter)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:626"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_val)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:621"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'cdr',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cdr') then
                                                              trampCall(@_cdr)
                                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:621"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_lst)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:621"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))
                                                             ))))
                                                       ))))
                                      end
                                  else
                                    Nil.new
                                  end
                              end
                          end
                      }
                    begin
                      ___lambda = lambda { |_sym| 
                          trampCall( callProcedure( 'cons',
                              begin
                                if @global_lisp_binding.has_key?('_cons') then
                                  trampCall(@_cons)
                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              :"let1"                              ,Cell.new(
                                trampCall( callProcedure( 'cons',
                                    begin
                                      if @global_lisp_binding.has_key?('_cons') then
                                        trampCall(@_cons)
                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_sym)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:626"] + __e.backtrace ) ; raise __e
                                      end                                    ,Cell.new(
                                      trampCall( callProcedure( 'cons',
                                          begin
                                            if @global_lisp_binding.has_key?('_cons') then
                                              trampCall(@_cons)
                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_cond_MIMARKexp)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:624"] + __e.backtrace ) ; raise __e
                                            end                                          ,Cell.new(
                                            trampCall( callProcedure( 'cons',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cons') then
                                                    trampCall(@_cons)
                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  trampCall( callProcedure( 'cons',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_cons') then
                                                          trampCall(@_cons)
                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                      :"cond"                                                      ,Cell.new(
                                                        trampCall( callProcedure( 'case-iter',
                                                            begin
                                                                trampCall(_case_MIMARKiter)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:626"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_sym)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:626"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                              begin
                                                                  trampCall(_body)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:626"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     ))))
                                                               ))))                                                ,Cell.new(
                                                
                                                         ))))
                                                   ))))
                                             ))))
                                       ))))
                      } ; ___lambda.call(
                            trampCall( callProcedure( 'gensym',
                                begin
                                  if @global_lisp_binding.has_key?('_gensym') then
                                    trampCall(@_gensym)
                                  else raise NameError.new( "Error: undefined variable _gensym", "_gensym" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:623"] + __e.backtrace ) ; raise __e
                                end                              ,
                              Cell.new(
                                         )))
                                 )
                    end
                } ; ___lambda.call(
                nil,nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_let_ASMARK'] = true
    @_let_ASMARK = 
    trampCall(
          LispMacro.new { |_exps,*__rest__| _body = __rest__[0] ;  
              begin
                ___lambda = lambda { |_let_ASMARK_MIMARKexpand| 
                    _let_ASMARK_MIMARKexpand                     = 
                      Proc.new { |_rest,_body| 
                          begin
                            ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20161| 
                                if ( 
                                  begin
                                    ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20165| 
                                        if ( 
                                          begin
                                              trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20165)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                         ) then
                                            begin
                                                trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20165)
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end
                                        else
                                          false
                                        end
                                    } ; ___lambda.call(
                                          trampCall( callProcedure( 'eqv?',
                                              begin
                                                if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                  trampCall(@_eqv_QUMARK)
                                                else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:607"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                              0                                              ,Cell.new(
                                                begin
                                                    trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20161)
                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                end
                                                       ))))
                                               )
                                  end
                                 ) then
                                    begin
                                      Cell.new()
                                    end
                                else
                                    if ( 
                                      begin
                                        ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20166| 
                                            if ( 
                                              begin
                                                  trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20166)
                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                              end
                                             ) then
                                                begin
                                                    trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20166)
                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                end
                                            else
                                              false
                                            end
                                        } ; ___lambda.call(
                                              trampCall( callProcedure( 'eqv?',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                      trampCall(@_eqv_QUMARK)
                                                    else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:607"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                  1                                                  ,Cell.new(
                                                    begin
                                                        trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20161)
                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                    end
                                                           ))))
                                                   )
                                      end
                                     ) then
                                        begin
                                            trampCall( callProcedure( 'cons',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cons') then
                                                    trampCall(@_cons)
                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                :"let"                                                ,Cell.new(
                                                  trampCall( callProcedure( 'cons',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_cons') then
                                                          trampCall(@_cons)
                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        trampCall( callProcedure( 'cons',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                trampCall(@_cons)
                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              trampCall( callProcedure( 'car',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_car') then
                                                                      trampCall(@_car)
                                                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:640"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_rest)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:641"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))                                                            ,Cell.new(
                                                            
                                                                     ))))                                                      ,Cell.new(
                                                        begin
                                                            trampCall(_body)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:643"] + __e.backtrace ) ; raise __e
                                                        end
                                                               ))))
                                                         ))))
                                        end
                                    else
                                        if ( 
                                        true
                                         ) then
                                            begin
                                                trampCall( callProcedure( 'cons',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cons') then
                                                        trampCall(@_cons)
                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                    :"let"                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'cons',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cons') then
                                                              trampCall(@_cons)
                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            trampCall( callProcedure( 'cons',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                    trampCall(@_cons)
                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  trampCall( callProcedure( 'car',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_car') then
                                                                          trampCall(@_car)
                                                                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:640"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            trampCall(_rest)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:641"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               )))                                                                ,Cell.new(
                                                                
                                                                         ))))                                                          ,Cell.new(
                                                            trampCall( callProcedure( 'cons',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                    trampCall(@_cons)
                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  trampCall( callProcedure( 'let*-expand',
                                                                      begin
                                                                          trampCall(_let_ASMARK_MIMARKexpand)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:643"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        trampCall( callProcedure( 'cdr',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_cdr') then
                                                                                trampCall(@_cdr)
                                                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:641"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  trampCall(_rest)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:641"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                                     )))                                                                      ,Cell.new(
                                                                        begin
                                                                            trampCall(_body)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:643"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               ))))                                                                ,Cell.new(
                                                                
                                                                         ))))
                                                                   ))))
                                                             ))))
                                            end
                                        else
                                          Nil.new
                                        end
                                    end
                                end
                            } ; ___lambda.call(
                                  trampCall( callProcedure( 'length',
                                      begin
                                        if @global_lisp_binding.has_key?('_length') then
                                          trampCall(@_length)
                                        else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:633"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_rest)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:641"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                       )
                          end
                      }
                    trampCall( callProcedure( 'let*-expand',
                        begin
                            trampCall(_let_ASMARK_MIMARKexpand)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:643"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_exps)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:643"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                              trampCall(_body)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:643"] + __e.backtrace ) ; raise __e
                          end
                                 ))))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_begin0'] = true
    @_begin0 = 
    trampCall(
          LispMacro.new { |*__rest__| _body = __rest__[0] ;  
              if ( 
                trampCall( callProcedure( 'null?',
                    begin
                      if @global_lisp_binding.has_key?('_null_QUMARK') then
                        trampCall(@_null_QUMARK)
                      else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:648"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_body)
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:653"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                Cell.new(:"begin",Cell.new(false))
              else
                  begin
                    ___lambda = lambda { |_result| 
                        trampCall( callProcedure( 'cons',
                            begin
                              if @global_lisp_binding.has_key?('_cons') then
                                trampCall(@_cons)
                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                            :"receive"                            ,Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      trampCall(@_cons)
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_result)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:654"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    trampCall( callProcedure( 'cons',
                                        begin
                                          if @global_lisp_binding.has_key?('_cons') then
                                            trampCall(@_cons)
                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'car',
                                              begin
                                                if @global_lisp_binding.has_key?('_car') then
                                                  trampCall(@_car)
                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:652"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_body)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:653"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))                                        ,Cell.new(
                                          trampCall( callProcedure( 'append',
                                              begin
                                                if @global_lisp_binding.has_key?('_append') then
                                                  trampCall(@_append)
                                                else raise NameError.new( "Error: undefined variable _append", "_append" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:620"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'cdr',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cdr') then
                                                        trampCall(@_cdr)
                                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:653"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_body)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:653"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))                                              ,Cell.new(
                                                trampCall( callProcedure( 'cons',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cons') then
                                                        trampCall(@_cons)
                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'cons',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cons') then
                                                              trampCall(@_cons)
                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                          :"apply"                                                          ,Cell.new(
                                                            trampCall( callProcedure( 'cons',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                    trampCall(@_cons)
                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                :"values"                                                                ,Cell.new(
                                                                  trampCall( callProcedure( 'cons',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                          trampCall(@_cons)
                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            trampCall(_result)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:654"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,Cell.new(
                                                                      
                                                                               ))))
                                                                         ))))
                                                                   ))))                                                    ,Cell.new(
                                                    
                                                             ))))
                                                       ))))
                                                 ))))
                                           ))))
                                     ))))
                    } ; ___lambda.call(
                          trampCall( callProcedure( 'gensym',
                              begin
                                if @global_lisp_binding.has_key?('_gensym') then
                                  trampCall(@_gensym)
                                else raise NameError.new( "Error: undefined variable _gensym", "_gensym" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:651"] + __e.backtrace ) ; raise __e
                              end                            ,
                            Cell.new(
                                       )))
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_values'] = true
    @_values = 
    trampCall(
          Proc.new { |*__rest__| _args = __rest__[0] ;  
              begin
                ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20167| 
                    if ( 
                      begin
                        ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20170| 
                            if ( 
                              begin
                                  trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20170)
                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                              end
                             ) then
                                begin
                                    trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20170)
                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                end
                            else
                              false
                            end
                        } ; ___lambda.call(
                              trampCall( callProcedure( 'eqv?',
                                  begin
                                    if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                      trampCall(@_eqv_QUMARK)
                                    else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:607"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  1                                  ,Cell.new(
                                    begin
                                        trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20167)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                           ))))
                                   )
                      end
                     ) then
                        begin
                            DelayedCallPacket.new( 'car',
                                begin
                                  if @global_lisp_binding.has_key?('_car') then
                                    trampCall(@_car)
                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:663"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_args)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:665"] + __e.backtrace ) ; raise __e
                                  end
                                         ))
                        end
                    else
                        if ( 
                        true
                         ) then
                            begin
                                DelayedCallPacket.new( 'make-values',
                                    begin
                                      if @global_lisp_binding.has_key?('_make_MIMARKvalues') then
                                        trampCall(@_make_MIMARKvalues)
                                      else raise NameError.new( "Error: undefined variable _make_MIMARKvalues", "_make_MIMARKvalues" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:665"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_args)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:665"] + __e.backtrace ) ; raise __e
                                      end
                                             ))
                            end
                        else
                            Cell.new()
                        end
                    end
                } ; ___lambda.call(
                      trampCall( callProcedure( 'length',
                          begin
                            if @global_lisp_binding.has_key?('_length') then
                              trampCall(@_length)
                            else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:661"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_args)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:665"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_call_MIMARKwith_MIMARKvalues'] = true
    @_call_MIMARKwith_MIMARKvalues = 
    trampCall(
          Proc.new { |_producer,_consumer| 
              begin
                ___lambda = lambda { |_v| 
                    if ( 
                      trampCall( callProcedure( 'values?',
                          begin
                            if @global_lisp_binding.has_key?('_values_QUMARK') then
                              trampCall(@_values_QUMARK)
                            else raise NameError.new( "Error: undefined variable _values_QUMARK", "_values_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:670"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_v)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:672"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                     ) then
                        DelayedCallPacket.new( 'apply',
                            begin
                              if @global_lisp_binding.has_key?('_apply') then
                                trampCall(@_apply)
                              else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:671"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_consumer)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:672"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                              trampCall( callProcedure( 'values-values',
                                  begin
                                    if @global_lisp_binding.has_key?('_values_MIMARKvalues') then
                                      trampCall(@_values_MIMARKvalues)
                                    else raise NameError.new( "Error: undefined variable _values_MIMARKvalues", "_values_MIMARKvalues" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:671"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_v)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:672"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                    else
                        DelayedCallPacket.new( 'consumer',
                            begin
                                trampCall(_consumer)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:672"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_v)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:672"] + __e.backtrace ) ; raise __e
                              end
                                     ))
                    end
                } ; ___lambda.call(
                      trampCall( callProcedure( 'producer',
                          begin
                              trampCall(_producer)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:669"] + __e.backtrace ) ; raise __e
                          end                        ,
                        Cell.new(
                                   )))
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_receive'] = true
    @_receive = 
    trampCall(
          LispMacro.new { |_vars,_expr,*__rest__| _body = __rest__[0] ;  
              trampCall( callProcedure( 'cons',
                  begin
                    if @global_lisp_binding.has_key?('_cons') then
                      trampCall(@_cons)
                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                  :"call-with-values"                  ,Cell.new(
                    trampCall( callProcedure( 'cons',
                        begin
                          if @global_lisp_binding.has_key?('_cons') then
                            trampCall(@_cons)
                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'cons',
                              begin
                                if @global_lisp_binding.has_key?('_cons') then
                                  trampCall(@_cons)
                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              :"lambda"                              ,Cell.new(
                                trampCall( callProcedure( 'cons',
                                    begin
                                      if @global_lisp_binding.has_key?('_cons') then
                                        trampCall(@_cons)
                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                    Cell.new()                                    ,Cell.new(
                                      trampCall( callProcedure( 'cons',
                                          begin
                                            if @global_lisp_binding.has_key?('_cons') then
                                              trampCall(@_cons)
                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_expr)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:678"] + __e.backtrace ) ; raise __e
                                            end                                          ,Cell.new(
                                          
                                                   ))))
                                             ))))
                                       ))))                        ,Cell.new(
                          trampCall( callProcedure( 'cons',
                              begin
                                if @global_lisp_binding.has_key?('_cons') then
                                  trampCall(@_cons)
                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'cons',
                                    begin
                                      if @global_lisp_binding.has_key?('_cons') then
                                        trampCall(@_cons)
                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                    :"lambda"                                    ,Cell.new(
                                      trampCall( callProcedure( 'cons',
                                          begin
                                            if @global_lisp_binding.has_key?('_cons') then
                                              trampCall(@_cons)
                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_vars)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:679"] + __e.backtrace ) ; raise __e
                                            end                                          ,Cell.new(
                                            begin
                                                trampCall(_body)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:679"] + __e.backtrace ) ; raise __e
                                            end
                                                   ))))
                                             ))))                              ,Cell.new(
                              
                                       ))))
                                 ))))
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_get_MIMARKkeyword'] = true
    @_get_MIMARKkeyword = 
    trampCall(
          Proc.new { |_key,_kv_MIMARKlist,*__rest__| _fallback = __rest__[0] ;  
              if ( 
                begin
                  ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20173| 
                      if ( 
                        begin
                            trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20173)
                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                        end
                       ) then
                          begin
                              trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20173)
                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                          end
                      else
                          begin
                            ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20174| 
                                if ( 
                                  begin
                                      trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20174)
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                                 ) then
                                    begin
                                        trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20174)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                else
                                  false
                                end
                            } ; ___lambda.call(
                                  trampCall( callProcedure( '>=',
                                      begin
                                        if @global_lisp_binding.has_key?('__GTMARK_EQMARK') then
                                          trampCall(@__GTMARK_EQMARK)
                                        else raise NameError.new( "Error: undefined variable __GTMARK_EQMARK", "__GTMARK_EQMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:687"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                      2                                      ,Cell.new(
                                        trampCall( callProcedure( 'length',
                                            begin
                                              if @global_lisp_binding.has_key?('_length') then
                                                trampCall(@_length)
                                              else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:697"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_kv_MIMARKlist)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:703"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               ))))
                                       )
                          end
                      end
                  } ; ___lambda.call(
                        trampCall( callProcedure( 'not',
                            begin
                              if @global_lisp_binding.has_key?('_not') then
                                trampCall(@_not)
                              else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:687"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'list?',
                                  begin
                                    if @global_lisp_binding.has_key?('_list_QUMARK') then
                                      trampCall(@_list_QUMARK)
                                    else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:687"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_kv_MIMARKlist)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:703"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                             )
                end
               ) then
                  begin
                      if ( 
                        trampCall( callProcedure( 'null?',
                            begin
                              if @global_lisp_binding.has_key?('_null_QUMARK') then
                                trampCall(@_null_QUMARK)
                              else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:699"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_fallback)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:701"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                       ) then
                          begin raise RuntimeError, 
                            trampCall( callProcedure( 'sprintf',
                                begin
                                  if @global_lisp_binding.has_key?('_sprintf') then
                                    trampCall(@_sprintf)
                                  else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:371"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                "Error: imcomplete key list: %s
"                                ,Cell.new(
                                  trampCall( callProcedure( 'write-to-string',
                                      begin
                                        if @global_lisp_binding.has_key?('_write_MIMARKto_MIMARKstring') then
                                          trampCall(@_write_MIMARKto_MIMARKstring)
                                        else raise NameError.new( "Error: undefined variable _write_MIMARKto_MIMARKstring", "_write_MIMARKto_MIMARKstring" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:703"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_kv_MIMARKlist)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:703"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                         ))))
                          rescue => __e 
                            __e.set_backtrace( ["./lib/init.nnd:370"] + __e.backtrace )
                            raise __e
                          end 
                      else
                          DelayedCallPacket.new( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  trampCall(@_car)
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:705"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_fallback)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:701"] + __e.backtrace ) ; raise __e
                                end
                                       ))
                      end
                  end
              else
                  if ( 
                  true
                   ) then
                      begin
                          begin
                            ___lambda = lambda { |_loop| 
                                _loop                                 = 
                                  Proc.new { |_k,_v,_rest| 
                                      if ( 
                                        trampCall( callProcedure( 'eq?',
                                            begin
                                              if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                trampCall(@_eq_QUMARK)
                                              else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:695"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_k)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:695"] + __e.backtrace ) ; raise __e
                                              end                                            ,Cell.new(
                                              begin
                                                  trampCall(_key)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:700"] + __e.backtrace ) ; raise __e
                                              end
                                                     ))))
                                       ) then
                                          begin
                                              trampCall(_v)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:696"] + __e.backtrace ) ; raise __e
                                          end
                                      else
                                          begin
                                            ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20175| 
                                                if ( 
                                                  begin
                                                    ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20179| 
                                                        if ( 
                                                          begin
                                                              trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20179)
                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                          end
                                                         ) then
                                                            begin
                                                                trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20179)
                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                            end
                                                        else
                                                          false
                                                        end
                                                    } ; ___lambda.call(
                                                          trampCall( callProcedure( 'eqv?',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                  trampCall(@_eqv_QUMARK)
                                                                else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:607"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                              0                                                              ,Cell.new(
                                                                begin
                                                                    trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20175)
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       ))))
                                                               )
                                                  end
                                                 ) then
                                                    begin
                                                        if ( 
                                                          trampCall( callProcedure( 'null?',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_null_QUMARK') then
                                                                  trampCall(@_null_QUMARK)
                                                                else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:699"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_fallback)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:701"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                         ) then
                                                            begin raise RuntimeError, 
                                                              trampCall( callProcedure( 'sprintf',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_sprintf') then
                                                                      trampCall(@_sprintf)
                                                                    else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:371"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                  "Error: value for key %s is not provided : %s
"                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'write-to-string',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_write_MIMARKto_MIMARKstring') then
                                                                            trampCall(@_write_MIMARKto_MIMARKstring)
                                                                          else raise NameError.new( "Error: undefined variable _write_MIMARKto_MIMARKstring", "_write_MIMARKto_MIMARKstring" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:703"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              trampCall(_key)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:700"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 )))                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'write-to-string',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_write_MIMARKto_MIMARKstring') then
                                                                            trampCall(@_write_MIMARKto_MIMARKstring)
                                                                          else raise NameError.new( "Error: undefined variable _write_MIMARKto_MIMARKstring", "_write_MIMARKto_MIMARKstring" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:703"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              trampCall(_kv_MIMARKlist)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:703"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 )))
                                                                           )))))
                                                            rescue => __e 
                                                              __e.set_backtrace( ["./lib/init.nnd:370"] + __e.backtrace )
                                                              raise __e
                                                            end 
                                                        else
                                                            DelayedCallPacket.new( 'car',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_car') then
                                                                    trampCall(@_car)
                                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:705"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      trampCall(_fallback)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:701"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         ))
                                                        end
                                                    end
                                                else
                                                    if ( 
                                                      begin
                                                        ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20180| 
                                                            if ( 
                                                              begin
                                                                  trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20180)
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end
                                                             ) then
                                                                begin
                                                                    trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20180)
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end
                                                            else
                                                              false
                                                            end
                                                        } ; ___lambda.call(
                                                              trampCall( callProcedure( 'eqv?',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                      trampCall(@_eqv_QUMARK)
                                                                    else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:607"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                  1                                                                  ,Cell.new(
                                                                    begin
                                                                        trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20175)
                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           ))))
                                                                   )
                                                      end
                                                     ) then
                                                        begin
                                                            begin raise RuntimeError, 
                                                              trampCall( callProcedure( 'sprintf',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_sprintf') then
                                                                      trampCall(@_sprintf)
                                                                    else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:371"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                  "Error: incomplete key list: %s
"                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'write-to-string',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_write_MIMARKto_MIMARKstring') then
                                                                            trampCall(@_write_MIMARKto_MIMARKstring)
                                                                          else raise NameError.new( "Error: undefined variable _write_MIMARKto_MIMARKstring", "_write_MIMARKto_MIMARKstring" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:703"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              trampCall(_kv_MIMARKlist)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:703"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 )))
                                                                           ))))
                                                            rescue => __e 
                                                              __e.set_backtrace( ["./lib/init.nnd:370"] + __e.backtrace )
                                                              raise __e
                                                            end 
                                                        end
                                                    else
                                                        if ( 
                                                        true
                                                         ) then
                                                            begin
                                                                DelayedCallPacket.new( 'loop',
                                                                    begin
                                                                        trampCall(_loop)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:705"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      trampCall( callProcedure( 'car',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_car') then
                                                                              trampCall(@_car)
                                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:705"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_rest)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:707"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))                                                                    ,Cell.new(
                                                                      trampCall( callProcedure( 'cadr',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_cadr') then
                                                                              trampCall(@_cadr)
                                                                            else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:706"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_rest)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:707"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))                                                                    ,Cell.new(
                                                                      trampCall( callProcedure( 'cddr',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_cddr') then
                                                                              trampCall(@_cddr)
                                                                            else raise NameError.new( "Error: undefined variable _cddr", "_cddr" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:707"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_rest)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:707"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))
                                                                             ))))
                                                            end
                                                        else
                                                            Cell.new()
                                                        end
                                                    end
                                                end
                                            } ; ___lambda.call(
                                                  trampCall( callProcedure( 'length',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_length') then
                                                          trampCall(@_length)
                                                        else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:697"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_rest)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:707"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                                       )
                                          end
                                      end
                                  }
                                DelayedCallPacket.new( 'loop',
                                    begin
                                        trampCall(_loop)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:705"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:705"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_kv_MIMARKlist)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:703"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))                                    ,Cell.new(
                                      trampCall( callProcedure( 'cadr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cadr') then
                                              trampCall(@_cadr)
                                            else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:706"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_kv_MIMARKlist)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:703"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))                                    ,Cell.new(
                                      trampCall( callProcedure( 'cddr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cddr') then
                                              trampCall(@_cddr)
                                            else raise NameError.new( "Error: undefined variable _cddr", "_cddr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:707"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_kv_MIMARKlist)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:703"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             ))))
                            } ; ___lambda.call(
                            nil
                                       )
                          end
                      end
                  else
                      Cell.new()
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_dot_MIMARKoperator'] = true
    @_dot_MIMARKoperator = 
    trampCall(
          LispMacro.new { |*__rest__| _lst = __rest__[0] ;  
              begin
                ___lambda = lambda { |_generate_MIMARKmethod_MIMARKcall_MIMARKform| 
                    _generate_MIMARKmethod_MIMARKcall_MIMARKform                     = 
                      Proc.new { |_lst| 
                          begin
                            ___lambda = lambda { |_tmp| 
                                if ( 
                                  trampCall( callProcedure( 'symbol?',
                                      begin
                                        if @global_lisp_binding.has_key?('_symbol_QUMARK') then
                                          trampCall(@_symbol_QUMARK)
                                        else raise NameError.new( "Error: undefined variable _symbol_QUMARK", "_symbol_QUMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:727"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'first',
                                            begin
                                              if @global_lisp_binding.has_key?('_first') then
                                                trampCall(@_first)
                                              else raise NameError.new( "Error: undefined variable _first", "_first" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:720"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_lst)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:728"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               )))
                                 ) then
                                    trampCall( callProcedure( 'cons',
                                        begin
                                          if @global_lisp_binding.has_key?('_cons') then
                                            trampCall(@_cons)
                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'string->symbol',
                                              begin
                                                if @global_lisp_binding.has_key?('_string_MIMARK_GTMARKsymbol') then
                                                  trampCall(@_string_MIMARK_GTMARKsymbol)
                                                else raise NameError.new( "Error: undefined variable _string_MIMARK_GTMARKsymbol", "_string_MIMARK_GTMARKsymbol" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:721"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( '+',
                                                    begin
                                                      if @global_lisp_binding.has_key?('__PLMARK') then
                                                        trampCall(@__PLMARK)
                                                      else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:721"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'to-s',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_to_MIMARKs') then
                                                              trampCall(@_to_MIMARKs)
                                                            else raise NameError.new( "Error: undefined variable _to_MIMARKs", "_to_MIMARKs" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:721"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            trampCall( callProcedure( 'first',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_first') then
                                                                    trampCall(@_first)
                                                                  else raise NameError.new( "Error: undefined variable _first", "_first" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:720"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      trampCall(_lst)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:728"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         )))
                                                                   )))                                                    ,Cell.new(
                                                    "."                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'to-s',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_to_MIMARKs') then
                                                              trampCall(@_to_MIMARKs)
                                                            else raise NameError.new( "Error: undefined variable _to_MIMARKs", "_to_MIMARKs" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:721"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            trampCall( callProcedure( 'second',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_second') then
                                                                    trampCall(@_second)
                                                                  else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:727"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      trampCall(_lst)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:728"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         )))
                                                                   )))
                                                             )))))
                                                       )))                                        ,Cell.new(
                                          trampCall( callProcedure( 'cddr',
                                              begin
                                                if @global_lisp_binding.has_key?('_cddr') then
                                                  trampCall(@_cddr)
                                                else raise NameError.new( "Error: undefined variable _cddr", "_cddr" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:722"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_lst)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:728"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 ))))
                                else
                                    trampCall( callProcedure( 'cons',
                                        begin
                                          if @global_lisp_binding.has_key?('_cons') then
                                            trampCall(@_cons)
                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                        :"let"                                        ,Cell.new(
                                          trampCall( callProcedure( 'cons',
                                              begin
                                                if @global_lisp_binding.has_key?('_cons') then
                                                  trampCall(@_cons)
                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'cons',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cons') then
                                                        trampCall(@_cons)
                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'cons',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cons') then
                                                              trampCall(@_cons)
                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_tmp)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:721"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,Cell.new(
                                                            trampCall( callProcedure( 'cons',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                    trampCall(@_cons)
                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  trampCall( callProcedure( 'first',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_first') then
                                                                          trampCall(@_first)
                                                                        else raise NameError.new( "Error: undefined variable _first", "_first" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:720"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            trampCall(_lst)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:728"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               )))                                                                ,Cell.new(
                                                                
                                                                         ))))
                                                                   ))))                                                    ,Cell.new(
                                                    
                                                             ))))                                              ,Cell.new(
                                                trampCall( callProcedure( 'cons',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cons') then
                                                        trampCall(@_cons)
                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'cons',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cons') then
                                                              trampCall(@_cons)
                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:604"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            trampCall( callProcedure( 'string->symbol',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_string_MIMARK_GTMARKsymbol') then
                                                                    trampCall(@_string_MIMARK_GTMARKsymbol)
                                                                  else raise NameError.new( "Error: undefined variable _string_MIMARK_GTMARKsymbol", "_string_MIMARK_GTMARKsymbol" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:721"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  trampCall( callProcedure( '+',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('__PLMARK') then
                                                                          trampCall(@__PLMARK)
                                                                        else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:721"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        trampCall( callProcedure( 'to-s',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_to_MIMARKs') then
                                                                                trampCall(@_to_MIMARKs)
                                                                              else raise NameError.new( "Error: undefined variable _to_MIMARKs", "_to_MIMARKs" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:721"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  trampCall(_tmp)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:721"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                                     )))                                                                      ,Cell.new(
                                                                      "."                                                                      ,Cell.new(
                                                                        trampCall( callProcedure( 'to-s',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_to_MIMARKs') then
                                                                                trampCall(@_to_MIMARKs)
                                                                              else raise NameError.new( "Error: undefined variable _to_MIMARKs", "_to_MIMARKs" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:721"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              trampCall( callProcedure( 'second',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_second') then
                                                                                      trampCall(@_second)
                                                                                    else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:727"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                    begin
                                                                                        trampCall(_lst)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:728"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                           )))
                                                                                     )))
                                                                               )))))
                                                                         )))                                                          ,Cell.new(
                                                            trampCall( callProcedure( 'cddr',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cddr') then
                                                                    trampCall(@_cddr)
                                                                  else raise NameError.new( "Error: undefined variable _cddr", "_cddr" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:722"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      trampCall(_lst)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:728"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         )))
                                                                   ))))                                                    ,Cell.new(
                                                    
                                                             ))))
                                                       ))))
                                                 ))))
                                end
                            } ; ___lambda.call(
                                  trampCall( callProcedure( 'gensym',
                                      begin
                                        if @global_lisp_binding.has_key?('_gensym') then
                                          trampCall(@_gensym)
                                        else raise NameError.new( "Error: undefined variable _gensym", "_gensym" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:716"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                    Cell.new(
                                               )))
                                       )
                          end
                      }
                    if ( 
                      trampCall( callProcedure( '>',
                          begin
                            if @global_lisp_binding.has_key?('__GTMARK') then
                              trampCall(@__GTMARK)
                            else raise NameError.new( "Error: undefined variable __GTMARK", "__GTMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:724"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                          2                          ,Cell.new(
                            trampCall( callProcedure( 'length',
                                begin
                                  if @global_lisp_binding.has_key?('_length') then
                                    trampCall(@_length)
                                  else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:724"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lst)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:728"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                                   ))))
                     ) then
                        begin
                            trampCall( callProcedure( 'raise',
                                begin
                                  if @global_lisp_binding.has_key?('_raise') then
                                    trampCall(@_raise)
                                  else raise NameError.new( "Error: undefined variable _raise", "_raise" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:729"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(ArgumentError)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:725"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                ". dot-operator requires 2+ arguments."                                ,Cell.new(
                                  trampCall( callProcedure( 'sprintf',
                                      begin
                                        if @global_lisp_binding.has_key?('_sprintf') then
                                          trampCall(@_sprintf)
                                        else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:729"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                      "%s:%s in dot-operator"                                      ,Cell.new(
                                        trampCall( callProcedure( '*FILE*',
                                            begin
                                              if @global_lisp_binding.has_key?('__ASMARKFILE_ASMARK') then
                                                trampCall(@__ASMARKFILE_ASMARK)
                                              else raise NameError.new( "Error: undefined variable __ASMARKFILE_ASMARK", "__ASMARKFILE_ASMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:729"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                          Cell.new(
                                                     )))                                      ,Cell.new(
                                        trampCall( callProcedure( '*LINE*',
                                            begin
                                              if @global_lisp_binding.has_key?('__ASMARKLINE_ASMARK') then
                                                trampCall(@__ASMARKLINE_ASMARK)
                                              else raise NameError.new( "Error: undefined variable __ASMARKLINE_ASMARK", "__ASMARKLINE_ASMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:729"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                          Cell.new(
                                                     )))
                                               )))))
                                         )))))
                        end
                    else
                        if ( 
                        true
                         ) then
                            begin
                                if ( 
                                  trampCall( callProcedure( 'symbol?',
                                      begin
                                        if @global_lisp_binding.has_key?('_symbol_QUMARK') then
                                          trampCall(@_symbol_QUMARK)
                                        else raise NameError.new( "Error: undefined variable _symbol_QUMARK", "_symbol_QUMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:727"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'second',
                                            begin
                                              if @global_lisp_binding.has_key?('_second') then
                                                trampCall(@_second)
                                              else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:727"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_lst)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:728"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               )))
                                 ) then
                                    trampCall( callProcedure( 'generate-method-call-form',
                                        begin
                                            trampCall(_generate_MIMARKmethod_MIMARKcall_MIMARKform)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:728"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_lst)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:728"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                else
                                    trampCall( callProcedure( 'raise',
                                        begin
                                          if @global_lisp_binding.has_key?('_raise') then
                                            trampCall(@_raise)
                                          else raise NameError.new( "Error: undefined variable _raise", "_raise" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:729"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(TypeError)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:729"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                        ". dot-operator requires method name as symbol."                                        ,Cell.new(
                                          trampCall( callProcedure( 'sprintf',
                                              begin
                                                if @global_lisp_binding.has_key?('_sprintf') then
                                                  trampCall(@_sprintf)
                                                else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:729"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                              "%s:%s in dot-operator"                                              ,Cell.new(
                                                trampCall( callProcedure( '*FILE*',
                                                    begin
                                                      if @global_lisp_binding.has_key?('__ASMARKFILE_ASMARK') then
                                                        trampCall(@__ASMARKFILE_ASMARK)
                                                      else raise NameError.new( "Error: undefined variable __ASMARKFILE_ASMARK", "__ASMARKFILE_ASMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:729"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                  Cell.new(
                                                             )))                                              ,Cell.new(
                                                trampCall( callProcedure( '*LINE*',
                                                    begin
                                                      if @global_lisp_binding.has_key?('__ASMARKLINE_ASMARK') then
                                                        trampCall(@__ASMARKLINE_ASMARK)
                                                      else raise NameError.new( "Error: undefined variable __ASMARKLINE_ASMARK", "__ASMARKLINE_ASMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:729"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                  Cell.new(
                                                             )))
                                                       )))))
                                                 )))))
                                end
                            end
                        else
                          Nil.new
                        end
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_with_MIMARKopen'] = true
    @_with_MIMARKopen = 
    trampCall(
          Proc.new { |_filename,_pred,*__rest__| _lst = __rest__[0] ;  
              begin
                ___lambda = lambda { |_len| 
                    begin
                      ___lambda = lambda { |_f| 
                          begin
                            ___lambda = lambda { |_result| 
                                begin
                                    trampCall(_f).close(
                                      )
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:742"] + __e.backtrace ) ; raise __e
                                end
                                begin
                                    trampCall(_result)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:743"] + __e.backtrace ) ; raise __e
                                end
                            } ; ___lambda.call(
                                  trampCall( callProcedure( 'pred',
                                      begin
                                          trampCall(_pred)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:741"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_f)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:741"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                       )
                          end
                      } ; ___lambda.call(
                            if ( 
                              trampCall( callProcedure( '=',
                                  begin
                                    if @global_lisp_binding.has_key?('__EQMARK') then
                                      trampCall(@__EQMARK)
                                    else raise NameError.new( "Error: undefined variable __EQMARK", "__EQMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:735"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  0                                  ,Cell.new(
                                    begin
                                        trampCall(_len)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:737"] + __e.backtrace ) ; raise __e
                                    end
                                           ))))
                             ) then
                                begin
                                    begin
                                        trampCall(Kernel).open(
                                              begin
                                                  trampCall(_filename)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:738"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:738"] + __e.backtrace ) ; raise __e
                                    end
                                end
                            else
                                if ( 
                                  trampCall( callProcedure( '<',
                                      begin
                                        if @global_lisp_binding.has_key?('__LTMARK') then
                                          trampCall(@__LTMARK)
                                        else raise NameError.new( "Error: undefined variable __LTMARK", "__LTMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:737"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                      0                                      ,Cell.new(
                                        begin
                                            trampCall(_len)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:737"] + __e.backtrace ) ; raise __e
                                        end
                                               ))))
                                 ) then
                                    begin
                                        begin
                                            trampCall(Kernel).open(
                                                  begin
                                                      trampCall(_filename)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:738"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  trampCall( callProcedure( 'car',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_car') then
                                                          trampCall(@_car)
                                                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:738"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_lst)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:738"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                              )
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:738"] + __e.backtrace ) ; raise __e
                                        end
                                    end
                                else
                                    if ( 
                                    true
                                     ) then
                                        begin
                                            begin raise RuntimeError, 
                                            "with-open requires 2 or 3 arguments."
                                            rescue => __e 
                                              __e.set_backtrace( ["./lib/init.nnd:740"] + __e.backtrace )
                                              raise __e
                                            end 
                                        end
                                    else
                                        Cell.new()
                                    end
                                end
                            end
                                 )
                    end
                } ; ___lambda.call(
                      trampCall( callProcedure( 'length',
                          begin
                            if @global_lisp_binding.has_key?('_length') then
                              trampCall(@_length)
                            else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:733"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_lst)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:738"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_last_MIMARKpair'] = true
    @_last_MIMARKpair = 
    trampCall(
          Proc.new { |_x| 
              if ( 
                trampCall( callProcedure( 'pair?',
                    begin
                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                        trampCall(@_pair_QUMARK)
                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:750"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      trampCall( callProcedure( 'cdr',
                          begin
                            if @global_lisp_binding.has_key?('_cdr') then
                              trampCall(@_cdr)
                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:751"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_x)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:752"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                             )))
               ) then
                  DelayedCallPacket.new( 'last-pair',
                      begin
                        if @global_lisp_binding.has_key?('_last_MIMARKpair') then
                          trampCall(@_last_MIMARKpair)
                        else raise NameError.new( "Error: undefined variable _last_MIMARKpair", "_last_MIMARKpair" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:751"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'cdr',
                            begin
                              if @global_lisp_binding.has_key?('_cdr') then
                                trampCall(@_cdr)
                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:751"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_x)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:752"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                               ))
              else
                  begin
                      trampCall(_x)
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:752"] + __e.backtrace ) ; raise __e
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cons_ASMARK'] = true
    @_cons_ASMARK = 
    trampCall(
          Proc.new { |_arg,*__rest__| _args = __rest__[0] ;  
              if ( 
                trampCall( callProcedure( 'null?',
                    begin
                      if @global_lisp_binding.has_key?('_null_QUMARK') then
                        trampCall(@_null_QUMARK)
                      else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:756"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_args)
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:758"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  begin
                      trampCall(_arg)
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:758"] + __e.backtrace ) ; raise __e
                  end
              else
                  DelayedCallPacket.new( 'cons',
                      begin
                        if @global_lisp_binding.has_key?('_cons') then
                          trampCall(@_cons)
                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:758"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            trampCall(_arg)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:758"] + __e.backtrace ) ; raise __e
                        end                      ,Cell.new(
                        trampCall( callProcedure( 'apply',
                            begin
                              if @global_lisp_binding.has_key?('_apply') then
                                trampCall(@_apply)
                              else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:758"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                if @global_lisp_binding.has_key?('_list_ASMARK') then
                                  trampCall(@_list_ASMARK)
                                else raise NameError.new( "Error: undefined variable _list_ASMARK", "_list_ASMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:758"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                              begin
                                  trampCall(_args)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:758"] + __e.backtrace ) ; raise __e
                              end
                                     ))))
                               )))
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_list_ASMARK'] = true
    @_list_ASMARK = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('_cons_ASMARK') then
              trampCall(@_cons_ASMARK)
            else raise NameError.new( "Error: undefined variable _cons_ASMARK", "_cons_ASMARK" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:759"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_make_MIMARKhash_MIMARKtable'] = true
    @_make_MIMARKhash_MIMARKtable = 
    trampCall(
          Proc.new { || 
              begin
                  trampCall(Hash).new(
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:766"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_QUMARK'] = true
    @_hash_MIMARKtable_QUMARK = 
    trampCall(
          Proc.new { |_h| 
              begin
                  trampCall(_h).is_a?(
                        begin
                            trampCall(Hash)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:769"] + __e.backtrace ) ; raise __e
                        end
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:769"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_MIMARKnum_MIMARKentries'] = true
    @_hash_MIMARKtable_MIMARKnum_MIMARKentries = 
    trampCall(
          Proc.new { |_h| 
              begin
                  trampCall(_h).length(
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:772"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable'] = true
    @_hash_MIMARKtable = 
    trampCall(
          Proc.new { |*__rest__| _kv_MIMARKlist = __rest__[0] ;  
              begin
                ___lambda = lambda { |_h| 
                    trampCall( callProcedure( 'for-each',
                        begin
                          if @global_lisp_binding.has_key?('_for_MIMARKeach') then
                            trampCall(@_for_MIMARKeach)
                          else raise NameError.new( "Error: undefined variable _for_MIMARKeach", "_for_MIMARKeach" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:776"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          Proc.new { |_entry| 
                              if ( 
                                trampCall( callProcedure( 'pair?',
                                    begin
                                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                        trampCall(@_pair_QUMARK)
                                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:778"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'cdr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cdr') then
                                              trampCall(@_cdr)
                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:780"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_entry)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:780"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             )))
                               ) then
                                  trampCall( callProcedure( 'hash-table-put!',
                                      begin
                                        if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKput_EXMARK') then
                                          trampCall(@_hash_MIMARKtable_MIMARKput_EXMARK)
                                        else raise NameError.new( "Error: undefined variable _hash_MIMARKtable_MIMARKput_EXMARK", "_hash_MIMARKtable_MIMARKput_EXMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:780"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_h)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:782"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        trampCall( callProcedure( 'car',
                                            begin
                                              if @global_lisp_binding.has_key?('_car') then
                                                trampCall(@_car)
                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:780"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_entry)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:780"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))                                      ,Cell.new(
                                        trampCall( callProcedure( 'cadr',
                                            begin
                                              if @global_lisp_binding.has_key?('_cadr') then
                                                trampCall(@_cadr)
                                              else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:779"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_entry)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:780"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               )))))
                              else
                                  trampCall( callProcedure( 'hash-table-put!',
                                      begin
                                        if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKput_EXMARK') then
                                          trampCall(@_hash_MIMARKtable_MIMARKput_EXMARK)
                                        else raise NameError.new( "Error: undefined variable _hash_MIMARKtable_MIMARKput_EXMARK", "_hash_MIMARKtable_MIMARKput_EXMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:780"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_h)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:782"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        trampCall( callProcedure( 'car',
                                            begin
                                              if @global_lisp_binding.has_key?('_car') then
                                                trampCall(@_car)
                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:780"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_entry)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:780"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))                                      ,Cell.new(
                                        trampCall( callProcedure( 'cdr',
                                            begin
                                              if @global_lisp_binding.has_key?('_cdr') then
                                                trampCall(@_cdr)
                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:780"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_entry)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:780"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               )))))
                              end
                          }                        ,Cell.new(
                          begin
                              trampCall(_kv_MIMARKlist)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:781"] + __e.backtrace ) ; raise __e
                          end
                                 ))))
                    begin
                        trampCall(_h)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:782"] + __e.backtrace ) ; raise __e
                    end
                } ; ___lambda.call(
                      trampCall( callProcedure( 'make-hash-table',
                          begin
                            if @global_lisp_binding.has_key?('_make_MIMARKhash_MIMARKtable') then
                              trampCall(@_make_MIMARKhash_MIMARKtable)
                            else raise NameError.new( "Error: undefined variable _make_MIMARKhash_MIMARKtable", "_make_MIMARKhash_MIMARKtable" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:775"] + __e.backtrace ) ; raise __e
                          end                        ,
                        Cell.new(
                                   )))
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_MIMARKexist_QUMARK'] = true
    @_hash_MIMARKtable_MIMARKexist_QUMARK = 
    trampCall(
          Proc.new { |_h,_key| 
              begin
                  trampCall(_h).has_key?(
                        begin
                            trampCall(_key)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:785"] + __e.backtrace ) ; raise __e
                        end
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:785"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_MIMARKclear_EXMARK'] = true
    @_hash_MIMARKtable_MIMARKclear_EXMARK = 
    trampCall(
          Proc.new { |_h| 
              begin
                  trampCall(_h).clear(
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:788"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_MIMARKdelete_EXMARK'] = true
    @_hash_MIMARKtable_MIMARKdelete_EXMARK = 
    trampCall(
          Proc.new { |_h,_key| 
              begin
                  trampCall(_h).delete(
                        begin
                            trampCall(_key)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:791"] + __e.backtrace ) ; raise __e
                        end
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:791"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_MIMARKpush_EXMARK'] = true
    @_hash_MIMARKtable_MIMARKpush_EXMARK = 
    trampCall(
          Proc.new { |_ht,_key,_value| 
              DelayedCallPacket.new( 'hash-table-put!',
                  begin
                    if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKput_EXMARK') then
                      trampCall(@_hash_MIMARKtable_MIMARKput_EXMARK)
                    else raise NameError.new( "Error: undefined variable _hash_MIMARKtable_MIMARKput_EXMARK", "_hash_MIMARKtable_MIMARKput_EXMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:794"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        trampCall(_ht)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:797"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_key)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:797"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    trampCall( callProcedure( 'cons',
                        begin
                          if @global_lisp_binding.has_key?('_cons') then
                            trampCall(@_cons)
                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:797"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_value)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:797"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          trampCall( callProcedure( 'hash-table-get',
                              begin
                                if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKget') then
                                  trampCall(@_hash_MIMARKtable_MIMARKget)
                                else raise NameError.new( "Error: undefined variable _hash_MIMARKtable_MIMARKget", "_hash_MIMARKtable_MIMARKget" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:797"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_ht)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:797"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                                begin
                                    trampCall(_key)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:797"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                              Cell.new()
                                       )))))
                                 ))))
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_MIMARKkeys'] = true
    @_hash_MIMARKtable_MIMARKkeys = 
    trampCall(
          Proc.new { |_h| 
              DelayedCallPacket.new( 'to-list',
                  begin
                    if @global_lisp_binding.has_key?('_to_MIMARKlist') then
                      trampCall(@_to_MIMARKlist)
                    else raise NameError.new( "Error: undefined variable _to_MIMARKlist", "_to_MIMARKlist" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:800"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        trampCall(_h).keys(
                          )
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:800"] + __e.backtrace ) ; raise __e
                    end
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_MIMARKvalues'] = true
    @_hash_MIMARKtable_MIMARKvalues = 
    trampCall(
          Proc.new { |_h| 
              DelayedCallPacket.new( 'to-list',
                  begin
                    if @global_lisp_binding.has_key?('_to_MIMARKlist') then
                      trampCall(@_to_MIMARKlist)
                    else raise NameError.new( "Error: undefined variable _to_MIMARKlist", "_to_MIMARKlist" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:803"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        trampCall(_h).values(
                          )
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:803"] + __e.backtrace ) ; raise __e
                    end
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_MIMARKmap'] = true
    @_hash_MIMARKtable_MIMARKmap = 
    trampCall(
          Proc.new { |_h,_pred| 
              begin
                ___lambda = lambda { |_keys| 
                    DelayedCallPacket.new( 'map',
                        begin
                          if @global_lisp_binding.has_key?('_map') then
                            trampCall(@_map)
                          else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:807"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          Proc.new { |_key| 
                              trampCall( callProcedure( 'pred',
                                  begin
                                      trampCall(_pred)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:809"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_key)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:809"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    trampCall( callProcedure( 'hash-table-get',
                                        begin
                                          if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKget') then
                                            trampCall(@_hash_MIMARKtable_MIMARKget)
                                          else raise NameError.new( "Error: undefined variable _hash_MIMARKtable_MIMARKget", "_hash_MIMARKtable_MIMARKget" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:809"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_h)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:809"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                          begin
                                              trampCall(_key)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:809"] + __e.backtrace ) ; raise __e
                                          end
                                                 ))))
                                           ))))
                          }                        ,Cell.new(
                          begin
                              trampCall(_keys)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:810"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                } ; ___lambda.call(
                      trampCall( callProcedure( 'hash-table-keys',
                          begin
                            if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKkeys') then
                              trampCall(@_hash_MIMARKtable_MIMARKkeys)
                            else raise NameError.new( "Error: undefined variable _hash_MIMARKtable_MIMARKkeys", "_hash_MIMARKtable_MIMARKkeys" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:806"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_h)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:809"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_MIMARKfor_MIMARKeach'] = true
    @_hash_MIMARKtable_MIMARKfor_MIMARKeach = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKmap') then
              trampCall(@_hash_MIMARKtable_MIMARKmap)
            else raise NameError.new( "Error: undefined variable _hash_MIMARKtable_MIMARKmap", "_hash_MIMARKtable_MIMARKmap" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:811"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_hash_MIMARKtable_MIMARK_GTMARKalist'] = true
    @_hash_MIMARKtable_MIMARK_GTMARKalist = 
    trampCall(
          Proc.new { |_h| 
              if ( 
                trampCall( callProcedure( 'not',
                    begin
                      if @global_lisp_binding.has_key?('_not') then
                        trampCall(@_not)
                      else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:814"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_h).is_a?(
                                begin
                                    trampCall(Hash)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:814"] + __e.backtrace ) ; raise __e
                                end
                            )
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:814"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  begin raise RuntimeError, 
                  "Error: hash-table->alist expects Hash instance."
                  rescue => __e 
                    __e.set_backtrace( ["./lib/init.nnd:815"] + __e.backtrace )
                    raise __e
                  end 
              else
                  begin
                    ___lambda = lambda { |_keys| 
                        DelayedCallPacket.new( 'map',
                            begin
                              if @global_lisp_binding.has_key?('_map') then
                                trampCall(@_map)
                              else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:817"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              Proc.new { |_key| 
                                  trampCall( callProcedure( 'cons',
                                      begin
                                        if @global_lisp_binding.has_key?('_cons') then
                                          trampCall(@_cons)
                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:819"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_key)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:819"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        trampCall( callProcedure( 'hash-table-get',
                                            begin
                                              if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKget') then
                                                trampCall(@_hash_MIMARKtable_MIMARKget)
                                              else raise NameError.new( "Error: undefined variable _hash_MIMARKtable_MIMARKget", "_hash_MIMARKtable_MIMARKget" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:819"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_h)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:819"] + __e.backtrace ) ; raise __e
                                              end                                            ,Cell.new(
                                              begin
                                                  trampCall(_key)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:819"] + __e.backtrace ) ; raise __e
                                              end
                                                     ))))
                                               ))))
                              }                            ,Cell.new(
                              begin
                                  trampCall(_keys)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:820"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                    } ; ___lambda.call(
                          trampCall( callProcedure( 'hash-table-keys',
                              begin
                                if @global_lisp_binding.has_key?('_hash_MIMARKtable_MIMARKkeys') then
                                  trampCall(@_hash_MIMARKtable_MIMARKkeys)
                                else raise NameError.new( "Error: undefined variable _hash_MIMARKtable_MIMARKkeys", "_hash_MIMARKtable_MIMARKkeys" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:816"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_h)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:819"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_alist_MIMARK_GTMARKhash_MIMARKtable'] = true
    @_alist_MIMARK_GTMARKhash_MIMARKtable = 
    trampCall(
          Proc.new { |_alist| 
              if ( 
                trampCall( callProcedure( 'not',
                    begin
                      if @global_lisp_binding.has_key?('_not') then
                        trampCall(@_not)
                      else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:823"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      trampCall( callProcedure( 'list?',
                          begin
                            if @global_lisp_binding.has_key?('_list_QUMARK') then
                              trampCall(@_list_QUMARK)
                            else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:823"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_alist)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:825"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                             )))
               ) then
                  begin raise RuntimeError, 
                  "Error: alist->hash-table expects alist."
                  rescue => __e 
                    __e.set_backtrace( ["./lib/init.nnd:824"] + __e.backtrace )
                    raise __e
                  end 
              else
                  DelayedCallPacket.new( 'apply',
                      begin
                        if @global_lisp_binding.has_key?('_apply') then
                          trampCall(@_apply)
                        else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:825"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                          if @global_lisp_binding.has_key?('_hash_MIMARKtable') then
                            trampCall(@_hash_MIMARKtable)
                          else raise NameError.new( "Error: undefined variable _hash_MIMARKtable", "_hash_MIMARKtable" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:825"] + __e.backtrace ) ; raise __e
                        end                      ,Cell.new(
                        begin
                            trampCall(_alist)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:825"] + __e.backtrace ) ; raise __e
                        end
                               )))
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_export'] = true
    @_export = 
    trampCall(
          LispMacro.new { |_name| 
              trampCall( callProcedure( 'cons',
                  begin
                    if @global_lisp_binding.has_key?('_cons') then
                      trampCall(@_cons)
                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:819"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                  :"define"                  ,Cell.new(
                    trampCall( callProcedure( 'cons',
                        begin
                          if @global_lisp_binding.has_key?('_cons') then
                            trampCall(@_cons)
                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:819"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_name)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:834"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                        Cell.new(nil)
                                 ))))
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_load_MIMARKlibrary'] = true
    @_load_MIMARKlibrary = 
    trampCall(
          Proc.new { |_name| 
              begin
                ___lambda = lambda { |_home| 
                    begin
                      ___lambda = lambda { |_path| 
                          if ( 
                            begin
                                trampCall(File).exist?(
                                      trampCall( callProcedure( '+',
                                          begin
                                            if @global_lisp_binding.has_key?('__PLMARK') then
                                              trampCall(@__PLMARK)
                                            else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:843"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_path)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:845"] + __e.backtrace ) ; raise __e
                                            end                                          ,Cell.new(
                                          ".nndc"
                                                   ))))
                                  )
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:842"] + __e.backtrace ) ; raise __e
                            end
                           ) then
                              begin
                                  DelayedCallPacket.new( 'load-compiled-code',
                                      begin
                                        if @global_lisp_binding.has_key?('_load_MIMARKcompiled_MIMARKcode') then
                                          trampCall(@_load_MIMARKcompiled_MIMARKcode)
                                        else raise NameError.new( "Error: undefined variable _load_MIMARKcompiled_MIMARKcode", "_load_MIMARKcompiled_MIMARKcode" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:841"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( '+',
                                            begin
                                              if @global_lisp_binding.has_key?('__PLMARK') then
                                                trampCall(@__PLMARK)
                                              else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:843"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_path)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:845"] + __e.backtrace ) ; raise __e
                                              end                                            ,Cell.new(
                                            ".nndc"
                                                     ))))
                                               ))
                              end
                          else
                              if ( 
                                begin
                                    trampCall(File).exist?(
                                          trampCall( callProcedure( '+',
                                              begin
                                                if @global_lisp_binding.has_key?('__PLMARK') then
                                                  trampCall(@__PLMARK)
                                                else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:843"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_path)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:845"] + __e.backtrace ) ; raise __e
                                                end                                              ,Cell.new(
                                              ".nnd"
                                                       ))))
                                      )
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:842"] + __e.backtrace ) ; raise __e
                                end
                               ) then
                                  begin
                                      DelayedCallPacket.new( 'load',
                                          begin
                                            if @global_lisp_binding.has_key?('_load') then
                                              trampCall(@_load)
                                            else raise NameError.new( "Error: undefined variable _load", "_load" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:843"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            trampCall( callProcedure( '+',
                                                begin
                                                  if @global_lisp_binding.has_key?('__PLMARK') then
                                                    trampCall(@__PLMARK)
                                                  else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:843"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_path)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:845"] + __e.backtrace ) ; raise __e
                                                  end                                                ,Cell.new(
                                                ".nnd"
                                                         ))))
                                                   ))
                                  end
                              else
                                  if ( 
                                  true
                                   ) then
                                      begin
                                          begin raise RuntimeError, 
                                            trampCall( callProcedure( 'sprintf',
                                                begin
                                                  if @global_lisp_binding.has_key?('_sprintf') then
                                                    trampCall(@_sprintf)
                                                  else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:729"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                "Error: can't load library file [%s]
"                                                ,Cell.new(
                                                  begin
                                                      trampCall(_path)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:845"] + __e.backtrace ) ; raise __e
                                                  end
                                                         ))))
                                          rescue => __e 
                                            __e.set_backtrace( ["./lib/init.nnd:824"] + __e.backtrace )
                                            raise __e
                                          end 
                                      end
                                  else
                                      Cell.new()
                                  end
                              end
                          end
                      } ; ___lambda.call(
                            trampCall( callProcedure( '+',
                                begin
                                  if @global_lisp_binding.has_key?('__PLMARK') then
                                    trampCall(@__PLMARK)
                                  else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:843"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_home)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:838"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                "/"                                ,Cell.new(
                                  begin
                                      trampCall(_name)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:838"] + __e.backtrace ) ; raise __e
                                  end
                                         )))))
                                 )
                    end
                } ; ___lambda.call(
                      trampCall( callProcedure( 'get-nendo-home',
                          begin
                            if @global_lisp_binding.has_key?('_get_MIMARKnendo_MIMARKhome') then
                              trampCall(@_get_MIMARKnendo_MIMARKhome)
                            else raise NameError.new( "Error: undefined variable _get_MIMARKnendo_MIMARKhome", "_get_MIMARKnendo_MIMARKhome" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:837"] + __e.backtrace ) ; raise __e
                          end                        ,
                        Cell.new(
                                   )))
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_vector_QUMARK'] = true
    @_vector_QUMARK = 
    trampCall(
          Proc.new { |_v| 
              begin
                  trampCall(_v).is_a?(
                        begin
                            trampCall(Array)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:853"] + __e.backtrace ) ; raise __e
                        end
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:853"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_make_MIMARKvector'] = true
    @_make_MIMARKvector = 
    trampCall(
          Proc.new { |_k,*__rest__| _rest = __rest__[0] ;  
              if ( 
                trampCall( callProcedure( 'null?',
                    begin
                      if @global_lisp_binding.has_key?('_null_QUMARK') then
                        trampCall(@_null_QUMARK)
                      else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:856"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_rest)
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:858"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  begin
                      trampCall(Array).new(
                            begin
                                trampCall(_k)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:858"] + __e.backtrace ) ; raise __e
                            end
                        )
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:858"] + __e.backtrace ) ; raise __e
                  end
              else
                  begin
                      trampCall(Array).new(
                            begin
                                trampCall(_k)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:858"] + __e.backtrace ) ; raise __e
                            end                          ,
                            trampCall( callProcedure( 'car',
                                begin
                                  if @global_lisp_binding.has_key?('_car') then
                                    trampCall(@_car)
                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:858"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_rest)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:858"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                        )
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:858"] + __e.backtrace ) ; raise __e
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_vector_MIMARKlength'] = true
    @_vector_MIMARKlength = 
    trampCall(
          Proc.new { |_v| 
              begin
                  trampCall(_v).size(
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:861"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_vector_MIMARKcopy'] = true
    @_vector_MIMARKcopy = 
    trampCall(
          Proc.new { |_v| 
              begin
                  trampCall(_v).clone(
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:864"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_vector_MIMARKref'] = true
    @_vector_MIMARKref = 
    trampCall(
          Proc.new { |_v,_index,*__rest__| _fallback = __rest__[0] ;  
              if ( 
                if ( 
                  trampCall( callProcedure( 'not',
                      begin
                        if @global_lisp_binding.has_key?('_not') then
                          trampCall(@_not)
                        else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:823"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        trampCall( callProcedure( 'eq?',
                            begin
                              if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                trampCall(@_eq_QUMARK)
                              else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:695"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                            false                            ,Cell.new(
                              trampCall( callProcedure( '<=',
                                  begin
                                    if @global_lisp_binding.has_key?('__LTMARK_EQMARK') then
                                      trampCall(@__LTMARK_EQMARK)
                                    else raise NameError.new( "Error: undefined variable __LTMARK_EQMARK", "__LTMARK_EQMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:867"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  0                                  ,Cell.new(
                                    begin
                                        trampCall(_index)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:870"] + __e.backtrace ) ; raise __e
                                    end
                                           ))))
                                     ))))
                               )))
                 ) then
                    trampCall( callProcedure( '<',
                        begin
                          if @global_lisp_binding.has_key?('__LTMARK') then
                            trampCall(@__LTMARK)
                          else raise NameError.new( "Error: undefined variable __LTMARK", "__LTMARK" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:867"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_index)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:870"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                              trampCall(_v).size
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:867"] + __e.backtrace ) ; raise __e
                          end
                                 ))))
                else
                  false
                end
               ) then
                  begin
                      trampCall(_v).fetch(
                            begin
                                trampCall(_index)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:870"] + __e.backtrace ) ; raise __e
                            end
                        )
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:868"] + __e.backtrace ) ; raise __e
                  end
              else
                  if ( 
                    trampCall( callProcedure( 'null?',
                        begin
                          if @global_lisp_binding.has_key?('_null_QUMARK') then
                            trampCall(@_null_QUMARK)
                          else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:869"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_fallback)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:871"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                   ) then
                      begin raise RuntimeError, 
                        trampCall( callProcedure( 'sprintf',
                            begin
                              if @global_lisp_binding.has_key?('_sprintf') then
                                trampCall(@_sprintf)
                              else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:729"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                            "Error: vector-ref  index value is overflow: %s
"                            ,Cell.new(
                              begin
                                  trampCall(_index)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:870"] + __e.backtrace ) ; raise __e
                              end
                                     ))))
                      rescue => __e 
                        __e.set_backtrace( ["./lib/init.nnd:824"] + __e.backtrace )
                        raise __e
                      end 
                  else
                      DelayedCallPacket.new( 'car',
                          begin
                            if @global_lisp_binding.has_key?('_car') then
                              trampCall(@_car)
                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:871"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_fallback)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:871"] + __e.backtrace ) ; raise __e
                            end
                                   ))
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_vector_MIMARKequal_QUMARK'] = true
    @_vector_MIMARKequal_QUMARK = 
    trampCall(
          Proc.new { |_x,_y| 
              if ( 
                trampCall( callProcedure( 'not',
                    begin
                      if @global_lisp_binding.has_key?('_not') then
                        trampCall(@_not)
                      else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:823"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      trampCall( callProcedure( 'eq?',
                          begin
                            if @global_lisp_binding.has_key?('_eq_QUMARK') then
                              trampCall(@_eq_QUMARK)
                            else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:695"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                          false                          ,Cell.new(
                            trampCall( callProcedure( 'vector?',
                                begin
                                  if @global_lisp_binding.has_key?('_vector_QUMARK') then
                                    trampCall(@_vector_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _vector_QUMARK", "_vector_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:877"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_x)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:882"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                                   ))))
                             )))
               ) then
                  if ( 
                    trampCall( callProcedure( 'not',
                        begin
                          if @global_lisp_binding.has_key?('_not') then
                            trampCall(@_not)
                          else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:823"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'eq?',
                              begin
                                if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                  trampCall(@_eq_QUMARK)
                                else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:695"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              false                              ,Cell.new(
                                trampCall( callProcedure( 'vector?',
                                    begin
                                      if @global_lisp_binding.has_key?('_vector_QUMARK') then
                                        trampCall(@_vector_QUMARK)
                                      else raise NameError.new( "Error: undefined variable _vector_QUMARK", "_vector_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:877"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_y)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:882"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       ))))
                                 )))
                   ) then
                      if ( 
                        trampCall( callProcedure( 'not',
                            begin
                              if @global_lisp_binding.has_key?('_not') then
                                trampCall(@_not)
                              else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:823"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'eq?',
                                  begin
                                    if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                      trampCall(@_eq_QUMARK)
                                    else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:695"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  false                                  ,Cell.new(
                                    trampCall( callProcedure( '=',
                                        begin
                                          if @global_lisp_binding.has_key?('__EQMARK') then
                                            trampCall(@__EQMARK)
                                          else raise NameError.new( "Error: undefined variable __EQMARK", "__EQMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:880"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'vector-length',
                                              begin
                                                if @global_lisp_binding.has_key?('_vector_MIMARKlength') then
                                                  trampCall(@_vector_MIMARKlength)
                                                else raise NameError.new( "Error: undefined variable _vector_MIMARKlength", "_vector_MIMARKlength" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:878"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_x)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:882"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))                                        ,Cell.new(
                                          trampCall( callProcedure( 'vector-length',
                                              begin
                                                if @global_lisp_binding.has_key?('_vector_MIMARKlength') then
                                                  trampCall(@_vector_MIMARKlength)
                                                else raise NameError.new( "Error: undefined variable _vector_MIMARKlength", "_vector_MIMARKlength" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:878"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_y)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:882"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 ))))
                                           ))))
                                     )))
                       ) then
                          begin
                            ___lambda = lambda { |_n| 
                                begin
                                  ___lambda = lambda { |_loop| 
                                      _loop                                       = 
                                        Proc.new { |_i| 
                                            if ( 
                                              trampCall( callProcedure( '=',
                                                  begin
                                                    if @global_lisp_binding.has_key?('__EQMARK') then
                                                      trampCall(@__EQMARK)
                                                    else raise NameError.new( "Error: undefined variable __EQMARK", "__EQMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:880"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_i)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:883"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,Cell.new(
                                                    begin
                                                        trampCall(_n)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:880"] + __e.backtrace ) ; raise __e
                                                    end
                                                           ))))
                                             ) then
                                              true
                                            else
                                                if ( 
                                                  trampCall( callProcedure( 'not',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_not') then
                                                          trampCall(@_not)
                                                        else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:823"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        trampCall( callProcedure( 'eq?',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                trampCall(@_eq_QUMARK)
                                                              else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:695"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                            false                                                            ,Cell.new(
                                                              trampCall( callProcedure( 'equal?',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_equal_QUMARK') then
                                                                      trampCall(@_equal_QUMARK)
                                                                    else raise NameError.new( "Error: undefined variable _equal_QUMARK", "_equal_QUMARK" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:882"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    trampCall( callProcedure( 'vector-ref',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_vector_MIMARKref') then
                                                                            trampCall(@_vector_MIMARKref)
                                                                          else raise NameError.new( "Error: undefined variable _vector_MIMARKref", "_vector_MIMARKref" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:882"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              trampCall(_x)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:882"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,Cell.new(
                                                                          begin
                                                                              trampCall(_i)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:883"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 ))))                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'vector-ref',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_vector_MIMARKref') then
                                                                            trampCall(@_vector_MIMARKref)
                                                                          else raise NameError.new( "Error: undefined variable _vector_MIMARKref", "_vector_MIMARKref" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:882"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              trampCall(_y)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:882"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,Cell.new(
                                                                          begin
                                                                              trampCall(_i)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:883"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 ))))
                                                                           ))))
                                                                     ))))
                                                               )))
                                                 ) then
                                                    DelayedCallPacket.new( 'loop',
                                                        begin
                                                            trampCall(_loop)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:883"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'succ',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_succ') then
                                                                  trampCall(@_succ)
                                                                else raise NameError.new( "Error: undefined variable _succ", "_succ" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:883"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_i)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:883"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                                 ))
                                                else
                                                  false
                                                end
                                            end
                                        }
                                      DelayedCallPacket.new( 'loop',
                                          begin
                                              trampCall(_loop)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:883"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                          0
                                                   ))
                                  } ; ___lambda.call(
                                  nil
                                             )
                                end
                            } ; ___lambda.call(
                                  trampCall( callProcedure( 'vector-length',
                                      begin
                                        if @global_lisp_binding.has_key?('_vector_MIMARKlength') then
                                          trampCall(@_vector_MIMARKlength)
                                        else raise NameError.new( "Error: undefined variable _vector_MIMARKlength", "_vector_MIMARKlength" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:878"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_x)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:882"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                       )
                          end
                      else
                        false
                      end
                  else
                    false
                  end
              else
                false
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_list_MIMARK_GTMARKvector'] = true
    @_list_MIMARK_GTMARKvector = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'apply',
                  begin
                    if @global_lisp_binding.has_key?('_apply') then
                      trampCall(@_apply)
                    else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:886"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                      if @global_lisp_binding.has_key?('_vector') then
                        trampCall(@_vector)
                      else raise NameError.new( "Error: undefined variable _vector", "_vector" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:886"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_x)
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:886"] + __e.backtrace ) ; raise __e
                    end
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_vector_MIMARKfill_EXMARK'] = true
    @_vector_MIMARKfill_EXMARK = 
    trampCall(
          Proc.new { |_v,_e| 
              begin
                ___lambda = lambda { |_n| 
                    begin
                      ___lambda = lambda { |_loop| 
                          _loop                           = 
                            Proc.new { |_i| 
                                if ( 
                                  trampCall( callProcedure( '=',
                                      begin
                                        if @global_lisp_binding.has_key?('__EQMARK') then
                                          trampCall(@__EQMARK)
                                        else raise NameError.new( "Error: undefined variable __EQMARK", "__EQMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:891"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_i)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:893"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        begin
                                            trampCall(_n)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:891"] + __e.backtrace ) ; raise __e
                                        end
                                               ))))
                                 ) then
                                    begin
                                        trampCall(_v)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:893"] + __e.backtrace ) ; raise __e
                                    end
                                else
                                    begin
                                        trampCall( callProcedure( 'vector-set!',
                                            begin
                                              if @global_lisp_binding.has_key?('_vector_MIMARKset_EXMARK') then
                                                trampCall(@_vector_MIMARKset_EXMARK)
                                              else raise NameError.new( "Error: undefined variable _vector_MIMARKset_EXMARK", "_vector_MIMARKset_EXMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:893"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_v)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:893"] + __e.backtrace ) ; raise __e
                                              end                                            ,Cell.new(
                                              begin
                                                  trampCall(_i)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:893"] + __e.backtrace ) ; raise __e
                                              end                                            ,Cell.new(
                                              begin
                                                  trampCall(_e)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:893"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))))
                                        DelayedCallPacket.new( 'loop',
                                            begin
                                                trampCall(_loop)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:893"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'succ',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_succ') then
                                                      trampCall(@_succ)
                                                    else raise NameError.new( "Error: undefined variable _succ", "_succ" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:893"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_i)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:893"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                                     ))
                                    end
                                end
                            }
                          DelayedCallPacket.new( 'loop',
                              begin
                                  trampCall(_loop)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:893"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              0
                                       ))
                      } ; ___lambda.call(
                      nil
                                 )
                    end
                } ; ___lambda.call(
                      trampCall( callProcedure( 'vector-length',
                          begin
                            if @global_lisp_binding.has_key?('_vector_MIMARKlength') then
                              trampCall(@_vector_MIMARKlength)
                            else raise NameError.new( "Error: undefined variable _vector_MIMARKlength", "_vector_MIMARKlength" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:889"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_v)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:893"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_vector_MIMARK_GTMARKlist'] = true
    @_vector_MIMARK_GTMARKlist = 
    trampCall(
          Proc.new { |_v| 
              begin
                ___lambda = lambda { |_loop| 
                    _loop                     = 
                      Proc.new { |_n,_l| 
                          if ( 
                            trampCall( callProcedure( '=',
                                begin
                                  if @global_lisp_binding.has_key?('__EQMARK') then
                                    trampCall(@__EQMARK)
                                  else raise NameError.new( "Error: undefined variable __EQMARK", "__EQMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:897"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_n)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                -1
                                         ))))
                           ) then
                              begin
                                  trampCall(_l)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                              end
                          else
                              DelayedCallPacket.new( 'loop',
                                  begin
                                      trampCall(_loop)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'pred',
                                        begin
                                          if @global_lisp_binding.has_key?('_pred') then
                                            trampCall(@_pred)
                                          else raise NameError.new( "Error: undefined variable _pred", "_pred" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_n)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))                                  ,Cell.new(
                                    trampCall( callProcedure( 'cons',
                                        begin
                                          if @global_lisp_binding.has_key?('_cons') then
                                            trampCall(@_cons)
                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'vector-ref',
                                              begin
                                                if @global_lisp_binding.has_key?('_vector_MIMARKref') then
                                                  trampCall(@_vector_MIMARKref)
                                                else raise NameError.new( "Error: undefined variable _vector_MIMARKref", "_vector_MIMARKref" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_v)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                end                                              ,Cell.new(
                                                begin
                                                    trampCall(_n)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                end
                                                       ))))                                        ,Cell.new(
                                          begin
                                              trampCall(_l)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                          end
                                                 ))))
                                           )))
                          end
                      }
                    DelayedCallPacket.new( 'loop',
                        begin
                            trampCall(_loop)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'pred',
                              begin
                                if @global_lisp_binding.has_key?('_pred') then
                                  trampCall(@_pred)
                                else raise NameError.new( "Error: undefined variable _pred", "_pred" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'vector-length',
                                    begin
                                      if @global_lisp_binding.has_key?('_vector_MIMARKlength') then
                                        trampCall(@_vector_MIMARKlength)
                                      else raise NameError.new( "Error: undefined variable _vector_MIMARKlength", "_vector_MIMARKlength" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:896"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_v)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))                        ,Cell.new(
                        Cell.new()
                                 )))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_debug_MIMARKprint_MIMARKlength'] = true
    @_debug_MIMARKprint_MIMARKlength = 
    trampCall(
        63
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_debug_MIMARKprint_MIMARKoutput_MIMARKfunc'] = true
    @_debug_MIMARKprint_MIMARKoutput_MIMARKfunc = 
    trampCall(
          Proc.new { |_str| 
              begin
                  trampCall(STDERR).print(
                        begin
                            trampCall(_str)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:908"] + __e.backtrace ) ; raise __e
                        end
                    )
                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:908"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_debug_MIMARKlimit_MIMARKlength'] = true
    @_debug_MIMARKlimit_MIMARKlength = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( '+',
                  begin
                    if @global_lisp_binding.has_key?('__PLMARK') then
                      trampCall(@__PLMARK)
                    else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:913"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    if ( 
                      trampCall( callProcedure( '<',
                          begin
                            if @global_lisp_binding.has_key?('__LTMARK') then
                              trampCall(@__LTMARK)
                            else raise NameError.new( "Error: undefined variable __LTMARK", "__LTMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:911"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                              if @global_lisp_binding.has_key?('_debug_MIMARKprint_MIMARKlength') then
                                trampCall(@_debug_MIMARKprint_MIMARKlength)
                              else raise NameError.new( "Error: undefined variable _debug_MIMARKprint_MIMARKlength", "_debug_MIMARKprint_MIMARKlength" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:911"] + __e.backtrace ) ; raise __e
                            end                          ,Cell.new(
                            begin
                                trampCall(_x).length
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:911"] + __e.backtrace ) ; raise __e
                            end
                                   ))))
                     ) then
                        begin
                          ___lambda = lambda { |_n| 
                              trampCall( callProcedure( 'sprintf',
                                  begin
                                    if @global_lisp_binding.has_key?('_sprintf') then
                                      trampCall(@_sprintf)
                                    else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:913"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( '+',
                                        begin
                                          if @global_lisp_binding.has_key?('__PLMARK') then
                                            trampCall(@__PLMARK)
                                          else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:913"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                        "%"                                        ,Cell.new(
                                          begin
                                              trampCall(_n)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:913"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                        "."                                        ,Cell.new(
                                          begin
                                              trampCall(_n)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:913"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                        "s ..."
                                                 )))))))                                  ,Cell.new(
                                    begin
                                        trampCall(_x)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:914"] + __e.backtrace ) ; raise __e
                                    end
                                           ))))
                          } ; ___lambda.call(
                                begin
                                  if @global_lisp_binding.has_key?('_debug_MIMARKprint_MIMARKlength') then
                                    trampCall(@_debug_MIMARKprint_MIMARKlength).to_s
                                  else raise NameError.new( "Error: undefined variable _debug_MIMARKprint_MIMARKlength", "_debug_MIMARKprint_MIMARKlength" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:912"] + __e.backtrace ) ; raise __e
                                end
                                     )
                        end
                    else
                        begin
                            trampCall(_x)
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:914"] + __e.backtrace ) ; raise __e
                        end
                    end                  ,Cell.new(
                  "
"
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_debug_MIMARKprint'] = true
    @_debug_MIMARKprint = 
    trampCall(
          LispMacro.new { |__form,_sourcefile,_lineno,_sourcesexp| 
              begin
                ___lambda = lambda { |_val| 
                    trampCall( callProcedure( 'cons',
                        begin
                          if @global_lisp_binding.has_key?('_cons') then
                            trampCall(@_cons)
                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                        :"let"                        ,Cell.new(
                          trampCall( callProcedure( 'cons',
                              begin
                                if @global_lisp_binding.has_key?('_cons') then
                                  trampCall(@_cons)
                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'cons',
                                    begin
                                      if @global_lisp_binding.has_key?('_cons') then
                                        trampCall(@_cons)
                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'cons',
                                          begin
                                            if @global_lisp_binding.has_key?('_cons') then
                                              trampCall(@_cons)
                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_val)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:924"] + __e.backtrace ) ; raise __e
                                            end                                          ,Cell.new(
                                          Cell.new(nil)
                                                   ))))                                    ,Cell.new(
                                    
                                             ))))                              ,Cell.new(
                                trampCall( callProcedure( 'cons',
                                    begin
                                      if @global_lisp_binding.has_key?('_cons') then
                                        trampCall(@_cons)
                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'cons',
                                          begin
                                            if @global_lisp_binding.has_key?('_cons') then
                                              trampCall(@_cons)
                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                          :"debug-print-output-func"                                          ,Cell.new(
                                            trampCall( callProcedure( 'cons',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cons') then
                                                    trampCall(@_cons)
                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  trampCall( callProcedure( 'cons',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_cons') then
                                                          trampCall(@_cons)
                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                      :"debug-limit-length"                                                      ,Cell.new(
                                                        trampCall( callProcedure( 'cons',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                trampCall(@_cons)
                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              trampCall( callProcedure( 'cons',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                      trampCall(@_cons)
                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                  :"sprintf"                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'cons',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                            trampCall(@_cons)
                                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                        "#?=\"%s\":%s:%s"                                                                        ,Cell.new(
                                                                          trampCall( callProcedure( 'cons',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                                  trampCall(@_cons)
                                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                                begin
                                                                                    trampCall(_sourcefile)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:921"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,Cell.new(
                                                                                trampCall( callProcedure( 'cons',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                        trampCall(@_cons)
                                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    Cell.new(
                                                                                      begin
                                                                                          trampCall(_lineno)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:921"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,Cell.new(
                                                                                      trampCall( callProcedure( 'cons',
                                                                                          begin
                                                                                            if @global_lisp_binding.has_key?('_cons') then
                                                                                              trampCall(@_cons)
                                                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          Cell.new(
                                                                                            trampCall( callProcedure( 'cons',
                                                                                                begin
                                                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                                                    trampCall(@_cons)
                                                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,
                                                                                                Cell.new(
                                                                                                :"write-to-string"                                                                                                ,Cell.new(
                                                                                                  trampCall( callProcedure( 'cons',
                                                                                                      begin
                                                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                                                          trampCall(@_cons)
                                                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                                                      end                                                                                                    ,
                                                                                                      Cell.new(
                                                                                                        begin
                                                                                                            trampCall(_sourcesexp)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:921"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,Cell.new(
                                                                                                      
                                                                                                               ))))
                                                                                                         ))))                                                                                          ,Cell.new(
                                                                                          
                                                                                                   ))))
                                                                                             ))))
                                                                                       ))))
                                                                                 ))))
                                                                           ))))                                                            ,Cell.new(
                                                            
                                                                     ))))
                                                               ))))                                                ,Cell.new(
                                                
                                                         ))))
                                                   ))))                                    ,Cell.new(
                                      trampCall( callProcedure( 'cons',
                                          begin
                                            if @global_lisp_binding.has_key?('_cons') then
                                              trampCall(@_cons)
                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            trampCall( callProcedure( 'cons',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cons') then
                                                    trampCall(@_cons)
                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                :"set!"                                                ,Cell.new(
                                                  trampCall( callProcedure( 'cons',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_cons') then
                                                          trampCall(@_cons)
                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_val)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:924"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,Cell.new(
                                                        trampCall( callProcedure( 'cons',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                trampCall(@_cons)
                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(__form)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:922"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                            
                                                                     ))))
                                                               ))))
                                                         ))))                                          ,Cell.new(
                                            trampCall( callProcedure( 'cons',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cons') then
                                                    trampCall(@_cons)
                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  trampCall( callProcedure( 'cons',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_cons') then
                                                          trampCall(@_cons)
                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                      :"debug-print-output-func"                                                      ,Cell.new(
                                                        trampCall( callProcedure( 'cons',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                trampCall(@_cons)
                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              trampCall( callProcedure( 'cons',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                      trampCall(@_cons)
                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                  :"debug-limit-length"                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'cons',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                            trampCall(@_cons)
                                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          trampCall( callProcedure( 'cons',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                                  trampCall(@_cons)
                                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                              :"+"                                                                              ,Cell.new(
                                                                                trampCall( callProcedure( 'cons',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                        trampCall(@_cons)
                                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    Cell.new(
                                                                                    "#?-    "                                                                                    ,Cell.new(
                                                                                      trampCall( callProcedure( 'cons',
                                                                                          begin
                                                                                            if @global_lisp_binding.has_key?('_cons') then
                                                                                              trampCall(@_cons)
                                                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          Cell.new(
                                                                                            trampCall( callProcedure( 'cons',
                                                                                                begin
                                                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                                                    trampCall(@_cons)
                                                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,
                                                                                                Cell.new(
                                                                                                :"write-to-string"                                                                                                ,Cell.new(
                                                                                                  trampCall( callProcedure( 'cons',
                                                                                                      begin
                                                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                                                          trampCall(@_cons)
                                                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                                                      end                                                                                                    ,
                                                                                                      Cell.new(
                                                                                                        begin
                                                                                                            trampCall(_val)
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:924"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,Cell.new(
                                                                                                      
                                                                                                               ))))
                                                                                                         ))))                                                                                          ,Cell.new(
                                                                                          
                                                                                                   ))))
                                                                                             ))))
                                                                                       ))))                                                                        ,Cell.new(
                                                                        
                                                                                 ))))
                                                                           ))))                                                            ,Cell.new(
                                                            
                                                                     ))))
                                                               ))))                                                ,Cell.new(
                                                  trampCall( callProcedure( 'cons',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_cons') then
                                                          trampCall(@_cons)
                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_val)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:924"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,Cell.new(
                                                      
                                                               ))))
                                                         ))))
                                                   ))))
                                             ))))
                                       ))))
                                 ))))
                } ; ___lambda.call(
                      trampCall( callProcedure( 'gensym',
                          begin
                            if @global_lisp_binding.has_key?('_gensym') then
                              trampCall(@_gensym)
                            else raise NameError.new( "Error: undefined variable _gensym", "_gensym" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:919"] + __e.backtrace ) ; raise __e
                          end                        ,
                        Cell.new(
                                   )))
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_pretty_MIMARKprint'] = true
    @_pretty_MIMARKprint = 
    trampCall(
          Proc.new { |_s| 
              begin
                ___lambda = lambda { |_do_MIMARKindent,_pp_MIMARKparenl,_pp_MIMARKparenr,_pp_MIMARKatom,_pp_MIMARKlist| 
                    _do_MIMARKindent                     = 
                      Proc.new { |_level| 
                          DelayedCallPacket.new( 'for-each',
                              begin
                                if @global_lisp_binding.has_key?('_for_MIMARKeach') then
                                  trampCall(@_for_MIMARKeach)
                                else raise NameError.new( "Error: undefined variable _for_MIMARKeach", "_for_MIMARKeach" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:934"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                Proc.new { |_x| 
                                    trampCall( callProcedure( 'display',
                                        begin
                                          if @global_lisp_binding.has_key?('_display') then
                                            trampCall(@_display)
                                          else raise NameError.new( "Error: undefined variable _display", "_display" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:940"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                        " "
                                                 )))
                                }                              ,Cell.new(
                                trampCall( callProcedure( 'range',
                                    begin
                                      if @global_lisp_binding.has_key?('_range') then
                                        trampCall(@_range)
                                      else raise NameError.new( "Error: undefined variable _range", "_range" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:934"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_level)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:952"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                      }
                    _pp_MIMARKparenl                     = 
                      Proc.new { || 
                          DelayedCallPacket.new( 'display',
                              begin
                                if @global_lisp_binding.has_key?('_display') then
                                  trampCall(@_display)
                                else raise NameError.new( "Error: undefined variable _display", "_display" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:940"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              "("
                                       ))
                      }
                    _pp_MIMARKparenr                     = 
                      Proc.new { || 
                          DelayedCallPacket.new( 'display',
                              begin
                                if @global_lisp_binding.has_key?('_display') then
                                  trampCall(@_display)
                                else raise NameError.new( "Error: undefined variable _display", "_display" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:940"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              ")"
                                       ))
                      }
                    _pp_MIMARKatom                     = 
                      Proc.new { |_e,_prefix| 
                          if ( 
                            begin
                                trampCall(_prefix)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:953"] + __e.backtrace ) ; raise __e
                            end
                           ) then
                              begin
                                  trampCall( callProcedure( 'display',
                                      begin
                                        if @global_lisp_binding.has_key?('_display') then
                                          trampCall(@_display)
                                        else raise NameError.new( "Error: undefined variable _display", "_display" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:940"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                      " "
                                               )))
                              end
                          end
                          DelayedCallPacket.new( 'write',
                              begin
                                if @global_lisp_binding.has_key?('_write') then
                                  trampCall(@_write)
                                else raise NameError.new( "Error: undefined variable _write", "_write" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:957"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_e)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:953"] + __e.backtrace ) ; raise __e
                                end
                                       ))
                      }
                    _pp_MIMARKlist                     = 
                      Proc.new { |_s,_level,_prefix| 
                          if ( 
                            trampCall( callProcedure( 'not',
                                begin
                                  if @global_lisp_binding.has_key?('_not') then
                                    trampCall(@_not)
                                  else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:823"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  trampCall( callProcedure( 'eq?',
                                      begin
                                        if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                          trampCall(@_eq_QUMARK)
                                        else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:695"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                      false                                      ,Cell.new(
                                        begin
                                            trampCall(_prefix)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:953"] + __e.backtrace ) ; raise __e
                                        end
                                               ))))
                                         )))
                           ) then
                              trampCall( callProcedure( 'do-indent',
                                  begin
                                      trampCall(_do_MIMARKindent)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:943"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_level)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:952"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                          else
                            false
                          end
                          trampCall( callProcedure( 'pp-parenl',
                              begin
                                  trampCall(_pp_MIMARKparenl)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:944"] + __e.backtrace ) ; raise __e
                              end                            ,
                            Cell.new(
                                       )))
                          begin
                            ___lambda = lambda { |_loop| 
                                _loop                                 = 
                                  Proc.new { |_s,_prefix| 
                                      if ( 
                                        trampCall( callProcedure( 'null?',
                                            begin
                                              if @global_lisp_binding.has_key?('_null_QUMARK') then
                                                trampCall(@_null_QUMARK)
                                              else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:947"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_s)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:957"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                       ) then
                                          DelayedCallPacket.new( 'pp-parenr',
                                              begin
                                                  trampCall(_pp_MIMARKparenr)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:948"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                            Cell.new(
                                                       ))
                                      else
                                          begin
                                            ___lambda = lambda { |_e| 
                                                if ( 
                                                  trampCall( callProcedure( 'list?',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                          trampCall(@_list_QUMARK)
                                                        else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:955"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_e)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:953"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                                 ) then
                                                    begin
                                                        if ( 
                                                          trampCall( callProcedure( 'not',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_not') then
                                                                  trampCall(@_not)
                                                                else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:823"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                trampCall( callProcedure( 'eq?',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                        trampCall(@_eq_QUMARK)
                                                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:695"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                    false                                                                    ,Cell.new(
                                                                      begin
                                                                          trampCall(_prefix)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:953"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                             ))))
                                                                       )))
                                                         ) then
                                                            trampCall( callProcedure( 'newline',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_newline') then
                                                                    trampCall(@_newline)
                                                                  else raise NameError.new( "Error: undefined variable _newline", "_newline" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:958"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                              Cell.new(
                                                                         )))
                                                        else
                                                          false
                                                        end
                                                        trampCall( callProcedure( 'pp-list',
                                                            begin
                                                                trampCall(_pp_MIMARKlist)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:956"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_e)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:953"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                              trampCall( callProcedure( '+',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('__PLMARK') then
                                                                      trampCall(@__PLMARK)
                                                                    else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:952"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_level)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:952"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,Cell.new(
                                                                  1
                                                                           ))))                                                            ,Cell.new(
                                                              begin
                                                                  trampCall(_prefix)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:953"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))))
                                                    end
                                                else
                                                    trampCall( callProcedure( 'pp-atom',
                                                        begin
                                                            trampCall(_pp_MIMARKatom)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:953"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_e)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:953"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_prefix)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:953"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))
                                                end
                                                DelayedCallPacket.new( 'loop',
                                                    begin
                                                        trampCall(_loop)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:954"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'cdr',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cdr') then
                                                              trampCall(@_cdr)
                                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:954"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_s)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:957"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))                                                    ,Cell.new(
                                                    true
                                                             )))
                                            } ; ___lambda.call(
                                                  trampCall( callProcedure( 'car',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_car') then
                                                          trampCall(@_car)
                                                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:949"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_s)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:957"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                                       )
                                          end
                                      end
                                  }
                                DelayedCallPacket.new( 'loop',
                                    begin
                                        trampCall(_loop)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:954"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_s)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:957"] + __e.backtrace ) ; raise __e
                                      end                                    ,Cell.new(
                                    false
                                             )))
                            } ; ___lambda.call(
                            nil
                                       )
                          end
                      }
                    if ( 
                      trampCall( callProcedure( 'list?',
                          begin
                            if @global_lisp_binding.has_key?('_list_QUMARK') then
                              trampCall(@_list_QUMARK)
                            else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:955"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_s)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:957"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                     ) then
                        trampCall( callProcedure( 'pp-list',
                            begin
                                trampCall(_pp_MIMARKlist)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:956"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_s)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:957"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                            0                            ,Cell.new(
                            false
                                     )))))
                    else
                        trampCall( callProcedure( 'write',
                            begin
                              if @global_lisp_binding.has_key?('_write') then
                                trampCall(@_write)
                              else raise NameError.new( "Error: undefined variable _write", "_write" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:957"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_s)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:957"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                    end
                    DelayedCallPacket.new( 'newline',
                        begin
                          if @global_lisp_binding.has_key?('_newline') then
                            trampCall(@_newline)
                          else raise NameError.new( "Error: undefined variable _newline", "_newline" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:958"] + __e.backtrace ) ; raise __e
                        end                      ,
                      Cell.new(
                                 ))
                } ; ___lambda.call(
                nil,nil,nil,nil,nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_global_MIMARKdefined_QUMARK'] = true
    @_global_MIMARKdefined_QUMARK = 
    trampCall(
          Proc.new { |_sym| 
              DelayedCallPacket.new( 'find',
                  begin
                    if @global_lisp_binding.has_key?('_find') then
                      trampCall(@_find)
                    else raise NameError.new( "Error: undefined variable _find", "_find" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:966"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    Proc.new { |_x| 
                        trampCall( callProcedure( 'eq?',
                            begin
                              if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                trampCall(@_eq_QUMARK)
                              else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:968"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_sym)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:968"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                              begin
                                  trampCall(_x)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:968"] + __e.backtrace ) ; raise __e
                              end
                                     ))))
                    }                  ,Cell.new(
                    trampCall( callProcedure( 'global-variables',
                        begin
                          if @global_lisp_binding.has_key?('_global_MIMARKvariables') then
                            trampCall(@_global_MIMARKvariables)
                          else raise NameError.new( "Error: undefined variable _global_MIMARKvariables", "_global_MIMARKvariables" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:969"] + __e.backtrace ) ; raise __e
                        end                      ,
                      Cell.new(
                                 )))
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_compiled_MIMARKcode_MIMARKstring'] = true
    @_compiled_MIMARKcode_MIMARKstring = 
    trampCall(
          Proc.new { |_compiled_MIMARKcode,_filename| 
              begin
                ___lambda = lambda { |_compiled_MIMARKbody_MIMARKstring| 
                    _compiled_MIMARKbody_MIMARKstring                     = 
                      Proc.new { |_string_MIMARKlist,_filename| 
                          DelayedCallPacket.new( '+',
                              begin
                                if @global_lisp_binding.has_key?('__PLMARK') then
                                  trampCall(@__PLMARK)
                                else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:977"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'string-join',
                                    begin
                                      if @global_lisp_binding.has_key?('_string_MIMARKjoin') then
                                        trampCall(@_string_MIMARKjoin)
                                      else raise NameError.new( "Error: undefined variable _string_MIMARKjoin", "_string_MIMARKjoin" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:981"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_string_MIMARKlist)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:979"] + __e.backtrace ) ; raise __e
                                      end                                    ,Cell.new(
                                    "
#--------------------
"
                                             ))))                              ,Cell.new(
                                trampCall( callProcedure( 'string-join',
                                    begin
                                      if @global_lisp_binding.has_key?('_string_MIMARKjoin') then
                                        trampCall(@_string_MIMARKjoin)
                                      else raise NameError.new( "Error: undefined variable _string_MIMARKjoin", "_string_MIMARKjoin" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:981"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                    Cell.new("

",Cell.new("# -------------------------------------------------------",Cell.new("# [EOF]",Cell.new("# -------------------------------------------------------"))))                                    ,Cell.new(
                                    "
"
                                             ))))
                                       )))
                      }
                    begin
                      ___lambda = lambda { |_str_MIMARKlist,_script_MIMARKflag| 
                          DelayedCallPacket.new( 'values',
                              begin
                                if @global_lisp_binding.has_key?('_values') then
                                  trampCall(@_values)
                                else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:991"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_script_MIMARKflag)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:992"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                                trampCall( callProcedure( 'compiled-body-string',
                                    begin
                                        trampCall(_compiled_MIMARKbody_MIMARKstring)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:993"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_str_MIMARKlist)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:993"] + __e.backtrace ) ; raise __e
                                      end                                    ,Cell.new(
                                      begin
                                          trampCall(_filename)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:993"] + __e.backtrace ) ; raise __e
                                      end
                                             ))))
                                       )))
                      } ; ___lambda.call(
                            trampCall( callProcedure( 'assv-ref',
                                begin
                                  if @global_lisp_binding.has_key?('_assv_MIMARKref') then
                                    trampCall(@_assv_MIMARKref)
                                  else raise NameError.new( "Error: undefined variable _assv_MIMARKref", "_assv_MIMARKref" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:988"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_filename)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:993"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  begin
                                      trampCall(_compiled_MIMARKcode)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:988"] + __e.backtrace ) ; raise __e
                                  end
                                         ))))                          ,
                            if ( 
                              trampCall( callProcedure( 'not',
                                  begin
                                    if @global_lisp_binding.has_key?('_not') then
                                      trampCall(@_not)
                                    else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:823"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'eq?',
                                        begin
                                          if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                            trampCall(@_eq_QUMARK)
                                          else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:968"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                        false                                        ,Cell.new(
                                          trampCall( callProcedure( 'global-defined?',
                                              begin
                                                if @global_lisp_binding.has_key?('_global_MIMARKdefined_QUMARK') then
                                                  trampCall(@_global_MIMARKdefined_QUMARK)
                                                else raise NameError.new( "Error: undefined variable _global_MIMARKdefined_QUMARK", "_global_MIMARKdefined_QUMARK" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:989"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                              :"main"
                                                       )))
                                                 ))))
                                           )))
                             ) then
                                DelayedCallPacket.new( 'procedure?',
                                    begin
                                      if @global_lisp_binding.has_key?('_procedure_QUMARK') then
                                        trampCall(@_procedure_QUMARK)
                                      else raise NameError.new( "Error: undefined variable _procedure_QUMARK", "_procedure_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:990"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                        if @global_lisp_binding.has_key?('_main') then
                                          trampCall(@_main)
                                        else raise NameError.new( "Error: undefined variable _main", "_main" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:990"] + __e.backtrace ) ; raise __e
                                      end
                                             ))
                            else
                              false
                            end
                                 )
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_print_MIMARKcompiled_MIMARKcode'] = true
    @_print_MIMARKcompiled_MIMARKcode = 
    trampCall(
          Proc.new { |_src,*__rest__| _rest = __rest__[0] ;  
              begin
                ___lambda = lambda { |_print_MIMARKto_MIMARKfile| 
                    _print_MIMARKto_MIMARKfile                     = 
                      Proc.new { |_f| 
                          DelayedCallPacket.new( 'call-with-values',
                              begin
                                if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                  trampCall(@_call_MIMARKwith_MIMARKvalues)
                                else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:677"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                Proc.new { || 
                                    trampCall( callProcedure( 'compiled-code-string',
                                        begin
                                          if @global_lisp_binding.has_key?('_compiled_MIMARKcode_MIMARKstring') then
                                            trampCall(@_compiled_MIMARKcode_MIMARKstring)
                                          else raise NameError.new( "Error: undefined variable _compiled_MIMARKcode_MIMARKstring", "_compiled_MIMARKcode_MIMARKstring" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:999"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'get-compiled-code',
                                              begin
                                                if @global_lisp_binding.has_key?('_get_MIMARKcompiled_MIMARKcode') then
                                                  trampCall(@_get_MIMARKcompiled_MIMARKcode)
                                                else raise NameError.new( "Error: undefined variable _get_MIMARKcompiled_MIMARKcode", "_get_MIMARKcompiled_MIMARKcode" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:999"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                            Cell.new(
                                                       )))                                        ,Cell.new(
                                          begin
                                              trampCall(_src)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1035"] + __e.backtrace ) ; raise __e
                                          end
                                                 ))))
                                }                              ,Cell.new(
                                Proc.new { |_script_MIMARKflag,_str| 
                                    if ( 
                                      begin
                                          trampCall(_script_MIMARKflag)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1000"] + __e.backtrace ) ; raise __e
                                      end
                                     ) then
                                        begin
                                            begin
                                                trampCall(_f).puts(
                                                      trampCall( callProcedure( 'string-join',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_string_MIMARKjoin') then
                                                              trampCall(@_string_MIMARKjoin)
                                                            else raise NameError.new( "Error: undefined variable _string_MIMARKjoin", "_string_MIMARKjoin" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1021"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            trampCall( callProcedure( 'cons',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                    trampCall(@_cons)
                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                "#!/usr/local/bin/ruby"                                                                ,Cell.new(
                                                                  trampCall( callProcedure( 'cons',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                          trampCall(@_cons)
                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                      "# -*- encoding: utf-8 -*-"                                                                      ,Cell.new(
                                                                        trampCall( callProcedure( 'cons',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                                trampCall(@_cons)
                                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                            "#"                                                                            ,Cell.new(
                                                                              trampCall( callProcedure( 'cons',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                                      trampCall(@_cons)
                                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                  "#    This file is nendo's compiled script file. "                                                                                  ,Cell.new(
                                                                                    trampCall( callProcedure( 'cons',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                                            trampCall(@_cons)
                                                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        Cell.new(
                                                                                        "#    generated  \"nendo -c src\" command. "                                                                                        ,Cell.new(
                                                                                          trampCall( callProcedure( 'cons',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                                                  trampCall(@_cons)
                                                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              Cell.new(
                                                                                              "#"                                                                                              ,Cell.new(
                                                                                                trampCall( callProcedure( 'cons',
                                                                                                    begin
                                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                                        trampCall(@_cons)
                                                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                    Cell.new(
                                                                                                    ""                                                                                                    ,Cell.new(
                                                                                                      trampCall( callProcedure( 'cons',
                                                                                                          begin
                                                                                                            if @global_lisp_binding.has_key?('_cons') then
                                                                                                              trampCall(@_cons)
                                                                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                          Cell.new(
                                                                                                          "require 'rubygems'"                                                                                                          ,Cell.new(
                                                                                                            trampCall( callProcedure( 'cons',
                                                                                                                begin
                                                                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                                                                    trampCall(@_cons)
                                                                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                                                                end                                                                                                              ,
                                                                                                                Cell.new(
                                                                                                                "require 'nendo'"                                                                                                                ,Cell.new(
                                                                                                                  trampCall( callProcedure( 'cons',
                                                                                                                      begin
                                                                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                                                                          trampCall(@_cons)
                                                                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                                                                      end                                                                                                                    ,
                                                                                                                      Cell.new(
                                                                                                                      ""                                                                                                                      ,Cell.new(
                                                                                                                        trampCall( callProcedure( 'cons',
                                                                                                                            begin
                                                                                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                                                                                trampCall(@_cons)
                                                                                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                                                                            end                                                                                                                          ,
                                                                                                                            Cell.new(
                                                                                                                            "core = Nendo::Core.new()"                                                                                                                            ,Cell.new(
                                                                                                                              trampCall( callProcedure( 'cons',
                                                                                                                                  begin
                                                                                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                                                                                      trampCall(@_cons)
                                                                                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                                                                                  end                                                                                                                                ,
                                                                                                                                  Cell.new(
                                                                                                                                  "core.loadInitFile()"                                                                                                                                  ,Cell.new(
                                                                                                                                    trampCall( callProcedure( 'cons',
                                                                                                                                        begin
                                                                                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                                                                                            trampCall(@_cons)
                                                                                                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                                                                                        end                                                                                                                                      ,
                                                                                                                                        Cell.new(
                                                                                                                                        "core.setArgv( ARGV )"                                                                                                                                        ,Cell.new(
                                                                                                                                          trampCall( callProcedure( 'cons',
                                                                                                                                              begin
                                                                                                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                                                                                                  trampCall(@_cons)
                                                                                                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                                                                                              end                                                                                                                                            ,
                                                                                                                                              Cell.new(
                                                                                                                                              "core.load_compiled_code_from_string( "                                                                                                                                              ,Cell.new(
                                                                                                                                                trampCall( callProcedure( 'cons',
                                                                                                                                                    begin
                                                                                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                                                                                        trampCall(@_cons)
                                                                                                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:899"] + __e.backtrace ) ; raise __e
                                                                                                                                                    end                                                                                                                                                  ,
                                                                                                                                                    Cell.new(
                                                                                                                                                      trampCall( callProcedure( 'write-to-string',
                                                                                                                                                          begin
                                                                                                                                                            if @global_lisp_binding.has_key?('_write_MIMARKto_MIMARKstring') then
                                                                                                                                                              trampCall(@_write_MIMARKto_MIMARKstring)
                                                                                                                                                            else raise NameError.new( "Error: undefined variable _write_MIMARKto_MIMARKstring", "_write_MIMARKto_MIMARKstring" ) end
                                                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1016"] + __e.backtrace ) ; raise __e
                                                                                                                                                          end                                                                                                                                                        ,
                                                                                                                                                          Cell.new(
                                                                                                                                                            begin
                                                                                                                                                                trampCall(_str)
                                                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1029"] + __e.backtrace ) ; raise __e
                                                                                                                                                            end
                                                                                                                                                                   )))                                                                                                                                                    ,Cell.new(
                                                                                                                                                    Cell.new(" ) ",Cell.new("core.replStr( \"(if (and (global-defined? 'main) (procedure? main)) (main *argv*) #f) \" )",Cell.new("")))
                                                                                                                                                             ))))
                                                                                                                                                       ))))
                                                                                                                                                 ))))
                                                                                                                                           ))))
                                                                                                                                     ))))
                                                                                                                               ))))
                                                                                                                         ))))
                                                                                                                   ))))
                                                                                                             ))))
                                                                                                       ))))
                                                                                                 ))))
                                                                                           ))))
                                                                                     ))))
                                                                               ))))
                                                                         ))))                                                          ,Cell.new(
                                                          "
"
                                                                   ))))
                                                  )
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1021"] + __e.backtrace ) ; raise __e
                                            end
                                        end
                                    else
                                        if ( 
                                        true
                                         ) then
                                            begin
                                                begin
                                                    trampCall(_f).puts(
                                                          trampCall( callProcedure( '+',
                                                              begin
                                                                if @global_lisp_binding.has_key?('__PLMARK') then
                                                                  trampCall(@__PLMARK)
                                                                else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1021"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                trampCall( callProcedure( 'string-join',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_string_MIMARKjoin') then
                                                                        trampCall(@_string_MIMARKjoin)
                                                                      else raise NameError.new( "Error: undefined variable _string_MIMARKjoin", "_string_MIMARKjoin" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1021"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                    Cell.new("#",Cell.new("#    This file is nendo's compiled library file. ",Cell.new("#    generated  \"nendo -c src\" command. ",Cell.new("# "))))                                                                    ,Cell.new(
                                                                    "
"
                                                                             ))))                                                              ,Cell.new(
                                                              "
"                                                              ,Cell.new(
                                                                begin
                                                                    trampCall(_str)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1029"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))))
                                                      )
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1021"] + __e.backtrace ) ; raise __e
                                                end
                                            end
                                        else
                                          Nil.new
                                        end
                                    end
                                }
                                       )))
                      }
                    if ( 
                      trampCall( callProcedure( 'not',
                          begin
                            if @global_lisp_binding.has_key?('_not') then
                              trampCall(@_not)
                            else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1031"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(File).exist?(
                                      begin
                                          trampCall(_src)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1035"] + __e.backtrace ) ; raise __e
                                      end
                                  )
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1031"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                     ) then
                        begin
                            begin raise RuntimeError, 
                              trampCall( callProcedure( 'sprintf',
                                  begin
                                    if @global_lisp_binding.has_key?('_sprintf') then
                                      trampCall(@_sprintf)
                                    else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:921"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  "Error: file [%s] not found."                                  ,Cell.new(
                                    begin
                                        trampCall(_src)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1035"] + __e.backtrace ) ; raise __e
                                    end
                                           ))))
                            rescue => __e 
                              __e.set_backtrace( ["./lib/init.nnd:824"] + __e.backtrace )
                              raise __e
                            end 
                            trampCall( callProcedure( 'exit',
                                begin
                                  if @global_lisp_binding.has_key?('_exit') then
                                    trampCall(@_exit)
                                  else raise NameError.new( "Error: undefined variable _exit", "_exit" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1033"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                1
                                         )))
                        end
                    end
                    trampCall( callProcedure( 'clean-compiled-code',
                        begin
                          if @global_lisp_binding.has_key?('_clean_MIMARKcompiled_MIMARKcode') then
                            trampCall(@_clean_MIMARKcompiled_MIMARKcode)
                          else raise NameError.new( "Error: undefined variable _clean_MIMARKcompiled_MIMARKcode", "_clean_MIMARKcompiled_MIMARKcode" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1034"] + __e.backtrace ) ; raise __e
                        end                      ,
                      Cell.new(
                                 )))
                    trampCall( callProcedure( 'load',
                        begin
                          if @global_lisp_binding.has_key?('_load') then
                            trampCall(@_load)
                          else raise NameError.new( "Error: undefined variable _load", "_load" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1035"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_src)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1035"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                    if ( 
                      trampCall( callProcedure( 'null?',
                          begin
                            if @global_lisp_binding.has_key?('_null_QUMARK') then
                              trampCall(@_null_QUMARK)
                            else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1036"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_rest)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1038"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                     ) then
                        DelayedCallPacket.new( 'print-to-file',
                            begin
                                trampCall(_print_MIMARKto_MIMARKfile)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1040"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(STDOUT)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1037"] + __e.backtrace ) ; raise __e
                              end
                                     ))
                    else
                        DelayedCallPacket.new( 'with-open',
                            begin
                              if @global_lisp_binding.has_key?('_with_MIMARKopen') then
                                trampCall(@_with_MIMARKopen)
                              else raise NameError.new( "Error: undefined variable _with_MIMARKopen", "_with_MIMARKopen" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1038"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'car',
                                  begin
                                    if @global_lisp_binding.has_key?('_car') then
                                      trampCall(@_car)
                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1038"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_rest)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1038"] + __e.backtrace ) ; raise __e
                                    end
                                           )))                            ,Cell.new(
                              Proc.new { |_f| 
                                  trampCall( callProcedure( 'print-to-file',
                                      begin
                                          trampCall(_print_MIMARKto_MIMARKfile)
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1040"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_f)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1040"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                              }                            ,Cell.new(
                            "w"
                                     ))))
                    end
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['__PAMARKcompile_MIMARKphase'] = true
    @__PAMARKcompile_MIMARKphase = 
    trampCall(
          Proc.new { |_sexp| 
              if ( 
                trampCall( callProcedure( 'list?',
                    begin
                      if @global_lisp_binding.has_key?('_list_QUMARK') then
                        trampCall(@_list_QUMARK)
                      else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1055"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_sexp)
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1062"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  begin
                      trampCall( callProcedure( 'for-each',
                          begin
                            if @global_lisp_binding.has_key?('_for_MIMARKeach') then
                              trampCall(@_for_MIMARKeach)
                            else raise NameError.new( "Error: undefined variable _for_MIMARKeach", "_for_MIMARKeach" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1056"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            Proc.new { |_func| 
                                begin
                                  @global_lisp_binding['_sexp'] = true
                                  _sexp = 
                                  trampCall(
                                        trampCall( callProcedure( 'func',
                                            begin
                                                trampCall(_func)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1058"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_sexp)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1062"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                  )
                                end
                            }                          ,Cell.new(
                            begin
                              if @global_lisp_binding.has_key?('__PAMARKcompile_MIMARKphase_MIMARKfunctions') then
                                trampCall(@__PAMARKcompile_MIMARKphase_MIMARKfunctions)
                              else raise NameError.new( "Error: undefined variable __PAMARKcompile_MIMARKphase_MIMARKfunctions", "__PAMARKcompile_MIMARKphase_MIMARKfunctions" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1059"] + __e.backtrace ) ; raise __e
                            end
                                   ))))
                      begin
                          trampCall(_sexp)
                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1062"] + __e.backtrace ) ; raise __e
                      end
                  end
              else
                  if ( 
                  true
                   ) then
                      begin
                          begin
                              trampCall(_sexp)
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1062"] + __e.backtrace ) ; raise __e
                          end
                      end
                  else
                      Cell.new()
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_setup_MIMARKtailcall_MIMARKmark'] = true
    @_setup_MIMARKtailcall_MIMARKmark = 
    trampCall(
          Proc.new { |_sexp| 
              begin
                ___lambda = lambda { |_reserved_QUMARK,_setup_MIMARKlet_MIMARKargs,_setup_MIMARKproc,_setup_MIMARKproc_MIMARKbody| 
                    _reserved_QUMARK                     = 
                      Proc.new { |_sym| 
                          DelayedCallPacket.new( 'memq',
                              begin
                                if @global_lisp_binding.has_key?('_memq') then
                                  trampCall(@_memq)
                                else raise NameError.new( "Error: undefined variable _memq", "_memq" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1070"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_sym)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1070"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                              Cell.new(:"quote",Cell.new(:"macro",Cell.new(:"begin",Cell.new(:"lambda",Cell.new(:"if",Cell.new(:"let",Cell.new(:"letrec",Cell.new(:"define"))))))))
                                       )))
                      }
                    _setup_MIMARKlet_MIMARKargs                     = 
                      Proc.new { |_args| 
                          DelayedCallPacket.new( 'map',
                              begin
                                if @global_lisp_binding.has_key?('_map') then
                                  trampCall(@_map)
                                else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1073"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                Proc.new { |_arg| 
                                    begin
                                      ___lambda = lambda { |_name,_body| 
                                          trampCall( callProcedure( 'list',
                                              begin
                                                if @global_lisp_binding.has_key?('_list') then
                                                  trampCall(@_list)
                                                else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1077"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_name)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1077"] + __e.backtrace ) ; raise __e
                                                end                                              ,Cell.new(
                                                if ( 
                                                  trampCall( callProcedure( 'list?',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                          trampCall(@_list_QUMARK)
                                                        else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1158"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_body)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                                 ) then
                                                    if ( 
                                                      trampCall( callProcedure( 'reserved?',
                                                          begin
                                                              trampCall(_reserved_QUMARK)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1160"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            trampCall( callProcedure( 'car',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_car') then
                                                                    trampCall(@_car)
                                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1164"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      trampCall(_body)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         )))
                                                                   )))
                                                     ) then
                                                        trampCall( callProcedure( 'setup-tailcall-mark',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_setup_MIMARKtailcall_MIMARKmark') then
                                                                trampCall(@_setup_MIMARKtailcall_MIMARKmark)
                                                              else raise NameError.new( "Error: undefined variable _setup_MIMARKtailcall_MIMARKmark", "_setup_MIMARKtailcall_MIMARKmark" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1161"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_body)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))
                                                    else
                                                        begin
                                                            trampCall(_body)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                        end
                                                    end
                                                else
                                                    begin
                                                        trampCall(_body)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1082"] + __e.backtrace ) ; raise __e
                                                    end
                                                end
                                                       ))))
                                      } ; ___lambda.call(
                                            trampCall( callProcedure( 'first',
                                                begin
                                                  if @global_lisp_binding.has_key?('_first') then
                                                    trampCall(@_first)
                                                  else raise NameError.new( "Error: undefined variable _first", "_first" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1075"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_arg)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1076"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))                                          ,
                                            trampCall( callProcedure( 'second',
                                                begin
                                                  if @global_lisp_binding.has_key?('_second') then
                                                    trampCall(@_second)
                                                  else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1157"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_arg)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1076"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                 )
                                    end
                                }                              ,Cell.new(
                                begin
                                    trampCall(_args)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1083"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                      }
                    _setup_MIMARKproc                     = 
                      Proc.new { |_sexp| 
                          if ( 
                            trampCall( callProcedure( 'null?',
                                begin
                                  if @global_lisp_binding.has_key?('_null_QUMARK') then
                                    trampCall(@_null_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1159"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_sexp)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              begin
                                  begin
                                      trampCall(_sexp)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                  end
                              end
                          else
                              if ( 
                                if ( 
                                  trampCall( callProcedure( 'not',
                                      begin
                                        if @global_lisp_binding.has_key?('_not') then
                                          trampCall(@_not)
                                        else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1159"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'eq?',
                                            begin
                                              if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                trampCall(@_eq_QUMARK)
                                              else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:968"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                            false                                            ,Cell.new(
                                              trampCall( callProcedure( 'list?',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                      trampCall(@_list_QUMARK)
                                                    else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1158"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_sexp)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                                     ))))
                                               )))
                                 ) then
                                    trampCall( callProcedure( '<',
                                        begin
                                          if @global_lisp_binding.has_key?('__LTMARK') then
                                            trampCall(@__LTMARK)
                                          else raise NameError.new( "Error: undefined variable __LTMARK", "__LTMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1090"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                        0                                        ,Cell.new(
                                          trampCall( callProcedure( 'length',
                                              begin
                                                if @global_lisp_binding.has_key?('_length') then
                                                  trampCall(@_length)
                                                else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1136"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_sexp)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 ))))
                                else
                                  false
                                end
                               ) then
                                  begin
                                      if ( 
                                        trampCall( callProcedure( 'reserved?',
                                            begin
                                                trampCall(_reserved_QUMARK)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1160"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'car',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_car') then
                                                      trampCall(@_car)
                                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1164"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_sexp)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                                     )))
                                       ) then
                                          DelayedCallPacket.new( 'setup-tailcall-mark',
                                              begin
                                                if @global_lisp_binding.has_key?('_setup_MIMARKtailcall_MIMARKmark') then
                                                  trampCall(@_setup_MIMARKtailcall_MIMARKmark)
                                                else raise NameError.new( "Error: undefined variable _setup_MIMARKtailcall_MIMARKmark", "_setup_MIMARKtailcall_MIMARKmark" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1161"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_sexp)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                end
                                                       ))
                                      else
                                          if ( 
                                            trampCall( callProcedure( 'pair?',
                                                begin
                                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                    trampCall(@_pair_QUMARK)
                                                  else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1118"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  trampCall( callProcedure( 'car',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_car') then
                                                          trampCall(@_car)
                                                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1164"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_sexp)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                                         )))
                                           ) then
                                              begin
                                                  trampCall(_sexp)
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                              end
                                          else
                                              DelayedCallPacket.new( 'cons',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cons') then
                                                      trampCall(@_cons)
                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                  :"%tailcall"                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            trampCall(@_cons)
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_sexp)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                        
                                                                 ))))
                                                           )))
                                          end
                                      end
                                  end
                              else
                                  if ( 
                                  true
                                   ) then
                                      begin
                                          begin
                                              trampCall(_sexp)
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                          end
                                      end
                                  else
                                      Cell.new()
                                  end
                              end
                          end
                      }
                    _setup_MIMARKproc_MIMARKbody                     = 
                      Proc.new { |_sexp| 
                          if ( 
                            begin
                              ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20200| 
                                  if ( 
                                    begin
                                        trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20200)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                   ) then
                                      begin
                                          trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20200)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  else
                                      begin
                                        ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20201| 
                                            if ( 
                                              begin
                                                  trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20201)
                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                              end
                                             ) then
                                                begin
                                                    trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20201)
                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                end
                                            else
                                              false
                                            end
                                        } ; ___lambda.call(
                                              trampCall( callProcedure( 'null?',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                                                      trampCall(@_null_QUMARK)
                                                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1159"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_sexp)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                                   )
                                      end
                                  end
                              } ; ___lambda.call(
                                    trampCall( callProcedure( 'not',
                                        begin
                                          if @global_lisp_binding.has_key?('_not') then
                                            trampCall(@_not)
                                          else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1159"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'list?',
                                              begin
                                                if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                  trampCall(@_list_QUMARK)
                                                else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1158"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_sexp)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 )))
                                         )
                            end
                           ) then
                              begin
                                  trampCall(_sexp)
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                              end
                          else
                              begin
                                ___lambda = lambda { |_r| 
                                    begin
                                      ___lambda = lambda { |_last| 
                                          begin
                                            ___lambda = lambda { |_other| 
                                                if ( 
                                                  trampCall( callProcedure( 'not',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_not') then
                                                          trampCall(@_not)
                                                        else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1159"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        trampCall( callProcedure( 'pair?',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                                trampCall(@_pair_QUMARK)
                                                              else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1118"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_last)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1114"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))
                                                               )))
                                                 ) then
                                                    begin
                                                        trampCall(_sexp)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                    end
                                                else
                                                    DelayedCallPacket.new( 'reverse',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_reverse') then
                                                            trampCall(@_reverse)
                                                          else raise NameError.new( "Error: undefined variable _reverse", "_reverse" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1108"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'cons',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                  trampCall(@_cons)
                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                if ( 
                                                                  trampCall( callProcedure( 'reserved?',
                                                                      begin
                                                                          trampCall(_reserved_QUMARK)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1160"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        trampCall( callProcedure( 'car',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_car') then
                                                                                trampCall(@_car)
                                                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1164"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  trampCall(_last)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1114"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                                     )))
                                                                               )))
                                                                 ) then
                                                                    trampCall( callProcedure( 'setup-tailcall-mark',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_setup_MIMARKtailcall_MIMARKmark') then
                                                                            trampCall(@_setup_MIMARKtailcall_MIMARKmark)
                                                                          else raise NameError.new( "Error: undefined variable _setup_MIMARKtailcall_MIMARKmark", "_setup_MIMARKtailcall_MIMARKmark" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1161"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              trampCall(_last)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1114"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 )))
                                                                else
                                                                    trampCall( callProcedure( 'cons',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                            trampCall(@_cons)
                                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                        :"%tailcall"                                                                        ,Cell.new(
                                                                          trampCall( callProcedure( 'cons',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                                  trampCall(@_cons)
                                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                                begin
                                                                                    trampCall(_last)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1114"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,Cell.new(
                                                                              
                                                                                       ))))
                                                                                 ))))
                                                                end                                                              ,Cell.new(
                                                                begin
                                                                    trampCall(_other)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1115"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       ))))
                                                                 ))
                                                end
                                            } ; ___lambda.call(
                                                  trampCall( callProcedure( 'cdr',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_cdr') then
                                                          trampCall(@_cdr)
                                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1130"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_r)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1105"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                                       )
                                          end
                                      } ; ___lambda.call(
                                            trampCall( callProcedure( 'car',
                                                begin
                                                  if @global_lisp_binding.has_key?('_car') then
                                                    trampCall(@_car)
                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1164"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_r)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1105"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                 )
                                    end
                                } ; ___lambda.call(
                                      trampCall( callProcedure( 'reverse',
                                          begin
                                            if @global_lisp_binding.has_key?('_reverse') then
                                              trampCall(@_reverse)
                                            else raise NameError.new( "Error: undefined variable _reverse", "_reverse" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1108"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_sexp)
                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                           )
                              end
                          end
                      }
                    if ( 
                      trampCall( callProcedure( 'not',
                          begin
                            if @global_lisp_binding.has_key?('_not') then
                              trampCall(@_not)
                            else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1159"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            trampCall( callProcedure( 'pair?',
                                begin
                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                    trampCall(@_pair_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1118"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_sexp)
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                                   )))
                     ) then
                        begin
                            begin
                                trampCall(_sexp)
                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                            end
                        end
                    else
                        if ( 
                          trampCall( callProcedure( 'null?',
                              begin
                                if @global_lisp_binding.has_key?('_null_QUMARK') then
                                  trampCall(@_null_QUMARK)
                                else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1159"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_sexp)
                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                         ) then
                            begin
                              Cell.new()
                            end
                        else
                            if ( 
                              trampCall( callProcedure( 'list?',
                                  begin
                                    if @global_lisp_binding.has_key?('_list_QUMARK') then
                                      trampCall(@_list_QUMARK)
                                    else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1158"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_sexp)
                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                             ) then
                                begin
                                    begin
                                      ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20202| 
                                          if ( 
                                            begin
                                              ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20212| 
                                                  if ( 
                                                    begin
                                                        trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20212)
                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                    end
                                                   ) then
                                                      begin
                                                          trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20212)
                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                      end
                                                  else
                                                    false
                                                  end
                                              } ; ___lambda.call(
                                                    trampCall( callProcedure( 'eqv?',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                            trampCall(@_eqv_QUMARK)
                                                          else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:607"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                        :"quote"                                                        ,Cell.new(
                                                          begin
                                                              trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20202)
                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))
                                                         )
                                            end
                                           ) then
                                              begin
                                                  begin
                                                      trampCall(_sexp)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                  end
                                              end
                                          else
                                              if ( 
                                                begin
                                                  ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20213| 
                                                      if ( 
                                                        begin
                                                            trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20213)
                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                        end
                                                       ) then
                                                          begin
                                                              trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20213)
                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                          end
                                                      else
                                                        false
                                                      end
                                                  } ; ___lambda.call(
                                                        trampCall( callProcedure( 'eqv?',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                trampCall(@_eqv_QUMARK)
                                                              else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:607"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                            :"macro"                                                            ,Cell.new(
                                                              begin
                                                                  trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20202)
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     ))))
                                                             )
                                                end
                                               ) then
                                                  begin
                                                      begin
                                                          trampCall(_sexp)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                      end
                                                  end
                                              else
                                                  if ( 
                                                    begin
                                                      ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20214| 
                                                          if ( 
                                                            begin
                                                                trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20214)
                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                            end
                                                           ) then
                                                              begin
                                                                  trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20214)
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end
                                                          else
                                                            false
                                                          end
                                                      } ; ___lambda.call(
                                                            trampCall( callProcedure( 'eqv?',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                    trampCall(@_eqv_QUMARK)
                                                                  else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:607"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                :"begin"                                                                ,Cell.new(
                                                                  begin
                                                                      trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20202)
                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         ))))
                                                                 )
                                                    end
                                                   ) then
                                                      begin
                                                          DelayedCallPacket.new( 'cons',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                  trampCall(@_cons)
                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                              :"begin"                                                              ,Cell.new(
                                                                trampCall( callProcedure( 'setup-proc-body',
                                                                    begin
                                                                        trampCall(_setup_MIMARKproc_MIMARKbody)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1153"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      trampCall( callProcedure( 'cdr',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_cdr') then
                                                                              trampCall(@_cdr)
                                                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1130"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_sexp)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))
                                                                             )))
                                                                       )))
                                                      end
                                                  else
                                                      if ( 
                                                        begin
                                                          ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20215| 
                                                              if ( 
                                                                begin
                                                                    trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20215)
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end
                                                               ) then
                                                                  begin
                                                                      trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20215)
                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              else
                                                                false
                                                              end
                                                          } ; ___lambda.call(
                                                                trampCall( callProcedure( 'eqv?',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                        trampCall(@_eqv_QUMARK)
                                                                      else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:607"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                    :"lambda"                                                                    ,Cell.new(
                                                                      begin
                                                                          trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20202)
                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                             ))))
                                                                     )
                                                        end
                                                       ) then
                                                          begin
                                                              DelayedCallPacket.new( 'cons',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                      trampCall(@_cons)
                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                  :"lambda"                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'cons',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                            trampCall(@_cons)
                                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          trampCall( callProcedure( 'second',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_second') then
                                                                                  trampCall(@_second)
                                                                                else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1157"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                                begin
                                                                                    trampCall(_sexp)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                                       )))                                                                        ,Cell.new(
                                                                          trampCall( callProcedure( 'setup-proc-body',
                                                                              begin
                                                                                  trampCall(_setup_MIMARKproc_MIMARKbody)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1153"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                                trampCall( callProcedure( 'cddr',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_cddr') then
                                                                                        trampCall(@_cddr)
                                                                                      else raise NameError.new( "Error: undefined variable _cddr", "_cddr" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1153"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    Cell.new(
                                                                                      begin
                                                                                          trampCall(_sexp)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                             )))
                                                                                       )))
                                                                                 ))))
                                                                           )))
                                                          end
                                                      else
                                                          if ( 
                                                            begin
                                                              ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20216| 
                                                                  if ( 
                                                                    begin
                                                                        trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20216)
                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                   ) then
                                                                      begin
                                                                          trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20216)
                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                  else
                                                                    false
                                                                  end
                                                              } ; ___lambda.call(
                                                                    trampCall( callProcedure( 'eqv?',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                            trampCall(@_eqv_QUMARK)
                                                                          else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:607"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                        :"if"                                                                        ,Cell.new(
                                                                          begin
                                                                              trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20202)
                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 ))))
                                                                         )
                                                            end
                                                           ) then
                                                              begin
                                                                  begin
                                                                    ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20217| 
                                                                        if ( 
                                                                          begin
                                                                            ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20223| 
                                                                                if ( 
                                                                                  begin
                                                                                      trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20223)
                                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                                 ) then
                                                                                    begin
                                                                                        trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20223)
                                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                else
                                                                                  false
                                                                                end
                                                                            } ; ___lambda.call(
                                                                                  trampCall( callProcedure( 'eqv?',
                                                                                      begin
                                                                                        if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                          trampCall(@_eqv_QUMARK)
                                                                                        else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:607"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                      Cell.new(
                                                                                      3                                                                                      ,Cell.new(
                                                                                        begin
                                                                                            trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20217)
                                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                               ))))
                                                                                       )
                                                                          end
                                                                         ) then
                                                                            begin
                                                                                DelayedCallPacket.new( 'cons',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                        trampCall(@_cons)
                                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    Cell.new(
                                                                                    :"if"                                                                                    ,Cell.new(
                                                                                      trampCall( callProcedure( 'cons',
                                                                                          begin
                                                                                            if @global_lisp_binding.has_key?('_cons') then
                                                                                              trampCall(@_cons)
                                                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          Cell.new(
                                                                                            trampCall( callProcedure( 'second',
                                                                                                begin
                                                                                                  if @global_lisp_binding.has_key?('_second') then
                                                                                                    trampCall(@_second)
                                                                                                  else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1157"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,
                                                                                                Cell.new(
                                                                                                  begin
                                                                                                      trampCall(_sexp)
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                                                                  end
                                                                                                         )))                                                                                          ,Cell.new(
                                                                                            trampCall( callProcedure( 'cons',
                                                                                                begin
                                                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                                                    trampCall(@_cons)
                                                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,
                                                                                                Cell.new(
                                                                                                  trampCall( callProcedure( 'setup-proc',
                                                                                                      begin
                                                                                                          trampCall(_setup_MIMARKproc)
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1145"] + __e.backtrace ) ; raise __e
                                                                                                      end                                                                                                    ,
                                                                                                      Cell.new(
                                                                                                        trampCall( callProcedure( 'third',
                                                                                                            begin
                                                                                                              if @global_lisp_binding.has_key?('_third') then
                                                                                                                trampCall(@_third)
                                                                                                              else raise NameError.new( "Error: undefined variable _third", "_third" ) end
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1155"] + __e.backtrace ) ; raise __e
                                                                                                            end                                                                                                          ,
                                                                                                            Cell.new(
                                                                                                              begin
                                                                                                                  trampCall(_sexp)
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                                                                              end
                                                                                                                     )))
                                                                                                               )))                                                                                                ,Cell.new(
                                                                                                
                                                                                                         ))))
                                                                                                   ))))
                                                                                             )))
                                                                            end
                                                                        else
                                                                            if ( 
                                                                              begin
                                                                                ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20224| 
                                                                                    if ( 
                                                                                      begin
                                                                                          trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20224)
                                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                     ) then
                                                                                        begin
                                                                                            trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20224)
                                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                        end
                                                                                    else
                                                                                      false
                                                                                    end
                                                                                } ; ___lambda.call(
                                                                                      trampCall( callProcedure( 'eqv?',
                                                                                          begin
                                                                                            if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                              trampCall(@_eqv_QUMARK)
                                                                                            else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:607"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          Cell.new(
                                                                                          4                                                                                          ,Cell.new(
                                                                                            begin
                                                                                                trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20217)
                                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                            end
                                                                                                   ))))
                                                                                           )
                                                                              end
                                                                             ) then
                                                                                begin
                                                                                    DelayedCallPacket.new( 'cons',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                                            trampCall(@_cons)
                                                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        Cell.new(
                                                                                        :"if"                                                                                        ,Cell.new(
                                                                                          trampCall( callProcedure( 'cons',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                                                  trampCall(@_cons)
                                                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              Cell.new(
                                                                                                trampCall( callProcedure( 'second',
                                                                                                    begin
                                                                                                      if @global_lisp_binding.has_key?('_second') then
                                                                                                        trampCall(@_second)
                                                                                                      else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1157"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                    Cell.new(
                                                                                                      begin
                                                                                                          trampCall(_sexp)
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                                                                      end
                                                                                                             )))                                                                                              ,Cell.new(
                                                                                                trampCall( callProcedure( 'cons',
                                                                                                    begin
                                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                                        trampCall(@_cons)
                                                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                    Cell.new(
                                                                                                      trampCall( callProcedure( 'setup-proc',
                                                                                                          begin
                                                                                                              trampCall(_setup_MIMARKproc)
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1145"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                          Cell.new(
                                                                                                            trampCall( callProcedure( 'third',
                                                                                                                begin
                                                                                                                  if @global_lisp_binding.has_key?('_third') then
                                                                                                                    trampCall(@_third)
                                                                                                                  else raise NameError.new( "Error: undefined variable _third", "_third" ) end
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1155"] + __e.backtrace ) ; raise __e
                                                                                                                end                                                                                                              ,
                                                                                                                Cell.new(
                                                                                                                  begin
                                                                                                                      trampCall(_sexp)
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                                                                                  end
                                                                                                                         )))
                                                                                                                   )))                                                                                                    ,Cell.new(
                                                                                                      trampCall( callProcedure( 'cons',
                                                                                                          begin
                                                                                                            if @global_lisp_binding.has_key?('_cons') then
                                                                                                              trampCall(@_cons)
                                                                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                          Cell.new(
                                                                                                            trampCall( callProcedure( 'setup-proc',
                                                                                                                begin
                                                                                                                    trampCall(_setup_MIMARKproc)
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1145"] + __e.backtrace ) ; raise __e
                                                                                                                end                                                                                                              ,
                                                                                                                Cell.new(
                                                                                                                  trampCall( callProcedure( 'fourth',
                                                                                                                      begin
                                                                                                                        if @global_lisp_binding.has_key?('_fourth') then
                                                                                                                          trampCall(@_fourth)
                                                                                                                        else raise NameError.new( "Error: undefined variable _fourth", "_fourth" ) end
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1145"] + __e.backtrace ) ; raise __e
                                                                                                                      end                                                                                                                    ,
                                                                                                                      Cell.new(
                                                                                                                        begin
                                                                                                                            trampCall(_sexp)
                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                                                                                        end
                                                                                                                               )))
                                                                                                                         )))                                                                                                          ,Cell.new(
                                                                                                          
                                                                                                                   ))))
                                                                                                             ))))
                                                                                                       ))))
                                                                                                 )))
                                                                                end
                                                                            else
                                                                                Cell.new()
                                                                            end
                                                                        end
                                                                    } ; ___lambda.call(
                                                                          trampCall( callProcedure( 'length',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_length') then
                                                                                  trampCall(@_length)
                                                                                else raise NameError.new( "Error: undefined variable _length", "_length" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1136"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                                begin
                                                                                    trampCall(_sexp)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                                       )))
                                                                               )
                                                                  end
                                                              end
                                                          else
                                                              if ( 
                                                                begin
                                                                  ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20218| 
                                                                      if ( 
                                                                        begin
                                                                            trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20218)
                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                       ) then
                                                                          begin
                                                                              trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20218)
                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                      else
                                                                        false
                                                                      end
                                                                  } ; ___lambda.call(
                                                                        trampCall( callProcedure( 'eqv?',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                trampCall(@_eqv_QUMARK)
                                                                              else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:607"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                            :"let"                                                                            ,Cell.new(
                                                                              begin
                                                                                  trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20202)
                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                                     ))))
                                                                             )
                                                                end
                                                               ) then
                                                                  begin
                                                                      DelayedCallPacket.new( 'cons',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_cons') then
                                                                              trampCall(@_cons)
                                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                          :"let"                                                                          ,Cell.new(
                                                                            trampCall( callProcedure( 'cons',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                                    trampCall(@_cons)
                                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                Cell.new(
                                                                                  trampCall( callProcedure( 'setup-let-args',
                                                                                      begin
                                                                                          trampCall(_setup_MIMARKlet_MIMARKargs)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1152"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                      Cell.new(
                                                                                        trampCall( callProcedure( 'second',
                                                                                            begin
                                                                                              if @global_lisp_binding.has_key?('_second') then
                                                                                                trampCall(@_second)
                                                                                              else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1157"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,
                                                                                            Cell.new(
                                                                                              begin
                                                                                                  trampCall(_sexp)
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                                                              end
                                                                                                     )))
                                                                                               )))                                                                                ,Cell.new(
                                                                                  trampCall( callProcedure( 'setup-proc-body',
                                                                                      begin
                                                                                          trampCall(_setup_MIMARKproc_MIMARKbody)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1153"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                      Cell.new(
                                                                                        trampCall( callProcedure( 'cddr',
                                                                                            begin
                                                                                              if @global_lisp_binding.has_key?('_cddr') then
                                                                                                trampCall(@_cddr)
                                                                                              else raise NameError.new( "Error: undefined variable _cddr", "_cddr" ) end
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1153"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,
                                                                                            Cell.new(
                                                                                              begin
                                                                                                  trampCall(_sexp)
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                                                              end
                                                                                                     )))
                                                                                               )))
                                                                                         ))))
                                                                                   )))
                                                                  end
                                                              else
                                                                  if ( 
                                                                    begin
                                                                      ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20219| 
                                                                          if ( 
                                                                            begin
                                                                                trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20219)
                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                           ) then
                                                                              begin
                                                                                  trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20219)
                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          else
                                                                            false
                                                                          end
                                                                      } ; ___lambda.call(
                                                                            trampCall( callProcedure( 'eqv?',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                    trampCall(@_eqv_QUMARK)
                                                                                  else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:607"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                Cell.new(
                                                                                :"letrec"                                                                                ,Cell.new(
                                                                                  begin
                                                                                      trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20202)
                                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                                         ))))
                                                                                 )
                                                                    end
                                                                   ) then
                                                                      begin
                                                                          DelayedCallPacket.new( 'cons',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                                  trampCall(@_cons)
                                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                              :"letrec"                                                                              ,Cell.new(
                                                                                trampCall( callProcedure( 'cons',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                        trampCall(@_cons)
                                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    Cell.new(
                                                                                      trampCall( callProcedure( 'setup-let-args',
                                                                                          begin
                                                                                              trampCall(_setup_MIMARKlet_MIMARKargs)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1152"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          Cell.new(
                                                                                            trampCall( callProcedure( 'second',
                                                                                                begin
                                                                                                  if @global_lisp_binding.has_key?('_second') then
                                                                                                    trampCall(@_second)
                                                                                                  else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1157"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,
                                                                                                Cell.new(
                                                                                                  begin
                                                                                                      trampCall(_sexp)
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                                                                  end
                                                                                                         )))
                                                                                                   )))                                                                                    ,Cell.new(
                                                                                      trampCall( callProcedure( 'setup-proc-body',
                                                                                          begin
                                                                                              trampCall(_setup_MIMARKproc_MIMARKbody)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1153"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          Cell.new(
                                                                                            trampCall( callProcedure( 'cddr',
                                                                                                begin
                                                                                                  if @global_lisp_binding.has_key?('_cddr') then
                                                                                                    trampCall(@_cddr)
                                                                                                  else raise NameError.new( "Error: undefined variable _cddr", "_cddr" ) end
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1153"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,
                                                                                                Cell.new(
                                                                                                  begin
                                                                                                      trampCall(_sexp)
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                                                                  end
                                                                                                         )))
                                                                                                   )))
                                                                                             ))))
                                                                                       )))
                                                                      end
                                                                  else
                                                                      if ( 
                                                                        begin
                                                                          ___lambda = lambda { |___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20220| 
                                                                              if ( 
                                                                                begin
                                                                                    trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20220)
                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                               ) then
                                                                                  begin
                                                                                      trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20220)
                                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                              else
                                                                                false
                                                                              end
                                                                          } ; ___lambda.call(
                                                                                trampCall( callProcedure( 'eqv?',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                                                        trampCall(@_eqv_QUMARK)
                                                                                      else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:607"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    Cell.new(
                                                                                    :"define"                                                                                    ,Cell.new(
                                                                                      begin
                                                                                          trampCall(___gensym__a6500e12401f98f446352dd5341558873f6aaa73_20202)
                                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                             ))))
                                                                                     )
                                                                        end
                                                                       ) then
                                                                          begin
                                                                              begin
                                                                                ___lambda = lambda { |_val| 
                                                                                    DelayedCallPacket.new( 'cons',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                                            trampCall(@_cons)
                                                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        Cell.new(
                                                                                        :"define"                                                                                        ,Cell.new(
                                                                                          trampCall( callProcedure( 'cons',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                                                  trampCall(@_cons)
                                                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              Cell.new(
                                                                                                trampCall( callProcedure( 'second',
                                                                                                    begin
                                                                                                      if @global_lisp_binding.has_key?('_second') then
                                                                                                        trampCall(@_second)
                                                                                                      else raise NameError.new( "Error: undefined variable _second", "_second" ) end
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1157"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                    Cell.new(
                                                                                                      begin
                                                                                                          trampCall(_sexp)
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                                                                      end
                                                                                                             )))                                                                                              ,Cell.new(
                                                                                                trampCall( callProcedure( 'cons',
                                                                                                    begin
                                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                                        trampCall(@_cons)
                                                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                    Cell.new(
                                                                                                      if ( 
                                                                                                        if ( 
                                                                                                          trampCall( callProcedure( 'not',
                                                                                                              begin
                                                                                                                if @global_lisp_binding.has_key?('_not') then
                                                                                                                  trampCall(@_not)
                                                                                                                else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1159"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,
                                                                                                              Cell.new(
                                                                                                                trampCall( callProcedure( 'eq?',
                                                                                                                    begin
                                                                                                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                                                                        trampCall(@_eq_QUMARK)
                                                                                                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:968"] + __e.backtrace ) ; raise __e
                                                                                                                    end                                                                                                                  ,
                                                                                                                    Cell.new(
                                                                                                                    false                                                                                                                    ,Cell.new(
                                                                                                                      trampCall( callProcedure( 'list?',
                                                                                                                          begin
                                                                                                                            if @global_lisp_binding.has_key?('_list_QUMARK') then
                                                                                                                              trampCall(@_list_QUMARK)
                                                                                                                            else raise NameError.new( "Error: undefined variable _list_QUMARK", "_list_QUMARK" ) end
                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1158"] + __e.backtrace ) ; raise __e
                                                                                                                          end                                                                                                                        ,
                                                                                                                          Cell.new(
                                                                                                                            begin
                                                                                                                                trampCall(_val)
                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1162"] + __e.backtrace ) ; raise __e
                                                                                                                            end
                                                                                                                                   )))
                                                                                                                             ))))
                                                                                                                       )))
                                                                                                         ) then
                                                                                                            if ( 
                                                                                                              trampCall( callProcedure( 'not',
                                                                                                                  begin
                                                                                                                    if @global_lisp_binding.has_key?('_not') then
                                                                                                                      trampCall(@_not)
                                                                                                                    else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1159"] + __e.backtrace ) ; raise __e
                                                                                                                  end                                                                                                                ,
                                                                                                                  Cell.new(
                                                                                                                    trampCall( callProcedure( 'eq?',
                                                                                                                        begin
                                                                                                                          if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                                                                            trampCall(@_eq_QUMARK)
                                                                                                                          else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:968"] + __e.backtrace ) ; raise __e
                                                                                                                        end                                                                                                                      ,
                                                                                                                        Cell.new(
                                                                                                                        false                                                                                                                        ,Cell.new(
                                                                                                                          trampCall( callProcedure( 'not',
                                                                                                                              begin
                                                                                                                                if @global_lisp_binding.has_key?('_not') then
                                                                                                                                  trampCall(@_not)
                                                                                                                                else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1159"] + __e.backtrace ) ; raise __e
                                                                                                                              end                                                                                                                            ,
                                                                                                                              Cell.new(
                                                                                                                                trampCall( callProcedure( 'null?',
                                                                                                                                    begin
                                                                                                                                      if @global_lisp_binding.has_key?('_null_QUMARK') then
                                                                                                                                        trampCall(@_null_QUMARK)
                                                                                                                                      else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1159"] + __e.backtrace ) ; raise __e
                                                                                                                                    end                                                                                                                                  ,
                                                                                                                                    Cell.new(
                                                                                                                                      begin
                                                                                                                                          trampCall(_val)
                                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1162"] + __e.backtrace ) ; raise __e
                                                                                                                                      end
                                                                                                                                             )))
                                                                                                                                       )))
                                                                                                                                 ))))
                                                                                                                           )))
                                                                                                             ) then
                                                                                                                trampCall( callProcedure( 'reserved?',
                                                                                                                    begin
                                                                                                                        trampCall(_reserved_QUMARK)
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1160"] + __e.backtrace ) ; raise __e
                                                                                                                    end                                                                                                                  ,
                                                                                                                    Cell.new(
                                                                                                                      trampCall( callProcedure( 'car',
                                                                                                                          begin
                                                                                                                            if @global_lisp_binding.has_key?('_car') then
                                                                                                                              trampCall(@_car)
                                                                                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1164"] + __e.backtrace ) ; raise __e
                                                                                                                          end                                                                                                                        ,
                                                                                                                          Cell.new(
                                                                                                                            begin
                                                                                                                                trampCall(_val)
                                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1162"] + __e.backtrace ) ; raise __e
                                                                                                                            end
                                                                                                                                   )))
                                                                                                                             )))
                                                                                                            else
                                                                                                              false
                                                                                                            end
                                                                                                        else
                                                                                                          false
                                                                                                        end
                                                                                                       ) then
                                                                                                          trampCall( callProcedure( 'setup-tailcall-mark',
                                                                                                              begin
                                                                                                                if @global_lisp_binding.has_key?('_setup_MIMARKtailcall_MIMARKmark') then
                                                                                                                  trampCall(@_setup_MIMARKtailcall_MIMARKmark)
                                                                                                                else raise NameError.new( "Error: undefined variable _setup_MIMARKtailcall_MIMARKmark", "_setup_MIMARKtailcall_MIMARKmark" ) end
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1161"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,
                                                                                                              Cell.new(
                                                                                                                begin
                                                                                                                    trampCall(_val)
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1162"] + __e.backtrace ) ; raise __e
                                                                                                                end
                                                                                                                       )))
                                                                                                      else
                                                                                                          begin
                                                                                                              trampCall(_val)
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1162"] + __e.backtrace ) ; raise __e
                                                                                                          end
                                                                                                      end                                                                                                    ,Cell.new(
                                                                                                    
                                                                                                             ))))
                                                                                                       ))))
                                                                                                 )))
                                                                                } ; ___lambda.call(
                                                                                      trampCall( callProcedure( 'third',
                                                                                          begin
                                                                                            if @global_lisp_binding.has_key?('_third') then
                                                                                              trampCall(@_third)
                                                                                            else raise NameError.new( "Error: undefined variable _third", "_third" ) end
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1155"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          Cell.new(
                                                                                            begin
                                                                                                trampCall(_sexp)
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                                                            end
                                                                                                   )))
                                                                                           )
                                                                              end
                                                                          end
                                                                      else
                                                                          if ( 
                                                                          true
                                                                           ) then
                                                                              begin
                                                                                  if ( 
                                                                                    trampCall( callProcedure( 'symbol?',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_symbol_QUMARK') then
                                                                                            trampCall(@_symbol_QUMARK)
                                                                                          else raise NameError.new( "Error: undefined variable _symbol_QUMARK", "_symbol_QUMARK" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1164"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        Cell.new(
                                                                                          trampCall( callProcedure( 'car',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_car') then
                                                                                                  trampCall(@_car)
                                                                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1164"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              Cell.new(
                                                                                                begin
                                                                                                    trampCall(_sexp)
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                                                                end
                                                                                                       )))
                                                                                                 )))
                                                                                   ) then
                                                                                      DelayedCallPacket.new( 'cons',
                                                                                          begin
                                                                                            if @global_lisp_binding.has_key?('_cons') then
                                                                                              trampCall(@_cons)
                                                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          Cell.new(
                                                                                          :"%tailcall"                                                                                          ,Cell.new(
                                                                                            trampCall( callProcedure( 'cons',
                                                                                                begin
                                                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                                                    trampCall(@_cons)
                                                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1109"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,
                                                                                                Cell.new(
                                                                                                  begin
                                                                                                      trampCall(_sexp)
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,Cell.new(
                                                                                                
                                                                                                         ))))
                                                                                                   )))
                                                                                  else
                                                                                      begin
                                                                                          trampCall(_sexp)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                  end
                                                                              end
                                                                          else
                                                                              Cell.new()
                                                                          end
                                                                      end
                                                                  end
                                                              end
                                                          end
                                                      end
                                                  end
                                              end
                                          end
                                      } ; ___lambda.call(
                                            trampCall( callProcedure( 'car',
                                                begin
                                                  if @global_lisp_binding.has_key?('_car') then
                                                    trampCall(@_car)
                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1164"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_sexp)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                 )
                                    end
                                end
                            else
                                if ( 
                                true
                                 ) then
                                    begin
                                        begin
                                            trampCall(_sexp)
                                          rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1168"] + __e.backtrace ) ; raise __e
                                        end
                                    end
                                else
                                    Cell.new()
                                end
                            end
                        end
                    end
                } ; ___lambda.call(
                nil,nil,nil,nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['__PAMARKcompile_MIMARKphase_MIMARKfunctions'] = true
    @__PAMARKcompile_MIMARKphase_MIMARKfunctions = 
    trampCall(
          trampCall( callProcedure( 'list',
              begin
                if @global_lisp_binding.has_key?('_list') then
                  trampCall(@_list)
                else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1173"] + __e.backtrace ) ; raise __e
              end            ,
              Cell.new(
                begin
                  if @global_lisp_binding.has_key?('_setup_MIMARKtailcall_MIMARKmark') then
                    trampCall(@_setup_MIMARKtailcall_MIMARKmark)
                  else raise NameError.new( "Error: undefined variable _setup_MIMARKtailcall_MIMARKmark", "_setup_MIMARKtailcall_MIMARKmark" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/init.nnd:1174"] + __e.backtrace ) ; raise __e
                end
                       )))
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['__ASMARKnendo_MIMARKversion_ASMARK'] = true
    @__ASMARKnendo_MIMARKversion_ASMARK = 
    trampCall(
        "0.3.2"
    )
  end
 )


# -------------------------------------------------------
# [EOF]
# -------------------------------------------------------
