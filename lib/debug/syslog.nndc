#
#    This file is nendo's compiled library file. 
#    generated  "nendo -c src" command. 
# 

trampCall( 
  DelayedCallPacket.new( 'require',
      begin
        if @global_lisp_binding.has_key?('_require') then
          @_require
        else raise NameError.new( "Error: undefined variable _require", "_require" ) end
        rescue => __e ; __e.set_backtrace( ["./lib/debug/syslog.nnd:37"] + __e.backtrace ) ; raise __e
      end    ,
      Cell.new(
      "syslog"
               ))
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_debug_MIMARKprint_MIMARKoutput_MIMARKfunc'] = true
    @_debug_MIMARKprint_MIMARKoutput_MIMARKfunc = 
        Proc.new { |_str| 
            begin
                Syslog.open(
                  )
              rescue => __e ; __e.set_backtrace( ["./lib/debug/syslog.nnd:40"] + __e.backtrace ) ; raise __e
            end
            begin
                Syslog.log(
                      begin
                          Syslog::LOG_WARNING
                        rescue => __e ; __e.set_backtrace( ["./lib/debug/syslog.nnd:41"] + __e.backtrace ) ; raise __e
                      end                    ,
                    "%s"                    ,
                      trampCall( callProcedure( '+',
                          begin
                            if @global_lisp_binding.has_key?('__PLMARK') then
                              @__PLMARK
                            else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/debug/syslog.nnd:41"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                          "Nendo: "                          ,Cell.new(
                            begin
                                _str
                              rescue => __e ; __e.set_backtrace( ["./lib/debug/syslog.nnd:41"] + __e.backtrace ) ; raise __e
                            end
                                   ))))
                  )
              rescue => __e ; __e.set_backtrace( ["./lib/debug/syslog.nnd:41"] + __e.backtrace ) ; raise __e
            end
            begin
                Syslog.close(
                  )
              rescue => __e ; __e.set_backtrace( ["./lib/debug/syslog.nnd:42"] + __e.backtrace ) ; raise __e
            end
        }
  end
 )


# -------------------------------------------------------
# [EOF]
# -------------------------------------------------------
