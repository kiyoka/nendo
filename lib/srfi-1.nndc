#
#    This file is nendo's compiled library file. 
#    generated  "nendo -c src" command. 
# 

trampCall( 
  begin
    @global_lisp_binding['_xcons'] = true
    @_xcons = 
    trampCall(
          Proc.new { |_d,_a| 
              DelayedCallPacket.new( 'cons',
                  begin
                    if @global_lisp_binding.has_key?('_cons') then
                      trampCall(@_cons)
                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:217"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                        trampCall(_a)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:217"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_d)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:217"] + __e.backtrace ) ; raise __e
                    end
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_make_MIMARKlist'] = true
    @_make_MIMARKlist = 
    trampCall(
          Proc.new { |_len,*__rest__| _maybe_MIMARKelt = __rest__[0] ;  
              begin
              end
              begin
                ___lambda = lambda { |_elt| 
                    begin
                      ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20099| 
                          ___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20099                           = 
                            Proc.new { |_i,_ans| 
                                if ( 
                                  trampCall( callProcedure( '<=',
                                      begin
                                        if @global_lisp_binding.has_key?('__LTMARK_EQMARK') then
                                          trampCall(@__LTMARK_EQMARK)
                                        else raise NameError.new( "Error: undefined variable __LTMARK_EQMARK", "__LTMARK_EQMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:235"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_i)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:235"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                      0
                                               ))))
                                 ) then
                                    begin
                                        begin
                                            trampCall(_ans)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:235"] + __e.backtrace ) ; raise __e
                                        end
                                    end
                                else
                                    begin
                                        DelayedCallPacket.new( '__gensym__d2f54e498a1042043dafdae0618b15c325a30372_20099',
                                            begin
                                                trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20099)
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( '-',
                                                  begin
                                                    if @global_lisp_binding.has_key?('__MIMARK') then
                                                      trampCall(@__MIMARK)
                                                    else raise NameError.new( "Error: undefined variable __MIMARK", "__MIMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:233"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_i)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:235"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,Cell.new(
                                                  1
                                                           ))))                                            ,Cell.new(
                                              trampCall( callProcedure( 'cons',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cons') then
                                                      trampCall(@_cons)
                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:234"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_elt)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:234"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,Cell.new(
                                                    begin
                                                        trampCall(_ans)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:235"] + __e.backtrace ) ; raise __e
                                                    end
                                                           ))))
                                                     )))
                                    end
                                end
                            }
                          DelayedCallPacket.new( '__gensym__d2f54e498a1042043dafdae0618b15c325a30372_20099',
                              begin
                                  trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20099)
                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_len)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:233"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                              Cell.new()
                                       )))
                      } ; ___lambda.call(
                      nil
                                 )
                    end
                } ; ___lambda.call(
                      if ( 
                        trampCall( callProcedure( 'null?',
                            begin
                              if @global_lisp_binding.has_key?('_null_QUMARK') then
                                trampCall(@_null_QUMARK)
                              else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:230"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_maybe_MIMARKelt)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:232"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                       ) then
                          begin
                            false
                          end
                      else
                          if ( 
                            trampCall( callProcedure( 'null?',
                                begin
                                  if @global_lisp_binding.has_key?('_null_QUMARK') then
                                    trampCall(@_null_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:230"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  trampCall( callProcedure( 'cdr',
                                      begin
                                        if @global_lisp_binding.has_key?('_cdr') then
                                          trampCall(@_cdr)
                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:230"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_maybe_MIMARKelt)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:232"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                         )))
                           ) then
                              begin
                                  DelayedCallPacket.new( 'car',
                                      begin
                                        if @global_lisp_binding.has_key?('_car') then
                                          trampCall(@_car)
                                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:230"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_maybe_MIMARKelt)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:232"] + __e.backtrace ) ; raise __e
                                        end
                                               ))
                              end
                          else
                              if ( 
                              true
                               ) then
                                  begin
                                      begin raise RuntimeError, 
                                      "Too many arguments to MAKE-LIST"
                                      rescue => __e 
                                        __e.set_backtrace( ["./lib/srfi-1.nnd:231"] + __e.backtrace )
                                        raise __e
                                      end 
                                  end
                              end
                          end
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_list_MIMARKtabulate'] = true
    @_list_MIMARKtabulate = 
    trampCall(
          Proc.new { |_len,_proc| 
              begin
              end
              begin
              end
              begin
                ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20100| 
                    ___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20100                     = 
                      Proc.new { |_i,_ans| 
                          if ( 
                            trampCall( callProcedure( '<',
                                begin
                                  if @global_lisp_binding.has_key?('__LTMARK') then
                                    trampCall(@__LTMARK)
                                  else raise NameError.new( "Error: undefined variable __LTMARK", "__LTMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:248"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_i)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:248"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                0
                                         ))))
                           ) then
                              begin
                                  begin
                                      trampCall(_ans)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:248"] + __e.backtrace ) ; raise __e
                                  end
                              end
                          else
                              begin
                                  DelayedCallPacket.new( '__gensym__d2f54e498a1042043dafdae0618b15c325a30372_20100',
                                      begin
                                          trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20100)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( '-',
                                            begin
                                              if @global_lisp_binding.has_key?('__MIMARK') then
                                                trampCall(@__MIMARK)
                                              else raise NameError.new( "Error: undefined variable __MIMARK", "__MIMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:246"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_i)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:248"] + __e.backtrace ) ; raise __e
                                              end                                            ,Cell.new(
                                            1
                                                     ))))                                      ,Cell.new(
                                        trampCall( callProcedure( 'cons',
                                            begin
                                              if @global_lisp_binding.has_key?('_cons') then
                                                trampCall(@_cons)
                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:247"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'proc',
                                                  begin
                                                      trampCall(_proc)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:247"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_i)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:248"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))                                            ,Cell.new(
                                              begin
                                                  trampCall(_ans)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:248"] + __e.backtrace ) ; raise __e
                                              end
                                                     ))))
                                               )))
                              end
                          end
                      }
                    DelayedCallPacket.new( '__gensym__d2f54e498a1042043dafdae0618b15c325a30372_20100',
                        begin
                            trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20100)
                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( '-',
                              begin
                                if @global_lisp_binding.has_key?('__MIMARK') then
                                  trampCall(@__MIMARK)
                                else raise NameError.new( "Error: undefined variable __MIMARK", "__MIMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:246"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_len)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:246"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                              1
                                       ))))                        ,Cell.new(
                        Cell.new()
                                 )))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_cons_ASMARK'] = true
    @_cons_ASMARK = 
    trampCall(
          Proc.new { |_first,*__rest__| _rest = __rest__[0] ;  
              begin
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_x,_rest| 
                          if ( 
                            trampCall( callProcedure( 'pair?',
                                begin
                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                    trampCall(@_pair_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:257"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_rest)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:258"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              DelayedCallPacket.new( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      trampCall(@_cons)
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:258"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_x)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:259"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    trampCall( callProcedure( 'recur',
                                        begin
                                            trampCall(_recur)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:258"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'car',
                                              begin
                                                if @global_lisp_binding.has_key?('_car') then
                                                  trampCall(@_car)
                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:258"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_rest)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:258"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))                                        ,Cell.new(
                                          trampCall( callProcedure( 'cdr',
                                              begin
                                                if @global_lisp_binding.has_key?('_cdr') then
                                                  trampCall(@_cdr)
                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:258"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_rest)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:258"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 ))))
                                           )))
                          else
                              begin
                                  trampCall(_x)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:259"] + __e.backtrace ) ; raise __e
                              end
                          end
                      }
                    DelayedCallPacket.new( 'recur',
                        begin
                            trampCall(_recur)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:258"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_first)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:256"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                              trampCall(_rest)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:258"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_list_MIMARKcopy'] = true
    @_list_MIMARKcopy = 
    trampCall(
          Proc.new { |_lis| 
              begin
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lis| 
                          if ( 
                            trampCall( callProcedure( 'pair?',
                                begin
                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                    trampCall(@_pair_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:265"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lis)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:267"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              DelayedCallPacket.new( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      trampCall(@_cons)
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:266"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:266"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_lis)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:267"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))                                  ,Cell.new(
                                    trampCall( callProcedure( 'recur',
                                        begin
                                            trampCall(_recur)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:266"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'cdr',
                                              begin
                                                if @global_lisp_binding.has_key?('_cdr') then
                                                  trampCall(@_cdr)
                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:266"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_lis)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:267"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 )))
                                           )))
                          else
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:267"] + __e.backtrace ) ; raise __e
                              end
                          end
                      }
                    DelayedCallPacket.new( 'recur',
                        begin
                            trampCall(_recur)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:266"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:267"] + __e.backtrace ) ; raise __e
                          end
                                 ))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_iota'] = true
    @_iota = 
    trampCall(
          Proc.new { |_count,*__rest__| _args = __rest__[0] ;  
              if ( 
                trampCall( callProcedure( '<',
                    begin
                      if @global_lisp_binding.has_key?('__LTMARK') then
                        trampCall(@__LTMARK)
                      else raise NameError.new( "Error: undefined variable __LTMARK", "__LTMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:272"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_count)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:281"] + __e.backtrace ) ; raise __e
                      end                    ,Cell.new(
                    0
                             ))))
               ) then
                  begin raise RuntimeError, 
                  "Negative step count"
                  rescue => __e 
                    __e.set_backtrace( ["./lib/srfi-1.nnd:272"] + __e.backtrace )
                    raise __e
                  end 
              end
              begin
                ___lambda = lambda { |_start,_step| 
                    begin
                    end
                    begin
                    end
                    begin
                      ___lambda = lambda { |_last_MIMARKval| 
                          begin
                            ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20101| 
                                ___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20101                                 = 
                                  Proc.new { |_count,_val,_ans| 
                                      if ( 
                                        trampCall( callProcedure( '<=',
                                            begin
                                              if @global_lisp_binding.has_key?('__LTMARK_EQMARK') then
                                                trampCall(@__LTMARK_EQMARK)
                                              else raise NameError.new( "Error: undefined variable __LTMARK_EQMARK", "__LTMARK_EQMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:281"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_count)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:281"] + __e.backtrace ) ; raise __e
                                              end                                            ,Cell.new(
                                            0
                                                     ))))
                                       ) then
                                          begin
                                              begin
                                                  trampCall(_ans)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:281"] + __e.backtrace ) ; raise __e
                                              end
                                          end
                                      else
                                          begin
                                              DelayedCallPacket.new( '__gensym__d2f54e498a1042043dafdae0618b15c325a30372_20101',
                                                  begin
                                                      trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20101)
                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( '-',
                                                        begin
                                                          if @global_lisp_binding.has_key?('__MIMARK') then
                                                            trampCall(@__MIMARK)
                                                          else raise NameError.new( "Error: undefined variable __MIMARK", "__MIMARK" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:279"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_count)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:281"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                        1
                                                                 ))))                                                  ,Cell.new(
                                                    trampCall( callProcedure( '-',
                                                        begin
                                                          if @global_lisp_binding.has_key?('__MIMARK') then
                                                            trampCall(@__MIMARK)
                                                          else raise NameError.new( "Error: undefined variable __MIMARK", "__MIMARK" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:279"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_val)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:280"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_step)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:279"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            trampCall(@_cons)
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:280"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_val)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:280"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_ans)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:281"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))
                                                           ))))
                                          end
                                      end
                                  }
                                DelayedCallPacket.new( '__gensym__d2f54e498a1042043dafdae0618b15c325a30372_20101',
                                    begin
                                        trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20101)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_count)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:281"] + __e.backtrace ) ; raise __e
                                      end                                    ,Cell.new(
                                      begin
                                          trampCall(_last_MIMARKval)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:279"] + __e.backtrace ) ; raise __e
                                      end                                    ,Cell.new(
                                    Cell.new()
                                             ))))
                            } ; ___lambda.call(
                            nil
                                       )
                          end
                      } ; ___lambda.call(
                            trampCall( callProcedure( '+',
                                begin
                                  if @global_lisp_binding.has_key?('__PLMARK') then
                                    trampCall(@__PLMARK)
                                  else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:277"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_start)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:277"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  trampCall( callProcedure( '*',
                                      begin
                                        if @global_lisp_binding.has_key?('__ASMARK') then
                                          trampCall(@__ASMARK)
                                        else raise NameError.new( "Error: undefined variable __ASMARK", "__ASMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:277"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( '-',
                                            begin
                                              if @global_lisp_binding.has_key?('__MIMARK') then
                                                trampCall(@__MIMARK)
                                              else raise NameError.new( "Error: undefined variable __MIMARK", "__MIMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:279"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_count)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:281"] + __e.backtrace ) ; raise __e
                                              end                                            ,Cell.new(
                                            1
                                                     ))))                                      ,Cell.new(
                                        begin
                                            trampCall(_step)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:279"] + __e.backtrace ) ; raise __e
                                        end
                                               ))))
                                         ))))
                                 )
                    end
                } ; ___lambda.call(
                      if ( 
                        trampCall( callProcedure( 'pair?',
                            begin
                              if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                trampCall(@_pair_QUMARK)
                              else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:274"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_args)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:274"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                       ) then
                          DelayedCallPacket.new( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  trampCall(@_car)
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:273"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_args)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:274"] + __e.backtrace ) ; raise __e
                                end
                                       ))
                      else
                        0
                      end                    ,
                      if ( 
                        if ( 
                          trampCall( callProcedure( 'not',
                              begin
                                if @global_lisp_binding.has_key?('_not') then
                                  trampCall(@_not)
                                else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1592"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'eq?',
                                    begin
                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                        trampCall(@_eq_QUMARK)
                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1504"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                    false                                    ,Cell.new(
                                      trampCall( callProcedure( 'pair?',
                                          begin
                                            if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                              trampCall(@_pair_QUMARK)
                                            else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:274"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_args)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:274"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             ))))
                                       )))
                         ) then
                            trampCall( callProcedure( 'pair?',
                                begin
                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                    trampCall(@_pair_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:274"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  trampCall( callProcedure( 'cdr',
                                      begin
                                        if @global_lisp_binding.has_key?('_cdr') then
                                          trampCall(@_cdr)
                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:274"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_args)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:274"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                         )))
                        else
                          false
                        end
                       ) then
                          DelayedCallPacket.new( 'cadr',
                              begin
                                if @global_lisp_binding.has_key?('_cadr') then
                                  trampCall(@_cadr)
                                else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:274"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_args)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:274"] + __e.backtrace ) ; raise __e
                                end
                                       ))
                      else
                        1
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_circular_MIMARKlist'] = true
    @_circular_MIMARKlist = 
    trampCall(
          Proc.new { |_val1,*__rest__| _vals = __rest__[0] ;  
              begin
                ___lambda = lambda { |_ans| 
                    trampCall( callProcedure( 'set-cdr!',
                        begin
                          if @global_lisp_binding.has_key?('_set_MIMARKcdr_EXMARK') then
                            trampCall(@_set_MIMARKcdr_EXMARK)
                          else raise NameError.new( "Error: undefined variable _set_MIMARKcdr_EXMARK", "_set_MIMARKcdr_EXMARK" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:332"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'last-pair',
                              begin
                                if @global_lisp_binding.has_key?('_last_MIMARKpair') then
                                  trampCall(@_last_MIMARKpair)
                                else raise NameError.new( "Error: undefined variable _last_MIMARKpair", "_last_MIMARKpair" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:332"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_ans)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:333"] + __e.backtrace ) ; raise __e
                                end
                                       )))                        ,Cell.new(
                          begin
                              trampCall(_ans)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:333"] + __e.backtrace ) ; raise __e
                          end
                                 ))))
                    begin
                        trampCall(_ans)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:333"] + __e.backtrace ) ; raise __e
                    end
                } ; ___lambda.call(
                      trampCall( callProcedure( 'cons',
                          begin
                            if @global_lisp_binding.has_key?('_cons') then
                              trampCall(@_cons)
                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:331"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_val1)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:331"] + __e.backtrace ) ; raise __e
                            end                          ,Cell.new(
                            begin
                                trampCall(_vals)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:331"] + __e.backtrace ) ; raise __e
                            end
                                   ))))
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_proper_MIMARKlist_QUMARK'] = true
    @_proper_MIMARKlist_QUMARK = 
    trampCall(
          Proc.new { |_x| 
              begin
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_x,_lag| 
                          if ( 
                            trampCall( callProcedure( 'pair?',
                                begin
                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                    trampCall(@_pair_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:344"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_x)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:349"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              begin
                                ___lambda = lambda { |_x| 
                                    if ( 
                                      trampCall( callProcedure( 'pair?',
                                          begin
                                            if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                              trampCall(@_pair_QUMARK)
                                            else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:344"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_x)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:349"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                     ) then
                                        begin
                                          ___lambda = lambda { |_x,_lag| 
                                              if ( 
                                                trampCall( callProcedure( 'not',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_not') then
                                                        trampCall(@_not)
                                                      else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:347"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'eq?',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                              trampCall(@_eq_QUMARK)
                                                            else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:347"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                          false                                                          ,Cell.new(
                                                            trampCall( callProcedure( 'not',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_not') then
                                                                    trampCall(@_not)
                                                                  else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:347"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  trampCall( callProcedure( 'eq?',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                          trampCall(@_eq_QUMARK)
                                                                        else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:347"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            trampCall(_x)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:349"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,Cell.new(
                                                                        begin
                                                                            trampCall(_lag)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:347"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               ))))
                                                                         )))
                                                                   ))))
                                                             )))
                                               ) then
                                                  DelayedCallPacket.new( 'lp',
                                                      begin
                                                          trampCall(_lp)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:347"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_x)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:349"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,Cell.new(
                                                        begin
                                                            trampCall(_lag)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:347"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                              else
                                                false
                                              end
                                          } ; ___lambda.call(
                                                trampCall( callProcedure( 'cdr',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cdr') then
                                                        trampCall(@_cdr)
                                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:346"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_x)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:349"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))                                              ,
                                                trampCall( callProcedure( 'cdr',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cdr') then
                                                        trampCall(@_cdr)
                                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:346"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_lag)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:347"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                                     )
                                        end
                                    else
                                        DelayedCallPacket.new( 'null?',
                                            begin
                                              if @global_lisp_binding.has_key?('_null_QUMARK') then
                                                trampCall(@_null_QUMARK)
                                              else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:349"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_x)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:349"] + __e.backtrace ) ; raise __e
                                              end
                                                     ))
                                    end
                                } ; ___lambda.call(
                                      trampCall( callProcedure( 'cdr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cdr') then
                                              trampCall(@_cdr)
                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:346"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_x)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:349"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                           )
                              end
                          else
                              DelayedCallPacket.new( 'null?',
                                  begin
                                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                                      trampCall(@_null_QUMARK)
                                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:349"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_x)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:349"] + __e.backtrace ) ; raise __e
                                    end
                                           ))
                          end
                      }
                    DelayedCallPacket.new( 'lp',
                        begin
                            trampCall(_lp)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:347"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_x)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:349"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                              trampCall(_x)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:349"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_dotted_MIMARKlist_QUMARK'] = true
    @_dotted_MIMARKlist_QUMARK = 
    trampCall(
          Proc.new { |_x| 
              begin
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_x,_lag| 
                          if ( 
                            trampCall( callProcedure( 'pair?',
                                begin
                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                    trampCall(@_pair_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:363"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_x)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:368"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              begin
                                ___lambda = lambda { |_x| 
                                    if ( 
                                      trampCall( callProcedure( 'pair?',
                                          begin
                                            if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                              trampCall(@_pair_QUMARK)
                                            else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:363"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_x)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:368"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                     ) then
                                        begin
                                          ___lambda = lambda { |_x,_lag| 
                                              if ( 
                                                trampCall( callProcedure( 'not',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_not') then
                                                        trampCall(@_not)
                                                      else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:368"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'eq?',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                              trampCall(@_eq_QUMARK)
                                                            else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:366"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                          false                                                          ,Cell.new(
                                                            trampCall( callProcedure( 'not',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_not') then
                                                                    trampCall(@_not)
                                                                  else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:368"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  trampCall( callProcedure( 'eq?',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                          trampCall(@_eq_QUMARK)
                                                                        else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:366"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            trampCall(_x)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:368"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,Cell.new(
                                                                        begin
                                                                            trampCall(_lag)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:366"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               ))))
                                                                         )))
                                                                   ))))
                                                             )))
                                               ) then
                                                  DelayedCallPacket.new( 'lp',
                                                      begin
                                                          trampCall(_lp)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:366"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_x)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:368"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,Cell.new(
                                                        begin
                                                            trampCall(_lag)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:366"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                              else
                                                false
                                              end
                                          } ; ___lambda.call(
                                                trampCall( callProcedure( 'cdr',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cdr') then
                                                        trampCall(@_cdr)
                                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:365"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_x)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:368"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))                                              ,
                                                trampCall( callProcedure( 'cdr',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cdr') then
                                                        trampCall(@_cdr)
                                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:365"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_lag)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:366"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                                     )
                                        end
                                    else
                                        DelayedCallPacket.new( 'not',
                                            begin
                                              if @global_lisp_binding.has_key?('_not') then
                                                trampCall(@_not)
                                              else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:368"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'null?',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                                                      trampCall(@_null_QUMARK)
                                                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:368"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_x)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:368"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                                     ))
                                    end
                                } ; ___lambda.call(
                                      trampCall( callProcedure( 'cdr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cdr') then
                                              trampCall(@_cdr)
                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:365"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_x)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:368"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                           )
                              end
                          else
                              DelayedCallPacket.new( 'not',
                                  begin
                                    if @global_lisp_binding.has_key?('_not') then
                                      trampCall(@_not)
                                    else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:368"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'null?',
                                        begin
                                          if @global_lisp_binding.has_key?('_null_QUMARK') then
                                            trampCall(@_null_QUMARK)
                                          else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:368"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_x)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:368"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                           ))
                          end
                      }
                    DelayedCallPacket.new( 'lp',
                        begin
                            trampCall(_lp)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:366"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_x)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:368"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                              trampCall(_x)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:368"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_circular_MIMARKlist_QUMARK'] = true
    @_circular_MIMARKlist_QUMARK = 
    trampCall(
          Proc.new { |_x| 
              begin
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_x,_lag| 
                          if ( 
                            trampCall( callProcedure( 'not',
                                begin
                                  if @global_lisp_binding.has_key?('_not') then
                                    trampCall(@_not)
                                  else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:368"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  trampCall( callProcedure( 'eq?',
                                      begin
                                        if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                          trampCall(@_eq_QUMARK)
                                        else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:377"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                      false                                      ,Cell.new(
                                        trampCall( callProcedure( 'pair?',
                                            begin
                                              if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                trampCall(@_pair_QUMARK)
                                              else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:374"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_x)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:377"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               ))))
                                         )))
                           ) then
                              begin
                                ___lambda = lambda { |_x| 
                                    if ( 
                                      trampCall( callProcedure( 'not',
                                          begin
                                            if @global_lisp_binding.has_key?('_not') then
                                              trampCall(@_not)
                                            else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:368"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            trampCall( callProcedure( 'eq?',
                                                begin
                                                  if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                    trampCall(@_eq_QUMARK)
                                                  else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:377"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                false                                                ,Cell.new(
                                                  trampCall( callProcedure( 'pair?',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                          trampCall(@_pair_QUMARK)
                                                        else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:374"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_x)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:377"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                                         ))))
                                                   )))
                                     ) then
                                        begin
                                          ___lambda = lambda { |_x,_lag| 
                                              begin
                                                ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20102| 
                                                    if ( 
                                                      begin
                                                          trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20102)
                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                      end
                                                     ) then
                                                        begin
                                                            trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20102)
                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                        end
                                                    else
                                                        begin
                                                          ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20103| 
                                                              if ( 
                                                                begin
                                                                    trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20103)
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end
                                                               ) then
                                                                  begin
                                                                      trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20103)
                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                  end
                                                              else
                                                                false
                                                              end
                                                          } ; ___lambda.call(
                                                                trampCall( callProcedure( 'lp',
                                                                    begin
                                                                        trampCall(_lp)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:377"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      begin
                                                                          trampCall(_x)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:377"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,Cell.new(
                                                                      begin
                                                                          trampCall(_lag)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:377"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                             ))))
                                                                     )
                                                        end
                                                    end
                                                } ; ___lambda.call(
                                                      trampCall( callProcedure( 'eq?',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                              trampCall(@_eq_QUMARK)
                                                            else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:377"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_x)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:377"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,Cell.new(
                                                            begin
                                                                trampCall(_lag)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:377"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   ))))
                                                           )
                                              end
                                          } ; ___lambda.call(
                                                trampCall( callProcedure( 'cdr',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cdr') then
                                                        trampCall(@_cdr)
                                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:376"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_x)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:377"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))                                              ,
                                                trampCall( callProcedure( 'cdr',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cdr') then
                                                        trampCall(@_cdr)
                                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:376"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_lag)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:377"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                                     )
                                        end
                                    else
                                      false
                                    end
                                } ; ___lambda.call(
                                      trampCall( callProcedure( 'cdr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cdr') then
                                              trampCall(@_cdr)
                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:376"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_x)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:377"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                           )
                              end
                          else
                            false
                          end
                      }
                    DelayedCallPacket.new( 'lp',
                        begin
                            trampCall(_lp)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:377"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_x)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:377"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                              trampCall(_x)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:377"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_not_MIMARKpair_QUMARK'] = true
    @_not_MIMARKpair_QUMARK = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'not',
                  begin
                    if @global_lisp_binding.has_key?('_not') then
                      trampCall(@_not)
                    else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:379"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'pair?',
                        begin
                          if @global_lisp_binding.has_key?('_pair_QUMARK') then
                            trampCall(@_pair_QUMARK)
                          else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:379"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_x)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:379"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_null_MIMARKlist_QUMARK'] = true
    @_null_MIMARKlist_QUMARK = 
    trampCall(
          Proc.new { |_l| 
              if ( 
                trampCall( callProcedure( 'pair?',
                    begin
                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                        trampCall(@_pair_QUMARK)
                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:385"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_l)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:387"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  begin
                    false
                  end
              else
                  if ( 
                    trampCall( callProcedure( 'null?',
                        begin
                          if @global_lisp_binding.has_key?('_null_QUMARK') then
                            trampCall(@_null_QUMARK)
                          else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:386"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_l)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:387"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                   ) then
                      begin
                        true
                      end
                  else
                      if ( 
                      true
                       ) then
                          begin
                              begin raise RuntimeError, 
                              "null-list?: argument out of domain"
                              rescue => __e 
                                __e.set_backtrace( ["./lib/srfi-1.nnd:387"] + __e.backtrace )
                                raise __e
                              end 
                          end
                      end
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_list_EQMARK'] = true
    @_list_EQMARK = 
    trampCall(
          Proc.new { |__EQMARK,*__rest__| _lists = __rest__[0] ;  
              begin
                ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20107| 
                    if ( 
                      begin
                          trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20107)
                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                      end
                     ) then
                        begin
                            trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20107)
                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                        end
                    else
                        begin
                          ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20108| 
                              if ( 
                                begin
                                    trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20108)
                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                end
                               ) then
                                  begin
                                      trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20108)
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                false
                              end
                          } ; ___lambda.call(
                                begin
                                  ___lambda = lambda { |_lp1| 
                                      _lp1                                       = 
                                        Proc.new { |_list_MIMARKa,_others| 
                                            begin
                                              ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20109| 
                                                  if ( 
                                                    begin
                                                        trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20109)
                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                    end
                                                   ) then
                                                      begin
                                                          trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20109)
                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                      end
                                                  else
                                                      begin
                                                        ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20110| 
                                                            if ( 
                                                              begin
                                                                  trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20110)
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end
                                                             ) then
                                                                begin
                                                                    trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20110)
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end
                                                            else
                                                              false
                                                            end
                                                        } ; ___lambda.call(
                                                              begin
                                                                ___lambda = lambda { |_list_MIMARKb,_others| 
                                                                    if ( 
                                                                      trampCall( callProcedure( 'eq?',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                              trampCall(@_eq_QUMARK)
                                                                            else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:397"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_list_MIMARKa)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,Cell.new(
                                                                            begin
                                                                                trampCall(_list_MIMARKb)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   ))))
                                                                     ) then
                                                                        DelayedCallPacket.new( 'lp1',
                                                                            begin
                                                                                trampCall(_lp1)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:402"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  trampCall(_list_MIMARKb)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,Cell.new(
                                                                              begin
                                                                                  trampCall(_others)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:402"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                                     )))
                                                                    else
                                                                        begin
                                                                          ___lambda = lambda { |_lp2| 
                                                                              _lp2                                                                               = 
                                                                                Proc.new { |_list_MIMARKa,_list_MIMARKb| 
                                                                                    if ( 
                                                                                      trampCall( callProcedure( 'null-list?',
                                                                                          begin
                                                                                            if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                                                              trampCall(@_null_MIMARKlist_QUMARK)
                                                                                            else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:403"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          Cell.new(
                                                                                            begin
                                                                                                trampCall(_list_MIMARKa)
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                                                                            end
                                                                                                   )))
                                                                                     ) then
                                                                                        if ( 
                                                                                          trampCall( callProcedure( 'not',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_not') then
                                                                                                  trampCall(@_not)
                                                                                                else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:403"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              Cell.new(
                                                                                                trampCall( callProcedure( 'eq?',
                                                                                                    begin
                                                                                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                                                        trampCall(@_eq_QUMARK)
                                                                                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:397"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                    Cell.new(
                                                                                                    false                                                                                                    ,Cell.new(
                                                                                                      trampCall( callProcedure( 'null-list?',
                                                                                                          begin
                                                                                                            if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                                                                              trampCall(@_null_MIMARKlist_QUMARK)
                                                                                                            else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:403"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                          Cell.new(
                                                                                                            begin
                                                                                                                trampCall(_list_MIMARKb)
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                                                                                            end
                                                                                                                   )))
                                                                                                             ))))
                                                                                                       )))
                                                                                         ) then
                                                                                            DelayedCallPacket.new( 'lp1',
                                                                                                begin
                                                                                                    trampCall(_lp1)
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:402"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,
                                                                                                Cell.new(
                                                                                                  begin
                                                                                                      trampCall(_list_MIMARKb)
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,Cell.new(
                                                                                                  begin
                                                                                                      trampCall(_others)
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:402"] + __e.backtrace ) ; raise __e
                                                                                                  end
                                                                                                         )))
                                                                                        else
                                                                                          false
                                                                                        end
                                                                                    else
                                                                                        if ( 
                                                                                          trampCall( callProcedure( 'not',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_not') then
                                                                                                  trampCall(@_not)
                                                                                                else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:403"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              Cell.new(
                                                                                                trampCall( callProcedure( 'eq?',
                                                                                                    begin
                                                                                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                                                        trampCall(@_eq_QUMARK)
                                                                                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:397"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                    Cell.new(
                                                                                                    false                                                                                                    ,Cell.new(
                                                                                                      trampCall( callProcedure( 'not',
                                                                                                          begin
                                                                                                            if @global_lisp_binding.has_key?('_not') then
                                                                                                              trampCall(@_not)
                                                                                                            else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:403"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                          Cell.new(
                                                                                                            trampCall( callProcedure( 'null-list?',
                                                                                                                begin
                                                                                                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                                                                                    trampCall(@_null_MIMARKlist_QUMARK)
                                                                                                                  else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:403"] + __e.backtrace ) ; raise __e
                                                                                                                end                                                                                                              ,
                                                                                                                Cell.new(
                                                                                                                  begin
                                                                                                                      trampCall(_list_MIMARKb)
                                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                                                                                                  end
                                                                                                                         )))
                                                                                                                   )))
                                                                                                             ))))
                                                                                                       )))
                                                                                         ) then
                                                                                            if ( 
                                                                                              trampCall( callProcedure( 'not',
                                                                                                  begin
                                                                                                    if @global_lisp_binding.has_key?('_not') then
                                                                                                      trampCall(@_not)
                                                                                                    else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:403"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,
                                                                                                  Cell.new(
                                                                                                    trampCall( callProcedure( 'eq?',
                                                                                                        begin
                                                                                                          if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                                                            trampCall(@_eq_QUMARK)
                                                                                                          else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:397"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                        Cell.new(
                                                                                                        false                                                                                                        ,Cell.new(
                                                                                                          trampCall( callProcedure( '=',
                                                                                                              begin
                                                                                                                  trampCall(__EQMARK)
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:404"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,
                                                                                                              Cell.new(
                                                                                                                trampCall( callProcedure( 'car',
                                                                                                                    begin
                                                                                                                      if @global_lisp_binding.has_key?('_car') then
                                                                                                                        trampCall(@_car)
                                                                                                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:404"] + __e.backtrace ) ; raise __e
                                                                                                                    end                                                                                                                  ,
                                                                                                                    Cell.new(
                                                                                                                      begin
                                                                                                                          trampCall(_list_MIMARKa)
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                                                                                                      end
                                                                                                                             )))                                                                                                              ,Cell.new(
                                                                                                                trampCall( callProcedure( 'car',
                                                                                                                    begin
                                                                                                                      if @global_lisp_binding.has_key?('_car') then
                                                                                                                        trampCall(@_car)
                                                                                                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:404"] + __e.backtrace ) ; raise __e
                                                                                                                    end                                                                                                                  ,
                                                                                                                    Cell.new(
                                                                                                                      begin
                                                                                                                          trampCall(_list_MIMARKb)
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                                                                                                      end
                                                                                                                             )))
                                                                                                                       ))))
                                                                                                                 ))))
                                                                                                           )))
                                                                                             ) then
                                                                                                DelayedCallPacket.new( 'lp2',
                                                                                                    begin
                                                                                                        trampCall(_lp2)
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                    Cell.new(
                                                                                                      trampCall( callProcedure( 'cdr',
                                                                                                          begin
                                                                                                            if @global_lisp_binding.has_key?('_cdr') then
                                                                                                              trampCall(@_cdr)
                                                                                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                          Cell.new(
                                                                                                            begin
                                                                                                                trampCall(_list_MIMARKa)
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                                                                                            end
                                                                                                                   )))                                                                                                    ,Cell.new(
                                                                                                      trampCall( callProcedure( 'cdr',
                                                                                                          begin
                                                                                                            if @global_lisp_binding.has_key?('_cdr') then
                                                                                                              trampCall(@_cdr)
                                                                                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                          Cell.new(
                                                                                                            begin
                                                                                                                trampCall(_list_MIMARKb)
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                                                                                            end
                                                                                                                   )))
                                                                                                             )))
                                                                                            else
                                                                                              false
                                                                                            end
                                                                                        else
                                                                                          false
                                                                                        end
                                                                                    end
                                                                                }
                                                                              DelayedCallPacket.new( 'lp2',
                                                                                  begin
                                                                                      trampCall(_lp2)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                    begin
                                                                                        trampCall(_list_MIMARKa)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,Cell.new(
                                                                                    begin
                                                                                        trampCall(_list_MIMARKb)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                           )))
                                                                          } ; ___lambda.call(
                                                                          nil
                                                                                     )
                                                                        end
                                                                    end
                                                                } ; ___lambda.call(
                                                                      trampCall( callProcedure( 'car',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_car') then
                                                                              trampCall(@_car)
                                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:404"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_others)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:402"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))                                                                    ,
                                                                      trampCall( callProcedure( 'cdr',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_cdr') then
                                                                              trampCall(@_cdr)
                                                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_others)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:402"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))
                                                                           )
                                                              end
                                                                   )
                                                      end
                                                  end
                                              } ; ___lambda.call(
                                                    trampCall( callProcedure( 'null?',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_null_QUMARK') then
                                                            trampCall(@_null_QUMARK)
                                                          else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:394"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_others)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:402"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))
                                                         )
                                            end
                                        }
                                      DelayedCallPacket.new( 'lp1',
                                          begin
                                              trampCall(_lp1)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:402"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            trampCall( callProcedure( 'car',
                                                begin
                                                  if @global_lisp_binding.has_key?('_car') then
                                                    trampCall(@_car)
                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:404"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_lists)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:393"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))                                          ,Cell.new(
                                            trampCall( callProcedure( 'cdr',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cdr') then
                                                    trampCall(@_cdr)
                                                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:405"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_lists)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:393"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                   )))
                                  } ; ___lambda.call(
                                  nil
                                             )
                                end
                                     )
                        end
                    end
                } ; ___lambda.call(
                      trampCall( callProcedure( 'null?',
                          begin
                            if @global_lisp_binding.has_key?('_null_QUMARK') then
                              trampCall(@_null_QUMARK)
                            else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:394"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_lists)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:393"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_length_PLMARK'] = true
    @_length_PLMARK = 
    trampCall(
          Proc.new { |_x| 
              begin
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_x,_lag,_len| 
                          if ( 
                            trampCall( callProcedure( 'pair?',
                                begin
                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                    trampCall(@_pair_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:421"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_x)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:425"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              begin
                                ___lambda = lambda { |_x,_len| 
                                    if ( 
                                      trampCall( callProcedure( 'pair?',
                                          begin
                                            if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                              trampCall(@_pair_QUMARK)
                                            else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:421"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_x)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:425"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                     ) then
                                        begin
                                          ___lambda = lambda { |_x,_lag,_len| 
                                              if ( 
                                                trampCall( callProcedure( 'not',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_not') then
                                                        trampCall(@_not)
                                                      else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:425"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'eq?',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                              trampCall(@_eq_QUMARK)
                                                            else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:425"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                          false                                                          ,Cell.new(
                                                            trampCall( callProcedure( 'not',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_not') then
                                                                    trampCall(@_not)
                                                                  else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:425"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  trampCall( callProcedure( 'eq?',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                          trampCall(@_eq_QUMARK)
                                                                        else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:425"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            trampCall(_x)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:425"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,Cell.new(
                                                                        begin
                                                                            trampCall(_lag)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:425"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               ))))
                                                                         )))
                                                                   ))))
                                                             )))
                                               ) then
                                                  DelayedCallPacket.new( 'lp',
                                                      begin
                                                          trampCall(_lp)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:425"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_x)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:425"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,Cell.new(
                                                        begin
                                                            trampCall(_lag)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:425"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,Cell.new(
                                                        begin
                                                            trampCall(_len)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:427"] + __e.backtrace ) ; raise __e
                                                        end
                                                               ))))
                                              else
                                                false
                                              end
                                          } ; ___lambda.call(
                                                trampCall( callProcedure( 'cdr',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cdr') then
                                                        trampCall(@_cdr)
                                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:423"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_x)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:425"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))                                              ,
                                                trampCall( callProcedure( 'cdr',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cdr') then
                                                        trampCall(@_cdr)
                                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:423"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_lag)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:425"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))                                              ,
                                                trampCall( callProcedure( '+',
                                                    begin
                                                      if @global_lisp_binding.has_key?('__PLMARK') then
                                                        trampCall(@__PLMARK)
                                                      else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:424"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_len)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:427"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                    1
                                                             ))))
                                                     )
                                        end
                                    else
                                        begin
                                            trampCall(_len)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:427"] + __e.backtrace ) ; raise __e
                                        end
                                    end
                                } ; ___lambda.call(
                                      trampCall( callProcedure( 'cdr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cdr') then
                                              trampCall(@_cdr)
                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:423"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_x)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:425"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))                                    ,
                                      trampCall( callProcedure( '+',
                                          begin
                                            if @global_lisp_binding.has_key?('__PLMARK') then
                                              trampCall(@__PLMARK)
                                            else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:424"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_len)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:427"] + __e.backtrace ) ; raise __e
                                            end                                          ,Cell.new(
                                          1
                                                   ))))
                                           )
                              end
                          else
                              begin
                                  trampCall(_len)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:427"] + __e.backtrace ) ; raise __e
                              end
                          end
                      }
                    DelayedCallPacket.new( 'lp',
                        begin
                            trampCall(_lp)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:425"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_x)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:425"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                              trampCall(_x)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:425"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                        0
                                 ))))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_zip'] = true
    @_zip = 
    trampCall(
          Proc.new { |_list1,*__rest__| _more_MIMARKlists = __rest__[0] ;  
              DelayedCallPacket.new( 'apply',
                  begin
                    if @global_lisp_binding.has_key?('_apply') then
                      trampCall(@_apply)
                    else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:429"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                      if @global_lisp_binding.has_key?('_map') then
                        trampCall(@_map)
                      else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:429"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                      if @global_lisp_binding.has_key?('_list') then
                        trampCall(@_list)
                      else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:429"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_list1)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:429"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_more_MIMARKlists)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:429"] + __e.backtrace ) ; raise __e
                    end
                           )))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_first'] = true
    @_first = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('_car') then
              trampCall(@_car)
            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:468"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_second'] = true
    @_second = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('_cadr') then
              trampCall(@_cadr)
            else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:469"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_third'] = true
    @_third = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('_caddr') then
              trampCall(@_caddr)
            else raise NameError.new( "Error: undefined variable _caddr", "_caddr" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:470"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_fourth'] = true
    @_fourth = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('_cadddr') then
              trampCall(@_cadddr)
            else raise NameError.new( "Error: undefined variable _cadddr", "_cadddr" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:471"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_fifth'] = true
    @_fifth = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'car',
                  begin
                    if @global_lisp_binding.has_key?('_car') then
                      trampCall(@_car)
                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:472"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cddddr',
                        begin
                          if @global_lisp_binding.has_key?('_cddddr') then
                            trampCall(@_cddddr)
                          else raise NameError.new( "Error: undefined variable _cddddr", "_cddddr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:472"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_x)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:472"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_sixth'] = true
    @_sixth = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'cadr',
                  begin
                    if @global_lisp_binding.has_key?('_cadr') then
                      trampCall(@_cadr)
                    else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:473"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cddddr',
                        begin
                          if @global_lisp_binding.has_key?('_cddddr') then
                            trampCall(@_cddddr)
                          else raise NameError.new( "Error: undefined variable _cddddr", "_cddddr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:473"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_x)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:473"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_seventh'] = true
    @_seventh = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'caddr',
                  begin
                    if @global_lisp_binding.has_key?('_caddr') then
                      trampCall(@_caddr)
                    else raise NameError.new( "Error: undefined variable _caddr", "_caddr" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:474"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cddddr',
                        begin
                          if @global_lisp_binding.has_key?('_cddddr') then
                            trampCall(@_cddddr)
                          else raise NameError.new( "Error: undefined variable _cddddr", "_cddddr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:474"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_x)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:474"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_eighth'] = true
    @_eighth = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'cadddr',
                  begin
                    if @global_lisp_binding.has_key?('_cadddr') then
                      trampCall(@_cadddr)
                    else raise NameError.new( "Error: undefined variable _cadddr", "_cadddr" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:475"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cddddr',
                        begin
                          if @global_lisp_binding.has_key?('_cddddr') then
                            trampCall(@_cddddr)
                          else raise NameError.new( "Error: undefined variable _cddddr", "_cddddr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:475"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_x)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:475"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_ninth'] = true
    @_ninth = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'car',
                  begin
                    if @global_lisp_binding.has_key?('_car') then
                      trampCall(@_car)
                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:476"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cddddr',
                        begin
                          if @global_lisp_binding.has_key?('_cddddr') then
                            trampCall(@_cddddr)
                          else raise NameError.new( "Error: undefined variable _cddddr", "_cddddr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:476"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'cddddr',
                              begin
                                if @global_lisp_binding.has_key?('_cddddr') then
                                  trampCall(@_cddddr)
                                else raise NameError.new( "Error: undefined variable _cddddr", "_cddddr" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:476"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_x)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:476"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_tenth'] = true
    @_tenth = 
    trampCall(
          Proc.new { |_x| 
              DelayedCallPacket.new( 'cadr',
                  begin
                    if @global_lisp_binding.has_key?('_cadr') then
                      trampCall(@_cadr)
                    else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:477"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cddddr',
                        begin
                          if @global_lisp_binding.has_key?('_cddddr') then
                            trampCall(@_cddddr)
                          else raise NameError.new( "Error: undefined variable _cddddr", "_cddddr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:477"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'cddddr',
                              begin
                                if @global_lisp_binding.has_key?('_cddddr') then
                                  trampCall(@_cddddr)
                                else raise NameError.new( "Error: undefined variable _cddddr", "_cddddr" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:477"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_x)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:477"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_car_PLMARKcdr'] = true
    @_car_PLMARKcdr = 
    trampCall(
          Proc.new { |_pair| 
              DelayedCallPacket.new( 'values',
                  begin
                    if @global_lisp_binding.has_key?('_values') then
                      trampCall(@_values)
                    else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:479"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'car',
                        begin
                          if @global_lisp_binding.has_key?('_car') then
                            trampCall(@_car)
                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:479"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_pair)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:479"] + __e.backtrace ) ; raise __e
                          end
                                 )))                  ,Cell.new(
                    trampCall( callProcedure( 'cdr',
                        begin
                          if @global_lisp_binding.has_key?('_cdr') then
                            trampCall(@_cdr)
                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:479"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_pair)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:479"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_take'] = true
    @_take = 
    trampCall(
          Proc.new { |_lis,_k| 
              begin
              end
              begin
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lis,_k| 
                          if ( 
                            trampCall( callProcedure( 'zero?',
                                begin
                                  if @global_lisp_binding.has_key?('_zero_QUMARK') then
                                    trampCall(@_zero_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _zero_QUMARK", "_zero_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:486"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_k)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:488"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                            Cell.new()
                          else
                              DelayedCallPacket.new( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      trampCall(@_cons)
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:487"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:487"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_lis)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:488"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))                                  ,Cell.new(
                                    trampCall( callProcedure( 'recur',
                                        begin
                                            trampCall(_recur)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:488"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'cdr',
                                              begin
                                                if @global_lisp_binding.has_key?('_cdr') then
                                                  trampCall(@_cdr)
                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:488"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_lis)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:488"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))                                        ,Cell.new(
                                          trampCall( callProcedure( '-',
                                              begin
                                                if @global_lisp_binding.has_key?('__MIMARK') then
                                                  trampCall(@__MIMARK)
                                                else raise NameError.new( "Error: undefined variable __MIMARK", "__MIMARK" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:488"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_k)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:488"] + __e.backtrace ) ; raise __e
                                                end                                              ,Cell.new(
                                              1
                                                       ))))
                                                 ))))
                                           )))
                          end
                      }
                    DelayedCallPacket.new( 'recur',
                        begin
                            trampCall(_recur)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:488"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:488"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                              trampCall(_k)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:488"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_drop'] = true
    @_drop = 
    trampCall(
          Proc.new { |_lis,_k| 
              begin
              end
              begin
                ___lambda = lambda { |_iter| 
                    _iter                     = 
                      Proc.new { |_lis,_k| 
                          if ( 
                            trampCall( callProcedure( 'zero?',
                                begin
                                  if @global_lisp_binding.has_key?('_zero_QUMARK') then
                                    trampCall(@_zero_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _zero_QUMARK", "_zero_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:493"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_k)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:493"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:493"] + __e.backtrace ) ; raise __e
                              end
                          else
                              DelayedCallPacket.new( 'iter',
                                  begin
                                      trampCall(_iter)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:493"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'cdr',
                                        begin
                                          if @global_lisp_binding.has_key?('_cdr') then
                                            trampCall(@_cdr)
                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:493"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_lis)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:493"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))                                  ,Cell.new(
                                    trampCall( callProcedure( '-',
                                        begin
                                          if @global_lisp_binding.has_key?('__MIMARK') then
                                            trampCall(@__MIMARK)
                                          else raise NameError.new( "Error: undefined variable __MIMARK", "__MIMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:493"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_k)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:493"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                        1
                                                 ))))
                                           )))
                          end
                      }
                    DelayedCallPacket.new( 'iter',
                        begin
                            trampCall(_iter)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:493"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:493"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                              trampCall(_k)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:493"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_take_EXMARK'] = true
    @_take_EXMARK = 
    trampCall(
          Proc.new { |_lis,_k| 
              begin
              end
              if ( 
                trampCall( callProcedure( 'zero?',
                    begin
                      if @global_lisp_binding.has_key?('_zero_QUMARK') then
                        trampCall(@_zero_QUMARK)
                      else raise NameError.new( "Error: undefined variable _zero_QUMARK", "_zero_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:497"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_k)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:498"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                Cell.new()
              else
                  begin
                      trampCall( callProcedure( 'set-cdr!',
                          begin
                            if @global_lisp_binding.has_key?('_set_MIMARKcdr_EXMARK') then
                              trampCall(@_set_MIMARKcdr_EXMARK)
                            else raise NameError.new( "Error: undefined variable _set_MIMARKcdr_EXMARK", "_set_MIMARKcdr_EXMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:498"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            trampCall( callProcedure( 'drop',
                                begin
                                  if @global_lisp_binding.has_key?('_drop') then
                                    trampCall(@_drop)
                                  else raise NameError.new( "Error: undefined variable _drop", "_drop" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:498"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lis)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:499"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  trampCall( callProcedure( '-',
                                      begin
                                        if @global_lisp_binding.has_key?('__MIMARK') then
                                          trampCall(@__MIMARK)
                                        else raise NameError.new( "Error: undefined variable __MIMARK", "__MIMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:498"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_k)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:498"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                      1
                                               ))))
                                         ))))                          ,Cell.new(
                          Cell.new()
                                   ))))
                      begin
                          trampCall(_lis)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:499"] + __e.backtrace ) ; raise __e
                      end
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_take_MIMARKright'] = true
    @_take_MIMARKright = 
    trampCall(
          Proc.new { |_lis,_k| 
              begin
              end
              begin
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_lag,_lead| 
                          if ( 
                            trampCall( callProcedure( 'pair?',
                                begin
                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                    trampCall(@_pair_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:508"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lead)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:509"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              DelayedCallPacket.new( 'lp',
                                  begin
                                      trampCall(_lp)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:509"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'cdr',
                                        begin
                                          if @global_lisp_binding.has_key?('_cdr') then
                                            trampCall(@_cdr)
                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:509"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_lag)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:510"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))                                  ,Cell.new(
                                    trampCall( callProcedure( 'cdr',
                                        begin
                                          if @global_lisp_binding.has_key?('_cdr') then
                                            trampCall(@_cdr)
                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:509"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_lead)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:509"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                           )))
                          else
                              begin
                                  trampCall(_lag)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:510"] + __e.backtrace ) ; raise __e
                              end
                          end
                      }
                    DelayedCallPacket.new( 'lp',
                        begin
                            trampCall(_lp)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:509"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:507"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          trampCall( callProcedure( 'drop',
                              begin
                                if @global_lisp_binding.has_key?('_drop') then
                                  trampCall(@_drop)
                                else raise NameError.new( "Error: undefined variable _drop", "_drop" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:507"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_lis)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:507"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                                begin
                                    trampCall(_k)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:507"] + __e.backtrace ) ; raise __e
                                end
                                       ))))
                                 )))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_drop_MIMARKright'] = true
    @_drop_MIMARKright = 
    trampCall(
          Proc.new { |_lis,_k| 
              begin
              end
              begin
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lag,_lead| 
                          if ( 
                            trampCall( callProcedure( 'pair?',
                                begin
                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                    trampCall(@_pair_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:515"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lead)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:516"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              DelayedCallPacket.new( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      trampCall(@_cons)
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:516"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:516"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_lag)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:516"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))                                  ,Cell.new(
                                    trampCall( callProcedure( 'recur',
                                        begin
                                            trampCall(_recur)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:516"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'cdr',
                                              begin
                                                if @global_lisp_binding.has_key?('_cdr') then
                                                  trampCall(@_cdr)
                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:516"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_lag)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:516"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))                                        ,Cell.new(
                                          trampCall( callProcedure( 'cdr',
                                              begin
                                                if @global_lisp_binding.has_key?('_cdr') then
                                                  trampCall(@_cdr)
                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:516"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_lead)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:516"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 ))))
                                           )))
                          else
                            Cell.new()
                          end
                      }
                    DelayedCallPacket.new( 'recur',
                        begin
                            trampCall(_recur)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:516"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:514"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          trampCall( callProcedure( 'drop',
                              begin
                                if @global_lisp_binding.has_key?('_drop') then
                                  trampCall(@_drop)
                                else raise NameError.new( "Error: undefined variable _drop", "_drop" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:514"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_lis)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:514"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                                begin
                                    trampCall(_k)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:514"] + __e.backtrace ) ; raise __e
                                end
                                       ))))
                                 )))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_drop_MIMARKright_EXMARK'] = true
    @_drop_MIMARKright_EXMARK = 
    trampCall(
          Proc.new { |_lis,_k| 
              begin
              end
              begin
                ___lambda = lambda { |_lead| 
                    if ( 
                      trampCall( callProcedure( 'pair?',
                          begin
                            if @global_lisp_binding.has_key?('_pair_QUMARK') then
                              trampCall(@_pair_QUMARK)
                            else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:527"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_lead)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:528"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                     ) then
                        begin
                          ___lambda = lambda { |_lp| 
                              _lp                               = 
                                Proc.new { |_lag,_lead| 
                                    if ( 
                                      trampCall( callProcedure( 'pair?',
                                          begin
                                            if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                              trampCall(@_pair_QUMARK)
                                            else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:527"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lead)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:528"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                     ) then
                                        DelayedCallPacket.new( 'lp',
                                            begin
                                                trampCall(_lp)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:528"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'cdr',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cdr') then
                                                      trampCall(@_cdr)
                                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:528"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_lag)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:529"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))                                            ,Cell.new(
                                              trampCall( callProcedure( 'cdr',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cdr') then
                                                      trampCall(@_cdr)
                                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:528"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_lead)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:528"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                                     )))
                                    else
                                        begin
                                            trampCall( callProcedure( 'set-cdr!',
                                                begin
                                                  if @global_lisp_binding.has_key?('_set_MIMARKcdr_EXMARK') then
                                                    trampCall(@_set_MIMARKcdr_EXMARK)
                                                  else raise NameError.new( "Error: undefined variable _set_MIMARKcdr_EXMARK", "_set_MIMARKcdr_EXMARK" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:529"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_lag)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:529"] + __e.backtrace ) ; raise __e
                                                  end                                                ,Cell.new(
                                                Cell.new()
                                                         ))))
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:530"] + __e.backtrace ) ; raise __e
                                            end
                                        end
                                    end
                                }
                              DelayedCallPacket.new( 'lp',
                                  begin
                                      trampCall(_lp)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:528"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:530"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    trampCall( callProcedure( 'cdr',
                                        begin
                                          if @global_lisp_binding.has_key?('_cdr') then
                                            trampCall(@_cdr)
                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:528"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_lead)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:528"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                           )))
                          } ; ___lambda.call(
                          nil
                                     )
                        end
                    else
                      Cell.new()
                    end
                } ; ___lambda.call(
                      trampCall( callProcedure( 'drop',
                          begin
                            if @global_lisp_binding.has_key?('_drop') then
                              trampCall(@_drop)
                            else raise NameError.new( "Error: undefined variable _drop", "_drop" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:523"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_lis)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:530"] + __e.backtrace ) ; raise __e
                            end                          ,Cell.new(
                            begin
                                trampCall(_k)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:523"] + __e.backtrace ) ; raise __e
                            end
                                   ))))
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_split_MIMARKat'] = true
    @_split_MIMARKat = 
    trampCall(
          Proc.new { |_x,_k| 
              begin
              end
              begin
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lis,_k| 
                          if ( 
                            trampCall( callProcedure( 'zero?',
                                begin
                                  if @global_lisp_binding.has_key?('_zero_QUMARK') then
                                    trampCall(@_zero_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _zero_QUMARK", "_zero_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:581"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_k)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:582"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              DelayedCallPacket.new( 'values',
                                  begin
                                    if @global_lisp_binding.has_key?('_values') then
                                      trampCall(@_values)
                                    else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:583"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  Cell.new()                                  ,Cell.new(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:583"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                          else
                              DelayedCallPacket.new( 'call-with-values',
                                  begin
                                    if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                      trampCall(@_call_MIMARKwith_MIMARKvalues)
                                    else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    Proc.new { || 
                                        trampCall( callProcedure( 'recur',
                                            begin
                                                trampCall(_recur)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:582"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'cdr',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cdr') then
                                                      trampCall(@_cdr)
                                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:582"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_lis)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:583"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))                                            ,Cell.new(
                                              trampCall( callProcedure( '-',
                                                  begin
                                                    if @global_lisp_binding.has_key?('__MIMARK') then
                                                      trampCall(@__MIMARK)
                                                    else raise NameError.new( "Error: undefined variable __MIMARK", "__MIMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:582"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_k)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:582"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,Cell.new(
                                                  1
                                                           ))))
                                                     ))))
                                    }                                  ,Cell.new(
                                    Proc.new { |_prefix,_suffix| 
                                        trampCall( callProcedure( 'values',
                                            begin
                                              if @global_lisp_binding.has_key?('_values') then
                                                trampCall(@_values)
                                              else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:583"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'cons',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cons') then
                                                      trampCall(@_cons)
                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:583"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'car',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_car') then
                                                            trampCall(@_car)
                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:583"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_lis)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:583"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))                                                  ,Cell.new(
                                                    begin
                                                        trampCall(_prefix)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:583"] + __e.backtrace ) ; raise __e
                                                    end
                                                           ))))                                            ,Cell.new(
                                              begin
                                                  trampCall(_suffix)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:583"] + __e.backtrace ) ; raise __e
                                              end
                                                     ))))
                                    }
                                           )))
                          end
                      }
                    DelayedCallPacket.new( 'recur',
                        begin
                            trampCall(_recur)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:582"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_x)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:580"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                              trampCall(_k)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:582"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_split_MIMARKat_EXMARK'] = true
    @_split_MIMARKat_EXMARK = 
    trampCall(
          Proc.new { |_x,_k| 
              begin
              end
              if ( 
                trampCall( callProcedure( 'zero?',
                    begin
                      if @global_lisp_binding.has_key?('_zero_QUMARK') then
                        trampCall(@_zero_QUMARK)
                      else raise NameError.new( "Error: undefined variable _zero_QUMARK", "_zero_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:587"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_k)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:588"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  DelayedCallPacket.new( 'values',
                      begin
                        if @global_lisp_binding.has_key?('_values') then
                          trampCall(@_values)
                        else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:591"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                      Cell.new()                      ,Cell.new(
                        begin
                            trampCall(_x)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:591"] + __e.backtrace ) ; raise __e
                        end
                               )))
              else
                  begin
                    ___lambda = lambda { |_prev| 
                        begin
                          ___lambda = lambda { |_suffix| 
                              trampCall( callProcedure( 'set-cdr!',
                                  begin
                                    if @global_lisp_binding.has_key?('_set_MIMARKcdr_EXMARK') then
                                      trampCall(@_set_MIMARKcdr_EXMARK)
                                    else raise NameError.new( "Error: undefined variable _set_MIMARKcdr_EXMARK", "_set_MIMARKcdr_EXMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:590"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_prev)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:590"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                  Cell.new()
                                           ))))
                              DelayedCallPacket.new( 'values',
                                  begin
                                    if @global_lisp_binding.has_key?('_values') then
                                      trampCall(@_values)
                                    else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:591"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_x)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:591"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_suffix)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:591"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                          } ; ___lambda.call(
                                trampCall( callProcedure( 'cdr',
                                    begin
                                      if @global_lisp_binding.has_key?('_cdr') then
                                        trampCall(@_cdr)
                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:589"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_prev)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:590"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                     )
                        end
                    } ; ___lambda.call(
                          trampCall( callProcedure( 'drop',
                              begin
                                if @global_lisp_binding.has_key?('_drop') then
                                  trampCall(@_drop)
                                else raise NameError.new( "Error: undefined variable _drop", "_drop" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:588"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_x)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:591"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                                trampCall( callProcedure( '-',
                                    begin
                                      if @global_lisp_binding.has_key?('__MIMARK') then
                                        trampCall(@__MIMARK)
                                      else raise NameError.new( "Error: undefined variable __MIMARK", "__MIMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:588"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_k)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:588"] + __e.backtrace ) ; raise __e
                                      end                                    ,Cell.new(
                                    1
                                             ))))
                                       ))))
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_last'] = true
    @_last = 
    trampCall(
          Proc.new { |_lis| 
              DelayedCallPacket.new( 'car',
                  begin
                    if @global_lisp_binding.has_key?('_car') then
                      trampCall(@_car)
                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:594"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'last-pair',
                        begin
                          if @global_lisp_binding.has_key?('_last_MIMARKpair') then
                            trampCall(@_last_MIMARKpair)
                          else raise NameError.new( "Error: undefined variable _last_MIMARKpair", "_last_MIMARKpair" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:594"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:594"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_last_MIMARKpair'] = true
    @_last_MIMARKpair = 
    trampCall(
          Proc.new { |_lis| 
              begin
              end
              begin
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_lis| 
                          begin
                            ___lambda = lambda { |_tail| 
                                if ( 
                                  trampCall( callProcedure( 'pair?',
                                      begin
                                        if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                          trampCall(@_pair_QUMARK)
                                        else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:600"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_tail)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:600"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                 ) then
                                    DelayedCallPacket.new( 'lp',
                                        begin
                                            trampCall(_lp)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:600"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_tail)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:600"] + __e.backtrace ) ; raise __e
                                          end
                                                 ))
                                else
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:600"] + __e.backtrace ) ; raise __e
                                    end
                                end
                            } ; ___lambda.call(
                                  trampCall( callProcedure( 'cdr',
                                      begin
                                        if @global_lisp_binding.has_key?('_cdr') then
                                          trampCall(@_cdr)
                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:599"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:600"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                       )
                          end
                      }
                    DelayedCallPacket.new( 'lp',
                        begin
                            trampCall(_lp)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:600"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:600"] + __e.backtrace ) ; raise __e
                          end
                                 ))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_unzip1'] = true
    @_unzip1 = 
    trampCall(
          Proc.new { |_lis| 
              DelayedCallPacket.new( 'map',
                  begin
                    if @global_lisp_binding.has_key?('_map') then
                      trampCall(@_map)
                    else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:606"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                      if @global_lisp_binding.has_key?('_car') then
                        trampCall(@_car)
                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:606"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_lis)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:606"] + __e.backtrace ) ; raise __e
                    end
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_unzip2'] = true
    @_unzip2 = 
    trampCall(
          Proc.new { |_lis| 
              begin
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lis| 
                          if ( 
                            trampCall( callProcedure( 'null-list?',
                                begin
                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                    trampCall(@_null_MIMARKlist_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:610"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lis)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:612"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              DelayedCallPacket.new( 'values',
                                  begin
                                    if @global_lisp_binding.has_key?('_values') then
                                      trampCall(@_values)
                                    else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:613"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:612"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:612"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                          else
                              begin
                                ___lambda = lambda { |_elt| 
                                    DelayedCallPacket.new( 'call-with-values',
                                        begin
                                          if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                            trampCall(@_call_MIMARKwith_MIMARKvalues)
                                          else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          Proc.new { || 
                                              trampCall( callProcedure( 'recur',
                                                  begin
                                                      trampCall(_recur)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:612"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'cdr',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cdr') then
                                                            trampCall(@_cdr)
                                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:612"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_lis)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:612"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))
                                                           )))
                                          }                                        ,Cell.new(
                                          Proc.new { |_a,_b| 
                                              trampCall( callProcedure( 'values',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_values') then
                                                      trampCall(@_values)
                                                    else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:613"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            trampCall(@_cons)
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:614"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'car',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_car') then
                                                                  trampCall(@_car)
                                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:613"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_elt)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:614"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_a)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:613"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            trampCall(@_cons)
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:614"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'cadr',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cadr') then
                                                                  trampCall(@_cadr)
                                                                else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:614"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_elt)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:614"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_b)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:614"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))
                                                           ))))
                                          }
                                                 )))
                                } ; ___lambda.call(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:613"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:612"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                           )
                              end
                          end
                      }
                    DelayedCallPacket.new( 'recur',
                        begin
                            trampCall(_recur)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:612"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:612"] + __e.backtrace ) ; raise __e
                          end
                                 ))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_unzip3'] = true
    @_unzip3 = 
    trampCall(
          Proc.new { |_lis| 
              begin
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lis| 
                          if ( 
                            trampCall( callProcedure( 'null-list?',
                                begin
                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                    trampCall(@_null_MIMARKlist_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:618"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lis)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:620"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              DelayedCallPacket.new( 'values',
                                  begin
                                    if @global_lisp_binding.has_key?('_values') then
                                      trampCall(@_values)
                                    else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:621"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:620"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:620"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:620"] + __e.backtrace ) ; raise __e
                                    end
                                           ))))
                          else
                              begin
                                ___lambda = lambda { |_elt| 
                                    DelayedCallPacket.new( 'call-with-values',
                                        begin
                                          if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                            trampCall(@_call_MIMARKwith_MIMARKvalues)
                                          else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          Proc.new { || 
                                              trampCall( callProcedure( 'recur',
                                                  begin
                                                      trampCall(_recur)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:620"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'cdr',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cdr') then
                                                            trampCall(@_cdr)
                                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:620"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_lis)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:620"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))
                                                           )))
                                          }                                        ,Cell.new(
                                          Proc.new { |_a,_b,_c| 
                                              trampCall( callProcedure( 'values',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_values') then
                                                      trampCall(@_values)
                                                    else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:621"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            trampCall(@_cons)
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:623"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'car',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_car') then
                                                                  trampCall(@_car)
                                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:621"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_elt)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:623"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_a)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:621"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            trampCall(@_cons)
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:623"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'cadr',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cadr') then
                                                                  trampCall(@_cadr)
                                                                else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:622"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_elt)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:623"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_b)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:622"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            trampCall(@_cons)
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:623"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'caddr',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_caddr') then
                                                                  trampCall(@_caddr)
                                                                else raise NameError.new( "Error: undefined variable _caddr", "_caddr" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:623"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_elt)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:623"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_c)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:623"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))
                                                           )))))
                                          }
                                                 )))
                                } ; ___lambda.call(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:621"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:620"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                           )
                              end
                          end
                      }
                    DelayedCallPacket.new( 'recur',
                        begin
                            trampCall(_recur)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:620"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:620"] + __e.backtrace ) ; raise __e
                          end
                                 ))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_unzip4'] = true
    @_unzip4 = 
    trampCall(
          Proc.new { |_lis| 
              begin
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lis| 
                          if ( 
                            trampCall( callProcedure( 'null-list?',
                                begin
                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                    trampCall(@_null_MIMARKlist_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:627"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lis)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:629"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              DelayedCallPacket.new( 'values',
                                  begin
                                    if @global_lisp_binding.has_key?('_values') then
                                      trampCall(@_values)
                                    else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:630"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:629"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:629"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:629"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:629"] + __e.backtrace ) ; raise __e
                                    end
                                           )))))
                          else
                              begin
                                ___lambda = lambda { |_elt| 
                                    DelayedCallPacket.new( 'call-with-values',
                                        begin
                                          if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                            trampCall(@_call_MIMARKwith_MIMARKvalues)
                                          else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          Proc.new { || 
                                              trampCall( callProcedure( 'recur',
                                                  begin
                                                      trampCall(_recur)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:629"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'cdr',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cdr') then
                                                            trampCall(@_cdr)
                                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:629"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_lis)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:629"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))
                                                           )))
                                          }                                        ,Cell.new(
                                          Proc.new { |_a,_b,_c,_d| 
                                              trampCall( callProcedure( 'values',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_values') then
                                                      trampCall(@_values)
                                                    else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:630"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            trampCall(@_cons)
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:633"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'car',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_car') then
                                                                  trampCall(@_car)
                                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:630"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_elt)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:633"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_a)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:630"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            trampCall(@_cons)
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:633"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'cadr',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cadr') then
                                                                  trampCall(@_cadr)
                                                                else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:631"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_elt)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:633"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_b)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:631"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            trampCall(@_cons)
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:633"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'caddr',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_caddr') then
                                                                  trampCall(@_caddr)
                                                                else raise NameError.new( "Error: undefined variable _caddr", "_caddr" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:632"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_elt)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:633"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_c)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:632"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            trampCall(@_cons)
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:633"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'cadddr',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cadddr') then
                                                                  trampCall(@_cadddr)
                                                                else raise NameError.new( "Error: undefined variable _cadddr", "_cadddr" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:633"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_elt)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:633"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_d)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:633"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))
                                                           ))))))
                                          }
                                                 )))
                                } ; ___lambda.call(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:630"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:629"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                           )
                              end
                          end
                      }
                    DelayedCallPacket.new( 'recur',
                        begin
                            trampCall(_recur)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:629"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:629"] + __e.backtrace ) ; raise __e
                          end
                                 ))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_unzip5'] = true
    @_unzip5 = 
    trampCall(
          Proc.new { |_lis| 
              begin
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lis| 
                          if ( 
                            trampCall( callProcedure( 'null-list?',
                                begin
                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                    trampCall(@_null_MIMARKlist_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:637"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lis)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:639"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              DelayedCallPacket.new( 'values',
                                  begin
                                    if @global_lisp_binding.has_key?('_values') then
                                      trampCall(@_values)
                                    else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:640"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:639"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:639"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:639"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:639"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:639"] + __e.backtrace ) ; raise __e
                                    end
                                           ))))))
                          else
                              begin
                                ___lambda = lambda { |_elt| 
                                    DelayedCallPacket.new( 'call-with-values',
                                        begin
                                          if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                            trampCall(@_call_MIMARKwith_MIMARKvalues)
                                          else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          Proc.new { || 
                                              trampCall( callProcedure( 'recur',
                                                  begin
                                                      trampCall(_recur)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:639"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'cdr',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cdr') then
                                                            trampCall(@_cdr)
                                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:639"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_lis)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:639"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))
                                                           )))
                                          }                                        ,Cell.new(
                                          Proc.new { |_a,_b,_c,_d,_e| 
                                              trampCall( callProcedure( 'values',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_values') then
                                                      trampCall(@_values)
                                                    else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:640"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            trampCall(@_cons)
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:644"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'car',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_car') then
                                                                  trampCall(@_car)
                                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:644"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_elt)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:644"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_a)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:640"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            trampCall(@_cons)
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:644"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'cadr',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cadr') then
                                                                  trampCall(@_cadr)
                                                                else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:641"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_elt)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:644"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_b)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:641"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            trampCall(@_cons)
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:644"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'caddr',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_caddr') then
                                                                  trampCall(@_caddr)
                                                                else raise NameError.new( "Error: undefined variable _caddr", "_caddr" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:642"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_elt)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:644"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_c)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:642"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            trampCall(@_cons)
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:644"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'cadddr',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cadddr') then
                                                                  trampCall(@_cadddr)
                                                                else raise NameError.new( "Error: undefined variable _cadddr", "_cadddr" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:643"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_elt)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:644"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_d)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:643"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            trampCall(@_cons)
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:644"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'car',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_car') then
                                                                  trampCall(@_car)
                                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:644"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                trampCall( callProcedure( 'cddddr',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_cddddr') then
                                                                        trampCall(@_cddddr)
                                                                      else raise NameError.new( "Error: undefined variable _cddddr", "_cddddr" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:644"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      begin
                                                                          trampCall(_elt)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:644"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                             )))
                                                                       )))                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_e)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:644"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))
                                                           )))))))
                                          }
                                                 )))
                                } ; ___lambda.call(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:644"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:639"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                           )
                              end
                          end
                      }
                    DelayedCallPacket.new( 'recur',
                        begin
                            trampCall(_recur)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:639"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:639"] + __e.backtrace ) ; raise __e
                          end
                                 ))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_append_EXMARK'] = true
    @_append_EXMARK = 
    trampCall(
          Proc.new { |*__rest__| _lists = __rest__[0] ;  
              begin
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_lists,_prev| 
                          if ( 
                            trampCall( callProcedure( 'not',
                                begin
                                  if @global_lisp_binding.has_key?('_not') then
                                    trampCall(@_not)
                                  else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:656"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  trampCall( callProcedure( 'pair?',
                                      begin
                                        if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                          trampCall(@_pair_QUMARK)
                                        else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:665"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lists)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:655"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                         )))
                           ) then
                              begin
                                  trampCall(_prev)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:653"] + __e.backtrace ) ; raise __e
                              end
                          else
                              begin
                                ___lambda = lambda { |_first,_rest| 
                                    if ( 
                                      trampCall( callProcedure( 'not',
                                          begin
                                            if @global_lisp_binding.has_key?('_not') then
                                              trampCall(@_not)
                                            else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:656"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            trampCall( callProcedure( 'pair?',
                                                begin
                                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                    trampCall(@_pair_QUMARK)
                                                  else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:665"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_first)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:667"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                   )))
                                     ) then
                                        DelayedCallPacket.new( 'lp',
                                            begin
                                                trampCall(_lp)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:656"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_rest)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:666"] + __e.backtrace ) ; raise __e
                                              end                                            ,Cell.new(
                                              begin
                                                  trampCall(_first)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:667"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                    else
                                        begin
                                          ___lambda = lambda { |_lp2| 
                                              _lp2                                               = 
                                                Proc.new { |_tail_MIMARKcons,_rest| 
                                                    if ( 
                                                      trampCall( callProcedure( 'pair?',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                              trampCall(@_pair_QUMARK)
                                                            else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:665"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_rest)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:666"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))
                                                     ) then
                                                        begin
                                                          ___lambda = lambda { |_next,_rest| 
                                                              trampCall( callProcedure( 'set-cdr!',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_set_MIMARKcdr_EXMARK') then
                                                                      trampCall(@_set_MIMARKcdr_EXMARK)
                                                                    else raise NameError.new( "Error: undefined variable _set_MIMARKcdr_EXMARK", "_set_MIMARKcdr_EXMARK" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:664"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_tail_MIMARKcons)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:665"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,Cell.new(
                                                                    begin
                                                                        trampCall(_next)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:665"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           ))))
                                                              DelayedCallPacket.new( 'lp2',
                                                                  begin
                                                                      trampCall(_lp2)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:665"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    if ( 
                                                                      trampCall( callProcedure( 'pair?',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                                              trampCall(@_pair_QUMARK)
                                                                            else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:665"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_next)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:665"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))
                                                                     ) then
                                                                        trampCall( callProcedure( 'last-pair',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_last_MIMARKpair') then
                                                                                trampCall(@_last_MIMARKpair)
                                                                              else raise NameError.new( "Error: undefined variable _last_MIMARKpair", "_last_MIMARKpair" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:665"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  trampCall(_next)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:665"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                                     )))
                                                                    else
                                                                        begin
                                                                            trampCall(_tail_MIMARKcons)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:665"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                    end                                                                  ,Cell.new(
                                                                    begin
                                                                        trampCall(_rest)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:666"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))
                                                          } ; ___lambda.call(
                                                                trampCall( callProcedure( 'car',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_car') then
                                                                        trampCall(@_car)
                                                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:662"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      begin
                                                                          trampCall(_rest)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:666"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                             )))                                                              ,
                                                                trampCall( callProcedure( 'cdr',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_cdr') then
                                                                        trampCall(@_cdr)
                                                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:663"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      begin
                                                                          trampCall(_rest)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:666"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                             )))
                                                                     )
                                                        end
                                                    else
                                                        begin
                                                            trampCall(_first)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:667"] + __e.backtrace ) ; raise __e
                                                        end
                                                    end
                                                }
                                              DelayedCallPacket.new( 'lp2',
                                                  begin
                                                      trampCall(_lp2)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:665"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'last-pair',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_last_MIMARKpair') then
                                                            trampCall(@_last_MIMARKpair)
                                                          else raise NameError.new( "Error: undefined variable _last_MIMARKpair", "_last_MIMARKpair" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:665"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_first)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:667"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))                                                  ,Cell.new(
                                                    begin
                                                        trampCall(_rest)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:666"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                          } ; ___lambda.call(
                                          nil
                                                     )
                                        end
                                    end
                                } ; ___lambda.call(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:662"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lists)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:655"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))                                    ,
                                      trampCall( callProcedure( 'cdr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cdr') then
                                              trampCall(@_cdr)
                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:663"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lists)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:655"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                           )
                              end
                          end
                      }
                    DelayedCallPacket.new( 'lp',
                        begin
                            trampCall(_lp)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:656"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lists)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:655"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                        Cell.new()
                                 )))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_append_MIMARKreverse'] = true
    @_append_MIMARKreverse = 
    trampCall(
          Proc.new { |_rev_MIMARKhead,_tail| 
              begin
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_rev_MIMARKhead,_tail| 
                          if ( 
                            trampCall( callProcedure( 'null-list?',
                                begin
                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                    trampCall(@_null_MIMARKlist_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:690"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_rev_MIMARKhead)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:691"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              begin
                                  trampCall(_tail)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:691"] + __e.backtrace ) ; raise __e
                              end
                          else
                              DelayedCallPacket.new( 'lp',
                                  begin
                                      trampCall(_lp)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:691"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'cdr',
                                        begin
                                          if @global_lisp_binding.has_key?('_cdr') then
                                            trampCall(@_cdr)
                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:691"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_rev_MIMARKhead)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:691"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))                                  ,Cell.new(
                                    trampCall( callProcedure( 'cons',
                                        begin
                                          if @global_lisp_binding.has_key?('_cons') then
                                            trampCall(@_cons)
                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:691"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'car',
                                              begin
                                                if @global_lisp_binding.has_key?('_car') then
                                                  trampCall(@_car)
                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:691"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_rev_MIMARKhead)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:691"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))                                        ,Cell.new(
                                          begin
                                              trampCall(_tail)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:691"] + __e.backtrace ) ; raise __e
                                          end
                                                 ))))
                                           )))
                          end
                      }
                    DelayedCallPacket.new( 'lp',
                        begin
                            trampCall(_lp)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:691"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_rev_MIMARKhead)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:691"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                              trampCall(_tail)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:691"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_append_MIMARKreverse_EXMARK'] = true
    @_append_MIMARKreverse_EXMARK = 
    trampCall(
          Proc.new { |_rev_MIMARKhead,_tail| 
              begin
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_rev_MIMARKhead,_tail| 
                          if ( 
                            trampCall( callProcedure( 'null-list?',
                                begin
                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                    trampCall(@_null_MIMARKlist_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:695"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_rev_MIMARKhead)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:698"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              begin
                                  trampCall(_tail)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:697"] + __e.backtrace ) ; raise __e
                              end
                          else
                              begin
                                ___lambda = lambda { |_next_MIMARKrev| 
                                    trampCall( callProcedure( 'set-cdr!',
                                        begin
                                          if @global_lisp_binding.has_key?('_set_MIMARKcdr_EXMARK') then
                                            trampCall(@_set_MIMARKcdr_EXMARK)
                                          else raise NameError.new( "Error: undefined variable _set_MIMARKcdr_EXMARK", "_set_MIMARKcdr_EXMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:697"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_rev_MIMARKhead)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:698"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                          begin
                                              trampCall(_tail)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:697"] + __e.backtrace ) ; raise __e
                                          end
                                                 ))))
                                    DelayedCallPacket.new( 'lp',
                                        begin
                                            trampCall(_lp)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:698"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_next_MIMARKrev)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:698"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                          begin
                                              trampCall(_rev_MIMARKhead)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:698"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                } ; ___lambda.call(
                                      trampCall( callProcedure( 'cdr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cdr') then
                                              trampCall(@_cdr)
                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:696"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_rev_MIMARKhead)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:698"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                           )
                              end
                          end
                      }
                    DelayedCallPacket.new( 'lp',
                        begin
                            trampCall(_lp)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:698"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_rev_MIMARKhead)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:698"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                              trampCall(_tail)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:697"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_concatenate'] = true
    @_concatenate = 
    trampCall(
          Proc.new { |_lists| 
              DelayedCallPacket.new( 'reduce-right',
                  begin
                    if @global_lisp_binding.has_key?('_reduce_MIMARKright') then
                      trampCall(@_reduce_MIMARKright)
                    else raise NameError.new( "Error: undefined variable _reduce_MIMARKright", "_reduce_MIMARKright" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:701"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                      if @global_lisp_binding.has_key?('_append') then
                        trampCall(@_append)
                      else raise NameError.new( "Error: undefined variable _append", "_append" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:701"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                  Cell.new()                  ,Cell.new(
                    begin
                        trampCall(_lists)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:701"] + __e.backtrace ) ; raise __e
                    end
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_concatenate_EXMARK'] = true
    @_concatenate_EXMARK = 
    trampCall(
          Proc.new { |_lists| 
              DelayedCallPacket.new( 'reduce-right',
                  begin
                    if @global_lisp_binding.has_key?('_reduce_MIMARKright') then
                      trampCall(@_reduce_MIMARKright)
                    else raise NameError.new( "Error: undefined variable _reduce_MIMARKright", "_reduce_MIMARKright" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:702"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                      if @global_lisp_binding.has_key?('_append_EXMARK') then
                        trampCall(@_append_EXMARK)
                      else raise NameError.new( "Error: undefined variable _append_EXMARK", "_append_EXMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:702"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                  Cell.new()                  ,Cell.new(
                    begin
                        trampCall(_lists)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:702"] + __e.backtrace ) ; raise __e
                    end
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['__PAMARKcdrs'] = true
    @__PAMARKcdrs = 
    trampCall(
          Proc.new { |_lists| 
              DelayedCallPacket.new( 'call-with-current-continuation',
                  begin
                    if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKcurrent_MIMARKcontinuation') then
                      trampCall(@_call_MIMARKwith_MIMARKcurrent_MIMARKcontinuation)
                    else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKcurrent_MIMARKcontinuation", "_call_MIMARKwith_MIMARKcurrent_MIMARKcontinuation" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:725"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    Proc.new { |_abort| 
                        begin
                          ___lambda = lambda { |_recur| 
                              _recur                               = 
                                Proc.new { |_lists| 
                                    if ( 
                                      trampCall( callProcedure( 'pair?',
                                          begin
                                            if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                              trampCall(@_pair_QUMARK)
                                            else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:728"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lists)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:731"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                     ) then
                                        begin
                                          ___lambda = lambda { |_lis| 
                                              if ( 
                                                trampCall( callProcedure( 'null-list?',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                        trampCall(@_null_MIMARKlist_QUMARK)
                                                      else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:730"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_lis)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:731"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                               ) then
                                                  trampCall( callProcedure( 'abort',
                                                      begin
                                                          trampCall(_abort)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:730"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                      Cell.new()
                                                               )))
                                              else
                                                  trampCall( callProcedure( 'cons',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_cons') then
                                                          trampCall(@_cons)
                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:731"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        trampCall( callProcedure( 'cdr',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_cdr') then
                                                                trampCall(@_cdr)
                                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:731"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_lis)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:731"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))                                                      ,Cell.new(
                                                        trampCall( callProcedure( 'recur',
                                                            begin
                                                                trampCall(_recur)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:731"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              trampCall( callProcedure( 'cdr',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_cdr') then
                                                                      trampCall(@_cdr)
                                                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:731"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_lists)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:731"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))
                                                                     )))
                                                               ))))
                                              end
                                          } ; ___lambda.call(
                                                trampCall( callProcedure( 'car',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_car') then
                                                        trampCall(@_car)
                                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:729"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_lists)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:731"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                                     )
                                        end
                                    else
                                      Cell.new()
                                    end
                                }
                              trampCall( callProcedure( 'recur',
                                  begin
                                      trampCall(_recur)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:731"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_lists)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:731"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                          } ; ___lambda.call(
                          nil
                                     )
                        end
                    }
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['__PAMARKcars_PLMARK'] = true
    @__PAMARKcars_PLMARK = 
    trampCall(
          Proc.new { |_lists,_last_MIMARKelt| 
              begin
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lists| 
                          if ( 
                            trampCall( callProcedure( 'pair?',
                                begin
                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                    trampCall(@_pair_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:736"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lists)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:736"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              DelayedCallPacket.new( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      trampCall(@_cons)
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:736"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'caar',
                                        begin
                                          if @global_lisp_binding.has_key?('_caar') then
                                            trampCall(@_caar)
                                          else raise NameError.new( "Error: undefined variable _caar", "_caar" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:736"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_lists)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:736"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))                                  ,Cell.new(
                                    trampCall( callProcedure( 'recur',
                                        begin
                                            trampCall(_recur)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:736"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'cdr',
                                              begin
                                                if @global_lisp_binding.has_key?('_cdr') then
                                                  trampCall(@_cdr)
                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:736"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_lists)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:736"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 )))
                                           )))
                          else
                              DelayedCallPacket.new( 'list',
                                  begin
                                    if @global_lisp_binding.has_key?('_list') then
                                      trampCall(@_list)
                                    else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:736"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_last_MIMARKelt)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:736"] + __e.backtrace ) ; raise __e
                                    end
                                           ))
                          end
                      }
                    DelayedCallPacket.new( 'recur',
                        begin
                            trampCall(_recur)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:736"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lists)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:736"] + __e.backtrace ) ; raise __e
                          end
                                 ))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['__PAMARKcars_PLMARKcdrs'] = true
    @__PAMARKcars_PLMARKcdrs = 
    trampCall(
          Proc.new { |_lists| 
              DelayedCallPacket.new( 'call-with-current-continuation',
                  begin
                    if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKcurrent_MIMARKcontinuation') then
                      trampCall(@_call_MIMARKwith_MIMARKcurrent_MIMARKcontinuation)
                    else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKcurrent_MIMARKcontinuation", "_call_MIMARKwith_MIMARKcurrent_MIMARKcontinuation" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:743"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    Proc.new { |_abort| 
                        begin
                          ___lambda = lambda { |_recur| 
                              _recur                               = 
                                Proc.new { |_lists| 
                                    if ( 
                                      trampCall( callProcedure( 'pair?',
                                          begin
                                            if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                              trampCall(@_pair_QUMARK)
                                            else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:746"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lists)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:747"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                     ) then
                                        trampCall( callProcedure( 'call-with-values',
                                            begin
                                              if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                trampCall(@_call_MIMARKwith_MIMARKvalues)
                                              else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              Proc.new { || 
                                                  trampCall( callProcedure( 'car+cdr',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_car_PLMARKcdr') then
                                                          trampCall(@_car_PLMARKcdr)
                                                        else raise NameError.new( "Error: undefined variable _car_PLMARKcdr", "_car_PLMARKcdr" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:749"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_lists)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:747"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                              }                                            ,Cell.new(
                                              Proc.new { |_list,_other_MIMARKlists| 
                                                  if ( 
                                                    trampCall( callProcedure( 'null-list?',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                            trampCall(@_null_MIMARKlist_QUMARK)
                                                          else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:748"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_list)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:749"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))
                                                   ) then
                                                      trampCall( callProcedure( 'abort',
                                                          begin
                                                              trampCall(_abort)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:748"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                          Cell.new()                                                          ,Cell.new(
                                                          Cell.new()
                                                                   ))))
                                                  else
                                                      trampCall( callProcedure( 'call-with-values',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                              trampCall(@_call_MIMARKwith_MIMARKvalues)
                                                            else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            Proc.new { || 
                                                                trampCall( callProcedure( 'car+cdr',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_car_PLMARKcdr') then
                                                                        trampCall(@_car_PLMARKcdr)
                                                                      else raise NameError.new( "Error: undefined variable _car_PLMARKcdr", "_car_PLMARKcdr" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:749"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      begin
                                                                          trampCall(_list)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:749"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                             )))
                                                            }                                                          ,Cell.new(
                                                            Proc.new { |_a,_d| 
                                                                trampCall( callProcedure( 'call-with-values',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                                        trampCall(@_call_MIMARKwith_MIMARKvalues)
                                                                      else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      Proc.new { || 
                                                                          trampCall( callProcedure( 'recur',
                                                                              begin
                                                                                  trampCall(_recur)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:750"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                                begin
                                                                                    trampCall(_other_MIMARKlists)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:750"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                                       )))
                                                                      }                                                                    ,Cell.new(
                                                                      Proc.new { |_cars,_cdrs| 
                                                                          trampCall( callProcedure( 'values',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_values') then
                                                                                  trampCall(@_values)
                                                                                else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:752"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                                trampCall( callProcedure( 'cons',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                        trampCall(@_cons)
                                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:751"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    Cell.new(
                                                                                      begin
                                                                                          trampCall(_a)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:751"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,Cell.new(
                                                                                      begin
                                                                                          trampCall(_cars)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:751"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                             ))))                                                                              ,Cell.new(
                                                                                trampCall( callProcedure( 'cons',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                        trampCall(@_cons)
                                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:751"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    Cell.new(
                                                                                      begin
                                                                                          trampCall(_d)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:751"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,Cell.new(
                                                                                      begin
                                                                                          trampCall(_cdrs)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:751"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                             ))))
                                                                                       ))))
                                                                      }
                                                                             ))))
                                                            }
                                                                   ))))
                                                  end
                                              }
                                                     ))))
                                    else
                                        trampCall( callProcedure( 'values',
                                            begin
                                              if @global_lisp_binding.has_key?('_values') then
                                                trampCall(@_values)
                                              else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:752"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                            Cell.new()                                            ,Cell.new(
                                            Cell.new()
                                                     ))))
                                    end
                                }
                              trampCall( callProcedure( 'recur',
                                  begin
                                      trampCall(_recur)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:750"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_lists)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:747"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                          } ; ___lambda.call(
                          nil
                                     )
                        end
                    }
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['__PAMARKcars_PLMARKcdrs_PLMARK'] = true
    @__PAMARKcars_PLMARKcdrs_PLMARK = 
    trampCall(
          Proc.new { |_lists,_cars_MIMARKfinal| 
              DelayedCallPacket.new( 'call-with-current-continuation',
                  begin
                    if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKcurrent_MIMARKcontinuation') then
                      trampCall(@_call_MIMARKwith_MIMARKcurrent_MIMARKcontinuation)
                    else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKcurrent_MIMARKcontinuation", "_call_MIMARKwith_MIMARKcurrent_MIMARKcontinuation" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:757"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    Proc.new { |_abort| 
                        begin
                          ___lambda = lambda { |_recur| 
                              _recur                               = 
                                Proc.new { |_lists| 
                                    if ( 
                                      trampCall( callProcedure( 'pair?',
                                          begin
                                            if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                              trampCall(@_pair_QUMARK)
                                            else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:760"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lists)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:761"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                     ) then
                                        trampCall( callProcedure( 'call-with-values',
                                            begin
                                              if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                trampCall(@_call_MIMARKwith_MIMARKvalues)
                                              else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              Proc.new { || 
                                                  trampCall( callProcedure( 'car+cdr',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_car_PLMARKcdr') then
                                                          trampCall(@_car_PLMARKcdr)
                                                        else raise NameError.new( "Error: undefined variable _car_PLMARKcdr", "_car_PLMARKcdr" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:763"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_lists)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:761"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                              }                                            ,Cell.new(
                                              Proc.new { |_list,_other_MIMARKlists| 
                                                  if ( 
                                                    trampCall( callProcedure( 'null-list?',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                            trampCall(@_null_MIMARKlist_QUMARK)
                                                          else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:762"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_list)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:766"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))
                                                   ) then
                                                      trampCall( callProcedure( 'abort',
                                                          begin
                                                              trampCall(_abort)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:762"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                          Cell.new()                                                          ,Cell.new(
                                                          Cell.new()
                                                                   ))))
                                                  else
                                                      trampCall( callProcedure( 'call-with-values',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                              trampCall(@_call_MIMARKwith_MIMARKvalues)
                                                            else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            Proc.new { || 
                                                                trampCall( callProcedure( 'car+cdr',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_car_PLMARKcdr') then
                                                                        trampCall(@_car_PLMARKcdr)
                                                                      else raise NameError.new( "Error: undefined variable _car_PLMARKcdr", "_car_PLMARKcdr" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:763"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      begin
                                                                          trampCall(_list)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:766"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                             )))
                                                            }                                                          ,Cell.new(
                                                            Proc.new { |_a,_d| 
                                                                trampCall( callProcedure( 'call-with-values',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                                        trampCall(@_call_MIMARKwith_MIMARKvalues)
                                                                      else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      Proc.new { || 
                                                                          trampCall( callProcedure( 'recur',
                                                                              begin
                                                                                  trampCall(_recur)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:764"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                                begin
                                                                                    trampCall(_other_MIMARKlists)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:764"] + __e.backtrace ) ; raise __e
                                                                                end
                                                                                       )))
                                                                      }                                                                    ,Cell.new(
                                                                      Proc.new { |_cars,_cdrs| 
                                                                          trampCall( callProcedure( 'values',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_values') then
                                                                                  trampCall(@_values)
                                                                                else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:766"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                                trampCall( callProcedure( 'cons',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                        trampCall(@_cons)
                                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:765"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    Cell.new(
                                                                                      begin
                                                                                          trampCall(_a)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:765"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,Cell.new(
                                                                                      begin
                                                                                          trampCall(_cars)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:765"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                             ))))                                                                              ,Cell.new(
                                                                                trampCall( callProcedure( 'cons',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                                        trampCall(@_cons)
                                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:765"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    Cell.new(
                                                                                      begin
                                                                                          trampCall(_d)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:765"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,Cell.new(
                                                                                      begin
                                                                                          trampCall(_cdrs)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:765"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                             ))))
                                                                                       ))))
                                                                      }
                                                                             ))))
                                                            }
                                                                   ))))
                                                  end
                                              }
                                                     ))))
                                    else
                                        trampCall( callProcedure( 'values',
                                            begin
                                              if @global_lisp_binding.has_key?('_values') then
                                                trampCall(@_values)
                                              else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:766"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'list',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_list') then
                                                      trampCall(@_list)
                                                    else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:766"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_cars_MIMARKfinal)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:766"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))                                            ,Cell.new(
                                            Cell.new()
                                                     ))))
                                    end
                                }
                              trampCall( callProcedure( 'recur',
                                  begin
                                      trampCall(_recur)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:764"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_lists)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:761"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                          } ; ___lambda.call(
                          nil
                                     )
                        end
                    }
                           ))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['__PAMARKcars_PLMARKcdrs_SLMARKno_MIMARKtest'] = true
    @__PAMARKcars_PLMARKcdrs_SLMARKno_MIMARKtest = 
    trampCall(
          Proc.new { |_lists| 
              begin
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lists| 
                          if ( 
                            trampCall( callProcedure( 'pair?',
                                begin
                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                    trampCall(@_pair_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:771"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lists)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:772"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              DelayedCallPacket.new( 'call-with-values',
                                  begin
                                    if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                      trampCall(@_call_MIMARKwith_MIMARKvalues)
                                    else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    Proc.new { || 
                                        trampCall( callProcedure( 'car+cdr',
                                            begin
                                              if @global_lisp_binding.has_key?('_car_PLMARKcdr') then
                                                trampCall(@_car_PLMARKcdr)
                                              else raise NameError.new( "Error: undefined variable _car_PLMARKcdr", "_car_PLMARKcdr" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:773"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_lists)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:772"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                    }                                  ,Cell.new(
                                    Proc.new { |_list,_other_MIMARKlists| 
                                        trampCall( callProcedure( 'call-with-values',
                                            begin
                                              if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                trampCall(@_call_MIMARKwith_MIMARKvalues)
                                              else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              Proc.new { || 
                                                  trampCall( callProcedure( 'car+cdr',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_car_PLMARKcdr') then
                                                          trampCall(@_car_PLMARKcdr)
                                                        else raise NameError.new( "Error: undefined variable _car_PLMARKcdr", "_car_PLMARKcdr" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:773"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_list)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:773"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                              }                                            ,Cell.new(
                                              Proc.new { |_a,_d| 
                                                  trampCall( callProcedure( 'call-with-values',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                          trampCall(@_call_MIMARKwith_MIMARKvalues)
                                                        else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        Proc.new { || 
                                                            trampCall( callProcedure( 'recur',
                                                                begin
                                                                    trampCall(_recur)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:774"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      trampCall(_other_MIMARKlists)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:774"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         )))
                                                        }                                                      ,Cell.new(
                                                        Proc.new { |_cars,_cdrs| 
                                                            trampCall( callProcedure( 'values',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_values') then
                                                                    trampCall(@_values)
                                                                  else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:776"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  trampCall( callProcedure( 'cons',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                          trampCall(@_cons)
                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:775"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            trampCall(_a)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:775"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,Cell.new(
                                                                        begin
                                                                            trampCall(_cars)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:775"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               ))))                                                                ,Cell.new(
                                                                  trampCall( callProcedure( 'cons',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                          trampCall(@_cons)
                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:775"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            trampCall(_d)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:775"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,Cell.new(
                                                                        begin
                                                                            trampCall(_cdrs)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:775"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               ))))
                                                                         ))))
                                                        }
                                                               ))))
                                              }
                                                     ))))
                                    }
                                           )))
                          else
                              DelayedCallPacket.new( 'values',
                                  begin
                                    if @global_lisp_binding.has_key?('_values') then
                                      trampCall(@_values)
                                    else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:776"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  Cell.new()                                  ,Cell.new(
                                  Cell.new()
                                           )))
                          end
                      }
                    DelayedCallPacket.new( 'recur',
                        begin
                            trampCall(_recur)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:774"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lists)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:772"] + __e.backtrace ) ; raise __e
                          end
                                 ))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_count'] = true
    @_count = 
    trampCall(
          Proc.new { |_pred,_list1,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              if ( 
                trampCall( callProcedure( 'pair?',
                    begin
                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                        trampCall(@_pair_QUMARK)
                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:783"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_lists)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:788"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  begin
                    ___lambda = lambda { |_lp| 
                        _lp                         = 
                          Proc.new { |_list1,_lists,_i| 
                              if ( 
                                trampCall( callProcedure( 'null-list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                        trampCall(@_null_MIMARKlist_QUMARK)
                                      else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:795"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_list1)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:794"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                               ) then
                                  begin
                                      trampCall(_i)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  DelayedCallPacket.new( 'call-with-values',
                                      begin
                                        if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                          trampCall(@_call_MIMARKwith_MIMARKvalues)
                                        else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        Proc.new { || 
                                            trampCall( callProcedure( '%cars+cdrs',
                                                begin
                                                  if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs') then
                                                    trampCall(@__PAMARKcars_PLMARKcdrs)
                                                  else raise NameError.new( "Error: undefined variable __PAMARKcars_PLMARKcdrs", "__PAMARKcars_PLMARKcdrs" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:788"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_lists)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:788"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                        }                                      ,Cell.new(
                                        Proc.new { |_as,_ds| 
                                            if ( 
                                              trampCall( callProcedure( 'null?',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                                                      trampCall(@_null_QUMARK)
                                                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:789"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_as)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:791"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                             ) then
                                                begin
                                                    trampCall(_i)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                                                end
                                            else
                                                trampCall( callProcedure( 'lp',
                                                    begin
                                                        trampCall(_lp)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'cdr',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cdr') then
                                                              trampCall(@_cdr)
                                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_list1)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:794"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))                                                    ,Cell.new(
                                                      begin
                                                          trampCall(_ds)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:790"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                      if ( 
                                                        trampCall( callProcedure( 'apply',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_apply') then
                                                                trampCall(@_apply)
                                                              else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:791"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_pred)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                              trampCall( callProcedure( 'car',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_car') then
                                                                      trampCall(@_car)
                                                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_list1)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:794"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))                                                            ,Cell.new(
                                                              begin
                                                                  trampCall(_as)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:791"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))))
                                                       ) then
                                                          trampCall( callProcedure( '+',
                                                              begin
                                                                if @global_lisp_binding.has_key?('__PLMARK') then
                                                                  trampCall(@__PLMARK)
                                                                else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_i)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,Cell.new(
                                                              1
                                                                       ))))
                                                      else
                                                          begin
                                                              trampCall(_i)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                                                          end
                                                      end
                                                             )))))
                                            end
                                        }
                                               )))
                              end
                          }
                        DelayedCallPacket.new( 'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_list1)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:794"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                              begin
                                  trampCall(_lists)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:788"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                            0
                                     ))))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              else
                  begin
                    ___lambda = lambda { |_lp| 
                        _lp                         = 
                          Proc.new { |_lis,_i| 
                              if ( 
                                trampCall( callProcedure( 'null-list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                        trampCall(@_null_MIMARKlist_QUMARK)
                                      else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:795"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                               ) then
                                  begin
                                      trampCall(_i)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  DelayedCallPacket.new( 'lp',
                                      begin
                                          trampCall(_lp)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'cdr',
                                            begin
                                              if @global_lisp_binding.has_key?('_cdr') then
                                                trampCall(@_cdr)
                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))                                      ,Cell.new(
                                        if ( 
                                          trampCall( callProcedure( 'pred',
                                              begin
                                                  trampCall(_pred)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'car',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_car') then
                                                        trampCall(@_car)
                                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_lis)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                                       )))
                                         ) then
                                            trampCall( callProcedure( '+',
                                                begin
                                                  if @global_lisp_binding.has_key?('__PLMARK') then
                                                    trampCall(@__PLMARK)
                                                  else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_i)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                                                  end                                                ,Cell.new(
                                                1
                                                         ))))
                                        else
                                            begin
                                                trampCall(_i)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                                            end
                                        end
                                               )))
                              end
                          }
                        DelayedCallPacket.new( 'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_list1)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:794"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                            0
                                     )))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_unfold_MIMARKright'] = true
    @_unfold_MIMARKright = 
    trampCall(
          Proc.new { |_p,_f,_g,_seed,*__rest__| _maybe_MIMARKtail = __rest__[0] ;  
              begin
              end
              begin
              end
              begin
              end
              begin
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_seed,_ans| 
                          if ( 
                            trampCall( callProcedure( 'p',
                                begin
                                    trampCall(_p)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:807"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_seed)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:809"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              begin
                                  trampCall(_ans)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:809"] + __e.backtrace ) ; raise __e
                              end
                          else
                              DelayedCallPacket.new( 'lp',
                                  begin
                                      trampCall(_lp)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:808"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'g',
                                        begin
                                            trampCall(_g)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:808"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_seed)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:809"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))                                  ,Cell.new(
                                    trampCall( callProcedure( 'cons',
                                        begin
                                          if @global_lisp_binding.has_key?('_cons') then
                                            trampCall(@_cons)
                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:809"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'f',
                                              begin
                                                  trampCall(_f)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:809"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_seed)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:809"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))                                        ,Cell.new(
                                          begin
                                              trampCall(_ans)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:809"] + __e.backtrace ) ; raise __e
                                          end
                                                 ))))
                                           )))
                          end
                      }
                    DelayedCallPacket.new( 'lp',
                        begin
                            trampCall(_lp)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:808"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_seed)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:809"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                            ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20111| 
                                if ( 
                                  trampCall( callProcedure( 'null?',
                                      begin
                                        if @global_lisp_binding.has_key?('_null_QUMARK') then
                                          trampCall(@_null_QUMARK)
                                        else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:789"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20111)
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                 ) then
                                  Cell.new()
                                else
                                    trampCall( callProcedure( 'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:796"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20111)
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                end
                            } ; ___lambda.call(
                                  begin
                                      trampCall(_maybe_MIMARKtail)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:806"] + __e.backtrace ) ; raise __e
                                  end
                                       )
                          end
                                 )))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_unfold'] = true
    @_unfold = 
    trampCall(
          Proc.new { |_p,_f,_g,_seed,*__rest__| _maybe_MIMARKtail_MIMARKgen = __rest__[0] ;  
              begin
              end
              begin
              end
              begin
              end
              if ( 
                trampCall( callProcedure( 'pair?',
                    begin
                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                        trampCall(@_pair_QUMARK)
                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:819"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_maybe_MIMARKtail_MIMARKgen)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:820"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  begin
                    ___lambda = lambda { |_tail_MIMARKgen| 
                        if ( 
                          trampCall( callProcedure( 'pair?',
                              begin
                                if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                  trampCall(@_pair_QUMARK)
                                else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:819"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'cdr',
                                    begin
                                      if @global_lisp_binding.has_key?('_cdr') then
                                        trampCall(@_cdr)
                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:819"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_maybe_MIMARKtail_MIMARKgen)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:820"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                         ) then
                            DelayedCallPacket.new( 'apply',
                                begin
                                  if @global_lisp_binding.has_key?('_apply') then
                                    trampCall(@_apply)
                                  else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:820"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                    if @global_lisp_binding.has_key?('_error') then
                                      trampCall(@_error)
                                    else raise NameError.new( "Error: undefined variable _error", "_error" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:820"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                "Too many arguments"                                ,Cell.new(
                                  begin
                                    if @global_lisp_binding.has_key?('_unfold') then
                                      trampCall(@_unfold)
                                    else raise NameError.new( "Error: undefined variable _unfold", "_unfold" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:820"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  begin
                                      trampCall(_p)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:827"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  begin
                                      trampCall(_f)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  begin
                                      trampCall(_g)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  begin
                                      trampCall(_seed)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  begin
                                      trampCall(_maybe_MIMARKtail_MIMARKgen)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:820"] + __e.backtrace ) ; raise __e
                                  end
                                         )))))))))
                        else
                            begin
                              ___lambda = lambda { |_recur| 
                                  _recur                                   = 
                                    Proc.new { |_seed| 
                                        if ( 
                                          trampCall( callProcedure( 'p',
                                              begin
                                                  trampCall(_p)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:827"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_seed)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                         ) then
                                            DelayedCallPacket.new( 'tail-gen',
                                                begin
                                                    trampCall(_tail_MIMARKgen)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:823"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_seed)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                                                  end
                                                         ))
                                        else
                                            DelayedCallPacket.new( 'cons',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cons') then
                                                    trampCall(@_cons)
                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  trampCall( callProcedure( 'f',
                                                      begin
                                                          trampCall(_f)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_seed)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))                                                ,Cell.new(
                                                  trampCall( callProcedure( 'recur',
                                                      begin
                                                          trampCall(_recur)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        trampCall( callProcedure( 'g',
                                                            begin
                                                                trampCall(_g)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_seed)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))
                                                               )))
                                                         )))
                                        end
                                    }
                                  DelayedCallPacket.new( 'recur',
                                      begin
                                          trampCall(_recur)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_seed)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                                        end
                                               ))
                              } ; ___lambda.call(
                              nil
                                         )
                            end
                        end
                    } ; ___lambda.call(
                          trampCall( callProcedure( 'car',
                              begin
                                if @global_lisp_binding.has_key?('_car') then
                                  trampCall(@_car)
                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:818"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_maybe_MIMARKtail_MIMARKgen)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:820"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                               )
                  end
              else
                  begin
                    ___lambda = lambda { |_recur| 
                        _recur                         = 
                          Proc.new { |_seed| 
                              if ( 
                                trampCall( callProcedure( 'p',
                                    begin
                                        trampCall(_p)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:827"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_seed)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                               ) then
                                Cell.new()
                              else
                                  DelayedCallPacket.new( 'cons',
                                      begin
                                        if @global_lisp_binding.has_key?('_cons') then
                                          trampCall(@_cons)
                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'f',
                                            begin
                                                trampCall(_f)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_seed)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))                                      ,Cell.new(
                                        trampCall( callProcedure( 'recur',
                                            begin
                                                trampCall(_recur)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'g',
                                                  begin
                                                      trampCall(_g)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_seed)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                                     )))
                                               )))
                              end
                          }
                        DelayedCallPacket.new( 'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_seed)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:828"] + __e.backtrace ) ; raise __e
                              end
                                     ))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_fold'] = true
    @_fold = 
    trampCall(
          Proc.new { |_kons,_knil,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              if ( 
                trampCall( callProcedure( 'pair?',
                    begin
                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                        trampCall(@_pair_QUMARK)
                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:833"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_lists)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:835"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  begin
                    ___lambda = lambda { |_lp| 
                        _lp                         = 
                          Proc.new { |_lists,_ans| 
                              DelayedCallPacket.new( 'call-with-values',
                                  begin
                                    if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                      trampCall(@_call_MIMARKwith_MIMARKvalues)
                                    else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    Proc.new { || 
                                        trampCall( callProcedure( '%cars+cdrs+',
                                            begin
                                              if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs_PLMARK') then
                                                trampCall(@__PAMARKcars_PLMARKcdrs_PLMARK)
                                              else raise NameError.new( "Error: undefined variable __PAMARKcars_PLMARKcdrs_PLMARK", "__PAMARKcars_PLMARKcdrs_PLMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:835"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_lists)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:835"] + __e.backtrace ) ; raise __e
                                              end                                            ,Cell.new(
                                              begin
                                                  trampCall(_ans)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:841"] + __e.backtrace ) ; raise __e
                                              end
                                                     ))))
                                    }                                  ,Cell.new(
                                    Proc.new { |_cars_PLMARKans,_cdrs| 
                                        if ( 
                                          trampCall( callProcedure( 'null?',
                                              begin
                                                if @global_lisp_binding.has_key?('_null_QUMARK') then
                                                  trampCall(@_null_QUMARK)
                                                else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:836"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_cars_PLMARKans)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:837"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                         ) then
                                            begin
                                                trampCall(_ans)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:841"] + __e.backtrace ) ; raise __e
                                            end
                                        else
                                            trampCall( callProcedure( 'lp',
                                                begin
                                                    trampCall(_lp)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:841"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_cdrs)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:837"] + __e.backtrace ) ; raise __e
                                                  end                                                ,Cell.new(
                                                  trampCall( callProcedure( 'apply',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_apply') then
                                                          trampCall(@_apply)
                                                        else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:837"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_kons)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:841"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,Cell.new(
                                                        begin
                                                            trampCall(_cars_PLMARKans)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:837"] + __e.backtrace ) ; raise __e
                                                        end
                                                               ))))
                                                         ))))
                                        end
                                    }
                                           )))
                          }
                        DelayedCallPacket.new( 'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:841"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      trampCall(@_cons)
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:834"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_lis1)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:839"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_lists)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:835"] + __e.backtrace ) ; raise __e
                                    end
                                           ))))                            ,Cell.new(
                              begin
                                  trampCall(_knil)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:839"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              else
                  begin
                    ___lambda = lambda { |_lp| 
                        _lp                         = 
                          Proc.new { |_lis,_ans| 
                              if ( 
                                trampCall( callProcedure( 'null-list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                        trampCall(@_null_MIMARKlist_QUMARK)
                                      else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:840"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:841"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                               ) then
                                  begin
                                      trampCall(_ans)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:841"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  DelayedCallPacket.new( 'lp',
                                      begin
                                          trampCall(_lp)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:841"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'cdr',
                                            begin
                                              if @global_lisp_binding.has_key?('_cdr') then
                                                trampCall(@_cdr)
                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:841"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:841"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))                                      ,Cell.new(
                                        trampCall( callProcedure( 'kons',
                                            begin
                                                trampCall(_kons)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:841"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'car',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_car') then
                                                      trampCall(@_car)
                                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:841"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_lis)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:841"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))                                            ,Cell.new(
                                              begin
                                                  trampCall(_ans)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:841"] + __e.backtrace ) ; raise __e
                                              end
                                                     ))))
                                               )))
                              end
                          }
                        DelayedCallPacket.new( 'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:841"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_lis1)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:839"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                              begin
                                  trampCall(_knil)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:839"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_fold_MIMARKright'] = true
    @_fold_MIMARKright = 
    trampCall(
          Proc.new { |_kons,_knil,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              if ( 
                trampCall( callProcedure( 'pair?',
                    begin
                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                        trampCall(@_pair_QUMARK)
                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:846"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_lists)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:850"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  begin
                    ___lambda = lambda { |_recur| 
                        _recur                         = 
                          Proc.new { |_lists| 
                              begin
                                ___lambda = lambda { |_cdrs| 
                                    if ( 
                                      trampCall( callProcedure( 'null?',
                                          begin
                                            if @global_lisp_binding.has_key?('_null_QUMARK') then
                                              trampCall(@_null_QUMARK)
                                            else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:849"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_cdrs)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:850"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                     ) then
                                        begin
                                            trampCall(_knil)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:853"] + __e.backtrace ) ; raise __e
                                        end
                                    else
                                        DelayedCallPacket.new( 'apply',
                                            begin
                                              if @global_lisp_binding.has_key?('_apply') then
                                                trampCall(@_apply)
                                              else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:850"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_kons)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:855"] + __e.backtrace ) ; raise __e
                                              end                                            ,Cell.new(
                                              trampCall( callProcedure( '%cars+',
                                                  begin
                                                    if @global_lisp_binding.has_key?('__PAMARKcars_PLMARK') then
                                                      trampCall(@__PAMARKcars_PLMARK)
                                                    else raise NameError.new( "Error: undefined variable __PAMARKcars_PLMARK", "__PAMARKcars_PLMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:850"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_lists)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:850"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'recur',
                                                        begin
                                                            trampCall(_recur)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:855"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_cdrs)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:850"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))
                                                           ))))
                                                     )))
                                    end
                                } ; ___lambda.call(
                                      trampCall( callProcedure( '%cdrs',
                                          begin
                                            if @global_lisp_binding.has_key?('__PAMARKcdrs') then
                                              trampCall(@__PAMARKcdrs)
                                            else raise NameError.new( "Error: undefined variable __PAMARKcdrs", "__PAMARKcdrs" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:848"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lists)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:850"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                           )
                              end
                          }
                        DelayedCallPacket.new( 'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:855"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      trampCall(@_cons)
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:847"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_lis1)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:852"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_lists)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:850"] + __e.backtrace ) ; raise __e
                                    end
                                           ))))
                                     ))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              else
                  begin
                    ___lambda = lambda { |_recur| 
                        _recur                         = 
                          Proc.new { |_lis| 
                              if ( 
                                trampCall( callProcedure( 'null-list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                        trampCall(@_null_MIMARKlist_QUMARK)
                                      else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:853"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:855"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                               ) then
                                  begin
                                      trampCall(_knil)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:853"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  begin
                                    ___lambda = lambda { |_head| 
                                        DelayedCallPacket.new( 'kons',
                                            begin
                                                trampCall(_kons)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:855"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_head)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:855"] + __e.backtrace ) ; raise __e
                                              end                                            ,Cell.new(
                                              trampCall( callProcedure( 'recur',
                                                  begin
                                                      trampCall(_recur)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:855"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'cdr',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cdr') then
                                                            trampCall(@_cdr)
                                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:855"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_lis)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:855"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))
                                                           )))
                                                     )))
                                    } ; ___lambda.call(
                                          trampCall( callProcedure( 'car',
                                              begin
                                                if @global_lisp_binding.has_key?('_car') then
                                                  trampCall(@_car)
                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:854"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_lis)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:855"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                               )
                                  end
                              end
                          }
                        DelayedCallPacket.new( 'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:855"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_lis1)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:852"] + __e.backtrace ) ; raise __e
                              end
                                     ))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_pair_MIMARKfold_MIMARKright'] = true
    @_pair_MIMARKfold_MIMARKright = 
    trampCall(
          Proc.new { |_f,_zero,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              if ( 
                trampCall( callProcedure( 'pair?',
                    begin
                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                        trampCall(@_pair_QUMARK)
                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:860"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_lists)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:864"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  begin
                    ___lambda = lambda { |_recur| 
                        _recur                         = 
                          Proc.new { |_lists| 
                              begin
                                ___lambda = lambda { |_cdrs| 
                                    if ( 
                                      trampCall( callProcedure( 'null?',
                                          begin
                                            if @global_lisp_binding.has_key?('_null_QUMARK') then
                                              trampCall(@_null_QUMARK)
                                            else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:863"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_cdrs)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:864"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                     ) then
                                        begin
                                            trampCall(_zero)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:867"] + __e.backtrace ) ; raise __e
                                        end
                                    else
                                        DelayedCallPacket.new( 'apply',
                                            begin
                                              if @global_lisp_binding.has_key?('_apply') then
                                                trampCall(@_apply)
                                              else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:864"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_f)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:867"] + __e.backtrace ) ; raise __e
                                              end                                            ,Cell.new(
                                              trampCall( callProcedure( 'append!',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_append_EXMARK') then
                                                      trampCall(@_append_EXMARK)
                                                    else raise NameError.new( "Error: undefined variable _append_EXMARK", "_append_EXMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:864"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_lists)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:864"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'list',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_list') then
                                                            trampCall(@_list)
                                                          else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:864"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'recur',
                                                              begin
                                                                  trampCall(_recur)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:867"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_cdrs)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:864"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                                 )))
                                                           ))))
                                                     )))
                                    end
                                } ; ___lambda.call(
                                      trampCall( callProcedure( '%cdrs',
                                          begin
                                            if @global_lisp_binding.has_key?('__PAMARKcdrs') then
                                              trampCall(@__PAMARKcdrs)
                                            else raise NameError.new( "Error: undefined variable __PAMARKcdrs", "__PAMARKcdrs" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:862"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lists)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:864"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                           )
                              end
                          }
                        DelayedCallPacket.new( 'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:867"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      trampCall(@_cons)
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:861"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_lis1)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:866"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_lists)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:864"] + __e.backtrace ) ; raise __e
                                    end
                                           ))))
                                     ))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              else
                  begin
                    ___lambda = lambda { |_recur| 
                        _recur                         = 
                          Proc.new { |_lis| 
                              if ( 
                                trampCall( callProcedure( 'null-list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                        trampCall(@_null_MIMARKlist_QUMARK)
                                      else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:867"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:867"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                               ) then
                                  begin
                                      trampCall(_zero)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:867"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  DelayedCallPacket.new( 'f',
                                      begin
                                          trampCall(_f)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:867"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:867"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        trampCall( callProcedure( 'recur',
                                            begin
                                                trampCall(_recur)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:867"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'cdr',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cdr') then
                                                      trampCall(@_cdr)
                                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:867"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_lis)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:867"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                                     )))
                                               )))
                              end
                          }
                        DelayedCallPacket.new( 'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:867"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_lis1)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:866"] + __e.backtrace ) ; raise __e
                              end
                                     ))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_pair_MIMARKfold'] = true
    @_pair_MIMARKfold = 
    trampCall(
          Proc.new { |_f,_zero,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              if ( 
                trampCall( callProcedure( 'pair?',
                    begin
                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                        trampCall(@_pair_QUMARK)
                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:871"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_lists)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:875"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  begin
                    ___lambda = lambda { |_lp| 
                        _lp                         = 
                          Proc.new { |_lists,_ans| 
                              begin
                                ___lambda = lambda { |_tails| 
                                    if ( 
                                      trampCall( callProcedure( 'null?',
                                          begin
                                            if @global_lisp_binding.has_key?('_null_QUMARK') then
                                              trampCall(@_null_QUMARK)
                                            else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:874"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_tails)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:875"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                     ) then
                                        begin
                                            trampCall(_ans)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:880"] + __e.backtrace ) ; raise __e
                                        end
                                    else
                                        DelayedCallPacket.new( 'lp',
                                            begin
                                                trampCall(_lp)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:880"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_tails)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:875"] + __e.backtrace ) ; raise __e
                                              end                                            ,Cell.new(
                                              trampCall( callProcedure( 'apply',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_apply') then
                                                      trampCall(@_apply)
                                                    else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:875"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_f)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:880"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'append!',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_append_EXMARK') then
                                                            trampCall(@_append_EXMARK)
                                                          else raise NameError.new( "Error: undefined variable _append_EXMARK", "_append_EXMARK" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:875"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_lists)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:875"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                          trampCall( callProcedure( 'list',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_list') then
                                                                  trampCall(@_list)
                                                                else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:875"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_ans)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:880"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                                 ))))
                                                           ))))
                                                     )))
                                    end
                                } ; ___lambda.call(
                                      trampCall( callProcedure( '%cdrs',
                                          begin
                                            if @global_lisp_binding.has_key?('__PAMARKcdrs') then
                                              trampCall(@__PAMARKcdrs)
                                            else raise NameError.new( "Error: undefined variable __PAMARKcdrs", "__PAMARKcdrs" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:873"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lists)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:875"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                           )
                              end
                          }
                        DelayedCallPacket.new( 'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:880"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      trampCall(@_cons)
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:872"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_lis1)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:877"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_lists)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:875"] + __e.backtrace ) ; raise __e
                                    end
                                           ))))                            ,Cell.new(
                              begin
                                  trampCall(_zero)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:877"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              else
                  begin
                    ___lambda = lambda { |_lp| 
                        _lp                         = 
                          Proc.new { |_lis,_ans| 
                              if ( 
                                trampCall( callProcedure( 'null-list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                        trampCall(@_null_MIMARKlist_QUMARK)
                                      else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:878"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:880"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                               ) then
                                  begin
                                      trampCall(_ans)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:880"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  begin
                                    ___lambda = lambda { |_tail| 
                                        DelayedCallPacket.new( 'lp',
                                            begin
                                                trampCall(_lp)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:880"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_tail)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:880"] + __e.backtrace ) ; raise __e
                                              end                                            ,Cell.new(
                                              trampCall( callProcedure( 'f',
                                                  begin
                                                      trampCall(_f)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:880"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_lis)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:880"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,Cell.new(
                                                    begin
                                                        trampCall(_ans)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:880"] + __e.backtrace ) ; raise __e
                                                    end
                                                           ))))
                                                     )))
                                    } ; ___lambda.call(
                                          trampCall( callProcedure( 'cdr',
                                              begin
                                                if @global_lisp_binding.has_key?('_cdr') then
                                                  trampCall(@_cdr)
                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:879"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_lis)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:880"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                               )
                                  end
                              end
                          }
                        DelayedCallPacket.new( 'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:880"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_lis1)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:877"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                              begin
                                  trampCall(_zero)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:877"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_reduce'] = true
    @_reduce = 
    trampCall(
          Proc.new { |_f,_ridentity,_lis| 
              begin
              end
              if ( 
                trampCall( callProcedure( 'null-list?',
                    begin
                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                        trampCall(@_null_MIMARKlist_QUMARK)
                      else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:888"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_lis)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:889"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  begin
                      trampCall(_ridentity)
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:888"] + __e.backtrace ) ; raise __e
                  end
              else
                  DelayedCallPacket.new( 'fold',
                      begin
                        if @global_lisp_binding.has_key?('_fold') then
                          trampCall(@_fold)
                        else raise NameError.new( "Error: undefined variable _fold", "_fold" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:889"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            trampCall(_f)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:889"] + __e.backtrace ) ; raise __e
                        end                      ,Cell.new(
                        trampCall( callProcedure( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                trampCall(@_car)
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:889"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:889"] + __e.backtrace ) ; raise __e
                              end
                                     )))                      ,Cell.new(
                        trampCall( callProcedure( 'cdr',
                            begin
                              if @global_lisp_binding.has_key?('_cdr') then
                                trampCall(@_cdr)
                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:889"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:889"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                               ))))
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_reduce_MIMARKright'] = true
    @_reduce_MIMARKright = 
    trampCall(
          Proc.new { |_f,_ridentity,_lis| 
              begin
              end
              if ( 
                trampCall( callProcedure( 'null-list?',
                    begin
                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                        trampCall(@_null_MIMARKlist_QUMARK)
                      else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:893"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_lis)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:896"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  begin
                      trampCall(_ridentity)
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:893"] + __e.backtrace ) ; raise __e
                  end
              else
                  begin
                    ___lambda = lambda { |_recur| 
                        _recur                         = 
                          Proc.new { |_head,_lis| 
                              if ( 
                                trampCall( callProcedure( 'pair?',
                                    begin
                                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                        trampCall(@_pair_QUMARK)
                                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:895"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:896"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                               ) then
                                  DelayedCallPacket.new( 'f',
                                      begin
                                          trampCall(_f)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:896"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_head)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:897"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        trampCall( callProcedure( 'recur',
                                            begin
                                                trampCall(_recur)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:896"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'car',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_car') then
                                                      trampCall(@_car)
                                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:896"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_lis)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:896"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))                                            ,Cell.new(
                                              trampCall( callProcedure( 'cdr',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cdr') then
                                                      trampCall(@_cdr)
                                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:896"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_lis)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:896"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                                     ))))
                                               )))
                              else
                                  begin
                                      trampCall(_head)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:897"] + __e.backtrace ) ; raise __e
                                  end
                              end
                          }
                        DelayedCallPacket.new( 'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:896"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'car',
                                  begin
                                    if @global_lisp_binding.has_key?('_car') then
                                      trampCall(@_car)
                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:896"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:896"] + __e.backtrace ) ; raise __e
                                    end
                                           )))                            ,Cell.new(
                              trampCall( callProcedure( 'cdr',
                                  begin
                                    if @global_lisp_binding.has_key?('_cdr') then
                                      trampCall(@_cdr)
                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:896"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:896"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_append_MIMARKmap'] = true
    @_append_MIMARKmap = 
    trampCall(
          Proc.new { |_f,_lis1,*__rest__| _lists = __rest__[0] ;  
              DelayedCallPacket.new( 'really-append-map',
                  begin
                    if @global_lisp_binding.has_key?('_really_MIMARKappend_MIMARKmap') then
                      trampCall(@_really_MIMARKappend_MIMARKmap)
                    else raise NameError.new( "Error: undefined variable _really_MIMARKappend_MIMARKmap", "_really_MIMARKappend_MIMARKmap" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:905"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                      if @global_lisp_binding.has_key?('_append_MIMARKmap') then
                        trampCall(@_append_MIMARKmap)
                      else raise NameError.new( "Error: undefined variable _append_MIMARKmap", "_append_MIMARKmap" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:905"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                      if @global_lisp_binding.has_key?('_append') then
                        trampCall(@_append)
                      else raise NameError.new( "Error: undefined variable _append", "_append" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:905"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_f)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:905"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_lis1)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:905"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_lists)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:905"] + __e.backtrace ) ; raise __e
                    end
                           ))))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_append_MIMARKmap_EXMARK'] = true
    @_append_MIMARKmap_EXMARK = 
    trampCall(
          Proc.new { |_f,_lis1,*__rest__| _lists = __rest__[0] ;  
              DelayedCallPacket.new( 'really-append-map',
                  begin
                    if @global_lisp_binding.has_key?('_really_MIMARKappend_MIMARKmap') then
                      trampCall(@_really_MIMARKappend_MIMARKmap)
                    else raise NameError.new( "Error: undefined variable _really_MIMARKappend_MIMARKmap", "_really_MIMARKappend_MIMARKmap" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:907"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    begin
                      if @global_lisp_binding.has_key?('_append_MIMARKmap_EXMARK') then
                        trampCall(@_append_MIMARKmap_EXMARK)
                      else raise NameError.new( "Error: undefined variable _append_MIMARKmap_EXMARK", "_append_MIMARKmap_EXMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:907"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                      if @global_lisp_binding.has_key?('_append_EXMARK') then
                        trampCall(@_append_EXMARK)
                      else raise NameError.new( "Error: undefined variable _append_EXMARK", "_append_EXMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:907"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_f)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:907"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_lis1)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:907"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_lists)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:907"] + __e.backtrace ) ; raise __e
                    end
                           ))))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_really_MIMARKappend_MIMARKmap'] = true
    @_really_MIMARKappend_MIMARKmap = 
    trampCall(
          Proc.new { |_who,_appender,_f,_lis1,_lists| 
              begin
              end
              if ( 
                trampCall( callProcedure( 'pair?',
                    begin
                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                        trampCall(@_pair_QUMARK)
                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:911"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_lists)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:912"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  DelayedCallPacket.new( 'call-with-values',
                      begin
                        if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                          trampCall(@_call_MIMARKwith_MIMARKvalues)
                        else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        Proc.new { || 
                            trampCall( callProcedure( '%cars+cdrs',
                                begin
                                  if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs') then
                                    trampCall(@__PAMARKcars_PLMARKcdrs)
                                  else raise NameError.new( "Error: undefined variable __PAMARKcars_PLMARKcdrs", "__PAMARKcars_PLMARKcdrs" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:916"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  trampCall( callProcedure( 'cons',
                                      begin
                                        if @global_lisp_binding.has_key?('_cons') then
                                          trampCall(@_cons)
                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:912"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lis1)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:922"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        begin
                                            trampCall(_lists)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:912"] + __e.backtrace ) ; raise __e
                                        end
                                               ))))
                                         )))
                        }                      ,Cell.new(
                        Proc.new { |_cars,_cdrs| 
                            if ( 
                              trampCall( callProcedure( 'null?',
                                  begin
                                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                                      trampCall(@_null_QUMARK)
                                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:917"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_cars)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:915"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                             ) then
                              Cell.new()
                            else
                                begin
                                  ___lambda = lambda { |_recur| 
                                      _recur                                       = 
                                        Proc.new { |_cars,_cdrs| 
                                            begin
                                              ___lambda = lambda { |_vals| 
                                                  trampCall( callProcedure( 'call-with-values',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                          trampCall(@_call_MIMARKwith_MIMARKvalues)
                                                        else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        Proc.new { || 
                                                            trampCall( callProcedure( '%cars+cdrs',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs') then
                                                                    trampCall(@__PAMARKcars_PLMARKcdrs)
                                                                  else raise NameError.new( "Error: undefined variable __PAMARKcars_PLMARKcdrs", "__PAMARKcars_PLMARKcdrs" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:916"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      trampCall(_cdrs)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:916"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         )))
                                                        }                                                      ,Cell.new(
                                                        Proc.new { |_cars2,_cdrs2| 
                                                            if ( 
                                                              trampCall( callProcedure( 'null?',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                                                                      trampCall(@_null_QUMARK)
                                                                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:917"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_cars2)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:918"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))
                                                             ) then
                                                                begin
                                                                    trampCall(_vals)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:925"] + __e.backtrace ) ; raise __e
                                                                end
                                                            else
                                                                trampCall( callProcedure( 'appender',
                                                                    begin
                                                                        trampCall(_appender)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:925"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      begin
                                                                          trampCall(_vals)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:925"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,Cell.new(
                                                                      trampCall( callProcedure( 'recur',
                                                                          begin
                                                                              trampCall(_recur)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:925"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_cars2)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:918"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,Cell.new(
                                                                            begin
                                                                                trampCall(_cdrs2)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:918"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   ))))
                                                                             ))))
                                                            end
                                                        }
                                                               ))))
                                              } ; ___lambda.call(
                                                    trampCall( callProcedure( 'apply',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_apply') then
                                                            trampCall(@_apply)
                                                          else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:915"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_f)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:923"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_cars)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:915"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))
                                                         )
                                            end
                                        }
                                      trampCall( callProcedure( 'recur',
                                          begin
                                              trampCall(_recur)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:925"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_cars)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:915"] + __e.backtrace ) ; raise __e
                                            end                                          ,Cell.new(
                                            begin
                                                trampCall(_cdrs)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:916"] + __e.backtrace ) ; raise __e
                                            end
                                                   ))))
                                  } ; ___lambda.call(
                                  nil
                                             )
                                end
                            end
                        }
                               )))
              else
                  if ( 
                    trampCall( callProcedure( 'null-list?',
                        begin
                          if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                            trampCall(@_null_MIMARKlist_QUMARK)
                          else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:924"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lis1)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:922"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                   ) then
                    Cell.new()
                  else
                      begin
                        ___lambda = lambda { |_recur| 
                            _recur                             = 
                              Proc.new { |_elt,_rest| 
                                  begin
                                    ___lambda = lambda { |_vals| 
                                        if ( 
                                          trampCall( callProcedure( 'null-list?',
                                              begin
                                                if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                  trampCall(@_null_MIMARKlist_QUMARK)
                                                else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:924"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_rest)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:925"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                         ) then
                                            begin
                                                trampCall(_vals)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:925"] + __e.backtrace ) ; raise __e
                                            end
                                        else
                                            DelayedCallPacket.new( 'appender',
                                                begin
                                                    trampCall(_appender)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:925"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_vals)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:925"] + __e.backtrace ) ; raise __e
                                                  end                                                ,Cell.new(
                                                  trampCall( callProcedure( 'recur',
                                                      begin
                                                          trampCall(_recur)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:925"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        trampCall( callProcedure( 'car',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_car') then
                                                                trampCall(@_car)
                                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:925"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_rest)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:925"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))                                                      ,Cell.new(
                                                        trampCall( callProcedure( 'cdr',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_cdr') then
                                                                trampCall(@_cdr)
                                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:925"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_rest)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:925"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))
                                                               ))))
                                                         )))
                                        end
                                    } ; ___lambda.call(
                                          trampCall( callProcedure( 'f',
                                              begin
                                                  trampCall(_f)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:923"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_elt)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:923"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                               )
                                  end
                              }
                            DelayedCallPacket.new( 'recur',
                                begin
                                    trampCall(_recur)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:925"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  trampCall( callProcedure( 'car',
                                      begin
                                        if @global_lisp_binding.has_key?('_car') then
                                          trampCall(@_car)
                                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:925"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lis1)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:922"] + __e.backtrace ) ; raise __e
                                        end
                                               )))                                ,Cell.new(
                                  trampCall( callProcedure( 'cdr',
                                      begin
                                        if @global_lisp_binding.has_key?('_cdr') then
                                          trampCall(@_cdr)
                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:925"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lis1)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:922"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                         )))
                        } ; ___lambda.call(
                        nil
                                   )
                      end
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_pair_MIMARKfor_MIMARKeach'] = true
    @_pair_MIMARKfor_MIMARKeach = 
    trampCall(
          Proc.new { |_proc,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              if ( 
                trampCall( callProcedure( 'pair?',
                    begin
                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                        trampCall(@_pair_QUMARK)
                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:934"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_lists)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:935"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  begin
                    ___lambda = lambda { |_lp| 
                        _lp                         = 
                          Proc.new { |_lists| 
                              begin
                                ___lambda = lambda { |_tails| 
                                    if ( 
                                      trampCall( callProcedure( 'pair?',
                                          begin
                                            if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                              trampCall(@_pair_QUMARK)
                                            else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:934"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_tails)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:936"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                     ) then
                                        begin
                                            trampCall( callProcedure( 'apply',
                                                begin
                                                  if @global_lisp_binding.has_key?('_apply') then
                                                    trampCall(@_apply)
                                                  else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:935"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_proc)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:942"] + __e.backtrace ) ; raise __e
                                                  end                                                ,Cell.new(
                                                  begin
                                                      trampCall(_lists)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:935"] + __e.backtrace ) ; raise __e
                                                  end
                                                         ))))
                                            DelayedCallPacket.new( 'lp',
                                                begin
                                                    trampCall(_lp)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:943"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_tails)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:936"] + __e.backtrace ) ; raise __e
                                                  end
                                                         ))
                                        end
                                    end
                                } ; ___lambda.call(
                                      trampCall( callProcedure( '%cdrs',
                                          begin
                                            if @global_lisp_binding.has_key?('__PAMARKcdrs') then
                                              trampCall(@__PAMARKcdrs)
                                            else raise NameError.new( "Error: undefined variable __PAMARKcdrs", "__PAMARKcdrs" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:933"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lists)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:935"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                           )
                              end
                          }
                        DelayedCallPacket.new( 'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:943"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      trampCall(@_cons)
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:932"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_lis1)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:939"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_lists)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:935"] + __e.backtrace ) ; raise __e
                                    end
                                           ))))
                                     ))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              else
                  begin
                    ___lambda = lambda { |_lp| 
                        _lp                         = 
                          Proc.new { |_lis| 
                              if ( 
                                trampCall( callProcedure( 'not',
                                    begin
                                      if @global_lisp_binding.has_key?('_not') then
                                        trampCall(@_not)
                                      else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:940"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'null-list?',
                                          begin
                                            if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                              trampCall(@_null_MIMARKlist_QUMARK)
                                            else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:940"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:942"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             )))
                               ) then
                                  begin
                                    ___lambda = lambda { |_tail| 
                                        trampCall( callProcedure( 'proc',
                                            begin
                                                trampCall(_proc)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:942"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:942"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                        DelayedCallPacket.new( 'lp',
                                            begin
                                                trampCall(_lp)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:943"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_tail)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:943"] + __e.backtrace ) ; raise __e
                                              end
                                                     ))
                                    } ; ___lambda.call(
                                          trampCall( callProcedure( 'cdr',
                                              begin
                                                if @global_lisp_binding.has_key?('_cdr') then
                                                  trampCall(@_cdr)
                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:941"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_lis)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:942"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                               )
                                  end
                              end
                          }
                        DelayedCallPacket.new( 'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:943"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_lis1)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:939"] + __e.backtrace ) ; raise __e
                              end
                                     ))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_map_EXMARK'] = true
    @_map_EXMARK = 
    trampCall(
          Proc.new { |_f,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              if ( 
                trampCall( callProcedure( 'pair?',
                    begin
                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                        trampCall(@_pair_QUMARK)
                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:948"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_lists)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:951"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  begin
                    ___lambda = lambda { |_lp| 
                        _lp                         = 
                          Proc.new { |_lis1,_lists| 
                              if ( 
                                trampCall( callProcedure( 'not',
                                    begin
                                      if @global_lisp_binding.has_key?('_not') then
                                        trampCall(@_not)
                                      else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:950"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'null-list?',
                                          begin
                                            if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                              trampCall(@_null_MIMARKlist_QUMARK)
                                            else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:950"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lis1)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:957"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             )))
                               ) then
                                  trampCall( callProcedure( 'call-with-values',
                                      begin
                                        if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                          trampCall(@_call_MIMARKwith_MIMARKvalues)
                                        else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        Proc.new { || 
                                            trampCall( callProcedure( '%cars+cdrs/no-test',
                                                begin
                                                  if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs_SLMARKno_MIMARKtest') then
                                                    trampCall(@__PAMARKcars_PLMARKcdrs_SLMARKno_MIMARKtest)
                                                  else raise NameError.new( "Error: undefined variable __PAMARKcars_PLMARKcdrs_SLMARKno_MIMARKtest", "__PAMARKcars_PLMARKcdrs_SLMARKno_MIMARKtest" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:951"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_lists)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:951"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                        }                                      ,Cell.new(
                                        Proc.new { |_heads,_tails| 
                                            trampCall( callProcedure( 'set-car!',
                                                begin
                                                  if @global_lisp_binding.has_key?('_set_MIMARKcar_EXMARK') then
                                                    trampCall(@_set_MIMARKcar_EXMARK)
                                                  else raise NameError.new( "Error: undefined variable _set_MIMARKcar_EXMARK", "_set_MIMARKcar_EXMARK" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:956"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_lis1)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:957"] + __e.backtrace ) ; raise __e
                                                  end                                                ,Cell.new(
                                                  trampCall( callProcedure( 'apply',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_apply') then
                                                          trampCall(@_apply)
                                                        else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:952"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_f)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:956"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,Cell.new(
                                                        trampCall( callProcedure( 'car',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_car') then
                                                                trampCall(@_car)
                                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:956"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_lis1)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:957"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))                                                      ,Cell.new(
                                                        begin
                                                            trampCall(_heads)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:952"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))))
                                                         ))))
                                            trampCall( callProcedure( 'lp',
                                                begin
                                                    trampCall(_lp)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:953"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  trampCall( callProcedure( 'cdr',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_cdr') then
                                                          trampCall(@_cdr)
                                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:953"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_lis1)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:957"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))                                                ,Cell.new(
                                                  begin
                                                      trampCall(_tails)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:953"] + __e.backtrace ) ; raise __e
                                                  end
                                                         ))))
                                        }
                                               ))))
                              end
                          }
                        trampCall( callProcedure( 'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:953"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_lis1)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:957"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                              begin
                                  trampCall(_lists)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:951"] + __e.backtrace ) ; raise __e
                              end
                                     ))))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              else
                  trampCall( callProcedure( 'pair-for-each',
                      begin
                        if @global_lisp_binding.has_key?('_pair_MIMARKfor_MIMARKeach') then
                          trampCall(@_pair_MIMARKfor_MIMARKeach)
                        else raise NameError.new( "Error: undefined variable _pair_MIMARKfor_MIMARKeach", "_pair_MIMARKfor_MIMARKeach" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:956"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        Proc.new { |_pair| 
                            trampCall( callProcedure( 'set-car!',
                                begin
                                  if @global_lisp_binding.has_key?('_set_MIMARKcar_EXMARK') then
                                    trampCall(@_set_MIMARKcar_EXMARK)
                                  else raise NameError.new( "Error: undefined variable _set_MIMARKcar_EXMARK", "_set_MIMARKcar_EXMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:956"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_pair)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:956"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  trampCall( callProcedure( 'f',
                                      begin
                                          trampCall(_f)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:956"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'car',
                                            begin
                                              if @global_lisp_binding.has_key?('_car') then
                                                trampCall(@_car)
                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:956"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_pair)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:956"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               )))
                                         ))))
                        }                      ,Cell.new(
                        begin
                            trampCall(_lis1)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:957"] + __e.backtrace ) ; raise __e
                        end
                               ))))
              end
              begin
                  trampCall(_lis1)
                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:957"] + __e.backtrace ) ; raise __e
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_filter_MIMARKmap'] = true
    @_filter_MIMARKmap = 
    trampCall(
          Proc.new { |_f,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              if ( 
                trampCall( callProcedure( 'pair?',
                    begin
                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                        trampCall(@_pair_QUMARK)
                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:966"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_lists)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:965"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  begin
                    ___lambda = lambda { |_recur| 
                        _recur                         = 
                          Proc.new { |_lists| 
                              DelayedCallPacket.new( 'call-with-values',
                                  begin
                                    if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                      trampCall(@_call_MIMARKwith_MIMARKvalues)
                                    else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    Proc.new { || 
                                        trampCall( callProcedure( '%cars+cdrs',
                                            begin
                                              if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs') then
                                                trampCall(@__PAMARKcars_PLMARKcdrs)
                                              else raise NameError.new( "Error: undefined variable __PAMARKcars_PLMARKcdrs", "__PAMARKcars_PLMARKcdrs" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:965"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_lists)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:965"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                    }                                  ,Cell.new(
                                    Proc.new { |_cars,_cdrs| 
                                        if ( 
                                          trampCall( callProcedure( 'pair?',
                                              begin
                                                if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                  trampCall(@_pair_QUMARK)
                                                else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:966"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_cars)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:967"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                         ) then
                                            if ( 
                                              begin
                                                @global_lisp_binding['___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20115'] = true
                                                @___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20115 = 
                                                trampCall(
                                                      trampCall( callProcedure( 'apply',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_apply') then
                                                              trampCall(@_apply)
                                                            else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:967"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_f)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:975"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,Cell.new(
                                                            begin
                                                                trampCall(_cars)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:967"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   ))))
                                                )
                                              end
                                             ) then
                                                trampCall( callProcedure( 'anonymouse', 
                                                    Proc.new { |_x| 
                                                        trampCall( callProcedure( 'cons',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                trampCall(@_cons)
                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:975"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_x)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:975"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                              trampCall( callProcedure( 'recur',
                                                                  begin
                                                                      trampCall(_recur)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:974"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_cdrs)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:968"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))
                                                                     ))))
                                                    }                                                  ,
                                                    Cell.new(
                                                      begin
                                                        if @global_lisp_binding.has_key?('___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20115') then
                                                          trampCall(@___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20115)
                                                        else raise NameError.new( "Error: undefined variable ___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20115", "___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20115" ) end
                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                            else
                                                if ( 
                                                true
                                                 ) then
                                                    begin
                                                        trampCall( callProcedure( 'recur',
                                                            begin
                                                                trampCall(_recur)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:974"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_cdrs)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:968"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))
                                                    end
                                                else
                                                  Nil.new
                                                end
                                            end
                                        else
                                          Cell.new()
                                        end
                                    }
                                           )))
                          }
                        DelayedCallPacket.new( 'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:974"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      trampCall(@_cons)
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:975"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_lis1)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:972"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_lists)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:965"] + __e.backtrace ) ; raise __e
                                    end
                                           ))))
                                     ))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              else
                  begin
                    ___lambda = lambda { |_recur| 
                        _recur                         = 
                          Proc.new { |_lis| 
                              if ( 
                                trampCall( callProcedure( 'null-list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                        trampCall(@_null_MIMARKlist_QUMARK)
                                      else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:973"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:975"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                               ) then
                                  begin
                                      trampCall(_lis)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:975"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  begin
                                    ___lambda = lambda { |_tail| 
                                        if ( 
                                          begin
                                            @global_lisp_binding['___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20113'] = true
                                            @___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20113 = 
                                            trampCall(
                                                  trampCall( callProcedure( 'f',
                                                      begin
                                                          trampCall(_f)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:975"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        trampCall( callProcedure( 'car',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_car') then
                                                                trampCall(@_car)
                                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:975"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_lis)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:975"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))
                                                               )))
                                            )
                                          end
                                         ) then
                                            trampCall( callProcedure( 'anonymouse', 
                                                Proc.new { |_x| 
                                                    trampCall( callProcedure( 'cons',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cons') then
                                                            trampCall(@_cons)
                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:975"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_x)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:975"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_tail)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:976"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))
                                                }                                              ,
                                                Cell.new(
                                                  begin
                                                    if @global_lisp_binding.has_key?('___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20113') then
                                                      trampCall(@___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20113)
                                                    else raise NameError.new( "Error: undefined variable ___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20113", "___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20113" ) end
                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                        else
                                            if ( 
                                            true
                                             ) then
                                                begin
                                                    begin
                                                        trampCall(_tail)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:976"] + __e.backtrace ) ; raise __e
                                                    end
                                                end
                                            end
                                        end
                                    } ; ___lambda.call(
                                          trampCall( callProcedure( 'recur',
                                              begin
                                                  trampCall(_recur)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:974"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'cdr',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cdr') then
                                                        trampCall(@_cdr)
                                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:974"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_lis)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:975"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                                       )))
                                               )
                                  end
                              end
                          }
                        DelayedCallPacket.new( 'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:974"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_lis1)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:972"] + __e.backtrace ) ; raise __e
                              end
                                     ))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_map_MIMARKin_MIMARKorder'] = true
    @_map_MIMARKin_MIMARKorder = 
    trampCall(
          Proc.new { |_f,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              if ( 
                trampCall( callProcedure( 'pair?',
                    begin
                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                        trampCall(@_pair_QUMARK)
                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:988"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_lists)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:987"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  begin
                    ___lambda = lambda { |_recur| 
                        _recur                         = 
                          Proc.new { |_lists| 
                              DelayedCallPacket.new( 'call-with-values',
                                  begin
                                    if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                      trampCall(@_call_MIMARKwith_MIMARKvalues)
                                    else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    Proc.new { || 
                                        trampCall( callProcedure( '%cars+cdrs',
                                            begin
                                              if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs') then
                                                trampCall(@__PAMARKcars_PLMARKcdrs)
                                              else raise NameError.new( "Error: undefined variable __PAMARKcars_PLMARKcdrs", "__PAMARKcars_PLMARKcdrs" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:987"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_lists)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:987"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                    }                                  ,Cell.new(
                                    Proc.new { |_cars,_cdrs| 
                                        if ( 
                                          trampCall( callProcedure( 'pair?',
                                              begin
                                                if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                  trampCall(@_pair_QUMARK)
                                                else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:988"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_cars)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:989"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                         ) then
                                            begin
                                              ___lambda = lambda { |_x| 
                                                  trampCall( callProcedure( 'cons',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_cons') then
                                                          trampCall(@_cons)
                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:998"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_x)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:998"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,Cell.new(
                                                        trampCall( callProcedure( 'recur',
                                                            begin
                                                                trampCall(_recur)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:998"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_cdrs)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:990"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))
                                                               ))))
                                              } ; ___lambda.call(
                                                    trampCall( callProcedure( 'apply',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_apply') then
                                                            trampCall(@_apply)
                                                          else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:989"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_f)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:997"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_cars)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:989"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))
                                                         )
                                            end
                                        else
                                          Cell.new()
                                        end
                                    }
                                           )))
                          }
                        DelayedCallPacket.new( 'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:998"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      trampCall(@_cons)
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:998"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_lis1)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:994"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_lists)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:987"] + __e.backtrace ) ; raise __e
                                    end
                                           ))))
                                     ))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              else
                  begin
                    ___lambda = lambda { |_recur| 
                        _recur                         = 
                          Proc.new { |_lis| 
                              if ( 
                                trampCall( callProcedure( 'null-list?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                        trampCall(@_null_MIMARKlist_QUMARK)
                                      else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:995"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:997"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                               ) then
                                  begin
                                      trampCall(_lis)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:997"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  begin
                                    ___lambda = lambda { |_tail,_x| 
                                        DelayedCallPacket.new( 'cons',
                                            begin
                                              if @global_lisp_binding.has_key?('_cons') then
                                                trampCall(@_cons)
                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:998"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_x)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:998"] + __e.backtrace ) ; raise __e
                                              end                                            ,Cell.new(
                                              trampCall( callProcedure( 'recur',
                                                  begin
                                                      trampCall(_recur)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:998"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_tail)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:998"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                                     )))
                                    } ; ___lambda.call(
                                          trampCall( callProcedure( 'cdr',
                                              begin
                                                if @global_lisp_binding.has_key?('_cdr') then
                                                  trampCall(@_cdr)
                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:996"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_lis)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:997"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))                                        ,
                                          trampCall( callProcedure( 'f',
                                              begin
                                                  trampCall(_f)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:997"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'car',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_car') then
                                                        trampCall(@_car)
                                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:997"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_lis)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:997"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                                       )))
                                               )
                                  end
                              end
                          }
                        DelayedCallPacket.new( 'recur',
                            begin
                                trampCall(_recur)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:998"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_lis1)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:994"] + __e.backtrace ) ; raise __e
                              end
                                     ))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_map'] = true
    @_map = 
    trampCall(
          begin
            if @global_lisp_binding.has_key?('_map_MIMARKin_MIMARKorder') then
              trampCall(@_map_MIMARKin_MIMARKorder)
            else raise NameError.new( "Error: undefined variable _map_MIMARKin_MIMARKorder", "_map_MIMARKin_MIMARKorder" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1002"] + __e.backtrace ) ; raise __e
          end
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_filter'] = true
    @_filter = 
    trampCall(
          Proc.new { |_pred,_lis| 
              begin
              end
              begin
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lis| 
                          if ( 
                            trampCall( callProcedure( 'null-list?',
                                begin
                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                    trampCall(@_null_MIMARKlist_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1016"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lis)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1021"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1021"] + __e.backtrace ) ; raise __e
                              end
                          else
                              begin
                                ___lambda = lambda { |_head,_tail| 
                                    if ( 
                                      trampCall( callProcedure( 'pred',
                                          begin
                                              trampCall(_pred)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1019"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_head)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1022"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                     ) then
                                        begin
                                          ___lambda = lambda { |_new_MIMARKtail| 
                                              if ( 
                                                trampCall( callProcedure( 'eq?',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                        trampCall(@_eq_QUMARK)
                                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1021"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_tail)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1023"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                      begin
                                                          trampCall(_new_MIMARKtail)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1022"] + __e.backtrace ) ; raise __e
                                                      end
                                                             ))))
                                               ) then
                                                  begin
                                                      trampCall(_lis)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1021"] + __e.backtrace ) ; raise __e
                                                  end
                                              else
                                                  DelayedCallPacket.new( 'cons',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_cons') then
                                                          trampCall(@_cons)
                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1022"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_head)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1022"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,Cell.new(
                                                        begin
                                                            trampCall(_new_MIMARKtail)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1022"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                              end
                                          } ; ___lambda.call(
                                                trampCall( callProcedure( 'recur',
                                                    begin
                                                        trampCall(_recur)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1023"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_tail)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1023"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                                     )
                                        end
                                    else
                                        DelayedCallPacket.new( 'recur',
                                            begin
                                                trampCall(_recur)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1023"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_tail)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1023"] + __e.backtrace ) ; raise __e
                                              end
                                                     ))
                                    end
                                } ; ___lambda.call(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1017"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1021"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))                                    ,
                                      trampCall( callProcedure( 'cdr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cdr') then
                                              trampCall(@_cdr)
                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1018"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1021"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                           )
                              end
                          end
                      }
                    DelayedCallPacket.new( 'recur',
                        begin
                            trampCall(_recur)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1023"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1021"] + __e.backtrace ) ; raise __e
                          end
                                 ))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_filter_EXMARK'] = true
    @_filter_EXMARK = 
    trampCall(
          Proc.new { |_pred,_lis| 
              begin
              end
              begin
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_ans| 
                          if ( 
                            trampCall( callProcedure( 'null-list?',
                                begin
                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                    trampCall(@_null_MIMARKlist_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1069"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_ans)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1095"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              begin
                                  begin
                                      trampCall(_ans)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1095"] + __e.backtrace ) ; raise __e
                                  end
                              end
                          else
                              if ( 
                                trampCall( callProcedure( 'not',
                                    begin
                                      if @global_lisp_binding.has_key?('_not') then
                                        trampCall(@_not)
                                      else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1070"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'pred',
                                          begin
                                              trampCall(_pred)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1089"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            trampCall( callProcedure( 'car',
                                                begin
                                                  if @global_lisp_binding.has_key?('_car') then
                                                    trampCall(@_car)
                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1089"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_ans)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1095"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                   )))
                                             )))
                               ) then
                                  begin
                                      DelayedCallPacket.new( 'lp',
                                          begin
                                              trampCall(_lp)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1092"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            trampCall( callProcedure( 'cdr',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cdr') then
                                                    trampCall(@_cdr)
                                                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1094"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_ans)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1095"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                   ))
                                  end
                              else
                                  if ( 
                                  true
                                   ) then
                                      begin
                                          begin
                                            ___lambda = lambda { |_scan_MIMARKin,_scan_MIMARKout| 
                                                _scan_MIMARKin                                                 = 
                                                  Proc.new { |_prev,_lis| 
                                                      if ( 
                                                        trampCall( callProcedure( 'pair?',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                                trampCall(@_pair_QUMARK)
                                                              else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1088"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_lis)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))
                                                       ) then
                                                          if ( 
                                                            trampCall( callProcedure( 'pred',
                                                                begin
                                                                    trampCall(_pred)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1089"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  trampCall( callProcedure( 'car',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_car') then
                                                                          trampCall(@_car)
                                                                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1089"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            trampCall(_lis)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               )))
                                                                         )))
                                                           ) then
                                                              DelayedCallPacket.new( 'scan-in',
                                                                  begin
                                                                      trampCall(_scan_MIMARKin)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1094"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_lis)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'cdr',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_cdr') then
                                                                            trampCall(@_cdr)
                                                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1094"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              trampCall(_lis)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 )))
                                                                           )))
                                                          else
                                                              DelayedCallPacket.new( 'scan-out',
                                                                  begin
                                                                      trampCall(_scan_MIMARKout)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1086"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_prev)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'cdr',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_cdr') then
                                                                            trampCall(@_cdr)
                                                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1094"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              trampCall(_lis)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 )))
                                                                           )))
                                                          end
                                                      end
                                                  }
                                                _scan_MIMARKout                                                 = 
                                                  Proc.new { |_prev,_lis| 
                                                      begin
                                                        ___lambda = lambda { |_lp| 
                                                            _lp                                                             = 
                                                              Proc.new { |_lis| 
                                                                  if ( 
                                                                    trampCall( callProcedure( 'pair?',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                                            trampCall(@_pair_QUMARK)
                                                                          else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1088"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              trampCall(_lis)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 )))
                                                                   ) then
                                                                      if ( 
                                                                        trampCall( callProcedure( 'pred',
                                                                            begin
                                                                                trampCall(_pred)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1089"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              trampCall( callProcedure( 'car',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_car') then
                                                                                      trampCall(@_car)
                                                                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1089"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                    begin
                                                                                        trampCall(_lis)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                           )))
                                                                                     )))
                                                                       ) then
                                                                          begin
                                                                              trampCall( callProcedure( 'set-cdr!',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_set_MIMARKcdr_EXMARK') then
                                                                                      trampCall(@_set_MIMARKcdr_EXMARK)
                                                                                    else raise NameError.new( "Error: undefined variable _set_MIMARKcdr_EXMARK", "_set_MIMARKcdr_EXMARK" ) end
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                    begin
                                                                                        trampCall(_prev)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,Cell.new(
                                                                                    begin
                                                                                        trampCall(_lis)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                                                                                    end
                                                                                           ))))
                                                                              DelayedCallPacket.new( 'scan-in',
                                                                                  begin
                                                                                      trampCall(_scan_MIMARKin)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1094"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                    begin
                                                                                        trampCall(_lis)
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,Cell.new(
                                                                                    trampCall( callProcedure( 'cdr',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_cdr') then
                                                                                            trampCall(@_cdr)
                                                                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1094"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        Cell.new(
                                                                                          begin
                                                                                              trampCall(_lis)
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                                 )))
                                                                                           )))
                                                                          end
                                                                      else
                                                                          DelayedCallPacket.new( 'lp',
                                                                              begin
                                                                                  trampCall(_lp)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1092"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                                trampCall( callProcedure( 'cdr',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_cdr') then
                                                                                        trampCall(@_cdr)
                                                                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1094"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    Cell.new(
                                                                                      begin
                                                                                          trampCall(_lis)
                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                                                                                      end
                                                                                             )))
                                                                                       ))
                                                                      end
                                                                  else
                                                                      DelayedCallPacket.new( 'set-cdr!',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_set_MIMARKcdr_EXMARK') then
                                                                              trampCall(@_set_MIMARKcdr_EXMARK)
                                                                            else raise NameError.new( "Error: undefined variable _set_MIMARKcdr_EXMARK", "_set_MIMARKcdr_EXMARK" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_prev)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,Cell.new(
                                                                            begin
                                                                                trampCall(_lis)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))
                                                                  end
                                                              }
                                                            DelayedCallPacket.new( 'lp',
                                                                begin
                                                                    trampCall(_lp)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1092"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      trampCall(_lis)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         ))
                                                        } ; ___lambda.call(
                                                        nil
                                                                   )
                                                      end
                                                  }
                                                trampCall( callProcedure( 'scan-in',
                                                    begin
                                                        trampCall(_scan_MIMARKin)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1094"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_ans)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1095"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'cdr',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cdr') then
                                                              trampCall(@_cdr)
                                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1094"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_ans)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1095"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))
                                                             ))))
                                                begin
                                                    trampCall(_ans)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1095"] + __e.backtrace ) ; raise __e
                                                end
                                            } ; ___lambda.call(
                                            nil,nil
                                                       )
                                          end
                                      end
                                  end
                              end
                          end
                      }
                    DelayedCallPacket.new( 'lp',
                        begin
                            trampCall(_lp)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1092"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1093"] + __e.backtrace ) ; raise __e
                          end
                                 ))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_partition'] = true
    @_partition = 
    trampCall(
          Proc.new { |_pred,_lis| 
              begin
              end
              begin
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lis| 
                          if ( 
                            trampCall( callProcedure( 'null-list?',
                                begin
                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                    trampCall(@_null_MIMARKlist_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1105"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lis)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              DelayedCallPacket.new( 'values',
                                  begin
                                    if @global_lisp_binding.has_key?('_values') then
                                      trampCall(@_values)
                                    else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                          else
                              begin
                                ___lambda = lambda { |_elt,_tail| 
                                    DelayedCallPacket.new( 'call-with-values',
                                        begin
                                          if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                            trampCall(@_call_MIMARKwith_MIMARKvalues)
                                          else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          Proc.new { || 
                                              trampCall( callProcedure( 'recur',
                                                  begin
                                                      trampCall(_recur)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1108"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_tail)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1108"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                          }                                        ,Cell.new(
                                          Proc.new { |_in,_out| 
                                              if ( 
                                                trampCall( callProcedure( 'pred',
                                                    begin
                                                        trampCall(_pred)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1109"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_elt)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                               ) then
                                                  trampCall( callProcedure( 'values',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_values') then
                                                          trampCall(@_values)
                                                        else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        if ( 
                                                          trampCall( callProcedure( 'pair?',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                                  trampCall(@_pair_QUMARK)
                                                                else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_out)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                         ) then
                                                            trampCall( callProcedure( 'cons',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                    trampCall(@_cons)
                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      trampCall(_elt)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,Cell.new(
                                                                  begin
                                                                      trampCall(_in)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         ))))
                                                        else
                                                            begin
                                                                trampCall(_lis)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                                            end
                                                        end                                                      ,Cell.new(
                                                        begin
                                                            trampCall(_out)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                                        end
                                                               ))))
                                              else
                                                  trampCall( callProcedure( 'values',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_values') then
                                                          trampCall(@_values)
                                                        else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_in)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,Cell.new(
                                                        if ( 
                                                          trampCall( callProcedure( 'pair?',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                                  trampCall(@_pair_QUMARK)
                                                                else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_in)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                         ) then
                                                            trampCall( callProcedure( 'cons',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                    trampCall(@_cons)
                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      trampCall(_elt)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,Cell.new(
                                                                  begin
                                                                      trampCall(_out)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         ))))
                                                        else
                                                            begin
                                                                trampCall(_lis)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                                            end
                                                        end
                                                               ))))
                                              end
                                          }
                                                 )))
                                } ; ___lambda.call(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1106"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))                                    ,
                                      trampCall( callProcedure( 'cdr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cdr') then
                                              trampCall(@_cdr)
                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1107"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                           )
                              end
                          end
                      }
                    DelayedCallPacket.new( 'recur',
                        begin
                            trampCall(_recur)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1108"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1111"] + __e.backtrace ) ; raise __e
                          end
                                 ))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_partition_EXMARK'] = true
    @_partition_EXMARK = 
    trampCall(
          Proc.new { |_pred,_lis| 
              begin
              end
              if ( 
                trampCall( callProcedure( 'null-list?',
                    begin
                      if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                        trampCall(@_null_MIMARKlist_QUMARK)
                      else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1138"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_lis)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  DelayedCallPacket.new( 'values',
                      begin
                        if @global_lisp_binding.has_key?('_values') then
                          trampCall(@_values)
                        else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            trampCall(_lis)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                        end                      ,Cell.new(
                        begin
                            trampCall(_lis)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                        end
                               )))
              else
                  begin
                    ___lambda = lambda { |_scan_MIMARKin,_scan_MIMARKout| 
                        _scan_MIMARKin                         = 
                          Proc.new { |_in_MIMARKprev,_out_MIMARKprev,_lis| 
                              begin
                                ___lambda = lambda { |_lp| 
                                    _lp                                     = 
                                      Proc.new { |_in_MIMARKprev,_lis| 
                                          if ( 
                                            trampCall( callProcedure( 'pair?',
                                                begin
                                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                    trampCall(@_pair_QUMARK)
                                                  else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1173"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_lis)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                           ) then
                                              if ( 
                                                trampCall( callProcedure( 'pred',
                                                    begin
                                                        trampCall(_pred)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1174"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'car',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_car') then
                                                              trampCall(@_car)
                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1174"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_lis)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))
                                                             )))
                                               ) then
                                                  DelayedCallPacket.new( 'lp',
                                                      begin
                                                          trampCall(_lp)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_lis)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,Cell.new(
                                                        trampCall( callProcedure( 'cdr',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_cdr') then
                                                                trampCall(@_cdr)
                                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_lis)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))
                                                               )))
                                              else
                                                  begin
                                                      trampCall( callProcedure( 'set-cdr!',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_set_MIMARKcdr_EXMARK') then
                                                              trampCall(@_set_MIMARKcdr_EXMARK)
                                                            else raise NameError.new( "Error: undefined variable _set_MIMARKcdr_EXMARK", "_set_MIMARKcdr_EXMARK" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1160"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_out_MIMARKprev)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1158"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,Cell.new(
                                                            begin
                                                                trampCall(_lis)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   ))))
                                                      DelayedCallPacket.new( 'scan-out',
                                                          begin
                                                              trampCall(_scan_MIMARKout)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1168"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_in_MIMARKprev)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1160"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,Cell.new(
                                                            begin
                                                                trampCall(_lis)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,Cell.new(
                                                            trampCall( callProcedure( 'cdr',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cdr') then
                                                                    trampCall(@_cdr)
                                                                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      trampCall(_lis)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         )))
                                                                   ))))
                                                  end
                                              end
                                          else
                                              DelayedCallPacket.new( 'set-cdr!',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_set_MIMARKcdr_EXMARK') then
                                                      trampCall(@_set_MIMARKcdr_EXMARK)
                                                    else raise NameError.new( "Error: undefined variable _set_MIMARKcdr_EXMARK", "_set_MIMARKcdr_EXMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1160"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_out_MIMARKprev)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1158"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,Cell.new(
                                                    begin
                                                        trampCall(_lis)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                          end
                                      }
                                    DelayedCallPacket.new( 'lp',
                                        begin
                                            trampCall(_lp)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_in_MIMARKprev)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1160"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                          begin
                                              trampCall(_lis)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                } ; ___lambda.call(
                                nil
                                           )
                              end
                          }
                        _scan_MIMARKout                         = 
                          Proc.new { |_in_MIMARKprev,_out_MIMARKprev,_lis| 
                              begin
                                ___lambda = lambda { |_lp| 
                                    _lp                                     = 
                                      Proc.new { |_out_MIMARKprev,_lis| 
                                          if ( 
                                            trampCall( callProcedure( 'pair?',
                                                begin
                                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                    trampCall(@_pair_QUMARK)
                                                  else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1173"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_lis)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                           ) then
                                              if ( 
                                                trampCall( callProcedure( 'pred',
                                                    begin
                                                        trampCall(_pred)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1174"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'car',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_car') then
                                                              trampCall(@_car)
                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1174"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_lis)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))
                                                             )))
                                               ) then
                                                  begin
                                                      trampCall( callProcedure( 'set-cdr!',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_set_MIMARKcdr_EXMARK') then
                                                              trampCall(@_set_MIMARKcdr_EXMARK)
                                                            else raise NameError.new( "Error: undefined variable _set_MIMARKcdr_EXMARK", "_set_MIMARKcdr_EXMARK" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1160"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_in_MIMARKprev)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1160"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,Cell.new(
                                                            begin
                                                                trampCall(_lis)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   ))))
                                                      DelayedCallPacket.new( 'scan-in',
                                                          begin
                                                              trampCall(_scan_MIMARKin)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1175"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_lis)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,Cell.new(
                                                            begin
                                                                trampCall(_out_MIMARKprev)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1158"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,Cell.new(
                                                            trampCall( callProcedure( 'cdr',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cdr') then
                                                                    trampCall(@_cdr)
                                                                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  begin
                                                                      trampCall(_lis)
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                         )))
                                                                   ))))
                                                  end
                                              else
                                                  DelayedCallPacket.new( 'lp',
                                                      begin
                                                          trampCall(_lp)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_lis)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,Cell.new(
                                                        trampCall( callProcedure( 'cdr',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_cdr') then
                                                                trampCall(@_cdr)
                                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_lis)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))
                                                               )))
                                              end
                                          else
                                              DelayedCallPacket.new( 'set-cdr!',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_set_MIMARKcdr_EXMARK') then
                                                      trampCall(@_set_MIMARKcdr_EXMARK)
                                                    else raise NameError.new( "Error: undefined variable _set_MIMARKcdr_EXMARK", "_set_MIMARKcdr_EXMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1160"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_in_MIMARKprev)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1160"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,Cell.new(
                                                    begin
                                                        trampCall(_lis)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                          end
                                      }
                                    DelayedCallPacket.new( 'lp',
                                        begin
                                            trampCall(_lp)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_out_MIMARKprev)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1158"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                          begin
                                              trampCall(_lis)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                } ; ___lambda.call(
                                nil
                                           )
                              end
                          }
                        if ( 
                          trampCall( callProcedure( 'pred',
                              begin
                                  trampCall(_pred)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1174"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                trampCall( callProcedure( 'car',
                                    begin
                                      if @global_lisp_binding.has_key?('_car') then
                                        trampCall(@_car)
                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1174"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                                       )))
                         ) then
                            begin
                              ___lambda = lambda { |_lp| 
                                  _lp                                   = 
                                    Proc.new { |_prev_MIMARKl,_l| 
                                        if ( 
                                          trampCall( callProcedure( 'not',
                                              begin
                                                if @global_lisp_binding.has_key?('_not') then
                                                  trampCall(@_not)
                                                else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1173"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'pair?',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                        trampCall(@_pair_QUMARK)
                                                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1173"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_l)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                                       )))
                                         ) then
                                            begin
                                                DelayedCallPacket.new( 'values',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_values') then
                                                        trampCall(@_values)
                                                      else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_lis)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                      begin
                                                          trampCall(_l)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                            end
                                        else
                                            if ( 
                                              trampCall( callProcedure( 'pred',
                                                  begin
                                                      trampCall(_pred)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1174"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'car',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_car') then
                                                            trampCall(@_car)
                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1174"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_l)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))
                                                           )))
                                             ) then
                                                begin
                                                    DelayedCallPacket.new( 'lp',
                                                        begin
                                                            trampCall(_lp)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_l)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                          trampCall( callProcedure( 'cdr',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cdr') then
                                                                  trampCall(@_cdr)
                                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_l)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                                 )))
                                                end
                                            else
                                                if ( 
                                                true
                                                 ) then
                                                    begin
                                                        trampCall( callProcedure( 'scan-out',
                                                            begin
                                                                trampCall(_scan_MIMARKout)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1168"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_prev_MIMARKl)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1175"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                              begin
                                                                  trampCall(_l)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                              trampCall( callProcedure( 'cdr',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_cdr') then
                                                                      trampCall(@_cdr)
                                                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_l)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))
                                                                     )))))
                                                        DelayedCallPacket.new( 'values',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_values') then
                                                                trampCall(@_values)
                                                              else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_lis)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                              begin
                                                                  trampCall(_l)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))
                                                    end
                                                end
                                            end
                                        end
                                    }
                                  DelayedCallPacket.new( 'lp',
                                      begin
                                          trampCall(_lp)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        trampCall( callProcedure( 'cdr',
                                            begin
                                              if @global_lisp_binding.has_key?('_cdr') then
                                                trampCall(@_cdr)
                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               )))
                              } ; ___lambda.call(
                              nil
                                         )
                            end
                        else
                            begin
                              ___lambda = lambda { |_lp| 
                                  _lp                                   = 
                                    Proc.new { |_prev_MIMARKl,_l| 
                                        if ( 
                                          trampCall( callProcedure( 'not',
                                              begin
                                                if @global_lisp_binding.has_key?('_not') then
                                                  trampCall(@_not)
                                                else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1173"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'pair?',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                        trampCall(@_pair_QUMARK)
                                                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1173"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_l)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                                       )))
                                         ) then
                                            begin
                                                DelayedCallPacket.new( 'values',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_values') then
                                                        trampCall(@_values)
                                                      else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_l)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                      begin
                                                          trampCall(_lis)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                            end
                                        else
                                            if ( 
                                              trampCall( callProcedure( 'pred',
                                                  begin
                                                      trampCall(_pred)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1174"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'car',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_car') then
                                                            trampCall(@_car)
                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1174"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_l)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))
                                                           )))
                                             ) then
                                                begin
                                                    trampCall( callProcedure( 'scan-in',
                                                        begin
                                                            trampCall(_scan_MIMARKin)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1175"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_l)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_prev_MIMARKl)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1175"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                          trampCall( callProcedure( 'cdr',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cdr') then
                                                                  trampCall(@_cdr)
                                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_l)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                                 )))))
                                                    DelayedCallPacket.new( 'values',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_values') then
                                                            trampCall(@_values)
                                                          else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_l)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_lis)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))
                                                end
                                            else
                                                if ( 
                                                true
                                                 ) then
                                                    begin
                                                        DelayedCallPacket.new( 'lp',
                                                            begin
                                                                trampCall(_lp)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_l)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                              trampCall( callProcedure( 'cdr',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_cdr') then
                                                                      trampCall(@_cdr)
                                                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_l)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))
                                                                     )))
                                                    end
                                                end
                                            end
                                        end
                                    }
                                  DelayedCallPacket.new( 'lp',
                                      begin
                                          trampCall(_lp)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        trampCall( callProcedure( 'cdr',
                                            begin
                                              if @global_lisp_binding.has_key?('_cdr') then
                                                trampCall(@_cdr)
                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1177"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1176"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               )))
                              } ; ___lambda.call(
                              nil
                                         )
                            end
                        end
                    } ; ___lambda.call(
                    nil,nil
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_remove'] = true
    @_remove = 
    trampCall(
          Proc.new { |_pred,_l| 
              DelayedCallPacket.new( 'filter',
                  begin
                    if @global_lisp_binding.has_key?('_filter') then
                      trampCall(@_filter)
                    else raise NameError.new( "Error: undefined variable _filter", "_filter" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1181"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    Proc.new { |_x| 
                        trampCall( callProcedure( 'not',
                            begin
                              if @global_lisp_binding.has_key?('_not') then
                                trampCall(@_not)
                              else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1181"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'pred',
                                  begin
                                      trampCall(_pred)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1181"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_x)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1181"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                    }                  ,Cell.new(
                    begin
                        trampCall(_l)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1181"] + __e.backtrace ) ; raise __e
                    end
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_remove_EXMARK'] = true
    @_remove_EXMARK = 
    trampCall(
          Proc.new { |_pred,_l| 
              DelayedCallPacket.new( 'filter!',
                  begin
                    if @global_lisp_binding.has_key?('_filter_EXMARK') then
                      trampCall(@_filter_EXMARK)
                    else raise NameError.new( "Error: undefined variable _filter_EXMARK", "_filter_EXMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1182"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    Proc.new { |_x| 
                        trampCall( callProcedure( 'not',
                            begin
                              if @global_lisp_binding.has_key?('_not') then
                                trampCall(@_not)
                              else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1182"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'pred',
                                  begin
                                      trampCall(_pred)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1182"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_x)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1182"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                    }                  ,Cell.new(
                    begin
                        trampCall(_l)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1182"] + __e.backtrace ) ; raise __e
                    end
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_delete'] = true
    @_delete = 
    trampCall(
          Proc.new { |_x,_lis,*__rest__| _maybe_MIMARK_EQMARK = __rest__[0] ;  
              begin
                ___lambda = lambda { |__EQMARK| 
                    DelayedCallPacket.new( 'filter',
                        begin
                          if @global_lisp_binding.has_key?('_filter') then
                            trampCall(@_filter)
                          else raise NameError.new( "Error: undefined variable _filter", "_filter" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1205"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          Proc.new { |_y| 
                              trampCall( callProcedure( 'not',
                                  begin
                                    if @global_lisp_binding.has_key?('_not') then
                                      trampCall(@_not)
                                    else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1205"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( '=',
                                        begin
                                            trampCall(__EQMARK)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1205"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_x)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1205"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                          begin
                                              trampCall(_y)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1205"] + __e.backtrace ) ; raise __e
                                          end
                                                 ))))
                                           )))
                          }                        ,Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1205"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                } ; ___lambda.call(
                      begin
                        ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20125| 
                            if ( 
                              trampCall( callProcedure( 'null?',
                                  begin
                                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                                      trampCall(@_null_QUMARK)
                                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:917"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20125)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                             ) then
                                begin
                                  if @global_lisp_binding.has_key?('_equal_QUMARK') then
                                    trampCall(@_equal_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _equal_QUMARK", "_equal_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1204"] + __e.backtrace ) ; raise __e
                                end
                            else
                                DelayedCallPacket.new( 'car',
                                    begin
                                      if @global_lisp_binding.has_key?('_car') then
                                        trampCall(@_car)
                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1174"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20125)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                             ))
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_maybe_MIMARK_EQMARK)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1204"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_delete_EXMARK'] = true
    @_delete_EXMARK = 
    trampCall(
          Proc.new { |_x,_lis,*__rest__| _maybe_MIMARK_EQMARK = __rest__[0] ;  
              begin
                ___lambda = lambda { |__EQMARK| 
                    DelayedCallPacket.new( 'filter!',
                        begin
                          if @global_lisp_binding.has_key?('_filter_EXMARK') then
                            trampCall(@_filter_EXMARK)
                          else raise NameError.new( "Error: undefined variable _filter_EXMARK", "_filter_EXMARK" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1209"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          Proc.new { |_y| 
                              trampCall( callProcedure( 'not',
                                  begin
                                    if @global_lisp_binding.has_key?('_not') then
                                      trampCall(@_not)
                                    else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1209"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( '=',
                                        begin
                                            trampCall(__EQMARK)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1209"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_x)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1209"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                          begin
                                              trampCall(_y)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1209"] + __e.backtrace ) ; raise __e
                                          end
                                                 ))))
                                           )))
                          }                        ,Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1209"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                } ; ___lambda.call(
                      begin
                        ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20126| 
                            if ( 
                              trampCall( callProcedure( 'null?',
                                  begin
                                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                                      trampCall(@_null_QUMARK)
                                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:917"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20126)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                             ) then
                                begin
                                  if @global_lisp_binding.has_key?('_equal_QUMARK') then
                                    trampCall(@_equal_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _equal_QUMARK", "_equal_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1208"] + __e.backtrace ) ; raise __e
                                end
                            else
                                DelayedCallPacket.new( 'car',
                                    begin
                                      if @global_lisp_binding.has_key?('_car') then
                                        trampCall(@_car)
                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1174"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20126)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                             ))
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_maybe_MIMARK_EQMARK)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1208"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_member'] = true
    @_member = 
    trampCall(
          Proc.new { |_x,_lis,*__rest__| _maybe_MIMARK_EQMARK = __rest__[0] ;  
              begin
                ___lambda = lambda { |__EQMARK| 
                    DelayedCallPacket.new( 'find-tail',
                        begin
                          if @global_lisp_binding.has_key?('_find_MIMARKtail') then
                            trampCall(@_find_MIMARKtail)
                          else raise NameError.new( "Error: undefined variable _find_MIMARKtail", "_find_MIMARKtail" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1214"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          Proc.new { |_y| 
                              trampCall( callProcedure( '=',
                                  begin
                                      trampCall(__EQMARK)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1214"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_x)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1214"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_y)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1214"] + __e.backtrace ) ; raise __e
                                    end
                                           ))))
                          }                        ,Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1214"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                } ; ___lambda.call(
                      begin
                        ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20127| 
                            if ( 
                              trampCall( callProcedure( 'null?',
                                  begin
                                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                                      trampCall(@_null_QUMARK)
                                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:917"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20127)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                             ) then
                                begin
                                  if @global_lisp_binding.has_key?('_equal_QUMARK') then
                                    trampCall(@_equal_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _equal_QUMARK", "_equal_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1213"] + __e.backtrace ) ; raise __e
                                end
                            else
                                DelayedCallPacket.new( 'car',
                                    begin
                                      if @global_lisp_binding.has_key?('_car') then
                                        trampCall(@_car)
                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1174"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20127)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                             ))
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_maybe_MIMARK_EQMARK)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1213"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_delete_MIMARKduplicates'] = true
    @_delete_MIMARKduplicates = 
    trampCall(
          Proc.new { |_lis,*__rest__| _maybe_MIMARK_EQMARK = __rest__[0] ;  
              begin
                ___lambda = lambda { |_elt_EQMARK| 
                    begin
                    end
                    begin
                      ___lambda = lambda { |_recur| 
                          _recur                           = 
                            Proc.new { |_lis| 
                                if ( 
                                  trampCall( callProcedure( 'null-list?',
                                      begin
                                        if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                          trampCall(@_null_MIMARKlist_QUMARK)
                                        else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1236"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1240"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                 ) then
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1240"] + __e.backtrace ) ; raise __e
                                    end
                                else
                                    begin
                                      ___lambda = lambda { |_x| 
                                          begin
                                            ___lambda = lambda { |_tail| 
                                                begin
                                                  ___lambda = lambda { |_new_MIMARKtail| 
                                                      if ( 
                                                        trampCall( callProcedure( 'eq?',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                trampCall(@_eq_QUMARK)
                                                              else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1240"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_tail)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1240"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                              begin
                                                                  trampCall(_new_MIMARKtail)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1240"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     ))))
                                                       ) then
                                                          begin
                                                              trampCall(_lis)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1240"] + __e.backtrace ) ; raise __e
                                                          end
                                                      else
                                                          DelayedCallPacket.new( 'cons',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                  trampCall(@_cons)
                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1240"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_x)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1240"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,Cell.new(
                                                                begin
                                                                    trampCall(_new_MIMARKtail)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1240"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                      end
                                                  } ; ___lambda.call(
                                                        trampCall( callProcedure( 'recur',
                                                            begin
                                                                trampCall(_recur)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1239"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              trampCall( callProcedure( 'delete',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_delete') then
                                                                      trampCall(@_delete)
                                                                    else raise NameError.new( "Error: undefined variable _delete", "_delete" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1239"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_x)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1240"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,Cell.new(
                                                                    begin
                                                                        trampCall(_tail)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1240"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,Cell.new(
                                                                    begin
                                                                        trampCall(_elt_EQMARK)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1239"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))))
                                                                     )))
                                                             )
                                                end
                                            } ; ___lambda.call(
                                                  trampCall( callProcedure( 'cdr',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_cdr') then
                                                          trampCall(@_cdr)
                                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1238"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_lis)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1240"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                                       )
                                          end
                                      } ; ___lambda.call(
                                            trampCall( callProcedure( 'car',
                                                begin
                                                  if @global_lisp_binding.has_key?('_car') then
                                                    trampCall(@_car)
                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1237"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_lis)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1240"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                 )
                                    end
                                end
                            }
                          DelayedCallPacket.new( 'recur',
                              begin
                                  trampCall(_recur)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1239"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_lis)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1240"] + __e.backtrace ) ; raise __e
                                end
                                       ))
                      } ; ___lambda.call(
                      nil
                                 )
                    end
                } ; ___lambda.call(
                      begin
                        ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20128| 
                            if ( 
                              trampCall( callProcedure( 'null?',
                                  begin
                                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                                      trampCall(@_null_QUMARK)
                                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:917"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20128)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                             ) then
                                begin
                                  if @global_lisp_binding.has_key?('_equal_QUMARK') then
                                    trampCall(@_equal_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _equal_QUMARK", "_equal_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1233"] + __e.backtrace ) ; raise __e
                                end
                            else
                                DelayedCallPacket.new( 'car',
                                    begin
                                      if @global_lisp_binding.has_key?('_car') then
                                        trampCall(@_car)
                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1237"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20128)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                             ))
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_maybe_MIMARK_EQMARK)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1233"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_delete_MIMARKduplicates_EXMARK'] = true
    @_delete_MIMARKduplicates_EXMARK = 
    trampCall(
          Proc.new { |_lis,_maybe_MIMARK_EQMARK| 
              begin
                ___lambda = lambda { |_elt_EQMARK| 
                    begin
                    end
                    begin
                      ___lambda = lambda { |_recur| 
                          _recur                           = 
                            Proc.new { |_lis| 
                                if ( 
                                  trampCall( callProcedure( 'null-list?',
                                      begin
                                        if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                          trampCall(@_null_MIMARKlist_QUMARK)
                                        else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1246"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                 ) then
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                    end
                                else
                                    begin
                                      ___lambda = lambda { |_x| 
                                          begin
                                            ___lambda = lambda { |_tail| 
                                                begin
                                                  ___lambda = lambda { |_new_MIMARKtail| 
                                                      if ( 
                                                        trampCall( callProcedure( 'eq?',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                trampCall(@_eq_QUMARK)
                                                              else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_tail)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                              begin
                                                                  trampCall(_new_MIMARKtail)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     ))))
                                                       ) then
                                                          begin
                                                              trampCall(_lis)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                                          end
                                                      else
                                                          DelayedCallPacket.new( 'cons',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                  trampCall(@_cons)
                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_x)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,Cell.new(
                                                                begin
                                                                    trampCall(_new_MIMARKtail)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                      end
                                                  } ; ___lambda.call(
                                                        trampCall( callProcedure( 'recur',
                                                            begin
                                                                trampCall(_recur)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1249"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              trampCall( callProcedure( 'delete!',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_delete_EXMARK') then
                                                                      trampCall(@_delete_EXMARK)
                                                                    else raise NameError.new( "Error: undefined variable _delete_EXMARK", "_delete_EXMARK" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1249"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_x)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,Cell.new(
                                                                    begin
                                                                        trampCall(_tail)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,Cell.new(
                                                                    begin
                                                                        trampCall(_elt_EQMARK)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1249"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))))
                                                                     )))
                                                             )
                                                end
                                            } ; ___lambda.call(
                                                  trampCall( callProcedure( 'cdr',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_cdr') then
                                                          trampCall(@_cdr)
                                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1248"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_lis)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                                       )
                                          end
                                      } ; ___lambda.call(
                                            trampCall( callProcedure( 'car',
                                                begin
                                                  if @global_lisp_binding.has_key?('_car') then
                                                    trampCall(@_car)
                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1247"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_lis)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                 )
                                    end
                                end
                            }
                          DelayedCallPacket.new( 'recur',
                              begin
                                  trampCall(_recur)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1249"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_lis)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                end
                                       ))
                      } ; ___lambda.call(
                      nil
                                 )
                    end
                } ; ___lambda.call(
                      begin
                        ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20129| 
                            if ( 
                              trampCall( callProcedure( 'null?',
                                  begin
                                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                                      trampCall(@_null_QUMARK)
                                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:917"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20129)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                             ) then
                                begin
                                  if @global_lisp_binding.has_key?('_equal_QUMARK') then
                                    trampCall(@_equal_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _equal_QUMARK", "_equal_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1243"] + __e.backtrace ) ; raise __e
                                end
                            else
                                DelayedCallPacket.new( 'car',
                                    begin
                                      if @global_lisp_binding.has_key?('_car') then
                                        trampCall(@_car)
                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1247"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20129)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                             ))
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_maybe_MIMARK_EQMARK)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1243"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_assoc'] = true
    @_assoc = 
    trampCall(
          Proc.new { |_x,_lis,*__rest__| _maybe_MIMARK_EQMARK = __rest__[0] ;  
              begin
                ___lambda = lambda { |__EQMARK| 
                    DelayedCallPacket.new( 'find',
                        begin
                          if @global_lisp_binding.has_key?('_find') then
                            trampCall(@_find)
                          else raise NameError.new( "Error: undefined variable _find", "_find" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1259"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          Proc.new { |_entry| 
                              trampCall( callProcedure( '=',
                                  begin
                                      trampCall(__EQMARK)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1259"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_x)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1259"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    trampCall( callProcedure( 'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            trampCall(@_car)
                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1259"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_entry)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1259"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                           ))))
                          }                        ,Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1259"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                } ; ___lambda.call(
                      begin
                        ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20130| 
                            if ( 
                              trampCall( callProcedure( 'null?',
                                  begin
                                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                                      trampCall(@_null_QUMARK)
                                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:917"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20130)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                             ) then
                                begin
                                  if @global_lisp_binding.has_key?('_equal_QUMARK') then
                                    trampCall(@_equal_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _equal_QUMARK", "_equal_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1258"] + __e.backtrace ) ; raise __e
                                end
                            else
                                DelayedCallPacket.new( 'car',
                                    begin
                                      if @global_lisp_binding.has_key?('_car') then
                                        trampCall(@_car)
                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1259"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20130)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                             ))
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_maybe_MIMARK_EQMARK)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1258"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_alist_MIMARKcons'] = true
    @_alist_MIMARKcons = 
    trampCall(
          Proc.new { |_key,_datum,_alist| 
              DelayedCallPacket.new( 'cons',
                  begin
                    if @global_lisp_binding.has_key?('_cons') then
                      trampCall(@_cons)
                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1261"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    trampCall( callProcedure( 'cons',
                        begin
                          if @global_lisp_binding.has_key?('_cons') then
                            trampCall(@_cons)
                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1261"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_key)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1261"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                              trampCall(_datum)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1261"] + __e.backtrace ) ; raise __e
                          end
                                 ))))                  ,Cell.new(
                    begin
                        trampCall(_alist)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1261"] + __e.backtrace ) ; raise __e
                    end
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_alist_MIMARKcopy'] = true
    @_alist_MIMARKcopy = 
    trampCall(
          Proc.new { |_alist| 
              DelayedCallPacket.new( 'map',
                  begin
                    if @global_lisp_binding.has_key?('_map') then
                      trampCall(@_map)
                    else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1264"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    Proc.new { |_elt| 
                        trampCall( callProcedure( 'cons',
                            begin
                              if @global_lisp_binding.has_key?('_cons') then
                                trampCall(@_cons)
                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1264"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'car',
                                  begin
                                    if @global_lisp_binding.has_key?('_car') then
                                      trampCall(@_car)
                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1264"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_elt)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1264"] + __e.backtrace ) ; raise __e
                                    end
                                           )))                            ,Cell.new(
                              trampCall( callProcedure( 'cdr',
                                  begin
                                    if @global_lisp_binding.has_key?('_cdr') then
                                      trampCall(@_cdr)
                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1264"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_elt)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1264"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     ))))
                    }                  ,Cell.new(
                    begin
                        trampCall(_alist)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1265"] + __e.backtrace ) ; raise __e
                    end
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_alist_MIMARKdelete'] = true
    @_alist_MIMARKdelete = 
    trampCall(
          Proc.new { |_key,_alist,*__rest__| _maybe_MIMARK_EQMARK = __rest__[0] ;  
              begin
                ___lambda = lambda { |__EQMARK| 
                    DelayedCallPacket.new( 'filter',
                        begin
                          if @global_lisp_binding.has_key?('_filter') then
                            trampCall(@_filter)
                          else raise NameError.new( "Error: undefined variable _filter", "_filter" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1269"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          Proc.new { |_elt| 
                              trampCall( callProcedure( 'not',
                                  begin
                                    if @global_lisp_binding.has_key?('_not') then
                                      trampCall(@_not)
                                    else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1269"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( '=',
                                        begin
                                            trampCall(__EQMARK)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1269"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_key)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1269"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                          trampCall( callProcedure( 'car',
                                              begin
                                                if @global_lisp_binding.has_key?('_car') then
                                                  trampCall(@_car)
                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1269"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_elt)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1269"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 ))))
                                           )))
                          }                        ,Cell.new(
                          begin
                              trampCall(_alist)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1269"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                } ; ___lambda.call(
                      begin
                        ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20131| 
                            if ( 
                              trampCall( callProcedure( 'null?',
                                  begin
                                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                                      trampCall(@_null_QUMARK)
                                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:917"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20131)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                             ) then
                                begin
                                  if @global_lisp_binding.has_key?('_equal_QUMARK') then
                                    trampCall(@_equal_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _equal_QUMARK", "_equal_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1268"] + __e.backtrace ) ; raise __e
                                end
                            else
                                DelayedCallPacket.new( 'car',
                                    begin
                                      if @global_lisp_binding.has_key?('_car') then
                                        trampCall(@_car)
                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1269"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20131)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                             ))
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_maybe_MIMARK_EQMARK)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1268"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_alist_MIMARKdelete_EXMARK'] = true
    @_alist_MIMARKdelete_EXMARK = 
    trampCall(
          Proc.new { |_key,_alist,*__rest__| _maybe_MIMARK_EQMARK = __rest__[0] ;  
              begin
                ___lambda = lambda { |__EQMARK| 
                    DelayedCallPacket.new( 'filter!',
                        begin
                          if @global_lisp_binding.has_key?('_filter_EXMARK') then
                            trampCall(@_filter_EXMARK)
                          else raise NameError.new( "Error: undefined variable _filter_EXMARK", "_filter_EXMARK" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1273"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          Proc.new { |_elt| 
                              trampCall( callProcedure( 'not',
                                  begin
                                    if @global_lisp_binding.has_key?('_not') then
                                      trampCall(@_not)
                                    else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1273"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( '=',
                                        begin
                                            trampCall(__EQMARK)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1273"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_key)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1273"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                          trampCall( callProcedure( 'car',
                                              begin
                                                if @global_lisp_binding.has_key?('_car') then
                                                  trampCall(@_car)
                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1273"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_elt)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1273"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 ))))
                                           )))
                          }                        ,Cell.new(
                          begin
                              trampCall(_alist)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1273"] + __e.backtrace ) ; raise __e
                          end
                                 )))
                } ; ___lambda.call(
                      begin
                        ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20132| 
                            if ( 
                              trampCall( callProcedure( 'null?',
                                  begin
                                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                                      trampCall(@_null_QUMARK)
                                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:917"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20132)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                             ) then
                                begin
                                  if @global_lisp_binding.has_key?('_equal_QUMARK') then
                                    trampCall(@_equal_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _equal_QUMARK", "_equal_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1272"] + __e.backtrace ) ; raise __e
                                end
                            else
                                DelayedCallPacket.new( 'car',
                                    begin
                                      if @global_lisp_binding.has_key?('_car') then
                                        trampCall(@_car)
                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1273"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20132)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                             ))
                            end
                        } ; ___lambda.call(
                              begin
                                  trampCall(_maybe_MIMARK_EQMARK)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1272"] + __e.backtrace ) ; raise __e
                              end
                                   )
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_find'] = true
    @_find = 
    trampCall(
          Proc.new { |_pred,_list| 
              if ( 
                begin
                  @global_lisp_binding['___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20134'] = true
                  @___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20134 = 
                  trampCall(
                        trampCall( callProcedure( 'find-tail',
                            begin
                              if @global_lisp_binding.has_key?('_find_MIMARKtail') then
                                trampCall(@_find_MIMARKtail)
                              else raise NameError.new( "Error: undefined variable _find_MIMARKtail", "_find_MIMARKtail" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1280"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_pred)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1280"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                              begin
                                  trampCall(_list)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1280"] + __e.backtrace ) ; raise __e
                              end
                                     ))))
                  )
                end
               ) then
                  DelayedCallPacket.new( 'car',
                      begin
                        if @global_lisp_binding.has_key?('_car') then
                          trampCall(@_car)
                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1280"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                          if @global_lisp_binding.has_key?('___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20134') then
                            trampCall(@___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20134)
                          else raise NameError.new( "Error: undefined variable ___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20134", "___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20134" ) end
                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                        end
                               ))
              else
                  if ( 
                  true
                   ) then
                      begin
                        false
                      end
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_find_MIMARKtail'] = true
    @_find_MIMARKtail = 
    trampCall(
          Proc.new { |_pred,_list| 
              begin
              end
              begin
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_list| 
                          if ( 
                            trampCall( callProcedure( 'not',
                                begin
                                  if @global_lisp_binding.has_key?('_not') then
                                    trampCall(@_not)
                                  else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1286"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  trampCall( callProcedure( 'eq?',
                                      begin
                                        if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                          trampCall(@_eq_QUMARK)
                                        else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                      false                                      ,Cell.new(
                                        trampCall( callProcedure( 'not',
                                            begin
                                              if @global_lisp_binding.has_key?('_not') then
                                                trampCall(@_not)
                                              else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1286"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'null-list?',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                      trampCall(@_null_MIMARKlist_QUMARK)
                                                    else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1286"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_list)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1288"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                                     )))
                                               ))))
                                         )))
                           ) then
                              if ( 
                                trampCall( callProcedure( 'pred',
                                    begin
                                        trampCall(_pred)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1287"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1287"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_list)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1288"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             )))
                               ) then
                                  begin
                                      trampCall(_list)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1288"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                  DelayedCallPacket.new( 'lp',
                                      begin
                                          trampCall(_lp)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1288"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'cdr',
                                            begin
                                              if @global_lisp_binding.has_key?('_cdr') then
                                                trampCall(@_cdr)
                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1288"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_list)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1288"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               ))
                              end
                          else
                            false
                          end
                      }
                    DelayedCallPacket.new( 'lp',
                        begin
                            trampCall(_lp)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1288"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_list)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1288"] + __e.backtrace ) ; raise __e
                          end
                                 ))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_take_MIMARKwhile'] = true
    @_take_MIMARKwhile = 
    trampCall(
          Proc.new { |_pred,_lis| 
              begin
              end
              begin
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lis| 
                          if ( 
                            trampCall( callProcedure( 'null-list?',
                                begin
                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                    trampCall(@_null_MIMARKlist_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1293"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lis)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1296"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                            Cell.new()
                          else
                              begin
                                ___lambda = lambda { |_x| 
                                    if ( 
                                      trampCall( callProcedure( 'pred',
                                          begin
                                              trampCall(_pred)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1295"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_x)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1296"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                     ) then
                                        DelayedCallPacket.new( 'cons',
                                            begin
                                              if @global_lisp_binding.has_key?('_cons') then
                                                trampCall(@_cons)
                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1296"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_x)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1296"] + __e.backtrace ) ; raise __e
                                              end                                            ,Cell.new(
                                              trampCall( callProcedure( 'recur',
                                                  begin
                                                      trampCall(_recur)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1296"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'cdr',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cdr') then
                                                            trampCall(@_cdr)
                                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1296"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_lis)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1296"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))
                                                           )))
                                                     )))
                                    else
                                      Cell.new()
                                    end
                                } ; ___lambda.call(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1294"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1296"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                           )
                              end
                          end
                      }
                    DelayedCallPacket.new( 'recur',
                        begin
                            trampCall(_recur)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1296"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1296"] + __e.backtrace ) ; raise __e
                          end
                                 ))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_drop_MIMARKwhile'] = true
    @_drop_MIMARKwhile = 
    trampCall(
          Proc.new { |_pred,_lis| 
              begin
              end
              begin
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_lis| 
                          if ( 
                            trampCall( callProcedure( 'null-list?',
                                begin
                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                    trampCall(@_null_MIMARKlist_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1302"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lis)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1305"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                            Cell.new()
                          else
                              if ( 
                                trampCall( callProcedure( 'pred',
                                    begin
                                        trampCall(_pred)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1303"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1303"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1305"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             )))
                               ) then
                                  DelayedCallPacket.new( 'lp',
                                      begin
                                          trampCall(_lp)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1304"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'cdr',
                                            begin
                                              if @global_lisp_binding.has_key?('_cdr') then
                                                trampCall(@_cdr)
                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1304"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1305"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                               ))
                              else
                                  begin
                                      trampCall(_lis)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1305"] + __e.backtrace ) ; raise __e
                                  end
                              end
                          end
                      }
                    DelayedCallPacket.new( 'lp',
                        begin
                            trampCall(_lp)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1304"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1305"] + __e.backtrace ) ; raise __e
                          end
                                 ))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_take_MIMARKwhile_EXMARK'] = true
    @_take_MIMARKwhile_EXMARK = 
    trampCall(
          Proc.new { |_pred,_lis| 
              begin
              end
              if ( 
                begin
                  ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20135| 
                      if ( 
                        begin
                            trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20135)
                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                        end
                       ) then
                          begin
                              trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20135)
                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                          end
                      else
                          begin
                            ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20136| 
                                if ( 
                                  begin
                                      trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20136)
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                                 ) then
                                    begin
                                        trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20136)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                else
                                  false
                                end
                            } ; ___lambda.call(
                                  trampCall( callProcedure( 'not',
                                      begin
                                        if @global_lisp_binding.has_key?('_not') then
                                          trampCall(@_not)
                                        else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1309"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'pred',
                                            begin
                                                trampCall(_pred)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1313"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'car',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_car') then
                                                      trampCall(@_car)
                                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1312"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_lis)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1315"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                                     )))
                                               )))
                                       )
                          end
                      end
                  } ; ___lambda.call(
                        trampCall( callProcedure( 'null-list?',
                            begin
                              if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                trampCall(@_null_MIMARKlist_QUMARK)
                              else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1309"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1315"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                             )
                end
               ) then
                Cell.new()
              else
                  begin
                      begin
                        ___lambda = lambda { |_lp| 
                            _lp                             = 
                              Proc.new { |_prev,_rest| 
                                  if ( 
                                    trampCall( callProcedure( 'pair?',
                                        begin
                                          if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                            trampCall(@_pair_QUMARK)
                                          else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1311"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_rest)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1313"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                   ) then
                                      begin
                                        ___lambda = lambda { |_x| 
                                            if ( 
                                              trampCall( callProcedure( 'pred',
                                                  begin
                                                      trampCall(_pred)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1313"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_x)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1313"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                             ) then
                                                trampCall( callProcedure( 'lp',
                                                    begin
                                                        trampCall(_lp)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1313"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_rest)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1313"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'cdr',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cdr') then
                                                              trampCall(@_cdr)
                                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1313"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_rest)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1313"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))
                                                             ))))
                                            else
                                                trampCall( callProcedure( 'set-cdr!',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_set_MIMARKcdr_EXMARK') then
                                                        trampCall(@_set_MIMARKcdr_EXMARK)
                                                      else raise NameError.new( "Error: undefined variable _set_MIMARKcdr_EXMARK", "_set_MIMARKcdr_EXMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1314"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_prev)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1314"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                    Cell.new()
                                                             ))))
                                            end
                                        } ; ___lambda.call(
                                              trampCall( callProcedure( 'car',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_car') then
                                                      trampCall(@_car)
                                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1312"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_rest)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1313"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                                   )
                                      end
                                  end
                              }
                            trampCall( callProcedure( 'lp',
                                begin
                                    trampCall(_lp)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1313"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lis)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1315"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  trampCall( callProcedure( 'cdr',
                                      begin
                                        if @global_lisp_binding.has_key?('_cdr') then
                                          trampCall(@_cdr)
                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1313"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1315"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                         ))))
                        } ; ___lambda.call(
                        nil
                                   )
                      end
                      begin
                          trampCall(_lis)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1315"] + __e.backtrace ) ; raise __e
                      end
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_span'] = true
    @_span = 
    trampCall(
          Proc.new { |_pred,_lis| 
              begin
              end
              begin
                ___lambda = lambda { |_recur| 
                    _recur                     = 
                      Proc.new { |_lis| 
                          if ( 
                            trampCall( callProcedure( 'null-list?',
                                begin
                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                    trampCall(@_null_MIMARKlist_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1320"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lis)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1325"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              DelayedCallPacket.new( 'values',
                                  begin
                                    if @global_lisp_binding.has_key?('_values') then
                                      trampCall(@_values)
                                    else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1325"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  Cell.new()                                  ,Cell.new(
                                  Cell.new()
                                           )))
                          else
                              begin
                                ___lambda = lambda { |_x| 
                                    if ( 
                                      trampCall( callProcedure( 'pred',
                                          begin
                                              trampCall(_pred)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1322"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_x)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1324"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                     ) then
                                        DelayedCallPacket.new( 'call-with-values',
                                            begin
                                              if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                trampCall(@_call_MIMARKwith_MIMARKvalues)
                                              else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              Proc.new { || 
                                                  trampCall( callProcedure( 'recur',
                                                      begin
                                                          trampCall(_recur)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1323"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        trampCall( callProcedure( 'cdr',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_cdr') then
                                                                trampCall(@_cdr)
                                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1323"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_lis)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1325"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))
                                                               )))
                                              }                                            ,Cell.new(
                                              Proc.new { |_prefix,_suffix| 
                                                  trampCall( callProcedure( 'values',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_values') then
                                                          trampCall(@_values)
                                                        else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1325"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        trampCall( callProcedure( 'cons',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                trampCall(@_cons)
                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1324"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_x)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1324"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                              begin
                                                                  trampCall(_prefix)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1324"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     ))))                                                      ,Cell.new(
                                                        begin
                                                            trampCall(_suffix)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1324"] + __e.backtrace ) ; raise __e
                                                        end
                                                               ))))
                                              }
                                                     )))
                                    else
                                        DelayedCallPacket.new( 'values',
                                            begin
                                              if @global_lisp_binding.has_key?('_values') then
                                                trampCall(@_values)
                                              else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1325"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                            Cell.new()                                            ,Cell.new(
                                              begin
                                                  trampCall(_lis)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1325"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                    end
                                } ; ___lambda.call(
                                      trampCall( callProcedure( 'car',
                                          begin
                                            if @global_lisp_binding.has_key?('_car') then
                                              trampCall(@_car)
                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1321"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1325"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                           )
                              end
                          end
                      }
                    DelayedCallPacket.new( 'recur',
                        begin
                            trampCall(_recur)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1323"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1325"] + __e.backtrace ) ; raise __e
                          end
                                 ))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_span_EXMARK'] = true
    @_span_EXMARK = 
    trampCall(
          Proc.new { |_pred,_lis| 
              begin
              end
              if ( 
                begin
                  ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20137| 
                      if ( 
                        begin
                            trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20137)
                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                        end
                       ) then
                          begin
                              trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20137)
                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                          end
                      else
                          begin
                            ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20138| 
                                if ( 
                                  begin
                                      trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20138)
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                                 ) then
                                    begin
                                        trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20138)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                else
                                  false
                                end
                            } ; ___lambda.call(
                                  trampCall( callProcedure( 'not',
                                      begin
                                        if @global_lisp_binding.has_key?('_not') then
                                          trampCall(@_not)
                                        else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1329"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        trampCall( callProcedure( 'pred',
                                            begin
                                                trampCall(_pred)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1333"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'car',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_car') then
                                                      trampCall(@_car)
                                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1332"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_lis)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1336"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                                     )))
                                               )))
                                       )
                          end
                      end
                  } ; ___lambda.call(
                        trampCall( callProcedure( 'null-list?',
                            begin
                              if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                trampCall(@_null_MIMARKlist_QUMARK)
                              else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1331"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1336"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                             )
                end
               ) then
                  DelayedCallPacket.new( 'values',
                      begin
                        if @global_lisp_binding.has_key?('_values') then
                          trampCall(@_values)
                        else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1336"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                      Cell.new()                      ,Cell.new(
                        begin
                            trampCall(_lis)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1336"] + __e.backtrace ) ; raise __e
                        end
                               )))
              else
                  begin
                    ___lambda = lambda { |_suffix| 
                        DelayedCallPacket.new( 'values',
                            begin
                              if @global_lisp_binding.has_key?('_values') then
                                trampCall(@_values)
                              else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1336"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_lis)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1336"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                              begin
                                  trampCall(_suffix)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1336"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                    } ; ___lambda.call(
                          begin
                            ___lambda = lambda { |_lp| 
                                _lp                                 = 
                                  Proc.new { |_prev,_rest| 
                                      if ( 
                                        trampCall( callProcedure( 'null-list?',
                                            begin
                                              if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                trampCall(@_null_MIMARKlist_QUMARK)
                                              else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1331"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_rest)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1335"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                       ) then
                                          begin
                                              trampCall(_rest)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1335"] + __e.backtrace ) ; raise __e
                                          end
                                      else
                                          begin
                                            ___lambda = lambda { |_x| 
                                                if ( 
                                                  trampCall( callProcedure( 'pred',
                                                      begin
                                                          trampCall(_pred)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1333"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_x)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1333"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                                 ) then
                                                    DelayedCallPacket.new( 'lp',
                                                        begin
                                                            trampCall(_lp)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1333"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_rest)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1335"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                          trampCall( callProcedure( 'cdr',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cdr') then
                                                                  trampCall(@_cdr)
                                                                else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1333"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_rest)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1335"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                                 )))
                                                else
                                                    begin
                                                        trampCall( callProcedure( 'set-cdr!',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_set_MIMARKcdr_EXMARK') then
                                                                trampCall(@_set_MIMARKcdr_EXMARK)
                                                              else raise NameError.new( "Error: undefined variable _set_MIMARKcdr_EXMARK", "_set_MIMARKcdr_EXMARK" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1334"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_prev)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1334"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                            Cell.new()
                                                                     ))))
                                                        begin
                                                            trampCall(_rest)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1335"] + __e.backtrace ) ; raise __e
                                                        end
                                                    end
                                                end
                                            } ; ___lambda.call(
                                                  trampCall( callProcedure( 'car',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_car') then
                                                          trampCall(@_car)
                                                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1332"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_rest)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1335"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                                       )
                                          end
                                      end
                                  }
                                DelayedCallPacket.new( 'lp',
                                    begin
                                        trampCall(_lp)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1333"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          trampCall(_lis)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1336"] + __e.backtrace ) ; raise __e
                                      end                                    ,Cell.new(
                                      trampCall( callProcedure( 'cdr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cdr') then
                                              trampCall(@_cdr)
                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1333"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1336"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             )))
                            } ; ___lambda.call(
                            nil
                                       )
                          end
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_break'] = true
    @_break = 
    trampCall(
          Proc.new { |_pred,_lis| 
              DelayedCallPacket.new( 'span',
                  begin
                    if @global_lisp_binding.has_key?('_span') then
                      trampCall(@_span)
                    else raise NameError.new( "Error: undefined variable _span", "_span" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1339"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    Proc.new { |_x| 
                        trampCall( callProcedure( 'not',
                            begin
                              if @global_lisp_binding.has_key?('_not') then
                                trampCall(@_not)
                              else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1339"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'pred',
                                  begin
                                      trampCall(_pred)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1339"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_x)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1339"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                    }                  ,Cell.new(
                    begin
                        trampCall(_lis)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1339"] + __e.backtrace ) ; raise __e
                    end
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_break_EXMARK'] = true
    @_break_EXMARK = 
    trampCall(
          Proc.new { |_pred,_lis| 
              DelayedCallPacket.new( 'span!',
                  begin
                    if @global_lisp_binding.has_key?('_span_EXMARK') then
                      trampCall(@_span_EXMARK)
                    else raise NameError.new( "Error: undefined variable _span_EXMARK", "_span_EXMARK" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1340"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    Proc.new { |_x| 
                        trampCall( callProcedure( 'not',
                            begin
                              if @global_lisp_binding.has_key?('_not') then
                                trampCall(@_not)
                              else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1340"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'pred',
                                  begin
                                      trampCall(_pred)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1340"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_x)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1340"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                                     )))
                    }                  ,Cell.new(
                    begin
                        trampCall(_lis)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1340"] + __e.backtrace ) ; raise __e
                    end
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_any'] = true
    @_any = 
    trampCall(
          Proc.new { |_pred,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              if ( 
                trampCall( callProcedure( 'pair?',
                    begin
                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                        trampCall(@_pair_QUMARK)
                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1351"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_lists)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1347"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  DelayedCallPacket.new( 'call-with-values',
                      begin
                        if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                          trampCall(@_call_MIMARKwith_MIMARKvalues)
                        else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        Proc.new { || 
                            trampCall( callProcedure( '%cars+cdrs',
                                begin
                                  if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs') then
                                    trampCall(@__PAMARKcars_PLMARKcdrs)
                                  else raise NameError.new( "Error: undefined variable __PAMARKcars_PLMARKcdrs", "__PAMARKcars_PLMARKcdrs" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1350"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  trampCall( callProcedure( 'cons',
                                      begin
                                        if @global_lisp_binding.has_key?('_cons') then
                                          trampCall(@_cons)
                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1347"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lis1)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1357"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        begin
                                            trampCall(_lists)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1347"] + __e.backtrace ) ; raise __e
                                        end
                                               ))))
                                         )))
                        }                      ,Cell.new(
                        Proc.new { |_heads,_tails| 
                            if ( 
                              trampCall( callProcedure( 'not',
                                  begin
                                    if @global_lisp_binding.has_key?('_not') then
                                      trampCall(@_not)
                                    else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1356"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'eq?',
                                        begin
                                          if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                            trampCall(@_eq_QUMARK)
                                          else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                        false                                        ,Cell.new(
                                          trampCall( callProcedure( 'pair?',
                                              begin
                                                if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                  trampCall(@_pair_QUMARK)
                                                else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1351"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_heads)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1353"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 ))))
                                           )))
                             ) then
                                begin
                                  ___lambda = lambda { |_lp| 
                                      _lp                                       = 
                                        Proc.new { |_heads,_tails| 
                                            trampCall( callProcedure( 'call-with-values',
                                                begin
                                                  if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                    trampCall(@_call_MIMARKwith_MIMARKvalues)
                                                  else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  Proc.new { || 
                                                      trampCall( callProcedure( '%cars+cdrs',
                                                          begin
                                                            if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs') then
                                                              trampCall(@__PAMARKcars_PLMARKcdrs)
                                                            else raise NameError.new( "Error: undefined variable __PAMARKcars_PLMARKcdrs", "__PAMARKcars_PLMARKcdrs" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1350"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_tails)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1350"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))
                                                  }                                                ,Cell.new(
                                                  Proc.new { |_next_MIMARKheads,_next_MIMARKtails| 
                                                      if ( 
                                                        trampCall( callProcedure( 'pair?',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                                trampCall(@_pair_QUMARK)
                                                              else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1351"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_next_MIMARKheads)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1352"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))
                                                       ) then
                                                          begin
                                                            ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20141| 
                                                                if ( 
                                                                  begin
                                                                      trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20141)
                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                  end
                                                                 ) then
                                                                    begin
                                                                        trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20141)
                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                else
                                                                    begin
                                                                      ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20142| 
                                                                          if ( 
                                                                            begin
                                                                                trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20142)
                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                           ) then
                                                                              begin
                                                                                  trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20142)
                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                          else
                                                                            false
                                                                          end
                                                                      } ; ___lambda.call(
                                                                            trampCall( callProcedure( 'lp',
                                                                                begin
                                                                                    trampCall(_lp)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                Cell.new(
                                                                                  begin
                                                                                      trampCall(_next_MIMARKheads)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1352"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,Cell.new(
                                                                                  begin
                                                                                      trampCall(_next_MIMARKtails)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1352"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                                         ))))
                                                                                 )
                                                                    end
                                                                end
                                                            } ; ___lambda.call(
                                                                  trampCall( callProcedure( 'apply',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_apply') then
                                                                          trampCall(@_apply)
                                                                        else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1353"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            trampCall(_pred)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,Cell.new(
                                                                        begin
                                                                            trampCall(_heads)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1353"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               ))))
                                                                       )
                                                          end
                                                      else
                                                          trampCall( callProcedure( 'apply',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_apply') then
                                                                  trampCall(@_apply)
                                                                else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1353"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_pred)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,Cell.new(
                                                                begin
                                                                    trampCall(_heads)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1353"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       ))))
                                                      end
                                                  }
                                                         ))))
                                        }
                                      trampCall( callProcedure( 'lp',
                                          begin
                                              trampCall(_lp)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_heads)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1353"] + __e.backtrace ) ; raise __e
                                            end                                          ,Cell.new(
                                            begin
                                                trampCall(_tails)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1350"] + __e.backtrace ) ; raise __e
                                            end
                                                   ))))
                                  } ; ___lambda.call(
                                  nil
                                             )
                                end
                            else
                              false
                            end
                        }
                               )))
              else
                  if ( 
                    trampCall( callProcedure( 'not',
                        begin
                          if @global_lisp_binding.has_key?('_not') then
                            trampCall(@_not)
                          else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1356"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          trampCall( callProcedure( 'eq?',
                              begin
                                if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                  trampCall(@_eq_QUMARK)
                                else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              false                              ,Cell.new(
                                trampCall( callProcedure( 'not',
                                    begin
                                      if @global_lisp_binding.has_key?('_not') then
                                        trampCall(@_not)
                                      else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1356"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'null-list?',
                                          begin
                                            if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                              trampCall(@_null_MIMARKlist_QUMARK)
                                            else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1358"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lis1)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1357"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                             )))
                                       ))))
                                 )))
                   ) then
                      begin
                        ___lambda = lambda { |_lp| 
                            _lp                             = 
                              Proc.new { |_head,_tail| 
                                  if ( 
                                    trampCall( callProcedure( 'null-list?',
                                        begin
                                          if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                            trampCall(@_null_MIMARKlist_QUMARK)
                                          else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1358"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_tail)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                   ) then
                                      DelayedCallPacket.new( 'pred',
                                          begin
                                              trampCall(_pred)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_head)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                            end
                                                   ))
                                  else
                                      begin
                                        ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20139| 
                                            if ( 
                                              begin
                                                  trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20139)
                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                              end
                                             ) then
                                                begin
                                                    trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20139)
                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                end
                                            else
                                                begin
                                                  ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20140| 
                                                      if ( 
                                                        begin
                                                            trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20140)
                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                        end
                                                       ) then
                                                          begin
                                                              trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20140)
                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                          end
                                                      else
                                                        false
                                                      end
                                                  } ; ___lambda.call(
                                                        trampCall( callProcedure( 'lp',
                                                            begin
                                                                trampCall(_lp)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              trampCall( callProcedure( 'car',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_car') then
                                                                      trampCall(@_car)
                                                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_tail)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))                                                            ,Cell.new(
                                                              trampCall( callProcedure( 'cdr',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_cdr') then
                                                                      trampCall(@_cdr)
                                                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_tail)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))
                                                                     ))))
                                                             )
                                                end
                                            end
                                        } ; ___lambda.call(
                                              trampCall( callProcedure( 'pred',
                                                  begin
                                                      trampCall(_pred)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_head)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))
                                                   )
                                      end
                                  end
                              }
                            DelayedCallPacket.new( 'lp',
                                begin
                                    trampCall(_lp)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  trampCall( callProcedure( 'car',
                                      begin
                                        if @global_lisp_binding.has_key?('_car') then
                                          trampCall(@_car)
                                        else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lis1)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1357"] + __e.backtrace ) ; raise __e
                                        end
                                               )))                                ,Cell.new(
                                  trampCall( callProcedure( 'cdr',
                                      begin
                                        if @global_lisp_binding.has_key?('_cdr') then
                                          trampCall(@_cdr)
                                        else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1360"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lis1)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1357"] + __e.backtrace ) ; raise __e
                                        end
                                               )))
                                         )))
                        } ; ___lambda.call(
                        nil
                                   )
                      end
                  else
                    false
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_every'] = true
    @_every = 
    trampCall(
          Proc.new { |_pred,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              if ( 
                trampCall( callProcedure( 'pair?',
                    begin
                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                        trampCall(@_pair_QUMARK)
                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1378"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_lists)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1374"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  DelayedCallPacket.new( 'call-with-values',
                      begin
                        if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                          trampCall(@_call_MIMARKwith_MIMARKvalues)
                        else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        Proc.new { || 
                            trampCall( callProcedure( '%cars+cdrs',
                                begin
                                  if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs') then
                                    trampCall(@__PAMARKcars_PLMARKcdrs)
                                  else raise NameError.new( "Error: undefined variable __PAMARKcars_PLMARKcdrs", "__PAMARKcars_PLMARKcdrs" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1377"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  trampCall( callProcedure( 'cons',
                                      begin
                                        if @global_lisp_binding.has_key?('_cons') then
                                          trampCall(@_cons)
                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1374"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lis1)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1384"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        begin
                                            trampCall(_lists)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1374"] + __e.backtrace ) ; raise __e
                                        end
                                               ))))
                                         )))
                        }                      ,Cell.new(
                        Proc.new { |_heads,_tails| 
                            begin
                              ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20145| 
                                  if ( 
                                    begin
                                        trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20145)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                   ) then
                                      begin
                                          trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20145)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  else
                                      begin
                                        ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20146| 
                                            if ( 
                                              begin
                                                  trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20146)
                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                              end
                                             ) then
                                                begin
                                                    trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20146)
                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                end
                                            else
                                              false
                                            end
                                        } ; ___lambda.call(
                                              begin
                                                ___lambda = lambda { |_lp| 
                                                    _lp                                                     = 
                                                      Proc.new { |_heads,_tails| 
                                                          trampCall( callProcedure( 'call-with-values',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                                                  trampCall(@_call_MIMARKwith_MIMARKvalues)
                                                                else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                Proc.new { || 
                                                                    trampCall( callProcedure( '%cars+cdrs',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs') then
                                                                            trampCall(@__PAMARKcars_PLMARKcdrs)
                                                                          else raise NameError.new( "Error: undefined variable __PAMARKcars_PLMARKcdrs", "__PAMARKcars_PLMARKcdrs" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1377"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              trampCall(_tails)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1377"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 )))
                                                                }                                                              ,Cell.new(
                                                                Proc.new { |_next_MIMARKheads,_next_MIMARKtails| 
                                                                    if ( 
                                                                      trampCall( callProcedure( 'pair?',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                                              trampCall(@_pair_QUMARK)
                                                                            else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1378"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_next_MIMARKheads)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1379"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))
                                                                     ) then
                                                                        if ( 
                                                                          trampCall( callProcedure( 'not',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_not') then
                                                                                  trampCall(@_not)
                                                                                else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1375"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                                trampCall( callProcedure( 'eq?',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                                        trampCall(@_eq_QUMARK)
                                                                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    Cell.new(
                                                                                    false                                                                                    ,Cell.new(
                                                                                      trampCall( callProcedure( 'apply',
                                                                                          begin
                                                                                            if @global_lisp_binding.has_key?('_apply') then
                                                                                              trampCall(@_apply)
                                                                                            else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1380"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          Cell.new(
                                                                                            begin
                                                                                                trampCall(_pred)
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1387"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,Cell.new(
                                                                                            begin
                                                                                                trampCall(_heads)
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1380"] + __e.backtrace ) ; raise __e
                                                                                            end
                                                                                                   ))))
                                                                                             ))))
                                                                                       )))
                                                                         ) then
                                                                            trampCall( callProcedure( 'lp',
                                                                                begin
                                                                                    trampCall(_lp)
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1387"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                Cell.new(
                                                                                  begin
                                                                                      trampCall(_next_MIMARKheads)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1379"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,Cell.new(
                                                                                  begin
                                                                                      trampCall(_next_MIMARKtails)
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1379"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                                         ))))
                                                                        else
                                                                          false
                                                                        end
                                                                    else
                                                                        trampCall( callProcedure( 'apply',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_apply') then
                                                                                trampCall(@_apply)
                                                                              else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1380"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  trampCall(_pred)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1387"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,Cell.new(
                                                                              begin
                                                                                  trampCall(_heads)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1380"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                                     ))))
                                                                    end
                                                                }
                                                                       ))))
                                                      }
                                                    trampCall( callProcedure( 'lp',
                                                        begin
                                                            trampCall(_lp)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1387"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_heads)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1380"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                          begin
                                                              trampCall(_tails)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1377"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))))
                                                } ; ___lambda.call(
                                                nil
                                                           )
                                              end
                                                   )
                                      end
                                  end
                              } ; ___lambda.call(
                                    trampCall( callProcedure( 'not',
                                        begin
                                          if @global_lisp_binding.has_key?('_not') then
                                            trampCall(@_not)
                                          else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1375"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'pair?',
                                              begin
                                                if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                  trampCall(@_pair_QUMARK)
                                                else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1378"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_heads)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1380"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 )))
                                         )
                            end
                        }
                               )))
              else
                  begin
                    ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20143| 
                        if ( 
                          begin
                              trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20143)
                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                          end
                         ) then
                            begin
                                trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20143)
                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                            end
                        else
                            begin
                              ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20144| 
                                  if ( 
                                    begin
                                        trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20144)
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                   ) then
                                      begin
                                          trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20144)
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  else
                                    false
                                  end
                              } ; ___lambda.call(
                                    begin
                                      ___lambda = lambda { |_lp| 
                                          _lp                                           = 
                                            Proc.new { |_head,_tail| 
                                                if ( 
                                                  trampCall( callProcedure( 'null-list?',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                          trampCall(@_null_MIMARKlist_QUMARK)
                                                        else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1385"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_tail)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1387"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                                 ) then
                                                    DelayedCallPacket.new( 'pred',
                                                        begin
                                                            trampCall(_pred)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1387"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              trampCall(_head)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1387"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 ))
                                                else
                                                    if ( 
                                                      trampCall( callProcedure( 'not',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_not') then
                                                              trampCall(@_not)
                                                            else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1375"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            trampCall( callProcedure( 'eq?',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                    trampCall(@_eq_QUMARK)
                                                                  else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                false                                                                ,Cell.new(
                                                                  trampCall( callProcedure( 'pred',
                                                                      begin
                                                                          trampCall(_pred)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1387"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            trampCall(_head)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1387"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               )))
                                                                         ))))
                                                                   )))
                                                     ) then
                                                        DelayedCallPacket.new( 'lp',
                                                            begin
                                                                trampCall(_lp)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1387"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              trampCall( callProcedure( 'car',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_car') then
                                                                      trampCall(@_car)
                                                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1387"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_tail)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1387"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))                                                            ,Cell.new(
                                                              trampCall( callProcedure( 'cdr',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_cdr') then
                                                                      trampCall(@_cdr)
                                                                    else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1387"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_tail)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1387"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))
                                                                     )))
                                                    else
                                                      false
                                                    end
                                                end
                                            }
                                          DelayedCallPacket.new( 'lp',
                                              begin
                                                  trampCall(_lp)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1387"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'car',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_car') then
                                                        trampCall(@_car)
                                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1387"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_lis1)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1384"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))                                              ,Cell.new(
                                                trampCall( callProcedure( 'cdr',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cdr') then
                                                        trampCall(@_cdr)
                                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1387"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_lis1)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1384"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))
                                                       )))
                                      } ; ___lambda.call(
                                      nil
                                                 )
                                    end
                                         )
                            end
                        end
                    } ; ___lambda.call(
                          trampCall( callProcedure( 'null-list?',
                              begin
                                if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                  trampCall(@_null_MIMARKlist_QUMARK)
                                else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1385"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_lis1)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1384"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_list_MIMARKindex'] = true
    @_list_MIMARKindex = 
    trampCall(
          Proc.new { |_pred,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              if ( 
                trampCall( callProcedure( 'pair?',
                    begin
                      if @global_lisp_binding.has_key?('_pair_QUMARK') then
                        trampCall(@_pair_QUMARK)
                      else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1396"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                          trampCall(_lists)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1395"] + __e.backtrace ) ; raise __e
                      end
                             )))
               ) then
                  begin
                    ___lambda = lambda { |_lp| 
                        _lp                         = 
                          Proc.new { |_lists,_n| 
                              DelayedCallPacket.new( 'call-with-values',
                                  begin
                                    if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                      trampCall(@_call_MIMARKwith_MIMARKvalues)
                                    else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    Proc.new { || 
                                        trampCall( callProcedure( '%cars+cdrs',
                                            begin
                                              if @global_lisp_binding.has_key?('__PAMARKcars_PLMARKcdrs') then
                                                trampCall(@__PAMARKcars_PLMARKcdrs)
                                              else raise NameError.new( "Error: undefined variable __PAMARKcars_PLMARKcdrs", "__PAMARKcars_PLMARKcdrs" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1395"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_lists)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1395"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                    }                                  ,Cell.new(
                                    Proc.new { |_heads,_tails| 
                                        if ( 
                                          trampCall( callProcedure( 'not',
                                              begin
                                                if @global_lisp_binding.has_key?('_not') then
                                                  trampCall(@_not)
                                                else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1402"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'eq?',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                        trampCall(@_eq_QUMARK)
                                                      else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                    false                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'pair?',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                              trampCall(@_pair_QUMARK)
                                                            else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1396"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_heads)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1397"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))
                                                             ))))
                                                       )))
                                         ) then
                                            if ( 
                                              trampCall( callProcedure( 'apply',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_apply') then
                                                      trampCall(@_apply)
                                                    else raise NameError.new( "Error: undefined variable _apply", "_apply" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1397"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_pred)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,Cell.new(
                                                    begin
                                                        trampCall(_heads)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1397"] + __e.backtrace ) ; raise __e
                                                    end
                                                           ))))
                                             ) then
                                                begin
                                                    trampCall(_n)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                                                end
                                            else
                                                trampCall( callProcedure( 'lp',
                                                    begin
                                                        trampCall(_lp)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          trampCall(_tails)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1398"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,Cell.new(
                                                      trampCall( callProcedure( '+',
                                                          begin
                                                            if @global_lisp_binding.has_key?('__PLMARK') then
                                                              trampCall(@__PLMARK)
                                                            else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                trampCall(_n)
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,Cell.new(
                                                          1
                                                                   ))))
                                                             ))))
                                            end
                                        else
                                          false
                                        end
                                    }
                                           )))
                          }
                        DelayedCallPacket.new( 'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'cons',
                                  begin
                                    if @global_lisp_binding.has_key?('_cons') then
                                      trampCall(@_cons)
                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1394"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_lis1)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1401"] + __e.backtrace ) ; raise __e
                                    end                                  ,Cell.new(
                                    begin
                                        trampCall(_lists)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1395"] + __e.backtrace ) ; raise __e
                                    end
                                           ))))                            ,Cell.new(
                            0
                                     )))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              else
                  begin
                    ___lambda = lambda { |_lp| 
                        _lp                         = 
                          Proc.new { |_lis,_n| 
                              if ( 
                                trampCall( callProcedure( 'not',
                                    begin
                                      if @global_lisp_binding.has_key?('_not') then
                                        trampCall(@_not)
                                      else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1402"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'eq?',
                                          begin
                                            if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                              trampCall(@_eq_QUMARK)
                                            else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1250"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                          false                                          ,Cell.new(
                                            trampCall( callProcedure( 'not',
                                                begin
                                                  if @global_lisp_binding.has_key?('_not') then
                                                    trampCall(@_not)
                                                  else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1402"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  trampCall( callProcedure( 'null-list?',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                                          trampCall(@_null_MIMARKlist_QUMARK)
                                                        else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1402"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            trampCall(_lis)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                                         )))
                                                   ))))
                                             )))
                               ) then
                                  if ( 
                                    trampCall( callProcedure( 'pred',
                                        begin
                                            trampCall(_pred)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          trampCall( callProcedure( 'car',
                                              begin
                                                if @global_lisp_binding.has_key?('_car') then
                                                  trampCall(@_car)
                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(_lis)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 )))
                                   ) then
                                      begin
                                          trampCall(_n)
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                                      end
                                  else
                                      DelayedCallPacket.new( 'lp',
                                          begin
                                              trampCall(_lp)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            trampCall( callProcedure( 'cdr',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cdr') then
                                                    trampCall(@_cdr)
                                                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_lis)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))                                          ,Cell.new(
                                            trampCall( callProcedure( '+',
                                                begin
                                                  if @global_lisp_binding.has_key?('__PLMARK') then
                                                    trampCall(@__PLMARK)
                                                  else raise NameError.new( "Error: undefined variable __PLMARK", "__PLMARK" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_n)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                                                  end                                                ,Cell.new(
                                                1
                                                         ))))
                                                   )))
                                  end
                              else
                                false
                              end
                          }
                        DelayedCallPacket.new( 'lp',
                            begin
                                trampCall(_lp)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1403"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_lis1)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1401"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                            0
                                     )))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_reverse_EXMARK'] = true
    @_reverse_EXMARK = 
    trampCall(
          Proc.new { |_lis| 
              begin
                ___lambda = lambda { |_lp| 
                    _lp                     = 
                      Proc.new { |_lis,_ans| 
                          if ( 
                            trampCall( callProcedure( 'null-list?',
                                begin
                                  if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                    trampCall(@_null_MIMARKlist_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1416"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lis)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1419"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                           ) then
                              begin
                                  trampCall(_ans)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1418"] + __e.backtrace ) ; raise __e
                              end
                          else
                              begin
                                ___lambda = lambda { |_tail| 
                                    trampCall( callProcedure( 'set-cdr!',
                                        begin
                                          if @global_lisp_binding.has_key?('_set_MIMARKcdr_EXMARK') then
                                            trampCall(@_set_MIMARKcdr_EXMARK)
                                          else raise NameError.new( "Error: undefined variable _set_MIMARKcdr_EXMARK", "_set_MIMARKcdr_EXMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1418"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_lis)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1419"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                          begin
                                              trampCall(_ans)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1418"] + __e.backtrace ) ; raise __e
                                          end
                                                 ))))
                                    DelayedCallPacket.new( 'lp',
                                        begin
                                            trampCall(_lp)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1419"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_tail)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1419"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                          begin
                                              trampCall(_lis)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1419"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                } ; ___lambda.call(
                                      trampCall( callProcedure( 'cdr',
                                          begin
                                            if @global_lisp_binding.has_key?('_cdr') then
                                              trampCall(@_cdr)
                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1417"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                trampCall(_lis)
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1419"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))
                                           )
                              end
                          end
                      }
                    DelayedCallPacket.new( 'lp',
                        begin
                            trampCall(_lp)
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1419"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lis)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1419"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                        Cell.new()
                                 )))
                } ; ___lambda.call(
                nil
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['__PAMARKlset2_LTMARK_EQMARK'] = true
    @__PAMARKlset2_LTMARK_EQMARK = 
    trampCall(
          Proc.new { |__EQMARK,_lis1,_lis2| 
              DelayedCallPacket.new( 'every',
                  begin
                    if @global_lisp_binding.has_key?('_every') then
                      trampCall(@_every)
                    else raise NameError.new( "Error: undefined variable _every", "_every" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1434"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    Proc.new { |_x| 
                        trampCall( callProcedure( 'member',
                            begin
                              if @global_lisp_binding.has_key?('_member') then
                                trampCall(@_member)
                              else raise NameError.new( "Error: undefined variable _member", "_member" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1434"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  trampCall(_x)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1434"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                              begin
                                  trampCall(_lis2)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1434"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                              begin
                                  trampCall(__EQMARK)
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1434"] + __e.backtrace ) ; raise __e
                              end
                                     )))))
                    }                  ,Cell.new(
                    begin
                        trampCall(_lis1)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1434"] + __e.backtrace ) ; raise __e
                    end
                           )))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_lset_LTMARK_EQMARK'] = true
    @_lset_LTMARK_EQMARK = 
    trampCall(
          Proc.new { |__EQMARK,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              begin
                ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20147| 
                    if ( 
                      begin
                          trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20147)
                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                      end
                     ) then
                        begin
                            trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20147)
                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                        end
                    else
                        begin
                          ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20148| 
                              if ( 
                                begin
                                    trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20148)
                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                end
                               ) then
                                  begin
                                      trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20148)
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                false
                              end
                          } ; ___lambda.call(
                                begin
                                  ___lambda = lambda { |_lp| 
                                      _lp                                       = 
                                        Proc.new { |_s1,_rest| 
                                            begin
                                              ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20149| 
                                                  if ( 
                                                    begin
                                                        trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20149)
                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                    end
                                                   ) then
                                                      begin
                                                          trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20149)
                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                      end
                                                  else
                                                      begin
                                                        ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20150| 
                                                            if ( 
                                                              begin
                                                                  trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20150)
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end
                                                             ) then
                                                                begin
                                                                    trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20150)
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end
                                                            else
                                                              false
                                                            end
                                                        } ; ___lambda.call(
                                                              begin
                                                                ___lambda = lambda { |_s2,_rest| 
                                                                    if ( 
                                                                      trampCall( callProcedure( 'not',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_not') then
                                                                              trampCall(@_not)
                                                                            else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1440"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            trampCall( callProcedure( 'eq?',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                                    trampCall(@_eq_QUMARK)
                                                                                  else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1442"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                Cell.new(
                                                                                false                                                                                ,Cell.new(
                                                                                  begin
                                                                                    ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20151| 
                                                                                        if ( 
                                                                                          begin
                                                                                              trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20151)
                                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                         ) then
                                                                                            begin
                                                                                                trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20151)
                                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                            end
                                                                                        else
                                                                                            begin
                                                                                              ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20152| 
                                                                                                  if ( 
                                                                                                    begin
                                                                                                        trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20152)
                                                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                    end
                                                                                                   ) then
                                                                                                      begin
                                                                                                          trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20152)
                                                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                      end
                                                                                                  else
                                                                                                    false
                                                                                                  end
                                                                                              } ; ___lambda.call(
                                                                                                    trampCall( callProcedure( '%lset2<=',
                                                                                                        begin
                                                                                                          if @global_lisp_binding.has_key?('__PAMARKlset2_LTMARK_EQMARK') then
                                                                                                            trampCall(@__PAMARKlset2_LTMARK_EQMARK)
                                                                                                          else raise NameError.new( "Error: undefined variable __PAMARKlset2_LTMARK_EQMARK", "__PAMARKlset2_LTMARK_EQMARK" ) end
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1443"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                        Cell.new(
                                                                                                          begin
                                                                                                              trampCall(__EQMARK)
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1443"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,Cell.new(
                                                                                                          begin
                                                                                                              trampCall(_s1)
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1443"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,Cell.new(
                                                                                                          begin
                                                                                                              trampCall(_s2)
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1444"] + __e.backtrace ) ; raise __e
                                                                                                          end
                                                                                                                 )))))
                                                                                                         )
                                                                                            end
                                                                                        end
                                                                                    } ; ___lambda.call(
                                                                                          trampCall( callProcedure( 'eq?',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                                                  trampCall(@_eq_QUMARK)
                                                                                                else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1442"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              Cell.new(
                                                                                                begin
                                                                                                    trampCall(_s2)
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1444"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,Cell.new(
                                                                                                begin
                                                                                                    trampCall(_s1)
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1443"] + __e.backtrace ) ; raise __e
                                                                                                end
                                                                                                       ))))
                                                                                               )
                                                                                  end
                                                                                         ))))
                                                                                   )))
                                                                     ) then
                                                                        DelayedCallPacket.new( 'lp',
                                                                            begin
                                                                                trampCall(_lp)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1444"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  trampCall(_s2)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1444"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,Cell.new(
                                                                              begin
                                                                                  trampCall(_rest)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1444"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                                     )))
                                                                    else
                                                                      false
                                                                    end
                                                                } ; ___lambda.call(
                                                                      trampCall( callProcedure( 'car',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_car') then
                                                                              trampCall(@_car)
                                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1441"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_rest)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1444"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))                                                                    ,
                                                                      trampCall( callProcedure( 'cdr',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_cdr') then
                                                                              trampCall(@_cdr)
                                                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1441"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_rest)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1444"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))
                                                                           )
                                                              end
                                                                   )
                                                      end
                                                  end
                                              } ; ___lambda.call(
                                                    trampCall( callProcedure( 'not',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_not') then
                                                            trampCall(@_not)
                                                          else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1440"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'pair?',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                                  trampCall(@_pair_QUMARK)
                                                                else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1440"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_rest)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1444"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                                 )))
                                                         )
                                            end
                                        }
                                      DelayedCallPacket.new( 'lp',
                                          begin
                                              trampCall(_lp)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1444"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            trampCall( callProcedure( 'car',
                                                begin
                                                  if @global_lisp_binding.has_key?('_car') then
                                                    trampCall(@_car)
                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1441"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_lists)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1439"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))                                          ,Cell.new(
                                            trampCall( callProcedure( 'cdr',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cdr') then
                                                    trampCall(@_cdr)
                                                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1441"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_lists)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1439"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                   )))
                                  } ; ___lambda.call(
                                  nil
                                             )
                                end
                                     )
                        end
                    end
                } ; ___lambda.call(
                      trampCall( callProcedure( 'not',
                          begin
                            if @global_lisp_binding.has_key?('_not') then
                              trampCall(@_not)
                            else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1440"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            trampCall( callProcedure( 'pair?',
                                begin
                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                    trampCall(@_pair_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1440"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lists)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1439"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                                   )))
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_lset_EQMARK'] = true
    @_lset_EQMARK = 
    trampCall(
          Proc.new { |__EQMARK,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              begin
                ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20153| 
                    if ( 
                      begin
                          trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20153)
                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                      end
                     ) then
                        begin
                            trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20153)
                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                        end
                    else
                        begin
                          ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20154| 
                              if ( 
                                begin
                                    trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20154)
                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                end
                               ) then
                                  begin
                                      trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20154)
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                false
                              end
                          } ; ___lambda.call(
                                begin
                                  ___lambda = lambda { |_lp| 
                                      _lp                                       = 
                                        Proc.new { |_s1,_rest| 
                                            begin
                                              ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20155| 
                                                  if ( 
                                                    begin
                                                        trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20155)
                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                    end
                                                   ) then
                                                      begin
                                                          trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20155)
                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                      end
                                                  else
                                                      begin
                                                        ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20156| 
                                                            if ( 
                                                              begin
                                                                  trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20156)
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end
                                                             ) then
                                                                begin
                                                                    trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20156)
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end
                                                            else
                                                              false
                                                            end
                                                        } ; ___lambda.call(
                                                              begin
                                                                ___lambda = lambda { |_s2,_rest| 
                                                                    if ( 
                                                                      trampCall( callProcedure( 'not',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_not') then
                                                                              trampCall(@_not)
                                                                            else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1450"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            trampCall( callProcedure( 'eq?',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                                    trampCall(@_eq_QUMARK)
                                                                                  else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1453"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                Cell.new(
                                                                                false                                                                                ,Cell.new(
                                                                                  begin
                                                                                    ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20157| 
                                                                                        if ( 
                                                                                          begin
                                                                                              trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20157)
                                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                          end
                                                                                         ) then
                                                                                            begin
                                                                                                trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20157)
                                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                            end
                                                                                        else
                                                                                            begin
                                                                                              ___lambda = lambda { |___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20158| 
                                                                                                  if ( 
                                                                                                    begin
                                                                                                        trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20158)
                                                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                    end
                                                                                                   ) then
                                                                                                      begin
                                                                                                          trampCall(___gensym__d2f54e498a1042043dafdae0618b15c325a30372_20158)
                                                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                      end
                                                                                                  else
                                                                                                    false
                                                                                                  end
                                                                                              } ; ___lambda.call(
                                                                                                    if ( 
                                                                                                      trampCall( callProcedure( 'not',
                                                                                                          begin
                                                                                                            if @global_lisp_binding.has_key?('_not') then
                                                                                                              trampCall(@_not)
                                                                                                            else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1450"] + __e.backtrace ) ; raise __e
                                                                                                          end                                                                                                        ,
                                                                                                          Cell.new(
                                                                                                            trampCall( callProcedure( 'eq?',
                                                                                                                begin
                                                                                                                  if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                                                                    trampCall(@_eq_QUMARK)
                                                                                                                  else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1453"] + __e.backtrace ) ; raise __e
                                                                                                                end                                                                                                              ,
                                                                                                                Cell.new(
                                                                                                                false                                                                                                                ,Cell.new(
                                                                                                                  trampCall( callProcedure( '%lset2<=',
                                                                                                                      begin
                                                                                                                        if @global_lisp_binding.has_key?('__PAMARKlset2_LTMARK_EQMARK') then
                                                                                                                          trampCall(@__PAMARKlset2_LTMARK_EQMARK)
                                                                                                                        else raise NameError.new( "Error: undefined variable __PAMARKlset2_LTMARK_EQMARK", "__PAMARKlset2_LTMARK_EQMARK" ) end
                                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1454"] + __e.backtrace ) ; raise __e
                                                                                                                      end                                                                                                                    ,
                                                                                                                      Cell.new(
                                                                                                                        begin
                                                                                                                            trampCall(__EQMARK)
                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1454"] + __e.backtrace ) ; raise __e
                                                                                                                        end                                                                                                                      ,Cell.new(
                                                                                                                        begin
                                                                                                                            trampCall(_s1)
                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1454"] + __e.backtrace ) ; raise __e
                                                                                                                        end                                                                                                                      ,Cell.new(
                                                                                                                        begin
                                                                                                                            trampCall(_s2)
                                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1455"] + __e.backtrace ) ; raise __e
                                                                                                                        end
                                                                                                                               )))))
                                                                                                                         ))))
                                                                                                                   )))
                                                                                                     ) then
                                                                                                        trampCall( callProcedure( '%lset2<=',
                                                                                                            begin
                                                                                                              if @global_lisp_binding.has_key?('__PAMARKlset2_LTMARK_EQMARK') then
                                                                                                                trampCall(@__PAMARKlset2_LTMARK_EQMARK)
                                                                                                              else raise NameError.new( "Error: undefined variable __PAMARKlset2_LTMARK_EQMARK", "__PAMARKlset2_LTMARK_EQMARK" ) end
                                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1454"] + __e.backtrace ) ; raise __e
                                                                                                            end                                                                                                          ,
                                                                                                            Cell.new(
                                                                                                              begin
                                                                                                                  trampCall(__EQMARK)
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1454"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,Cell.new(
                                                                                                              begin
                                                                                                                  trampCall(_s2)
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1455"] + __e.backtrace ) ; raise __e
                                                                                                              end                                                                                                            ,Cell.new(
                                                                                                              begin
                                                                                                                  trampCall(_s1)
                                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1454"] + __e.backtrace ) ; raise __e
                                                                                                              end
                                                                                                                     )))))
                                                                                                    else
                                                                                                      false
                                                                                                    end
                                                                                                         )
                                                                                            end
                                                                                        end
                                                                                    } ; ___lambda.call(
                                                                                          trampCall( callProcedure( 'eq?',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                                                                  trampCall(@_eq_QUMARK)
                                                                                                else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1453"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              Cell.new(
                                                                                                begin
                                                                                                    trampCall(_s1)
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1454"] + __e.backtrace ) ; raise __e
                                                                                                end                                                                                              ,Cell.new(
                                                                                                begin
                                                                                                    trampCall(_s2)
                                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1455"] + __e.backtrace ) ; raise __e
                                                                                                end
                                                                                                       ))))
                                                                                               )
                                                                                  end
                                                                                         ))))
                                                                                   )))
                                                                     ) then
                                                                        DelayedCallPacket.new( 'lp',
                                                                            begin
                                                                                trampCall(_lp)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1455"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  trampCall(_s2)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1455"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,Cell.new(
                                                                              begin
                                                                                  trampCall(_rest)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1455"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                                     )))
                                                                    else
                                                                      false
                                                                    end
                                                                } ; ___lambda.call(
                                                                      trampCall( callProcedure( 'car',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_car') then
                                                                              trampCall(@_car)
                                                                            else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1451"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_rest)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1455"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))                                                                    ,
                                                                      trampCall( callProcedure( 'cdr',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_cdr') then
                                                                              trampCall(@_cdr)
                                                                            else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1452"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            begin
                                                                                trampCall(_rest)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1455"] + __e.backtrace ) ; raise __e
                                                                            end
                                                                                   )))
                                                                           )
                                                              end
                                                                   )
                                                      end
                                                  end
                                              } ; ___lambda.call(
                                                    trampCall( callProcedure( 'not',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_not') then
                                                            trampCall(@_not)
                                                          else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1450"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'pair?',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                                  trampCall(@_pair_QUMARK)
                                                                else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1450"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_rest)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1455"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                                 )))
                                                         )
                                            end
                                        }
                                      DelayedCallPacket.new( 'lp',
                                          begin
                                              trampCall(_lp)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1455"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            trampCall( callProcedure( 'car',
                                                begin
                                                  if @global_lisp_binding.has_key?('_car') then
                                                    trampCall(@_car)
                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1451"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_lists)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1449"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))                                          ,Cell.new(
                                            trampCall( callProcedure( 'cdr',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cdr') then
                                                    trampCall(@_cdr)
                                                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1452"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      trampCall(_lists)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1449"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                   )))
                                  } ; ___lambda.call(
                                  nil
                                             )
                                end
                                     )
                        end
                    end
                } ; ___lambda.call(
                      trampCall( callProcedure( 'not',
                          begin
                            if @global_lisp_binding.has_key?('_not') then
                              trampCall(@_not)
                            else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1450"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            trampCall( callProcedure( 'pair?',
                                begin
                                  if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                    trampCall(@_pair_QUMARK)
                                  else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1450"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_lists)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1449"] + __e.backtrace ) ; raise __e
                                  end
                                         )))
                                   )))
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_lset_MIMARKadjoin'] = true
    @_lset_MIMARKadjoin = 
    trampCall(
          Proc.new { |__EQMARK,_lis,*__rest__| _elts = __rest__[0] ;  
              begin
              end
              DelayedCallPacket.new( 'fold',
                  begin
                    if @global_lisp_binding.has_key?('_fold') then
                      trampCall(@_fold)
                    else raise NameError.new( "Error: undefined variable _fold", "_fold" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1460"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    Proc.new { |_elt,_ans| 
                        if ( 
                          trampCall( callProcedure( 'member',
                              begin
                                if @global_lisp_binding.has_key?('_member') then
                                  trampCall(@_member)
                                else raise NameError.new( "Error: undefined variable _member", "_member" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1460"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_elt)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1460"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                                begin
                                    trampCall(_ans)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1460"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                                begin
                                    trampCall(__EQMARK)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1460"] + __e.backtrace ) ; raise __e
                                end
                                       )))))
                         ) then
                            begin
                                trampCall(_ans)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1460"] + __e.backtrace ) ; raise __e
                            end
                        else
                            trampCall( callProcedure( 'cons',
                                begin
                                  if @global_lisp_binding.has_key?('_cons') then
                                    trampCall(@_cons)
                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1460"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                  begin
                                      trampCall(_elt)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1460"] + __e.backtrace ) ; raise __e
                                  end                                ,Cell.new(
                                  begin
                                      trampCall(_ans)
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1460"] + __e.backtrace ) ; raise __e
                                  end
                                         ))))
                        end
                    }                  ,Cell.new(
                    begin
                        trampCall(_lis)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1461"] + __e.backtrace ) ; raise __e
                    end                  ,Cell.new(
                    begin
                        trampCall(_elts)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1461"] + __e.backtrace ) ; raise __e
                    end
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_lset_MIMARKunion'] = true
    @_lset_MIMARKunion = 
    trampCall(
          Proc.new { |__EQMARK,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              DelayedCallPacket.new( 'reduce',
                  begin
                    if @global_lisp_binding.has_key?('_reduce') then
                      trampCall(@_reduce)
                    else raise NameError.new( "Error: undefined variable _reduce", "_reduce" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1466"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    Proc.new { |_lis,_ans| 
                        if ( 
                          trampCall( callProcedure( 'null?',
                              begin
                                if @global_lisp_binding.has_key?('_null_QUMARK') then
                                  trampCall(@_null_QUMARK)
                                else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1468"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_lis)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1474"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                         ) then
                            begin
                                begin
                                    trampCall(_ans)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1474"] + __e.backtrace ) ; raise __e
                                end
                            end
                        else
                            if ( 
                              trampCall( callProcedure( 'null?',
                                  begin
                                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                                      trampCall(@_null_QUMARK)
                                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1468"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_ans)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1474"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                             ) then
                                begin
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1474"] + __e.backtrace ) ; raise __e
                                    end
                                end
                            else
                                if ( 
                                  trampCall( callProcedure( 'eq?',
                                      begin
                                        if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                          trampCall(@_eq_QUMARK)
                                        else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1469"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1474"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        begin
                                            trampCall(_ans)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1474"] + __e.backtrace ) ; raise __e
                                        end
                                               ))))
                                 ) then
                                    begin
                                        begin
                                            trampCall(_ans)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1474"] + __e.backtrace ) ; raise __e
                                        end
                                    end
                                else
                                    if ( 
                                    true
                                     ) then
                                        begin
                                            trampCall( callProcedure( 'fold',
                                                begin
                                                  if @global_lisp_binding.has_key?('_fold') then
                                                    trampCall(@_fold)
                                                  else raise NameError.new( "Error: undefined variable _fold", "_fold" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1471"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  Proc.new { |_elt,_ans| 
                                                      if ( 
                                                        trampCall( callProcedure( 'any',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_any') then
                                                                trampCall(@_any)
                                                              else raise NameError.new( "Error: undefined variable _any", "_any" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1471"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              Proc.new { |_x| 
                                                                  trampCall( callProcedure( '=',
                                                                      begin
                                                                          trampCall(__EQMARK)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1471"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        begin
                                                                            trampCall(_x)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1471"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,Cell.new(
                                                                        begin
                                                                            trampCall(_elt)
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1473"] + __e.backtrace ) ; raise __e
                                                                        end
                                                                               ))))
                                                              }                                                            ,Cell.new(
                                                              begin
                                                                  trampCall(_ans)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1474"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     ))))
                                                       ) then
                                                          begin
                                                              trampCall(_ans)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1474"] + __e.backtrace ) ; raise __e
                                                          end
                                                      else
                                                          trampCall( callProcedure( 'cons',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                  trampCall(@_cons)
                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1473"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    trampCall(_elt)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1473"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,Cell.new(
                                                                begin
                                                                    trampCall(_ans)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1474"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       ))))
                                                      end
                                                  }                                                ,Cell.new(
                                                  begin
                                                      trampCall(_ans)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1474"] + __e.backtrace ) ; raise __e
                                                  end                                                ,Cell.new(
                                                  begin
                                                      trampCall(_lis)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1474"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))))
                                        end
                                    else
                                      Nil.new
                                    end
                                end
                            end
                        end
                    }                  ,Cell.new(
                  Cell.new()                  ,Cell.new(
                    begin
                        trampCall(_lists)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1475"] + __e.backtrace ) ; raise __e
                    end
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_lset_MIMARKunion_EXMARK'] = true
    @_lset_MIMARKunion_EXMARK = 
    trampCall(
          Proc.new { |__EQMARK,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              DelayedCallPacket.new( 'reduce',
                  begin
                    if @global_lisp_binding.has_key?('_reduce') then
                      trampCall(@_reduce)
                    else raise NameError.new( "Error: undefined variable _reduce", "_reduce" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1479"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    Proc.new { |_lis,_ans| 
                        if ( 
                          trampCall( callProcedure( 'null?',
                              begin
                                if @global_lisp_binding.has_key?('_null_QUMARK') then
                                  trampCall(@_null_QUMARK)
                                else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1481"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_lis)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1489"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                         ) then
                            begin
                                begin
                                    trampCall(_ans)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1489"] + __e.backtrace ) ; raise __e
                                end
                            end
                        else
                            if ( 
                              trampCall( callProcedure( 'null?',
                                  begin
                                    if @global_lisp_binding.has_key?('_null_QUMARK') then
                                      trampCall(@_null_QUMARK)
                                    else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1481"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    begin
                                        trampCall(_ans)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1489"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                             ) then
                                begin
                                    begin
                                        trampCall(_lis)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1489"] + __e.backtrace ) ; raise __e
                                    end
                                end
                            else
                                if ( 
                                  trampCall( callProcedure( 'eq?',
                                      begin
                                        if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                          trampCall(@_eq_QUMARK)
                                        else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1482"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(_lis)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1489"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        begin
                                            trampCall(_ans)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1489"] + __e.backtrace ) ; raise __e
                                        end
                                               ))))
                                 ) then
                                    begin
                                        begin
                                            trampCall(_ans)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1489"] + __e.backtrace ) ; raise __e
                                        end
                                    end
                                else
                                    if ( 
                                    true
                                     ) then
                                        begin
                                            trampCall( callProcedure( 'pair-fold',
                                                begin
                                                  if @global_lisp_binding.has_key?('_pair_MIMARKfold') then
                                                    trampCall(@_pair_MIMARKfold)
                                                  else raise NameError.new( "Error: undefined variable _pair_MIMARKfold", "_pair_MIMARKfold" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1484"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  Proc.new { |_pair,_ans| 
                                                      begin
                                                        ___lambda = lambda { |_elt| 
                                                            if ( 
                                                              trampCall( callProcedure( 'any',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_any') then
                                                                      trampCall(@_any)
                                                                    else raise NameError.new( "Error: undefined variable _any", "_any" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1486"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    Proc.new { |_x| 
                                                                        trampCall( callProcedure( '=',
                                                                            begin
                                                                                trampCall(__EQMARK)
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1486"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  trampCall(_x)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1486"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,Cell.new(
                                                                              begin
                                                                                  trampCall(_elt)
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1486"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                                     ))))
                                                                    }                                                                  ,Cell.new(
                                                                    begin
                                                                        trampCall(_ans)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1489"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           ))))
                                                             ) then
                                                                begin
                                                                    trampCall(_ans)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1489"] + __e.backtrace ) ; raise __e
                                                                end
                                                            else
                                                                begin
                                                                    trampCall( callProcedure( 'set-cdr!',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_set_MIMARKcdr_EXMARK') then
                                                                            trampCall(@_set_MIMARKcdr_EXMARK)
                                                                          else raise NameError.new( "Error: undefined variable _set_MIMARKcdr_EXMARK", "_set_MIMARKcdr_EXMARK" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1488"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              trampCall(_pair)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1488"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,Cell.new(
                                                                          begin
                                                                              trampCall(_ans)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1489"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 ))))
                                                                    begin
                                                                        trampCall(_pair)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1488"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                end
                                                            end
                                                        } ; ___lambda.call(
                                                              trampCall( callProcedure( 'car',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_car') then
                                                                      trampCall(@_car)
                                                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1485"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_pair)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1488"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))
                                                                   )
                                                      end
                                                  }                                                ,Cell.new(
                                                  begin
                                                      trampCall(_ans)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1489"] + __e.backtrace ) ; raise __e
                                                  end                                                ,Cell.new(
                                                  begin
                                                      trampCall(_lis)
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1489"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))))
                                        end
                                    else
                                      Nil.new
                                    end
                                end
                            end
                        end
                    }                  ,Cell.new(
                  Cell.new()                  ,Cell.new(
                    begin
                        trampCall(_lists)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1490"] + __e.backtrace ) ; raise __e
                    end
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_lset_MIMARKintersection'] = true
    @_lset_MIMARKintersection = 
    trampCall(
          Proc.new { |__EQMARK,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              begin
                ___lambda = lambda { |_lists| 
                    if ( 
                      trampCall( callProcedure( 'any',
                          begin
                            if @global_lisp_binding.has_key?('_any') then
                              trampCall(@_any)
                            else raise NameError.new( "Error: undefined variable _any", "_any" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1496"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                              if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                trampCall(@_null_MIMARKlist_QUMARK)
                              else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1496"] + __e.backtrace ) ; raise __e
                            end                          ,Cell.new(
                            begin
                                trampCall(_lists)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1499"] + __e.backtrace ) ; raise __e
                            end
                                   ))))
                     ) then
                        begin
                          Cell.new()
                        end
                    else
                        if ( 
                          trampCall( callProcedure( 'null?',
                              begin
                                if @global_lisp_binding.has_key?('_null_QUMARK') then
                                  trampCall(@_null_QUMARK)
                                else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1497"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_lists)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1499"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                         ) then
                            begin
                                begin
                                    trampCall(_lis1)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1500"] + __e.backtrace ) ; raise __e
                                end
                            end
                        else
                            if ( 
                            true
                             ) then
                                begin
                                    DelayedCallPacket.new( 'filter',
                                        begin
                                          if @global_lisp_binding.has_key?('_filter') then
                                            trampCall(@_filter)
                                          else raise NameError.new( "Error: undefined variable _filter", "_filter" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1498"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          Proc.new { |_x| 
                                              trampCall( callProcedure( 'every',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_every') then
                                                      trampCall(@_every)
                                                    else raise NameError.new( "Error: undefined variable _every", "_every" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1499"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    Proc.new { |_lis| 
                                                        trampCall( callProcedure( 'member',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_member') then
                                                                trampCall(@_member)
                                                              else raise NameError.new( "Error: undefined variable _member", "_member" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1499"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_x)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1499"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                              begin
                                                                  trampCall(_lis)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1499"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                              begin
                                                                  trampCall(__EQMARK)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1499"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))))
                                                    }                                                  ,Cell.new(
                                                    begin
                                                        trampCall(_lists)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1499"] + __e.backtrace ) ; raise __e
                                                    end
                                                           ))))
                                          }                                        ,Cell.new(
                                          begin
                                              trampCall(_lis1)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1500"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                end
                            end
                        end
                    end
                } ; ___lambda.call(
                      trampCall( callProcedure( 'delete',
                          begin
                            if @global_lisp_binding.has_key?('_delete') then
                              trampCall(@_delete)
                            else raise NameError.new( "Error: undefined variable _delete", "_delete" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1495"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_lis1)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1500"] + __e.backtrace ) ; raise __e
                            end                          ,Cell.new(
                            begin
                                trampCall(_lists)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1499"] + __e.backtrace ) ; raise __e
                            end                          ,Cell.new(
                            begin
                              if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                trampCall(@_eq_QUMARK)
                              else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1495"] + __e.backtrace ) ; raise __e
                            end
                                   )))))
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_lset_MIMARKintersection_EXMARK'] = true
    @_lset_MIMARKintersection_EXMARK = 
    trampCall(
          Proc.new { |__EQMARK,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              begin
                ___lambda = lambda { |_lists| 
                    if ( 
                      trampCall( callProcedure( 'any',
                          begin
                            if @global_lisp_binding.has_key?('_any') then
                              trampCall(@_any)
                            else raise NameError.new( "Error: undefined variable _any", "_any" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1505"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                              if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                                trampCall(@_null_MIMARKlist_QUMARK)
                              else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1505"] + __e.backtrace ) ; raise __e
                            end                          ,Cell.new(
                            begin
                                trampCall(_lists)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1508"] + __e.backtrace ) ; raise __e
                            end
                                   ))))
                     ) then
                        begin
                          Cell.new()
                        end
                    else
                        if ( 
                          trampCall( callProcedure( 'null?',
                              begin
                                if @global_lisp_binding.has_key?('_null_QUMARK') then
                                  trampCall(@_null_QUMARK)
                                else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1506"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_lists)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1508"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                         ) then
                            begin
                                begin
                                    trampCall(_lis1)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1509"] + __e.backtrace ) ; raise __e
                                end
                            end
                        else
                            if ( 
                            true
                             ) then
                                begin
                                    DelayedCallPacket.new( 'filter!',
                                        begin
                                          if @global_lisp_binding.has_key?('_filter_EXMARK') then
                                            trampCall(@_filter_EXMARK)
                                          else raise NameError.new( "Error: undefined variable _filter_EXMARK", "_filter_EXMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1507"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          Proc.new { |_x| 
                                              trampCall( callProcedure( 'every',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_every') then
                                                      trampCall(@_every)
                                                    else raise NameError.new( "Error: undefined variable _every", "_every" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1508"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    Proc.new { |_lis| 
                                                        trampCall( callProcedure( 'member',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_member') then
                                                                trampCall(@_member)
                                                              else raise NameError.new( "Error: undefined variable _member", "_member" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1508"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_x)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1508"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                              begin
                                                                  trampCall(_lis)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1508"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                              begin
                                                                  trampCall(__EQMARK)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1508"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))))
                                                    }                                                  ,Cell.new(
                                                    begin
                                                        trampCall(_lists)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1508"] + __e.backtrace ) ; raise __e
                                                    end
                                                           ))))
                                          }                                        ,Cell.new(
                                          begin
                                              trampCall(_lis1)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1509"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                end
                            end
                        end
                    end
                } ; ___lambda.call(
                      trampCall( callProcedure( 'delete',
                          begin
                            if @global_lisp_binding.has_key?('_delete') then
                              trampCall(@_delete)
                            else raise NameError.new( "Error: undefined variable _delete", "_delete" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1504"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_lis1)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1509"] + __e.backtrace ) ; raise __e
                            end                          ,Cell.new(
                            begin
                                trampCall(_lists)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1508"] + __e.backtrace ) ; raise __e
                            end                          ,Cell.new(
                            begin
                              if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                trampCall(@_eq_QUMARK)
                              else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1504"] + __e.backtrace ) ; raise __e
                            end
                                   )))))
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_lset_MIMARKdifference'] = true
    @_lset_MIMARKdifference = 
    trampCall(
          Proc.new { |__EQMARK,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              begin
                ___lambda = lambda { |_lists| 
                    if ( 
                      trampCall( callProcedure( 'null?',
                          begin
                            if @global_lisp_binding.has_key?('_null_QUMARK') then
                              trampCall(@_null_QUMARK)
                            else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1515"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_lists)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1519"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                     ) then
                        begin
                            begin
                                trampCall(_lis1)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1520"] + __e.backtrace ) ; raise __e
                            end
                        end
                    else
                        if ( 
                          trampCall( callProcedure( 'memq',
                              begin
                                if @global_lisp_binding.has_key?('_memq') then
                                  trampCall(@_memq)
                                else raise NameError.new( "Error: undefined variable _memq", "_memq" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1516"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_lis1)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1520"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                                begin
                                    trampCall(_lists)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1519"] + __e.backtrace ) ; raise __e
                                end
                                       ))))
                         ) then
                            begin
                              Cell.new()
                            end
                        else
                            if ( 
                            true
                             ) then
                                begin
                                    DelayedCallPacket.new( 'filter',
                                        begin
                                          if @global_lisp_binding.has_key?('_filter') then
                                            trampCall(@_filter)
                                          else raise NameError.new( "Error: undefined variable _filter", "_filter" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1517"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          Proc.new { |_x| 
                                              trampCall( callProcedure( 'every',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_every') then
                                                      trampCall(@_every)
                                                    else raise NameError.new( "Error: undefined variable _every", "_every" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1518"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    Proc.new { |_lis| 
                                                        trampCall( callProcedure( 'not',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_not') then
                                                                trampCall(@_not)
                                                              else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1518"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              trampCall( callProcedure( 'member',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_member') then
                                                                      trampCall(@_member)
                                                                    else raise NameError.new( "Error: undefined variable _member", "_member" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1518"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_x)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1518"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,Cell.new(
                                                                    begin
                                                                        trampCall(_lis)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1518"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,Cell.new(
                                                                    begin
                                                                        trampCall(__EQMARK)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1518"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))))
                                                                     )))
                                                    }                                                  ,Cell.new(
                                                    begin
                                                        trampCall(_lists)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1519"] + __e.backtrace ) ; raise __e
                                                    end
                                                           ))))
                                          }                                        ,Cell.new(
                                          begin
                                              trampCall(_lis1)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1520"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                end
                            end
                        end
                    end
                } ; ___lambda.call(
                      trampCall( callProcedure( 'filter',
                          begin
                            if @global_lisp_binding.has_key?('_filter') then
                              trampCall(@_filter)
                            else raise NameError.new( "Error: undefined variable _filter", "_filter" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1517"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                              if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                trampCall(@_pair_QUMARK)
                              else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1514"] + __e.backtrace ) ; raise __e
                            end                          ,Cell.new(
                            begin
                                trampCall(_lists)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1519"] + __e.backtrace ) ; raise __e
                            end
                                   ))))
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_lset_MIMARKdifference_EXMARK'] = true
    @_lset_MIMARKdifference_EXMARK = 
    trampCall(
          Proc.new { |__EQMARK,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              begin
                ___lambda = lambda { |_lists| 
                    if ( 
                      trampCall( callProcedure( 'null?',
                          begin
                            if @global_lisp_binding.has_key?('_null_QUMARK') then
                              trampCall(@_null_QUMARK)
                            else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1525"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_lists)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1529"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                     ) then
                        begin
                            begin
                                trampCall(_lis1)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1530"] + __e.backtrace ) ; raise __e
                            end
                        end
                    else
                        if ( 
                          trampCall( callProcedure( 'memq',
                              begin
                                if @global_lisp_binding.has_key?('_memq') then
                                  trampCall(@_memq)
                                else raise NameError.new( "Error: undefined variable _memq", "_memq" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1526"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    trampCall(_lis1)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1530"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                                begin
                                    trampCall(_lists)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1529"] + __e.backtrace ) ; raise __e
                                end
                                       ))))
                         ) then
                            begin
                              Cell.new()
                            end
                        else
                            if ( 
                            true
                             ) then
                                begin
                                    DelayedCallPacket.new( 'filter!',
                                        begin
                                          if @global_lisp_binding.has_key?('_filter_EXMARK') then
                                            trampCall(@_filter_EXMARK)
                                          else raise NameError.new( "Error: undefined variable _filter_EXMARK", "_filter_EXMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1527"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          Proc.new { |_x| 
                                              trampCall( callProcedure( 'every',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_every') then
                                                      trampCall(@_every)
                                                    else raise NameError.new( "Error: undefined variable _every", "_every" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1528"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    Proc.new { |_lis| 
                                                        trampCall( callProcedure( 'not',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_not') then
                                                                trampCall(@_not)
                                                              else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1528"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              trampCall( callProcedure( 'member',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_member') then
                                                                      trampCall(@_member)
                                                                    else raise NameError.new( "Error: undefined variable _member", "_member" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1528"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_x)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1528"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,Cell.new(
                                                                    begin
                                                                        trampCall(_lis)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1528"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,Cell.new(
                                                                    begin
                                                                        trampCall(__EQMARK)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1528"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))))
                                                                     )))
                                                    }                                                  ,Cell.new(
                                                    begin
                                                        trampCall(_lists)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1529"] + __e.backtrace ) ; raise __e
                                                    end
                                                           ))))
                                          }                                        ,Cell.new(
                                          begin
                                              trampCall(_lis1)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1530"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                end
                            end
                        end
                    end
                } ; ___lambda.call(
                      trampCall( callProcedure( 'filter',
                          begin
                            if @global_lisp_binding.has_key?('_filter') then
                              trampCall(@_filter)
                            else raise NameError.new( "Error: undefined variable _filter", "_filter" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1524"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                              if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                trampCall(@_pair_QUMARK)
                              else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1524"] + __e.backtrace ) ; raise __e
                            end                          ,Cell.new(
                            begin
                                trampCall(_lists)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1529"] + __e.backtrace ) ; raise __e
                            end
                                   ))))
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_lset_MIMARKxor'] = true
    @_lset_MIMARKxor = 
    trampCall(
          Proc.new { |__EQMARK,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              DelayedCallPacket.new( 'reduce',
                  begin
                    if @global_lisp_binding.has_key?('_reduce') then
                      trampCall(@_reduce)
                    else raise NameError.new( "Error: undefined variable _reduce", "_reduce" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1535"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    Proc.new { |_b,_a| 
                        trampCall( callProcedure( 'call-with-values',
                            begin
                              if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                trampCall(@_call_MIMARKwith_MIMARKvalues)
                              else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              Proc.new { || 
                                  trampCall( callProcedure( 'lset-diff+intersection',
                                      begin
                                        if @global_lisp_binding.has_key?('_lset_MIMARKdiff_PLMARKintersection') then
                                          trampCall(@_lset_MIMARKdiff_PLMARKintersection)
                                        else raise NameError.new( "Error: undefined variable _lset_MIMARKdiff_PLMARKintersection", "_lset_MIMARKdiff_PLMARKintersection" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1545"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(__EQMARK)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1549"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        begin
                                            trampCall(_a)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1547"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        begin
                                            trampCall(_b)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1551"] + __e.backtrace ) ; raise __e
                                        end
                                               )))))
                              }                            ,Cell.new(
                              Proc.new { |_a_MIMARKb,_a_MIMARKint_MIMARKb| 
                                  if ( 
                                    trampCall( callProcedure( 'null?',
                                        begin
                                          if @global_lisp_binding.has_key?('_null_QUMARK') then
                                            trampCall(@_null_QUMARK)
                                          else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1547"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_a_MIMARKb)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1550"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                   ) then
                                      begin
                                          trampCall( callProcedure( 'lset-difference',
                                              begin
                                                if @global_lisp_binding.has_key?('_lset_MIMARKdifference') then
                                                  trampCall(@_lset_MIMARKdifference)
                                                else raise NameError.new( "Error: undefined variable _lset_MIMARKdifference", "_lset_MIMARKdifference" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1546"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(__EQMARK)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1549"] + __e.backtrace ) ; raise __e
                                                end                                              ,Cell.new(
                                                begin
                                                    trampCall(_b)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1551"] + __e.backtrace ) ; raise __e
                                                end                                              ,Cell.new(
                                                begin
                                                    trampCall(_a)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1547"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))))
                                      end
                                  else
                                      if ( 
                                        trampCall( callProcedure( 'null?',
                                            begin
                                              if @global_lisp_binding.has_key?('_null_QUMARK') then
                                                trampCall(@_null_QUMARK)
                                              else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1547"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_a_MIMARKint_MIMARKb)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1549"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                       ) then
                                          begin
                                              trampCall( callProcedure( 'append',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_append') then
                                                      trampCall(@_append)
                                                    else raise NameError.new( "Error: undefined variable _append", "_append" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1547"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_b)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1551"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,Cell.new(
                                                    begin
                                                        trampCall(_a)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1547"] + __e.backtrace ) ; raise __e
                                                    end
                                                           ))))
                                          end
                                      else
                                          if ( 
                                          true
                                           ) then
                                              begin
                                                  trampCall( callProcedure( 'fold',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_fold') then
                                                          trampCall(@_fold)
                                                        else raise NameError.new( "Error: undefined variable _fold", "_fold" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1548"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        Proc.new { |_xb,_ans| 
                                                            if ( 
                                                              trampCall( callProcedure( 'member',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_member') then
                                                                      trampCall(@_member)
                                                                    else raise NameError.new( "Error: undefined variable _member", "_member" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1549"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        trampCall(_xb)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1549"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,Cell.new(
                                                                    begin
                                                                        trampCall(_a_MIMARKint_MIMARKb)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1549"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,Cell.new(
                                                                    begin
                                                                        trampCall(__EQMARK)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1549"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))))
                                                             ) then
                                                                begin
                                                                    trampCall(_ans)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1549"] + __e.backtrace ) ; raise __e
                                                                end
                                                            else
                                                                trampCall( callProcedure( 'cons',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                        trampCall(@_cons)
                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1549"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      begin
                                                                          trampCall(_xb)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1549"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,Cell.new(
                                                                      begin
                                                                          trampCall(_ans)
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1549"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                             ))))
                                                            end
                                                        }                                                      ,Cell.new(
                                                        begin
                                                            trampCall(_a_MIMARKb)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1550"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,Cell.new(
                                                        begin
                                                            trampCall(_b)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1551"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))))
                                              end
                                          else
                                            Nil.new
                                          end
                                      end
                                  end
                              }
                                     ))))
                    }                  ,Cell.new(
                  Cell.new()                  ,Cell.new(
                    begin
                        trampCall(_lists)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1552"] + __e.backtrace ) ; raise __e
                    end
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_lset_MIMARKxor_EXMARK'] = true
    @_lset_MIMARKxor_EXMARK = 
    trampCall(
          Proc.new { |__EQMARK,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              DelayedCallPacket.new( 'reduce',
                  begin
                    if @global_lisp_binding.has_key?('_reduce') then
                      trampCall(@_reduce)
                    else raise NameError.new( "Error: undefined variable _reduce", "_reduce" ) end
                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1557"] + __e.backtrace ) ; raise __e
                  end                ,
                  Cell.new(
                    Proc.new { |_b,_a| 
                        trampCall( callProcedure( 'call-with-values',
                            begin
                              if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                trampCall(@_call_MIMARKwith_MIMARKvalues)
                              else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              Proc.new { || 
                                  trampCall( callProcedure( 'lset-diff+intersection!',
                                      begin
                                        if @global_lisp_binding.has_key?('_lset_MIMARKdiff_PLMARKintersection_EXMARK') then
                                          trampCall(@_lset_MIMARKdiff_PLMARKintersection_EXMARK)
                                        else raise NameError.new( "Error: undefined variable _lset_MIMARKdiff_PLMARKintersection_EXMARK", "_lset_MIMARKdiff_PLMARKintersection_EXMARK" ) end
                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1567"] + __e.backtrace ) ; raise __e
                                      end                                    ,
                                      Cell.new(
                                        begin
                                            trampCall(__EQMARK)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1571"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        begin
                                            trampCall(_a)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1569"] + __e.backtrace ) ; raise __e
                                        end                                      ,Cell.new(
                                        begin
                                            trampCall(_b)
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1574"] + __e.backtrace ) ; raise __e
                                        end
                                               )))))
                              }                            ,Cell.new(
                              Proc.new { |_a_MIMARKb,_a_MIMARKint_MIMARKb| 
                                  if ( 
                                    trampCall( callProcedure( 'null?',
                                        begin
                                          if @global_lisp_binding.has_key?('_null_QUMARK') then
                                            trampCall(@_null_QUMARK)
                                          else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1569"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              trampCall(_a_MIMARKb)
                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1573"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                   ) then
                                      begin
                                          trampCall( callProcedure( 'lset-difference!',
                                              begin
                                                if @global_lisp_binding.has_key?('_lset_MIMARKdifference_EXMARK') then
                                                  trampCall(@_lset_MIMARKdifference_EXMARK)
                                                else raise NameError.new( "Error: undefined variable _lset_MIMARKdifference_EXMARK", "_lset_MIMARKdifference_EXMARK" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1568"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    trampCall(__EQMARK)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1571"] + __e.backtrace ) ; raise __e
                                                end                                              ,Cell.new(
                                                begin
                                                    trampCall(_b)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1574"] + __e.backtrace ) ; raise __e
                                                end                                              ,Cell.new(
                                                begin
                                                    trampCall(_a)
                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1569"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))))
                                      end
                                  else
                                      if ( 
                                        trampCall( callProcedure( 'null?',
                                            begin
                                              if @global_lisp_binding.has_key?('_null_QUMARK') then
                                                trampCall(@_null_QUMARK)
                                              else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1569"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              begin
                                                  trampCall(_a_MIMARKint_MIMARKb)
                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1571"] + __e.backtrace ) ; raise __e
                                              end
                                                     )))
                                       ) then
                                          begin
                                              trampCall( callProcedure( 'append!',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_append_EXMARK') then
                                                      trampCall(@_append_EXMARK)
                                                    else raise NameError.new( "Error: undefined variable _append_EXMARK", "_append_EXMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1569"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        trampCall(_b)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1574"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,Cell.new(
                                                    begin
                                                        trampCall(_a)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1569"] + __e.backtrace ) ; raise __e
                                                    end
                                                           ))))
                                          end
                                      else
                                          if ( 
                                          true
                                           ) then
                                              begin
                                                  trampCall( callProcedure( 'pair-fold',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_pair_MIMARKfold') then
                                                          trampCall(@_pair_MIMARKfold)
                                                        else raise NameError.new( "Error: undefined variable _pair_MIMARKfold", "_pair_MIMARKfold" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1570"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        Proc.new { |_b_MIMARKpair,_ans| 
                                                            if ( 
                                                              trampCall( callProcedure( 'member',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_member') then
                                                                      trampCall(@_member)
                                                                    else raise NameError.new( "Error: undefined variable _member", "_member" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1571"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    trampCall( callProcedure( 'car',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_car') then
                                                                            trampCall(@_car)
                                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1571"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              trampCall(_b_MIMARKpair)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1572"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 )))                                                                  ,Cell.new(
                                                                    begin
                                                                        trampCall(_a_MIMARKint_MIMARKb)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1571"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,Cell.new(
                                                                    begin
                                                                        trampCall(__EQMARK)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1571"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))))
                                                             ) then
                                                                begin
                                                                    trampCall(_ans)
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1572"] + __e.backtrace ) ; raise __e
                                                                end
                                                            else
                                                                begin
                                                                    trampCall( callProcedure( 'set-cdr!',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_set_MIMARKcdr_EXMARK') then
                                                                            trampCall(@_set_MIMARKcdr_EXMARK)
                                                                          else raise NameError.new( "Error: undefined variable _set_MIMARKcdr_EXMARK", "_set_MIMARKcdr_EXMARK" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1572"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              trampCall(_b_MIMARKpair)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1572"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,Cell.new(
                                                                          begin
                                                                              trampCall(_ans)
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1572"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 ))))
                                                                    begin
                                                                        trampCall(_b_MIMARKpair)
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1572"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                end
                                                            end
                                                        }                                                      ,Cell.new(
                                                        begin
                                                            trampCall(_a_MIMARKb)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1573"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,Cell.new(
                                                        begin
                                                            trampCall(_b)
                                                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1574"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))))
                                              end
                                          else
                                            Nil.new
                                          end
                                      end
                                  end
                              }
                                     ))))
                    }                  ,Cell.new(
                  Cell.new()                  ,Cell.new(
                    begin
                        trampCall(_lists)
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1575"] + __e.backtrace ) ; raise __e
                    end
                           ))))
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_lset_MIMARKdiff_PLMARKintersection'] = true
    @_lset_MIMARKdiff_PLMARKintersection = 
    trampCall(
          Proc.new { |__EQMARK,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              if ( 
                trampCall( callProcedure( 'every',
                    begin
                      if @global_lisp_binding.has_key?('_every') then
                        trampCall(@_every)
                      else raise NameError.new( "Error: undefined variable _every", "_every" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1580"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                        if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                          trampCall(@_null_MIMARKlist_QUMARK)
                        else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1580"] + __e.backtrace ) ; raise __e
                      end                    ,Cell.new(
                      begin
                          trampCall(_lists)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1584"] + __e.backtrace ) ; raise __e
                      end
                             ))))
               ) then
                  begin
                      DelayedCallPacket.new( 'values',
                          begin
                            if @global_lisp_binding.has_key?('_values') then
                              trampCall(@_values)
                            else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1581"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_lis1)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1585"] + __e.backtrace ) ; raise __e
                            end                          ,Cell.new(
                          Cell.new()
                                   )))
                  end
              else
                  if ( 
                    trampCall( callProcedure( 'memq',
                        begin
                          if @global_lisp_binding.has_key?('_memq') then
                            trampCall(@_memq)
                          else raise NameError.new( "Error: undefined variable _memq", "_memq" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1581"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lis1)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1585"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                              trampCall(_lists)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1584"] + __e.backtrace ) ; raise __e
                          end
                                 ))))
                   ) then
                      begin
                          DelayedCallPacket.new( 'values',
                              begin
                                if @global_lisp_binding.has_key?('_values') then
                                  trampCall(@_values)
                                else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1581"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              Cell.new()                              ,Cell.new(
                                begin
                                    trampCall(_lis1)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1585"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                      end
                  else
                      if ( 
                      true
                       ) then
                          begin
                              DelayedCallPacket.new( 'partition',
                                  begin
                                    if @global_lisp_binding.has_key?('_partition') then
                                      trampCall(@_partition)
                                    else raise NameError.new( "Error: undefined variable _partition", "_partition" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1582"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    Proc.new { |_elt| 
                                        trampCall( callProcedure( 'not',
                                            begin
                                              if @global_lisp_binding.has_key?('_not') then
                                                trampCall(@_not)
                                              else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1583"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'any',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_any') then
                                                      trampCall(@_any)
                                                    else raise NameError.new( "Error: undefined variable _any", "_any" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1583"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    Proc.new { |_lis| 
                                                        trampCall( callProcedure( 'member',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_member') then
                                                                trampCall(@_member)
                                                              else raise NameError.new( "Error: undefined variable _member", "_member" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1583"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_elt)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1583"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                              begin
                                                                  trampCall(_lis)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1583"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                              begin
                                                                  trampCall(__EQMARK)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1583"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))))
                                                    }                                                  ,Cell.new(
                                                    begin
                                                        trampCall(_lists)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1584"] + __e.backtrace ) ; raise __e
                                                    end
                                                           ))))
                                                     )))
                                    }                                  ,Cell.new(
                                    begin
                                        trampCall(_lis1)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1585"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                          end
                      end
                  end
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_lset_MIMARKdiff_PLMARKintersection_EXMARK'] = true
    @_lset_MIMARKdiff_PLMARKintersection_EXMARK = 
    trampCall(
          Proc.new { |__EQMARK,_lis1,*__rest__| _lists = __rest__[0] ;  
              begin
              end
              if ( 
                trampCall( callProcedure( 'every',
                    begin
                      if @global_lisp_binding.has_key?('_every') then
                        trampCall(@_every)
                      else raise NameError.new( "Error: undefined variable _every", "_every" ) end
                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1589"] + __e.backtrace ) ; raise __e
                    end                  ,
                    Cell.new(
                      begin
                        if @global_lisp_binding.has_key?('_null_MIMARKlist_QUMARK') then
                          trampCall(@_null_MIMARKlist_QUMARK)
                        else raise NameError.new( "Error: undefined variable _null_MIMARKlist_QUMARK", "_null_MIMARKlist_QUMARK" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1589"] + __e.backtrace ) ; raise __e
                      end                    ,Cell.new(
                      begin
                          trampCall(_lists)
                        rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1593"] + __e.backtrace ) ; raise __e
                      end
                             ))))
               ) then
                  begin
                      DelayedCallPacket.new( 'values',
                          begin
                            if @global_lisp_binding.has_key?('_values') then
                              trampCall(@_values)
                            else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1590"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                trampCall(_lis1)
                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1594"] + __e.backtrace ) ; raise __e
                            end                          ,Cell.new(
                          Cell.new()
                                   )))
                  end
              else
                  if ( 
                    trampCall( callProcedure( 'memq',
                        begin
                          if @global_lisp_binding.has_key?('_memq') then
                            trampCall(@_memq)
                          else raise NameError.new( "Error: undefined variable _memq", "_memq" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1590"] + __e.backtrace ) ; raise __e
                        end                      ,
                        Cell.new(
                          begin
                              trampCall(_lis1)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1594"] + __e.backtrace ) ; raise __e
                          end                        ,Cell.new(
                          begin
                              trampCall(_lists)
                            rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1593"] + __e.backtrace ) ; raise __e
                          end
                                 ))))
                   ) then
                      begin
                          DelayedCallPacket.new( 'values',
                              begin
                                if @global_lisp_binding.has_key?('_values') then
                                  trampCall(@_values)
                                else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1590"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              Cell.new()                              ,Cell.new(
                                begin
                                    trampCall(_lis1)
                                  rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1594"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                      end
                  else
                      if ( 
                      true
                       ) then
                          begin
                              DelayedCallPacket.new( 'partition!',
                                  begin
                                    if @global_lisp_binding.has_key?('_partition_EXMARK') then
                                      trampCall(@_partition_EXMARK)
                                    else raise NameError.new( "Error: undefined variable _partition_EXMARK", "_partition_EXMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1591"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    Proc.new { |_elt| 
                                        trampCall( callProcedure( 'not',
                                            begin
                                              if @global_lisp_binding.has_key?('_not') then
                                                trampCall(@_not)
                                              else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1592"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'any',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_any') then
                                                      trampCall(@_any)
                                                    else raise NameError.new( "Error: undefined variable _any", "_any" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1592"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    Proc.new { |_lis| 
                                                        trampCall( callProcedure( 'member',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_member') then
                                                                trampCall(@_member)
                                                              else raise NameError.new( "Error: undefined variable _member", "_member" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1592"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  trampCall(_elt)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1592"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                              begin
                                                                  trampCall(_lis)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1592"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,Cell.new(
                                                              begin
                                                                  trampCall(__EQMARK)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1592"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))))
                                                    }                                                  ,Cell.new(
                                                    begin
                                                        trampCall(_lists)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1593"] + __e.backtrace ) ; raise __e
                                                    end
                                                           ))))
                                                     )))
                                    }                                  ,Cell.new(
                                    begin
                                        trampCall(_lis1)
                                      rescue => __e ; __e.set_backtrace( ["./lib/srfi-1.nnd:1594"] + __e.backtrace ) ; raise __e
                                    end
                                           )))
                          end
                      end
                  end
              end
          }
    )
  end
 )


# -------------------------------------------------------
# [EOF]
# -------------------------------------------------------
