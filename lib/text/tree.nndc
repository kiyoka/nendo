#
#    This file is nendo's compiled library file. 
#    generated  "nendo -c src" command. 
# 

trampCall( 
  begin
    embedBacktraceInfo( "./lib/text/tree.nnd", 10 ); 
      delayCall( '_require',  'require',
          begin
            if @global_lisp_binding.has_key?('_require') then
              trampCall(@_require)
            else raise NameError.new( "Error: undefined variable _require", "_require" ) end
            rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:10"] + __e.backtrace ) ; raise __e
          end        ,
      [
          "stringio"
      ]
                   )
  end
 )
#--------------------

trampCall( 
  begin
      def self._write_MIMARKtree_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_write_MIMARKtree', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_write_MIMARKtree'] = self.method( :_write_MIMARKtree_METHOD )
    @_write_MIMARKtree = 
    trampCall(
          Proc.new { |_tree,*__rest__| _out = __rest__[0] ;  
              begin
                ___lambda = lambda { |_out| 
                    begin
                      ___lambda = lambda { |_loop| 
                          _loop                           = 
                            Proc.new { |_tree| 
                                if ( 
                                  begin
                                    embedBacktraceInfo( "./lib/text/tree.nnd", 17 ); 
                                      _null_QUMARK(
                                          begin
                                              trampCall(_tree)
                                            rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:20"] + __e.backtrace ) ; raise __e
                                          end
                                      )
                                  end
                                 ) then
                                    begin
                                      true
                                    end
                                else
                                    if ( 
                                      begin
                                        embedBacktraceInfo( "./lib/text/tree.nnd", 18 ); 
                                          _pair_QUMARK(
                                              begin
                                                  trampCall(_tree)
                                                rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:20"] + __e.backtrace ) ; raise __e
                                              end
                                          )
                                      end
                                     ) then
                                        begin
                                            begin
                                              embedBacktraceInfo( "./lib/text/tree.nnd", 18 ); 
                                                trampCall( self._write_MIMARKtree_METHOD(  'write-tree',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_write_MIMARKtree') then
                                                        trampCall(@_write_MIMARKtree)
                                                      else raise NameError.new( "Error: undefined variable _write_MIMARKtree", "_write_MIMARKtree" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:18"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                        embedBacktraceInfo( "./lib/text/tree.nnd", 18 ); 
                                                          _car(
                                                              begin
                                                                  trampCall(_tree)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:20"] + __e.backtrace ) ; raise __e
                                                              end
                                                          )
                                                      end                                                    ,
                                                      begin
                                                          trampCall(_out)
                                                        rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:18"] + __e.backtrace ) ; raise __e
                                                      end
                                                ]
                                                             ))
                                            end
                                            begin
                                              embedBacktraceInfo( "./lib/text/tree.nnd", 18 ); 
                                                delayCall( '_loop',  'loop',
                                                    begin
                                                        trampCall(_loop)
                                                      rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:18"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                [
                                                      begin
                                                        embedBacktraceInfo( "./lib/text/tree.nnd", 18 ); 
                                                          _cdr(
                                                              begin
                                                                  trampCall(_tree)
                                                                rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:20"] + __e.backtrace ) ; raise __e
                                                              end
                                                          )
                                                      end
                                                ]
                                                             )
                                            end
                                        end
                                    else
                                        if ( 
                                        true
                                         ) then
                                            begin
                                                begin
                                                    trampCall(_out).print(
                                                          begin
                                                              trampCall(_tree)
                                                            rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:20"] + __e.backtrace ) ; raise __e
                                                          end
                                                      )
                                                  rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:20"] + __e.backtrace ) ; raise __e
                                                end
                                            end
                                        else
                                            Cell.new()
                                        end
                                    end
                                end
                            }
                          begin
                            embedBacktraceInfo( "./lib/text/tree.nnd", 18 ); 
                              delayCall( '_loop',  'loop',
                                  begin
                                      trampCall(_loop)
                                    rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:18"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_tree)
                                      rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:20"] + __e.backtrace ) ; raise __e
                                    end
                              ]
                                           )
                          end
                      } ; ___lambda.call(
                      nil
                                 )
                    end
                } ; ___lambda.call(
                      if ( 
                        begin
                          embedBacktraceInfo( "./lib/text/tree.nnd", 17 ); 
                            _null_QUMARK(
                                begin
                                    trampCall(_out)
                                  rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:18"] + __e.backtrace ) ; raise __e
                                end
                            )
                        end
                       ) then
                          begin
                              trampCall(STDOUT)
                            rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:14"] + __e.backtrace ) ; raise __e
                          end
                      else
                          begin
                            embedBacktraceInfo( "./lib/text/tree.nnd", 18 ); 
                              delayCall( '_car',  'car',
                                  begin
                                    if @global_lisp_binding.has_key?('_car') then
                                      trampCall(@_car)
                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:18"] + __e.backtrace ) ; raise __e
                                  end                                ,
                              [
                                    begin
                                        trampCall(_out)
                                      rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:18"] + __e.backtrace ) ; raise __e
                                    end
                              ]
                                           )
                          end
                      end
                           )
              end
          }
    )
  end
 )
#--------------------

trampCall( 
  begin
      def self._tree_MIMARK_GTMARKstring_METHOD( origname, pred, args )   lispMethodEntry( origname, true ) ;   ret = callProcedure( '_tree_MIMARK_GTMARKstring', origname, pred, args ) ;  lispMethodExit( origname,  true ) ;   return ret end 
      @global_lisp_binding['_tree_MIMARK_GTMARKstring'] = self.method( :_tree_MIMARK_GTMARKstring_METHOD )
    @_tree_MIMARK_GTMARKstring = 
    trampCall(
          Proc.new { |_tree| 
              begin
                ___lambda = lambda { |_sio| 
                    begin
                      embedBacktraceInfo( "./lib/text/tree.nnd", 24 ); 
                        trampCall( self._write_MIMARKtree_METHOD(  'write-tree',
                            begin
                              if @global_lisp_binding.has_key?('_write_MIMARKtree') then
                                trampCall(@_write_MIMARKtree)
                              else raise NameError.new( "Error: undefined variable _write_MIMARKtree", "_write_MIMARKtree" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:24"] + __e.backtrace ) ; raise __e
                            end                          ,
                        [
                              begin
                                  trampCall(_tree)
                                rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:24"] + __e.backtrace ) ; raise __e
                              end                            ,
                              begin
                                  trampCall(_sio)
                                rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:24"] + __e.backtrace ) ; raise __e
                              end
                        ]
                                     ))
                    end
                    begin
                        trampCall(_sio).string(
                          )
                      rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:25"] + __e.backtrace ) ; raise __e
                    end
                } ; ___lambda.call(
                      begin
                          trampCall(StringIO).new(
                              ""
                            )
                        rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:23"] + __e.backtrace ) ; raise __e
                      end
                           )
              end
          }
    )
  end
 )


# -------------------------------------------------------
# [EOF]
# -------------------------------------------------------
