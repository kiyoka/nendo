#
#    This file is nendo's compiled library file. 
#    generated  "nendo -c src" command. 
# 

  callProcedure( 'require',
      begin
        if @global_lisp_binding.has_key?('_require') then
          @_require
        else raise NameError.new( "Error: undefined variable _require", "_require" ) end
        rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:10"] + __e.backtrace ) ; raise __e
      end    ,
      Cell.new(
      "stringio"
               ))
#--------------------

  begin
    @global_lisp_binding['_write_MIMARKtree'] = true
    @_write_MIMARKtree = 
        Proc.new { |_tree,*__rest__| _out = __rest__[0] ;  
            begin
              ___lambda = lambda { |_out| 
                  begin
                    ___lambda = lambda { |_loop| 
                        _loop                         = 
                          Proc.new { |_tree| 
                              if ( 
                                callProcedure( 'null?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_QUMARK') then
                                        @_null_QUMARK
                                      else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:17"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _tree
                                        rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:20"] + __e.backtrace ) ; raise __e
                                      end
                                             ))
                               ) then
                                  begin
                                    true
                                  end
                              else
                                  if ( 
                                    callProcedure( 'pair?',
                                        begin
                                          if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                            @_pair_QUMARK
                                          else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:18"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _tree
                                            rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:20"] + __e.backtrace ) ; raise __e
                                          end
                                                 ))
                                   ) then
                                      begin
                                          callProcedure( 'write-tree',
                                              begin
                                                if @global_lisp_binding.has_key?('_write_MIMARKtree') then
                                                  @_write_MIMARKtree
                                                else raise NameError.new( "Error: undefined variable _write_MIMARKtree", "_write_MIMARKtree" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:18"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                callProcedure( 'car',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_car') then
                                                        @_car
                                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:18"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          _tree
                                                        rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:20"] + __e.backtrace ) ; raise __e
                                                      end
                                                             ))                                              ,Cell.new(
                                                begin
                                                    _out
                                                  rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:18"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                          callProcedure( 'loop',
                                              begin
                                                  _loop
                                                rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:18"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                callProcedure( 'cdr',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cdr') then
                                                        @_cdr
                                                      else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:18"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          _tree
                                                        rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:20"] + __e.backtrace ) ; raise __e
                                                      end
                                                             ))
                                                       ))
                                      end
                                  else
                                      if ( 
                                      true
                                       ) then
                                          begin
                                              begin
                                                  _out.print(
                                                        begin
                                                            _tree
                                                          rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:20"] + __e.backtrace ) ; raise __e
                                                        end
                                                    )
                                                rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:20"] + __e.backtrace ) ; raise __e
                                              end
                                          end
                                      else
                                        Nil.new
                                      end
                                  end
                              end
                          }
                        callProcedure( 'loop',
                            begin
                                _loop
                              rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:18"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _tree
                                rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:20"] + __e.backtrace ) ; raise __e
                              end
                                     ))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              } ; ___lambda.call(
                    if ( 
                      callProcedure( 'null?',
                          begin
                            if @global_lisp_binding.has_key?('_null_QUMARK') then
                              @_null_QUMARK
                            else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:17"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                _out
                              rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:18"] + __e.backtrace ) ; raise __e
                            end
                                   ))
                     ) then
                        begin
                            STDOUT
                          rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:14"] + __e.backtrace ) ; raise __e
                        end
                    else
                        callProcedure( 'car',
                            begin
                              if @global_lisp_binding.has_key?('_car') then
                                @_car
                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:18"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _out
                                rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:18"] + __e.backtrace ) ; raise __e
                              end
                                     ))
                    end
                         )
            end
        }
  end
#--------------------

  begin
    @global_lisp_binding['_tree_MIMARK_GTMARKstring'] = true
    @_tree_MIMARK_GTMARKstring = 
        Proc.new { |_tree| 
            begin
              ___lambda = lambda { |_sio| 
                  callProcedure( 'write-tree',
                      begin
                        if @global_lisp_binding.has_key?('_write_MIMARKtree') then
                          @_write_MIMARKtree
                        else raise NameError.new( "Error: undefined variable _write_MIMARKtree", "_write_MIMARKtree" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:24"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                            _tree
                          rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:24"] + __e.backtrace ) ; raise __e
                        end                      ,Cell.new(
                        begin
                            _sio
                          rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:24"] + __e.backtrace ) ; raise __e
                        end
                               )))
                  begin
                      _sio.string(
                        )
                    rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:25"] + __e.backtrace ) ; raise __e
                  end
              } ; ___lambda.call(
                    begin
                        StringIO.new(
                            ""
                          )
                      rescue => __e ; __e.set_backtrace( ["./lib/text/tree.nnd:23"] + __e.backtrace ) ; raise __e
                    end
                         )
            end
        }
  end


# -------------------------------------------------------
# [EOF]
# -------------------------------------------------------
