#
#    This file is nendo's compiled library file. 
#    generated  "nendo -c src" command. 
# 

trampCall( 
  begin
    @global_lisp_binding['_html_MIMARKescape'] = true
    @_html_MIMARKescape = 
        Proc.new { |_c| 
            begin
              ___lambda = lambda { |___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20023| 
                  if ( 
                    begin
                      ___lambda = lambda { |___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20029| 
                          if ( 
                            begin
                                ___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20029
                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                            end
                           ) then
                              begin
                                  ___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20029
                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                              end
                          else
                            false
                          end
                      } ; ___lambda.call(
                            trampCall( callProcedure( 'eqv?',
                                begin
                                  if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                    @_eqv_QUMARK
                                  else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:143"] + __e.backtrace ) ; raise __e
                                end                              ,
                                Cell.new(
                                "<"                                ,Cell.new(
                                  begin
                                      ___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20023
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                                         ))))
                                 )
                    end
                   ) then
                      begin
                        "&lt;"
                      end
                  else
                      if ( 
                        begin
                          ___lambda = lambda { |___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20030| 
                              if ( 
                                begin
                                    ___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20030
                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                end
                               ) then
                                  begin
                                      ___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20030
                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                  end
                              else
                                false
                              end
                          } ; ___lambda.call(
                                trampCall( callProcedure( 'eqv?',
                                    begin
                                      if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                        @_eqv_QUMARK
                                      else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:143"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                    ">"                                    ,Cell.new(
                                      begin
                                          ___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20023
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                             ))))
                                     )
                        end
                       ) then
                          begin
                            "&gt;"
                          end
                      else
                          if ( 
                            begin
                              ___lambda = lambda { |___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20031| 
                                  if ( 
                                    begin
                                        ___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20031
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end
                                   ) then
                                      begin
                                          ___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20031
                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                      end
                                  else
                                    false
                                  end
                              } ; ___lambda.call(
                                    trampCall( callProcedure( 'eqv?',
                                        begin
                                          if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                            @_eqv_QUMARK
                                          else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:143"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                        "&"                                        ,Cell.new(
                                          begin
                                              ___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20023
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                                 ))))
                                         )
                            end
                           ) then
                              begin
                                "&amp;"
                              end
                          else
                              if ( 
                                begin
                                  ___lambda = lambda { |___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20032| 
                                      if ( 
                                        begin
                                            ___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20032
                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                        end
                                       ) then
                                          begin
                                              ___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20032
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end
                                      else
                                        false
                                      end
                                  } ; ___lambda.call(
                                        trampCall( callProcedure( 'eqv?',
                                            begin
                                              if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                @_eqv_QUMARK
                                              else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:143"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                            "\""                                            ,Cell.new(
                                              begin
                                                  ___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20023
                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                              end
                                                     ))))
                                             )
                                end
                               ) then
                                  begin
                                    "&quot;"
                                  end
                              else
                                  if ( 
                                  true
                                   ) then
                                      begin
                                          begin
                                              _c
                                            rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:46"] + __e.backtrace ) ; raise __e
                                          end
                                      end
                                  else
                                    Nil.new
                                  end
                              end
                          end
                      end
                  end
              } ; ___lambda.call(
                    begin
                        _c
                      rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:46"] + __e.backtrace ) ; raise __e
                    end
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_html_MIMARKescape_MIMARKstring'] = true
    @_html_MIMARKescape_MIMARKstring = 
        Proc.new { |_string| 
            trampCall( callProcedure( 'string-join',
                begin
                  if @global_lisp_binding.has_key?('_string_MIMARKjoin') then
                    @_string_MIMARKjoin
                  else raise NameError.new( "Error: undefined variable _string_MIMARKjoin", "_string_MIMARKjoin" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:49"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                  trampCall( callProcedure( 'map',
                      begin
                        if @global_lisp_binding.has_key?('_map') then
                          @_map
                        else raise NameError.new( "Error: undefined variable _map", "_map" ) end
                        rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:50"] + __e.backtrace ) ; raise __e
                      end                    ,
                      Cell.new(
                        begin
                          if @global_lisp_binding.has_key?('_html_MIMARKescape') then
                            @_html_MIMARKescape
                          else raise NameError.new( "Error: undefined variable _html_MIMARKescape", "_html_MIMARKescape" ) end
                          rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:51"] + __e.backtrace ) ; raise __e
                        end                      ,Cell.new(
                        trampCall( callProcedure( 'to-list',
                            begin
                              if @global_lisp_binding.has_key?('_to_MIMARKlist') then
                                @_to_MIMARKlist
                              else raise NameError.new( "Error: undefined variable _to_MIMARKlist", "_to_MIMARKlist" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:52"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _string.split(
                                      ""
                                    )
                                rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:52"] + __e.backtrace ) ; raise __e
                              end
                                     )))
                               ))))                ,Cell.new(
                ""
                         ))))
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['__ASMARKdoctype_MIMARKalist_ASMARK'] = true
    @__ASMARKdoctype_MIMARKalist_ASMARK = 
      Cell.new(Cell.new(Cell.new(LispKeyword.new( "strict" ),Cell.new(LispKeyword.new( "html" ),Cell.new(LispKeyword.new( "html-strict" ),Cell.new(LispKeyword.new( "html-4.01" ),Cell.new(LispKeyword.new( "html-4.01-strict" )))))),Cell.new(false,Cell.new("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"
       \"http://www.w3.org/TR/html4/strict.dtd\">
"))),Cell.new(Cell.new(Cell.new(LispKeyword.new( "transitional" ),Cell.new(LispKeyword.new( "html-transitional" ),Cell.new(LispKeyword.new( "html-4.01-transitional" )))),Cell.new(false,Cell.new("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"
       \"http://www.w3.org/TR/html4/loose.dtd\">
"))),Cell.new(Cell.new(Cell.new(LispKeyword.new( "frameset" ),Cell.new(LispKeyword.new( "html-frameset" ),Cell.new(LispKeyword.new( "html-4.01-frameset" )))),Cell.new(false,Cell.new("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Frameset//EN\"
       \"http://www.w3.org/TR/html4/frameset.dtd\">
"))),Cell.new(Cell.new(Cell.new(LispKeyword.new( "xhtml-1.0-strict" ),Cell.new(LispKeyword.new( "xhtml-1.0" ))),Cell.new(true,Cell.new("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"
       \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">
"))),Cell.new(Cell.new(Cell.new(LispKeyword.new( "xhtml-1.0-transitional" )),Cell.new(true,Cell.new("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"
       \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">
"))),Cell.new(Cell.new(Cell.new(LispKeyword.new( "xhtml-1.0-frameset" )),Cell.new(true,Cell.new("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Frameset//EN\"
       \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd\">
"))),Cell.new(Cell.new(Cell.new(LispKeyword.new( "xhtml-1.1" )),Cell.new(true,Cell.new("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"
       \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">
"))))))))))
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_html_MIMARKdoctype'] = true
    @_html_MIMARKdoctype = 
        Proc.new { |*__rest__| _type = __rest__[0] ;  
            begin
              ___lambda = lambda { |_type| 
                  if ( 
                    begin
                      @global_lisp_binding['___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20034'] = true
                      @___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20034 = 
                          trampCall( callProcedure( 'find',
                              begin
                                if @global_lisp_binding.has_key?('_find') then
                                  @_find
                                else raise NameError.new( "Error: undefined variable _find", "_find" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:97"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                Proc.new { |_e| 
                                    trampCall( callProcedure( 'memq',
                                        begin
                                          if @global_lisp_binding.has_key?('_memq') then
                                            @_memq
                                          else raise NameError.new( "Error: undefined variable _memq", "_memq" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:97"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _type
                                            rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:99"] + __e.backtrace ) ; raise __e
                                          end                                        ,Cell.new(
                                          trampCall( callProcedure( 'car',
                                              begin
                                                if @global_lisp_binding.has_key?('_car') then
                                                  @_car
                                                else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:97"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    _e
                                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:97"] + __e.backtrace ) ; raise __e
                                                end
                                                       )))
                                                 ))))
                                }                              ,Cell.new(
                                begin
                                  if @global_lisp_binding.has_key?('__ASMARKdoctype_MIMARKalist_ASMARK') then
                                    @__ASMARKdoctype_MIMARKalist_ASMARK
                                  else raise NameError.new( "Error: undefined variable __ASMARKdoctype_MIMARKalist_ASMARK", "__ASMARKdoctype_MIMARKalist_ASMARK" ) end
                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:97"] + __e.backtrace ) ; raise __e
                                end
                                       ))))
                    end
                   ) then
                      trampCall( callProcedure( 'caddr',
                          begin
                            if @global_lisp_binding.has_key?('_caddr') then
                              @_caddr
                            else raise NameError.new( "Error: undefined variable _caddr", "_caddr" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:98"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                              if @global_lisp_binding.has_key?('___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20034') then
                                @___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20034
                              else raise NameError.new( "Error: undefined variable ___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20034", "___gensym__7421c160c97efe3fa4b72b1f1f8b235cd6625c27_20034" ) end
                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                  else
                      if ( 
                      true
                       ) then
                          begin
                              begin raise RuntimeError, 
                              "Unknown doctype type spec"
                              rescue => __e 
                                __e.set_backtrace( ["./lib/text/html-lite.nnd:99"] + __e.backtrace )
                                raise __e
                              end 
                          end
                      else
                        Nil.new
                      end
                  end
              } ; ___lambda.call(
                    if ( 
                      trampCall( callProcedure( 'null?',
                          begin
                            if @global_lisp_binding.has_key?('_null_QUMARK') then
                              @_null_QUMARK
                            else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                            rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:94"] + __e.backtrace ) ; raise __e
                          end                        ,
                          Cell.new(
                            begin
                                _type
                              rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:99"] + __e.backtrace ) ; raise __e
                            end
                                   )))
                     ) then
                      LispKeyword.new( "html-4.01-strict" )
                    else
                        begin
                            _type
                          rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:99"] + __e.backtrace ) ; raise __e
                        end
                    end
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_make_MIMARKhtml_MIMARKelement'] = true
    @_make_MIMARKhtml_MIMARKelement = 
        Proc.new { |_name,*__rest__| _args = __rest__[0] ;  
            begin
              ___lambda = lambda { |_get_MIMARKattr| 
                  _get_MIMARKattr                   = 
                    Proc.new { |_args,_attrs| 
                        if ( 
                          trampCall( callProcedure( 'null?',
                              begin
                                if @global_lisp_binding.has_key?('_null_QUMARK') then
                                  @_null_QUMARK
                                else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:126"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                                begin
                                    _args
                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                end
                                       )))
                         ) then
                            begin
                                trampCall( callProcedure( 'values',
                                    begin
                                      if @global_lisp_binding.has_key?('_values') then
                                        @_values
                                      else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:120"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      trampCall( callProcedure( 'reverse',
                                          begin
                                            if @global_lisp_binding.has_key?('_reverse') then
                                              @_reverse
                                            else raise NameError.new( "Error: undefined variable _reverse", "_reverse" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:120"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            begin
                                                _attrs
                                              rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:120"] + __e.backtrace ) ; raise __e
                                            end
                                                   )))                                    ,Cell.new(
                                      begin
                                          _args
                                        rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                      end
                                             ))))
                            end
                        else
                            if ( 
                              trampCall( callProcedure( 'keyword?',
                                  begin
                                    if @global_lisp_binding.has_key?('_keyword_QUMARK') then
                                      @_keyword_QUMARK
                                    else raise NameError.new( "Error: undefined variable _keyword_QUMARK", "_keyword_QUMARK" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:106"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                    trampCall( callProcedure( 'car',
                                        begin
                                          if @global_lisp_binding.has_key?('_car') then
                                            @_car
                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                          rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:117"] + __e.backtrace ) ; raise __e
                                        end                                      ,
                                        Cell.new(
                                          begin
                                              _args
                                            rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                          end
                                                 )))
                                           )))
                             ) then
                                begin
                                    if ( 
                                      trampCall( callProcedure( 'null?',
                                          begin
                                            if @global_lisp_binding.has_key?('_null_QUMARK') then
                                              @_null_QUMARK
                                            else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                            rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:126"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            trampCall( callProcedure( 'cdr',
                                                begin
                                                  if @global_lisp_binding.has_key?('_cdr') then
                                                    @_cdr
                                                  else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:107"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      _args
                                                    rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                   )))
                                     ) then
                                        begin
                                            trampCall( callProcedure( 'values',
                                                begin
                                                  if @global_lisp_binding.has_key?('_values') then
                                                    @_values
                                                  else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:120"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  trampCall( callProcedure( 'reverse',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_reverse') then
                                                          @_reverse
                                                        else raise NameError.new( "Error: undefined variable _reverse", "_reverse" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:120"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        trampCall( callProcedure( 'list*',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_list_ASMARK') then
                                                                @_list_ASMARK
                                                              else raise NameError.new( "Error: undefined variable _list_ASMARK", "_list_ASMARK" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:115"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              trampCall( callProcedure( 'car',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_car') then
                                                                      @_car
                                                                    else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:117"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        _args
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))                                                            ,Cell.new(
                                                            " "                                                            ,Cell.new(
                                                              begin
                                                                  _attrs
                                                                rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:120"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))))
                                                               )))                                                ,Cell.new(
                                                  begin
                                                      _args
                                                    rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                  end
                                                         ))))
                                        end
                                    else
                                        if ( 
                                          trampCall( callProcedure( 'eq?',
                                              begin
                                                if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                  @_eq_QUMARK
                                                else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:111"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'cadr',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cadr') then
                                                        @_cadr
                                                      else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:116"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          _args
                                                        rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))                                              ,Cell.new(
                                              false
                                                       ))))
                                         ) then
                                            begin
                                                trampCall( callProcedure( 'get-attr',
                                                    begin
                                                        _get_MIMARKattr
                                                      rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:130"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'cddr',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cddr') then
                                                              @_cddr
                                                            else raise NameError.new( "Error: undefined variable _cddr", "_cddr" ) end
                                                            rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:114"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                            begin
                                                                _args
                                                              rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                            end
                                                                   )))                                                    ,Cell.new(
                                                      begin
                                                          _attrs
                                                        rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:120"] + __e.backtrace ) ; raise __e
                                                      end
                                                             ))))
                                            end
                                        else
                                            if ( 
                                              trampCall( callProcedure( 'eq?',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                      @_eq_QUMARK
                                                    else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:111"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'cadr',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cadr') then
                                                            @_cadr
                                                          else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:116"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              _args
                                                            rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))                                                  ,Cell.new(
                                                  true
                                                           ))))
                                             ) then
                                                begin
                                                    trampCall( callProcedure( 'get-attr',
                                                        begin
                                                            _get_MIMARKattr
                                                          rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:130"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'cddr',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cddr') then
                                                                  @_cddr
                                                                else raise NameError.new( "Error: undefined variable _cddr", "_cddr" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:114"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    _args
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))                                                        ,Cell.new(
                                                          trampCall( callProcedure( 'list*',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_list_ASMARK') then
                                                                  @_list_ASMARK
                                                                else raise NameError.new( "Error: undefined variable _list_ASMARK", "_list_ASMARK" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:115"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                trampCall( callProcedure( 'car',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_car') then
                                                                        @_car
                                                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:117"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      begin
                                                                          _args
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                                      end
                                                                             )))                                                              ,Cell.new(
                                                              " "                                                              ,Cell.new(
                                                                begin
                                                                    _attrs
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:120"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))))
                                                                 ))))
                                                end
                                            else
                                                if ( 
                                                true
                                                 ) then
                                                    begin
                                                        trampCall( callProcedure( 'get-attr',
                                                            begin
                                                                _get_MIMARKattr
                                                              rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:130"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              trampCall( callProcedure( 'cddr',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_cddr') then
                                                                      @_cddr
                                                                    else raise NameError.new( "Error: undefined variable _cddr", "_cddr" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:114"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    begin
                                                                        _args
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           )))                                                            ,Cell.new(
                                                              trampCall( callProcedure( 'list*',
                                                                  begin
                                                                    if @global_lisp_binding.has_key?('_list_ASMARK') then
                                                                      @_list_ASMARK
                                                                    else raise NameError.new( "Error: undefined variable _list_ASMARK", "_list_ASMARK" ) end
                                                                    rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:115"] + __e.backtrace ) ; raise __e
                                                                  end                                                                ,
                                                                  Cell.new(
                                                                    trampCall( callProcedure( 'sprintf',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_sprintf') then
                                                                            @_sprintf
                                                                          else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:115"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                        "=\"%s\""                                                                        ,Cell.new(
                                                                          trampCall( callProcedure( 'html-escape-string',
                                                                              begin
                                                                                if @global_lisp_binding.has_key?('_html_MIMARKescape_MIMARKstring') then
                                                                                  @_html_MIMARKescape_MIMARKstring
                                                                                else raise NameError.new( "Error: undefined variable _html_MIMARKescape_MIMARKstring", "_html_MIMARKescape_MIMARKstring" ) end
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:116"] + __e.backtrace ) ; raise __e
                                                                              end                                                                            ,
                                                                              Cell.new(
                                                                                trampCall( callProcedure( 'x->string',
                                                                                    begin
                                                                                      if @global_lisp_binding.has_key?('_x_MIMARK_GTMARKstring') then
                                                                                        @_x_MIMARK_GTMARKstring
                                                                                      else raise NameError.new( "Error: undefined variable _x_MIMARK_GTMARKstring", "_x_MIMARK_GTMARKstring" ) end
                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:116"] + __e.backtrace ) ; raise __e
                                                                                    end                                                                                  ,
                                                                                    Cell.new(
                                                                                      trampCall( callProcedure( 'cadr',
                                                                                          begin
                                                                                            if @global_lisp_binding.has_key?('_cadr') then
                                                                                              @_cadr
                                                                                            else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:116"] + __e.backtrace ) ; raise __e
                                                                                          end                                                                                        ,
                                                                                          Cell.new(
                                                                                            begin
                                                                                                _args
                                                                                              rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                                                            end
                                                                                                   )))
                                                                                             )))
                                                                                       )))
                                                                                 ))))                                                                  ,Cell.new(
                                                                    trampCall( callProcedure( 'car',
                                                                        begin
                                                                          if @global_lisp_binding.has_key?('_car') then
                                                                            @_car
                                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                          rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:117"] + __e.backtrace ) ; raise __e
                                                                        end                                                                      ,
                                                                        Cell.new(
                                                                          begin
                                                                              _args
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                                          end
                                                                                 )))                                                                  ,Cell.new(
                                                                  " "                                                                  ,Cell.new(
                                                                    begin
                                                                        _attrs
                                                                      rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:120"] + __e.backtrace ) ; raise __e
                                                                    end
                                                                           ))))))
                                                                     ))))
                                                    end
                                                else
                                                  Nil.new
                                                end
                                            end
                                        end
                                    end
                                end
                            else
                                if ( 
                                true
                                 ) then
                                    begin
                                        trampCall( callProcedure( 'values',
                                            begin
                                              if @global_lisp_binding.has_key?('_values') then
                                                @_values
                                              else raise NameError.new( "Error: undefined variable _values", "_values" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:120"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'reverse',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_reverse') then
                                                      @_reverse
                                                    else raise NameError.new( "Error: undefined variable _reverse", "_reverse" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:120"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        _attrs
                                                      rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:120"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))                                            ,Cell.new(
                                              begin
                                                  _args
                                                rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                              end
                                                     ))))
                                    end
                                else
                                  Nil.new
                                end
                            end
                        end
                    }
                  begin
                    ___lambda = lambda { |_empty_QUMARK| 
                        if ( 
                          begin
                              _empty_QUMARK
                            rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:123"] + __e.backtrace ) ; raise __e
                          end
                         ) then
                            Proc.new { |*__rest__| _args = __rest__[0] ;  
                                trampCall( callProcedure( 'call-with-values',
                                    begin
                                      if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                        @_call_MIMARKwith_MIMARKvalues
                                      else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      Proc.new { || 
                                          trampCall( callProcedure( 'get-attr',
                                              begin
                                                  _get_MIMARKattr
                                                rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:130"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    _args
                                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                end                                              ,Cell.new(
                                              Cell.new()
                                                       ))))
                                      }                                    ,Cell.new(
                                      Proc.new { |_attr,_args| 
                                          if ( 
                                            trampCall( callProcedure( 'not',
                                                begin
                                                  if @global_lisp_binding.has_key?('_not') then
                                                    @_not
                                                  else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  trampCall( callProcedure( 'null?',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_null_QUMARK') then
                                                          @_null_QUMARK
                                                        else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:126"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        begin
                                                            _args
                                                          rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                        end
                                                               )))
                                                         )))
                                           ) then
                                              begin
                                                  begin raise RuntimeError, 
                                                    trampCall( callProcedure( 'sprintf',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_sprintf') then
                                                            @_sprintf
                                                          else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:115"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                        "element %s can't have content: %s"                                                        ,Cell.new(
                                                          begin
                                                              _name
                                                            rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,Cell.new(
                                                          trampCall( callProcedure( 'write-to-string',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_write_MIMARKto_MIMARKstring') then
                                                                  @_write_MIMARKto_MIMARKstring
                                                                else raise NameError.new( "Error: undefined variable _write_MIMARKto_MIMARKstring", "_write_MIMARKto_MIMARKstring" ) end
                                                                rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:127"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                                begin
                                                                    _args
                                                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                                end
                                                                       )))
                                                                 )))))
                                                  rescue => __e 
                                                    __e.set_backtrace( ["./lib/text/html-lite.nnd:99"] + __e.backtrace )
                                                    raise __e
                                                  end 
                                              end
                                          end
                                          trampCall( callProcedure( 'list',
                                              begin
                                                if @global_lisp_binding.has_key?('_list') then
                                                  @_list
                                                else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                              "<"                                              ,Cell.new(
                                                begin
                                                    _name
                                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                end                                              ,Cell.new(
                                                begin
                                                    _attr
                                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                end                                              ,Cell.new(
                                              " />"
                                                       ))))))
                                      }
                                             ))))
                            }
                        else
                            Proc.new { |*__rest__| _args = __rest__[0] ;  
                                trampCall( callProcedure( 'call-with-values',
                                    begin
                                      if @global_lisp_binding.has_key?('_call_MIMARKwith_MIMARKvalues') then
                                        @_call_MIMARKwith_MIMARKvalues
                                      else raise NameError.new( "Error: undefined variable _call_MIMARKwith_MIMARKvalues", "_call_MIMARKwith_MIMARKvalues" ) end
                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      Proc.new { || 
                                          trampCall( callProcedure( 'get-attr',
                                              begin
                                                  _get_MIMARKattr
                                                rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:130"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                begin
                                                    _args
                                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                end                                              ,Cell.new(
                                              Cell.new()
                                                       ))))
                                      }                                    ,Cell.new(
                                      Proc.new { |_attr,_args| 
                                          trampCall( callProcedure( 'list',
                                              begin
                                                if @global_lisp_binding.has_key?('_list') then
                                                  @_list
                                                else raise NameError.new( "Error: undefined variable _list", "_list" ) end
                                                rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                              "<"                                              ,Cell.new(
                                                begin
                                                    _name
                                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                end                                              ,Cell.new(
                                                begin
                                                    _attr
                                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                end                                              ,Cell.new(
                                              ">"                                              ,Cell.new(
                                                begin
                                                    _args
                                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                end                                              ,Cell.new(
                                              "</"                                              ,Cell.new(
                                                begin
                                                    _name
                                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                                end                                              ,Cell.new(
                                              "
>"
                                                       ))))))))))
                                      }
                                             ))))
                            }
                        end
                    } ; ___lambda.call(
                          trampCall( callProcedure( 'get-keyword',
                              begin
                                if @global_lisp_binding.has_key?('_get_MIMARKkeyword') then
                                  @_get_MIMARKkeyword
                                else raise NameError.new( "Error: undefined variable _get_MIMARKkeyword", "_get_MIMARKkeyword" ) end
                                rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:122"] + __e.backtrace ) ; raise __e
                              end                            ,
                              Cell.new(
                              LispKeyword.new( "empty?" )                              ,Cell.new(
                                begin
                                    _args
                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:131"] + __e.backtrace ) ; raise __e
                                end                              ,Cell.new(
                              false
                                       )))))
                               )
                  end
              } ; ___lambda.call(
              nil
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
    @global_lisp_binding['_define_MIMARKhtml_MIMARKelements'] = true
    @_define_MIMARKhtml_MIMARKelements = 
        LispMacro.new { |*__rest__| _elements = __rest__[0] ;  
            begin
              ___lambda = lambda { |_make_MIMARKscheme_MIMARKname| 
                  _make_MIMARKscheme_MIMARKname                   = 
                    Proc.new { |_name| 
                        trampCall( callProcedure( 'string->symbol',
                            begin
                              if @global_lisp_binding.has_key?('_string_MIMARK_GTMARKsymbol') then
                                @_string_MIMARK_GTMARKsymbol
                              else raise NameError.new( "Error: undefined variable _string_MIMARK_GTMARKsymbol", "_string_MIMARK_GTMARKsymbol" ) end
                              rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:138"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              trampCall( callProcedure( 'sprintf',
                                  begin
                                    if @global_lisp_binding.has_key?('_sprintf') then
                                      @_sprintf
                                    else raise NameError.new( "Error: undefined variable _sprintf", "_sprintf" ) end
                                    rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:138"] + __e.backtrace ) ; raise __e
                                  end                                ,
                                  Cell.new(
                                  "html:%s"                                  ,Cell.new(
                                    begin
                                        _name
                                      rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:138"] + __e.backtrace ) ; raise __e
                                    end
                                           ))))
                                     )))
                    }
                  begin
                    ___lambda = lambda { |_loop| 
                        _loop                         = 
                          Proc.new { |_elements,_r| 
                              if ( 
                                trampCall( callProcedure( 'null?',
                                    begin
                                      if @global_lisp_binding.has_key?('_null_QUMARK') then
                                        @_null_QUMARK
                                      else raise NameError.new( "Error: undefined variable _null_QUMARK", "_null_QUMARK" ) end
                                      rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:142"] + __e.backtrace ) ; raise __e
                                    end                                  ,
                                    Cell.new(
                                      begin
                                          _elements
                                        rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                                      end
                                             )))
                               ) then
                                  begin
                                      trampCall( callProcedure( 'cons',
                                          begin
                                            if @global_lisp_binding.has_key?('_cons') then
                                              @_cons
                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                          :"begin"                                          ,Cell.new(
                                            trampCall( callProcedure( 'reverse',
                                                begin
                                                  if @global_lisp_binding.has_key?('_reverse') then
                                                    @_reverse
                                                  else raise NameError.new( "Error: undefined variable _reverse", "_reverse" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:142"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                  begin
                                                      _r
                                                    rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:154"] + __e.backtrace ) ; raise __e
                                                  end
                                                         )))
                                                   ))))
                                  end
                              else
                                  if ( 
                                    if ( 
                                      trampCall( callProcedure( 'not',
                                          begin
                                            if @global_lisp_binding.has_key?('_not') then
                                              @_not
                                            else raise NameError.new( "Error: undefined variable _not", "_not" ) end
                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                          end                                        ,
                                          Cell.new(
                                            trampCall( callProcedure( 'eq?',
                                                begin
                                                  if @global_lisp_binding.has_key?('_eq_QUMARK') then
                                                    @_eq_QUMARK
                                                  else raise NameError.new( "Error: undefined variable _eq_QUMARK", "_eq_QUMARK" ) end
                                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:111"] + __e.backtrace ) ; raise __e
                                                end                                              ,
                                                Cell.new(
                                                false                                                ,Cell.new(
                                                  trampCall( callProcedure( 'pair?',
                                                      begin
                                                        if @global_lisp_binding.has_key?('_pair_QUMARK') then
                                                          @_pair_QUMARK
                                                        else raise NameError.new( "Error: undefined variable _pair_QUMARK", "_pair_QUMARK" ) end
                                                        rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:143"] + __e.backtrace ) ; raise __e
                                                      end                                                    ,
                                                      Cell.new(
                                                        trampCall( callProcedure( 'cdr',
                                                            begin
                                                              if @global_lisp_binding.has_key?('_cdr') then
                                                                @_cdr
                                                              else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                              rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:150"] + __e.backtrace ) ; raise __e
                                                            end                                                          ,
                                                            Cell.new(
                                                              begin
                                                                  _elements
                                                                rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                                                              end
                                                                     )))
                                                               )))
                                                         ))))
                                                   )))
                                     ) then
                                        trampCall( callProcedure( 'eqv?',
                                            begin
                                              if @global_lisp_binding.has_key?('_eqv_QUMARK') then
                                                @_eqv_QUMARK
                                              else raise NameError.new( "Error: undefined variable _eqv_QUMARK", "_eqv_QUMARK" ) end
                                              rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:143"] + __e.backtrace ) ; raise __e
                                            end                                          ,
                                            Cell.new(
                                              trampCall( callProcedure( 'cadr',
                                                  begin
                                                    if @global_lisp_binding.has_key?('_cadr') then
                                                      @_cadr
                                                    else raise NameError.new( "Error: undefined variable _cadr", "_cadr" ) end
                                                    rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:143"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    begin
                                                        _elements
                                                      rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                                                    end
                                                           )))                                            ,Cell.new(
                                            LispKeyword.new( "empty" )
                                                     ))))
                                    else
                                      false
                                    end
                                   ) then
                                      begin
                                          trampCall( callProcedure( 'loop',
                                              begin
                                                  _loop
                                                rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:150"] + __e.backtrace ) ; raise __e
                                              end                                            ,
                                              Cell.new(
                                                trampCall( callProcedure( 'cddr',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_cddr') then
                                                        @_cddr
                                                      else raise NameError.new( "Error: undefined variable _cddr", "_cddr" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:144"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      begin
                                                          _elements
                                                        rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))                                              ,Cell.new(
                                                trampCall( callProcedure( 'list*',
                                                    begin
                                                      if @global_lisp_binding.has_key?('_list_ASMARK') then
                                                        @_list_ASMARK
                                                      else raise NameError.new( "Error: undefined variable _list_ASMARK", "_list_ASMARK" ) end
                                                      rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:151"] + __e.backtrace ) ; raise __e
                                                    end                                                  ,
                                                    Cell.new(
                                                      trampCall( callProcedure( 'cons',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cons') then
                                                              @_cons
                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                          :"define"                                                          ,Cell.new(
                                                            trampCall( callProcedure( 'cons',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                    @_cons
                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  trampCall( callProcedure( 'make-scheme-name',
                                                                      begin
                                                                          _make_MIMARKscheme_MIMARKname
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        trampCall( callProcedure( 'car',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_car') then
                                                                                @_car
                                                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  _elements
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                                     )))
                                                                               )))                                                                ,Cell.new(
                                                                  trampCall( callProcedure( 'cons',
                                                                      begin
                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                          @_cons
                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        trampCall( callProcedure( 'cons',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                                @_cons
                                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                            :"make-html-element"                                                                            ,Cell.new(
                                                                              trampCall( callProcedure( 'cons',
                                                                                  begin
                                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                                      @_cons
                                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                  end                                                                                ,
                                                                                  Cell.new(
                                                                                    trampCall( callProcedure( 'cons',
                                                                                        begin
                                                                                          if @global_lisp_binding.has_key?('_cons') then
                                                                                            @_cons
                                                                                          else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                          rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                        end                                                                                      ,
                                                                                        Cell.new(
                                                                                        :"quote"                                                                                        ,Cell.new(
                                                                                          trampCall( callProcedure( 'cons',
                                                                                              begin
                                                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                                                  @_cons
                                                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                              end                                                                                            ,
                                                                                              Cell.new(
                                                                                                trampCall( callProcedure( 'car',
                                                                                                    begin
                                                                                                      if @global_lisp_binding.has_key?('_car') then
                                                                                                        @_car
                                                                                                      else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                                      rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                                                                                                    end                                                                                                  ,
                                                                                                    Cell.new(
                                                                                                      begin
                                                                                                          _elements
                                                                                                        rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                                                                                                      end
                                                                                                             )))                                                                                              ,Cell.new(
                                                                                              
                                                                                                       ))))
                                                                                                 ))))                                                                                  ,Cell.new(
                                                                                  Cell.new(LispKeyword.new( "empty?" ),Cell.new(true))
                                                                                           ))))
                                                                                     ))))                                                                      ,Cell.new(
                                                                      
                                                                               ))))
                                                                         ))))
                                                                   ))))                                                    ,Cell.new(
                                                      trampCall( callProcedure( 'cons',
                                                          begin
                                                            if @global_lisp_binding.has_key?('_cons') then
                                                              @_cons
                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                          end                                                        ,
                                                          Cell.new(
                                                          :"export"                                                          ,Cell.new(
                                                            trampCall( callProcedure( 'cons',
                                                                begin
                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                    @_cons
                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                end                                                              ,
                                                                Cell.new(
                                                                  trampCall( callProcedure( 'make-scheme-name',
                                                                      begin
                                                                          _make_MIMARKscheme_MIMARKname
                                                                        rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                                                                      end                                                                    ,
                                                                      Cell.new(
                                                                        trampCall( callProcedure( 'car',
                                                                            begin
                                                                              if @global_lisp_binding.has_key?('_car') then
                                                                                @_car
                                                                              else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                              rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                                                                            end                                                                          ,
                                                                            Cell.new(
                                                                              begin
                                                                                  _elements
                                                                                rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                                                                              end
                                                                                     )))
                                                                               )))                                                                ,Cell.new(
                                                                
                                                                         ))))
                                                                   ))))                                                    ,Cell.new(
                                                      begin
                                                          _r
                                                        rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:154"] + __e.backtrace ) ; raise __e
                                                      end
                                                             )))))
                                                       ))))
                                      end
                                  else
                                      if ( 
                                      true
                                       ) then
                                          begin
                                              trampCall( callProcedure( 'loop',
                                                  begin
                                                      _loop
                                                    rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:150"] + __e.backtrace ) ; raise __e
                                                  end                                                ,
                                                  Cell.new(
                                                    trampCall( callProcedure( 'cdr',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_cdr') then
                                                            @_cdr
                                                          else raise NameError.new( "Error: undefined variable _cdr", "_cdr" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:150"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          begin
                                                              _elements
                                                            rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))                                                  ,Cell.new(
                                                    trampCall( callProcedure( 'list*',
                                                        begin
                                                          if @global_lisp_binding.has_key?('_list_ASMARK') then
                                                            @_list_ASMARK
                                                          else raise NameError.new( "Error: undefined variable _list_ASMARK", "_list_ASMARK" ) end
                                                          rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:151"] + __e.backtrace ) ; raise __e
                                                        end                                                      ,
                                                        Cell.new(
                                                          trampCall( callProcedure( 'cons',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                  @_cons
                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                              :"define"                                                              ,Cell.new(
                                                                trampCall( callProcedure( 'cons',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                        @_cons
                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      trampCall( callProcedure( 'make-scheme-name',
                                                                          begin
                                                                              _make_MIMARKscheme_MIMARKname
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            trampCall( callProcedure( 'car',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_car') then
                                                                                    @_car
                                                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                Cell.new(
                                                                                  begin
                                                                                      _elements
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                                         )))
                                                                                   )))                                                                    ,Cell.new(
                                                                      trampCall( callProcedure( 'cons',
                                                                          begin
                                                                            if @global_lisp_binding.has_key?('_cons') then
                                                                              @_cons
                                                                            else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                            rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            trampCall( callProcedure( 'cons',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_cons') then
                                                                                    @_cons
                                                                                  else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                  rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                Cell.new(
                                                                                :"make-html-element"                                                                                ,Cell.new(
                                                                                  trampCall( callProcedure( 'cons',
                                                                                      begin
                                                                                        if @global_lisp_binding.has_key?('_cons') then
                                                                                          @_cons
                                                                                        else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                        rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                      end                                                                                    ,
                                                                                      Cell.new(
                                                                                        trampCall( callProcedure( 'cons',
                                                                                            begin
                                                                                              if @global_lisp_binding.has_key?('_cons') then
                                                                                                @_cons
                                                                                              else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                              rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                            end                                                                                          ,
                                                                                            Cell.new(
                                                                                            :"quote"                                                                                            ,Cell.new(
                                                                                              trampCall( callProcedure( 'cons',
                                                                                                  begin
                                                                                                    if @global_lisp_binding.has_key?('_cons') then
                                                                                                      @_cons
                                                                                                    else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                                                    rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                                                  end                                                                                                ,
                                                                                                  Cell.new(
                                                                                                    trampCall( callProcedure( 'car',
                                                                                                        begin
                                                                                                          if @global_lisp_binding.has_key?('_car') then
                                                                                                            @_car
                                                                                                          else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                                          rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                                                                                                        end                                                                                                      ,
                                                                                                        Cell.new(
                                                                                                          begin
                                                                                                              _elements
                                                                                                            rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                                                                                                          end
                                                                                                                 )))                                                                                                  ,Cell.new(
                                                                                                  
                                                                                                           ))))
                                                                                                     ))))                                                                                      ,Cell.new(
                                                                                      
                                                                                               ))))
                                                                                         ))))                                                                          ,Cell.new(
                                                                          
                                                                                   ))))
                                                                             ))))
                                                                       ))))                                                        ,Cell.new(
                                                          trampCall( callProcedure( 'cons',
                                                              begin
                                                                if @global_lisp_binding.has_key?('_cons') then
                                                                  @_cons
                                                                else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                              end                                                            ,
                                                              Cell.new(
                                                              :"export"                                                              ,Cell.new(
                                                                trampCall( callProcedure( 'cons',
                                                                    begin
                                                                      if @global_lisp_binding.has_key?('_cons') then
                                                                        @_cons
                                                                      else raise NameError.new( "Error: undefined variable _cons", "_cons" ) end
                                                                      rescue => __e ; __e.set_backtrace( [":1"] + __e.backtrace ) ; raise __e
                                                                    end                                                                  ,
                                                                    Cell.new(
                                                                      trampCall( callProcedure( 'make-scheme-name',
                                                                          begin
                                                                              _make_MIMARKscheme_MIMARKname
                                                                            rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                                                                          end                                                                        ,
                                                                          Cell.new(
                                                                            trampCall( callProcedure( 'car',
                                                                                begin
                                                                                  if @global_lisp_binding.has_key?('_car') then
                                                                                    @_car
                                                                                  else raise NameError.new( "Error: undefined variable _car", "_car" ) end
                                                                                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                                                                                end                                                                              ,
                                                                                Cell.new(
                                                                                  begin
                                                                                      _elements
                                                                                    rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                                                                                  end
                                                                                         )))
                                                                                   )))                                                                    ,Cell.new(
                                                                    
                                                                             ))))
                                                                       ))))                                                        ,Cell.new(
                                                          begin
                                                              _r
                                                            rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:154"] + __e.backtrace ) ; raise __e
                                                          end
                                                                 )))))
                                                           ))))
                                          end
                                      else
                                        Nil.new
                                      end
                                  end
                              end
                          }
                        trampCall( callProcedure( 'loop',
                            begin
                                _loop
                              rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:150"] + __e.backtrace ) ; raise __e
                            end                          ,
                            Cell.new(
                              begin
                                  _elements
                                rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:153"] + __e.backtrace ) ; raise __e
                              end                            ,Cell.new(
                            Cell.new()
                                     ))))
                    } ; ___lambda.call(
                    nil
                               )
                  end
              } ; ___lambda.call(
              nil
                         )
            end
        }
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKtt'] = true
        @_html_COMARKtt = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKtt'] = true
        @_html_COMARKtt = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"tt"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKi'] = true
        @_html_COMARKi = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKi'] = true
        @_html_COMARKi = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"i"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKb'] = true
        @_html_COMARKb = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKb'] = true
        @_html_COMARKb = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"b"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKbig'] = true
        @_html_COMARKbig = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKbig'] = true
        @_html_COMARKbig = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"big"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKsmall'] = true
        @_html_COMARKsmall = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKsmall'] = true
        @_html_COMARKsmall = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"small"
                         )))
      end
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKem'] = true
        @_html_COMARKem = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKem'] = true
        @_html_COMARKem = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"em"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKstrong'] = true
        @_html_COMARKstrong = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKstrong'] = true
        @_html_COMARKstrong = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"strong"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKdfn'] = true
        @_html_COMARKdfn = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKdfn'] = true
        @_html_COMARKdfn = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"dfn"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKcode'] = true
        @_html_COMARKcode = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKcode'] = true
        @_html_COMARKcode = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"code"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKsamp'] = true
        @_html_COMARKsamp = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKsamp'] = true
        @_html_COMARKsamp = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"samp"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKkbd'] = true
        @_html_COMARKkbd = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKkbd'] = true
        @_html_COMARKkbd = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"kbd"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKvar'] = true
        @_html_COMARKvar = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKvar'] = true
        @_html_COMARKvar = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"var"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKcite'] = true
        @_html_COMARKcite = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKcite'] = true
        @_html_COMARKcite = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"cite"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKabbr'] = true
        @_html_COMARKabbr = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKabbr'] = true
        @_html_COMARKabbr = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"abbr"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKacronym'] = true
        @_html_COMARKacronym = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKacronym'] = true
        @_html_COMARKacronym = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"acronym"
                         )))
      end
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKsub'] = true
        @_html_COMARKsub = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKsub'] = true
        @_html_COMARKsub = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"sub"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKsup'] = true
        @_html_COMARKsup = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKsup'] = true
        @_html_COMARKsup = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"sup"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKspan'] = true
        @_html_COMARKspan = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKspan'] = true
        @_html_COMARKspan = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"span"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKbdo'] = true
        @_html_COMARKbdo = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKbdo'] = true
        @_html_COMARKbdo = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"bdo"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKbr'] = true
        @_html_COMARKbr = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKbr'] = true
        @_html_COMARKbr = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"br"                ,Cell.new(
                LispKeyword.new( "empty?" )                ,Cell.new(
                true
                         )))))
      end
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKbody'] = true
        @_html_COMARKbody = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKbody'] = true
        @_html_COMARKbody = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"body"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKaddress'] = true
        @_html_COMARKaddress = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKaddress'] = true
        @_html_COMARKaddress = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"address"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKdiv'] = true
        @_html_COMARKdiv = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKdiv'] = true
        @_html_COMARKdiv = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"div"
                         )))
      end
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKa'] = true
        @_html_COMARKa = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKa'] = true
        @_html_COMARKa = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"a"
                         )))
      end
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKmap'] = true
        @_html_COMARKmap = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKmap'] = true
        @_html_COMARKmap = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"map"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKarea'] = true
        @_html_COMARKarea = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKarea'] = true
        @_html_COMARKarea = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"area"                ,Cell.new(
                LispKeyword.new( "empty?" )                ,Cell.new(
                true
                         )))))
      end
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKlink'] = true
        @_html_COMARKlink = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKlink'] = true
        @_html_COMARKlink = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"link"                ,Cell.new(
                LispKeyword.new( "empty?" )                ,Cell.new(
                true
                         )))))
      end
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKimg'] = true
        @_html_COMARKimg = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKimg'] = true
        @_html_COMARKimg = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"img"                ,Cell.new(
                LispKeyword.new( "empty?" )                ,Cell.new(
                true
                         )))))
      end
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKobject'] = true
        @_html_COMARKobject = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKobject'] = true
        @_html_COMARKobject = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"object"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKparam'] = true
        @_html_COMARKparam = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKparam'] = true
        @_html_COMARKparam = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"param"                ,Cell.new(
                LispKeyword.new( "empty?" )                ,Cell.new(
                true
                         )))))
      end
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKhr'] = true
        @_html_COMARKhr = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKhr'] = true
        @_html_COMARKhr = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"hr"                ,Cell.new(
                LispKeyword.new( "empty?" )                ,Cell.new(
                true
                         )))))
      end
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKp'] = true
        @_html_COMARKp = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKp'] = true
        @_html_COMARKp = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"p"
                         )))
      end
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKh1'] = true
        @_html_COMARKh1 = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKh1'] = true
        @_html_COMARKh1 = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"h1"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKh2'] = true
        @_html_COMARKh2 = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKh2'] = true
        @_html_COMARKh2 = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"h2"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKh3'] = true
        @_html_COMARKh3 = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKh3'] = true
        @_html_COMARKh3 = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"h3"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKh4'] = true
        @_html_COMARKh4 = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKh4'] = true
        @_html_COMARKh4 = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"h4"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKh5'] = true
        @_html_COMARKh5 = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKh5'] = true
        @_html_COMARKh5 = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"h5"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKh6'] = true
        @_html_COMARKh6 = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKh6'] = true
        @_html_COMARKh6 = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"h6"
                         )))
      end
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKpre'] = true
        @_html_COMARKpre = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKpre'] = true
        @_html_COMARKpre = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"pre"
                         )))
      end
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKq'] = true
        @_html_COMARKq = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKq'] = true
        @_html_COMARKq = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"q"
                         )))
      end
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKblockquote'] = true
        @_html_COMARKblockquote = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKblockquote'] = true
        @_html_COMARKblockquote = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"blockquote"
                         )))
      end
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKins'] = true
        @_html_COMARKins = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKins'] = true
        @_html_COMARKins = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"ins"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKdel'] = true
        @_html_COMARKdel = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKdel'] = true
        @_html_COMARKdel = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"del"
                         )))
      end
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKdl'] = true
        @_html_COMARKdl = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKdl'] = true
        @_html_COMARKdl = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"dl"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKdt'] = true
        @_html_COMARKdt = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKdt'] = true
        @_html_COMARKdt = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"dt"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKdd'] = true
        @_html_COMARKdd = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKdd'] = true
        @_html_COMARKdd = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"dd"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKol'] = true
        @_html_COMARKol = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKol'] = true
        @_html_COMARKol = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"ol"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKul'] = true
        @_html_COMARKul = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKul'] = true
        @_html_COMARKul = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"ul"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKli'] = true
        @_html_COMARKli = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKli'] = true
        @_html_COMARKli = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"li"
                         )))
      end
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKform'] = true
        @_html_COMARKform = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKform'] = true
        @_html_COMARKform = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"form"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKlabel'] = true
        @_html_COMARKlabel = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKlabel'] = true
        @_html_COMARKlabel = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"label"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKinput'] = true
        @_html_COMARKinput = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKinput'] = true
        @_html_COMARKinput = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"input"                ,Cell.new(
                LispKeyword.new( "empty?" )                ,Cell.new(
                true
                         )))))
      end
      begin
        @global_lisp_binding['_html_COMARKselect'] = true
        @_html_COMARKselect = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKselect'] = true
        @_html_COMARKselect = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"select"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKoptgroup'] = true
        @_html_COMARKoptgroup = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKoptgroup'] = true
        @_html_COMARKoptgroup = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"optgroup"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKoption'] = true
        @_html_COMARKoption = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKoption'] = true
        @_html_COMARKoption = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"option"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKtextarea'] = true
        @_html_COMARKtextarea = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKtextarea'] = true
        @_html_COMARKtextarea = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"textarea"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKfieldset'] = true
        @_html_COMARKfieldset = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKfieldset'] = true
        @_html_COMARKfieldset = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"fieldset"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKlegend'] = true
        @_html_COMARKlegend = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKlegend'] = true
        @_html_COMARKlegend = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"legend"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKbutton'] = true
        @_html_COMARKbutton = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKbutton'] = true
        @_html_COMARKbutton = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"button"
                         )))
      end
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKtable'] = true
        @_html_COMARKtable = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKtable'] = true
        @_html_COMARKtable = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"table"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKcaption'] = true
        @_html_COMARKcaption = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKcaption'] = true
        @_html_COMARKcaption = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"caption"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKthead'] = true
        @_html_COMARKthead = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKthead'] = true
        @_html_COMARKthead = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"thead"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKtfoot'] = true
        @_html_COMARKtfoot = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKtfoot'] = true
        @_html_COMARKtfoot = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"tfoot"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKtbody'] = true
        @_html_COMARKtbody = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKtbody'] = true
        @_html_COMARKtbody = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"tbody"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKcolgroup'] = true
        @_html_COMARKcolgroup = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKcolgroup'] = true
        @_html_COMARKcolgroup = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"colgroup"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKcol'] = true
        @_html_COMARKcol = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKcol'] = true
        @_html_COMARKcol = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"col"                ,Cell.new(
                LispKeyword.new( "empty?" )                ,Cell.new(
                true
                         )))))
      end
      begin
        @global_lisp_binding['_html_COMARKtr'] = true
        @_html_COMARKtr = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKtr'] = true
        @_html_COMARKtr = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"tr"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKth'] = true
        @_html_COMARKth = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKth'] = true
        @_html_COMARKth = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"th"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKtd'] = true
        @_html_COMARKtd = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKtd'] = true
        @_html_COMARKtd = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"td"
                         )))
      end
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKhead'] = true
        @_html_COMARKhead = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKhead'] = true
        @_html_COMARKhead = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"head"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKtitle'] = true
        @_html_COMARKtitle = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKtitle'] = true
        @_html_COMARKtitle = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"title"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKbase'] = true
        @_html_COMARKbase = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKbase'] = true
        @_html_COMARKbase = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"base"                ,Cell.new(
                LispKeyword.new( "empty?" )                ,Cell.new(
                true
                         )))))
      end
      begin
        @global_lisp_binding['_html_COMARKmeta'] = true
        @_html_COMARKmeta = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKmeta'] = true
        @_html_COMARKmeta = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"meta"                ,Cell.new(
                LispKeyword.new( "empty?" )                ,Cell.new(
                true
                         )))))
      end
      begin
        @global_lisp_binding['_html_COMARKstyle'] = true
        @_html_COMARKstyle = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKstyle'] = true
        @_html_COMARKstyle = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"style"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKscript'] = true
        @_html_COMARKscript = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKscript'] = true
        @_html_COMARKscript = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"script"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKnoscript'] = true
        @_html_COMARKnoscript = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKnoscript'] = true
        @_html_COMARKnoscript = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"noscript"
                         )))
      end
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKhtml'] = true
        @_html_COMARKhtml = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKhtml'] = true
        @_html_COMARKhtml = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"html"
                         )))
      end
  end
 )
#--------------------

trampCall( 
  begin
      begin
        @global_lisp_binding['_html_COMARKframeset'] = true
        @_html_COMARKframeset = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKframeset'] = true
        @_html_COMARKframeset = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"frameset"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKframe'] = true
        @_html_COMARKframe = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKframe'] = true
        @_html_COMARKframe = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"frame"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKnoframes'] = true
        @_html_COMARKnoframes = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKnoframes'] = true
        @_html_COMARKnoframes = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"noframes"
                         )))
      end
      begin
        @global_lisp_binding['_html_COMARKiframe'] = true
        @_html_COMARKiframe = 
          nil
      end
      begin
        @global_lisp_binding['_html_COMARKiframe'] = true
        @_html_COMARKiframe = 
            trampCall( callProcedure( 'make-html-element',
                begin
                  if @global_lisp_binding.has_key?('_make_MIMARKhtml_MIMARKelement') then
                    @_make_MIMARKhtml_MIMARKelement
                  else raise NameError.new( "Error: undefined variable _make_MIMARKhtml_MIMARKelement", "_make_MIMARKhtml_MIMARKelement" ) end
                  rescue => __e ; __e.set_backtrace( ["./lib/text/html-lite.nnd:152"] + __e.backtrace ) ; raise __e
                end              ,
                Cell.new(
                :"iframe"
                         )))
      end
  end
 )


# -------------------------------------------------------
# [EOF]
# -------------------------------------------------------
