;;-*- mode: nendo; syntax: scheme -*-;;

;; -----------------
(enable-idebug)
(disable-idebug)
(exit)

(if true 1 2)

(define a 1)

(define-internal a 1)

(define-internal func1
  (lambda ()
    (define-internal a "A")
    (define-internal b "B")))
    
(define-internal func1
  (lambda ()
    (define-internal func2
      (lambda ()
        (print "func2")))
    (print "func1")
    (func2)))

    
    
           



(letrec (
         (func2 (lambda (x) (* 2 (func1))))
         (func1 (lambda (x) 13))
         )
  (list (func2) (func1)))


;; -----------------
;; customizing debug-print
;; -----------------
(define string-buffer "")
(define (debug-print-output-func str)
  (begin
    (printf "[%s]\n" string-buffer.class)
    (printf "[%s]\n" str.class)
    (set! string-buffer (+ string-buffer str))))


(define (debug-print-output-func str)
  (printf "[%s]\n" str.class))

(begin
  #?=1)

(print string-buffer)
