;;-*- mode: nendo; syntax: scheme -*-;;
;; -----------------
(enable-idebug)
(disable-idebug)
(define debug-print-length 256)

(define (exist-tail-call? sexp)
  (cond
   ((not (list? sexp))
    (error "exist-tail-call? expected a list argument."))
   (else
    (let1 last (last-pair sexp)
      (cond
       ((pair? last)
        (if (procedure? (car last))
            
       (else
        ;; noting to do
        sexp))))))


(define (setup-tail-call-mark sexp)
  (if (exist-tail-call? sexp)
      (mark-tail-call sexp)
      (traverse-tail-call sexp)))

(define (traverse-tail-call sexp)
  (cond
   ((null? sexp)
    '())
   ((list? sexp)
    (case (car sexp)
      ('if
       (setup-tail-call-mark (second sexp))
       (setup-tail-call-mark (third sexp)))))
   (else
    sexp)))



