#!/bin/sh
:; #-*- mode: nendo; syntax: scheme -*-;;
:; exec /usr/local/bin/nendo $0 $*

(require "benchmark")
(.load   "./benchmark/ruby_benchmark_code.rb")
( load   "./benchmark/nendo_benchmark_code.nnd")

(require "ruby-prof")

;; ------------------ macro --------------------
(define bench-task
  (macro (profile-flag title proc)
    `(begin
       (.puts ,title)
       (.puts Benchmark::CAPTION)
       ,(if profile-flag
            `(let* ((result (RubyProf.profile
                             (&block ()
                               ,proc)))
                    (printer (RubyProf::GraphPrinter.new result)))
               (printer.print STDOUT))
            `(.puts (Benchmark.measure
                     (&block ()
                       ,proc))))
       (.puts ""))))

(define ten-times
  (macro (expr)
    `(begin
       ,expr ,expr ,expr ,expr ,expr
       ,expr ,expr ,expr ,expr ,expr)))

(define hundled-times
  (macro (expr)
    `(begin
       (ten-times ,expr) (ten-times ,expr) (ten-times ,expr) (ten-times ,expr) (ten-times ,expr)
       (ten-times ,expr) (ten-times ,expr) (ten-times ,expr) (ten-times ,expr) (ten-times ,expr))))

;; -------------------- fact --------------------
(bench-task #f
            "fact (ruby version)"
            (printf " => %d\n" (RubyBenchmarkCode.new.fact 1000)))

(bench-task #f
            "fact (nendo version)"
            (printf " => %d\n" (fact 1000)))


;; -------------------- plus --------------------
(for-each
 (lambda (level)
   (set-optimize-level level)
   (printf " --- optimize level %d ---\n" level)
   (bench-task #f
               "+ 0arg (nendo version)"
               (printf " => %d\n" (hundled-times (plus0))))
   
   (bench-task #f
               "+ 1arg (nendo version)"
               (printf " => %d\n" (hundled-times (plus1))))
   
   (bench-task #f
               "+ 2arg (nendo version)"
               (printf " => %d\n" (hundled-times (plus2))))
   
   (bench-task #f
               "+ 3arg (nendo version)"
               (printf " => %d\n" (hundled-times (plus3)))))
 '(1 2))

;; -------------------- tak --------------------
(bench-task #f
            "tak   (ruby version)"
            (printf " => %d\n" (RubyBenchmarkCode.new.tak  10 5 0)))

(bench-task #f
            "tak2  (ruby version)"
            (printf " => %d\n" (RubyBenchmarkCode.new.tak2 10 5 0)))

(bench-task #f
            "tak3  (ruby version)"
            (printf " => %d\n" (RubyBenchmarkCode.new.tak3 10 5 0)))

(bench-task #f
            "tak   (nendo version)"
            (printf " => %d\n" (tak 10 5 0)))


;;[EOF]
