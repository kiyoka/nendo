;;-*- mode: nendo; syntax: scheme -*-;;
;; -----------------
(enable-idebug)
(disable-idebug)
(exit)

(debug-print-length)
(debug-print-length 2000)

TestError

(define *lazy-enabled-platform*
  (let ((arr (. Array new)))
    (arr.respond_to? (. "lazy" to_sym))))

(define *lazy-form* #f)

(define-syntax lazy
  (syntax-rules ()
    ((lazy)
     (error "lazy requires (lazy s-expression)"))
    ((lazy s-exp)
     (if (not *lazy-enabled-platform*)
         s-exp
         (let1 *lazy-form* #t
           s-exp)))
    ((lazy s-exp rest ...)
     (error "lazy requires (lazy s-expression)"))))


;; check some syntax error
(macroexpand
 '(lazy (+ 1 1)))

(macroexpand
 '(lazy))

(macroexpand
 '(lazy 1 2))


(define (%%map proc vec)
  (if *lazy-form*
      (begin
        #?="lazy ON"
        (vec.lazy.map
         (&block (x)
           (proc x))))
      (begin
        #?="lazy OFF"
        (vec.map
         (&block (x)
           (proc x))))))












